# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master, dev ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Extracts branch name
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}})"
        id: extract_branch
      # Prints branch name
      - name: Print branch name
        shell: bash
        run: echo current branch name ${{ steps.extract_branch.outputs.branch }}
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
          ref: refs/heads/${{ steps.extract_branch.outputs.branch }}
      # Creates warehouse compatibility list
      - name: Create warehouse compatibility list
        shell: bash
        run: echo "$(bash deployment/create-warehouse-compat-list.sh)"
      # Add changes 
      - name: Add changes
        run: git add .
      # Amend changes to last commit
      - name: Amend changes to last commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "Auto gen warhouse-compat-list for $(git rev-parse --short HEAD)" -a
      # git commit --amend --no-edit
      # Pushs changes 
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.extract_branch.outputs.branch }}
