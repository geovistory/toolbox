import { testdb } from '../../../datasources/testdb.datasource';
import { DatChunkRepository, InfStatementRepository, ProInfoProjRelRepository, DatDigitalRepository, DatNamespaceRepository, DatColumnRepository, DfhClassRepository, ProDfhClassProjRelRepository, DfhPropertyRepository, ProClassFieldConfigRepository, InfPersistentItemRepository, InfTextPropertyRepository, DfhLabelRepository, DfhProfileRepository, InfAppellationRepository, InfLangStringRepository, InfLanguageRepository, InfPlaceRepository, InfTemporalEntityRepository, InfTimePrimitiveRepository, ProAnalysisRepository, ProDfhProfileProjRelRepository, ProProjectRepository, ProTextPropertyRepository, PubAccountProjectRelRepository, PubAccountRepository, SysAnalysisTypeRepository, SysAppContextRepository, SysClassFieldPropertyRelRepository, SysClassFieldRepository, SysClassHasTypePropertyRepository, SysSystemRelevantClassRepository, SysSystemTypeRepository, WarEntityPreviewRepository } from '../../../repositories';
import { DatTextProperty, ProAnalysis, ProTextProperty } from '../../../models';
import { PubCredentialRepository } from '../../../repositories/pub-credential.repository';
import { PubRoleMappingRepository } from '../../../repositories/pub-role-mapping.repository';
import { PubRoleRepository } from '../../../repositories/pub-role.repository';

export async function cleanDb() {
    let datChunkRepository: DatChunkRepository;
    let datColumnRepository: DatColumnRepository;
    let datDigitalRepository: DatDigitalRepository;
    let datNamespaceRepository: DatNamespaceRepository;
    let datTextProperty: DatTextProperty;
    let dfhClassRepository: DfhClassRepository;
    let dfhLabelRepository: DfhLabelRepository;
    let dfhProfileRepository: DfhProfileRepository;
    let dfhPropertyRepository: DfhPropertyRepository;
    let infAppellationRepository: InfAppellationRepository;
    let infLangStringRepository: InfLangStringRepository;
    let infLanguageRepository: InfLanguageRepository;
    let infPersistentItemRepository: InfPersistentItemRepository;
    let infPlaceRepository: InfPlaceRepository;
    let infStatementRepository: InfStatementRepository;
    let infTemporalEntityRepository: InfTemporalEntityRepository;
    let infTextPropertyRepository: InfTextPropertyRepository;
    let infTimePrimitiveRepository: InfTimePrimitiveRepository;
    let proAnalysisRepository: ProAnalysisRepository;
    let proClassFieldConfigRepository: ProClassFieldConfigRepository;
    let proDfhClassProjRelRepository: ProDfhClassProjRelRepository;
    let proDfhProfileProjRelRepository: ProDfhProfileProjRelRepository;
    let proInfoProjRelRepository: ProInfoProjRelRepository;
    let proProjectRepository: ProProjectRepository;
    let proTextPropertyRepository: ProTextPropertyRepository;
    let pubAccountProjectRelRepository: PubAccountProjectRelRepository;
    let pubAccountRepository: PubAccountRepository;
    let pubCredentialRepository: PubCredentialRepository;
    let pubRoleMappingRepository: PubRoleMappingRepository;
    let pubRoleRepository: PubRoleRepository;
    let sysAnalysisTypeRepository: SysAnalysisTypeRepository;
    let sysAppContextRepository: SysAppContextRepository;
    let sysClassFieldPropertyRelRepository: SysClassFieldPropertyRelRepository;
    let sysClassFieldRepository: SysClassFieldRepository;
    let sysClassHasTypePropertyRepository: SysClassHasTypePropertyRepository;
    let sysSystemRelevantClassRepository: SysSystemRelevantClassRepository;
    let sysSystemTypeRepository: SysSystemTypeRepository;
    let warEntityPreviewRepository: WarEntityPreviewRepository;

    datChunkRepository = new DatChunkRepository(testdb, async () => infStatementRepository, async () => datDigitalRepository, async () => datNamespaceRepository);
    datColumnRepository = new DatColumnRepository(testdb, async () => datNamespaceRepository);
    datDigitalRepository = new DatDigitalRepository(testdb);
    datNamespaceRepository = new DatNamespaceRepository(testdb);
    datTextProperty = new DatTextProperty(testdb);
    dfhClassRepository = new DfhClassRepository(testdb, async () => proDfhClassProjRelRepository, async () => dfhPropertyRepository, async () => proClassFieldConfigRepository, async () => infPersistentItemRepository)
    dfhLabelRepository = new DfhLabelRepository(testdb);
    dfhProfileRepository = new DfhProfileRepository(testdb);
    dfhPropertyRepository = new DfhPropertyRepository(testdb);
    infAppellationRepository = new InfAppellationRepository(testdb, async () => infStatementRepository, async () => proInfoProjRelRepository);
    infLangStringRepository = new InfLangStringRepository(testdb, async () => infStatementRepository, async () => infLanguageRepository);
    infLanguageRepository = new InfLanguageRepository(testdb);
    infPersistentItemRepository = new InfPersistentItemRepository(testdb, async () => infStatementRepository, async () => infTextPropertyRepository, async () => dfhClassRepository, async () => proInfoProjRelRepository);
    infPlaceRepository = new InfPlaceRepository(testdb);
    infStatementRepository = new InfStatementRepository(testdb, async () => proInfoProjRelRepository);
    infTemporalEntityRepository = new InfTemporalEntityRepository(testdb, async () => infStatementRepository, async () => infTextPropertyRepository, async () => proInfoProjRelRepository);
    infTextPropertyRepository = new InfTextPropertyRepository(testdb);
    infTimePrimitiveRepository = new InfTimePrimitiveRepository(testdb);
    proAnalysisRepository = new ProAnalysisRepository(testdb, async () => proProjectRepository, async () => pubAccountRepository);
    proClassFieldConfigRepository = new ProClassFieldConfigRepository(testdb);
    proDfhClassProjRelRepository = new ProDfhClassProjRelRepository(testdb);
    proDfhProfileProjRelRepository = new ProDfhProfileProjRelRepository(testdb);
    proInfoProjRelRepository = new ProInfoProjRelRepository(testdb);
    proProjectRepository = new ProProjectRepository(testdb);
    proTextPropertyRepository = new ProTextPropertyRepository(testdb);
    pubAccountProjectRelRepository = new PubAccountProjectRelRepository(testdb);
    pubAccountRepository = new PubAccountRepository(testdb, async () => pubCredentialRepository);
    pubCredentialRepository = new PubCredentialRepository(testdb);
    pubRoleMappingRepository = new PubRoleMappingRepository(testdb, async () => pubRoleRepository);
    pubRoleRepository = new PubRoleRepository(testdb);
    sysAnalysisTypeRepository = new SysAnalysisTypeRepository(testdb);
    sysAppContextRepository = new SysAppContextRepository(testdb);
    sysClassFieldPropertyRelRepository = new SysClassFieldPropertyRelRepository(testdb);
    sysClassFieldRepository = new SysClassFieldRepository(testdb);
    sysClassHasTypePropertyRepository = new SysClassHasTypePropertyRepository(testdb);
    sysSystemRelevantClassRepository = new SysSystemRelevantClassRepository(testdb);
    sysSystemTypeRepository = new SysSystemTypeRepository(testdb);
    warEntityPreviewRepository = new WarEntityPreviewRepository(testdb);

    datChunkRepository.deleteAll();
    datColumnRepository.deleteAll();
    datDigitalRepository.deleteAll();
    datNamespaceRepository.deleteAll();
    datTextProperty.deleteAll();
    dfhClassRepository.deleteAll();
    dfhLabelRepository.deleteAll();
    dfhProfileRepository.deleteAll();
    dfhPropertyRepository.deleteAll();
    infAppellationRepository.deleteAll();
    infLangStringRepository.deleteAll();
    infLanguageRepository.deleteAll();
    infPersistentItemRepository.deleteAll();
    infPlaceRepository.deleteAll();
    infStatementRepository.deleteAll();
    infTemporalEntityRepository.deleteAll();
    infTextPropertyRepository.deleteAll();
    infTimePrimitiveRepository.deleteAll();
    proAnalysisRepository.deleteAll();
    proClassFieldConfigRepository.deleteAll();
    proDfhClassProjRelRepository.deleteAll();
    proDfhProfileProjRelRepository.deleteAll();
    proInfoProjRelRepository.deleteAll();
    proProjectRepository.deleteAll();
    proTextPropertyRepository.deleteAll();
    pubAccountProjectRelRepository.deleteAll();
    pubAccountRepository.deleteAll();
    pubCredentialRepository.deleteAll();
    pubRoleMappingRepository.deleteAll();
    pubRoleRepository.deleteAll();
    sysAnalysisTypeRepository.deleteAll();
    sysAppContextRepository.deleteAll();
    sysClassFieldPropertyRelRepository.deleteAll();
    sysClassFieldRepository.deleteAll();
    sysClassHasTypePropertyRepository.deleteAll();
    sysSystemRelevantClassRepository.deleteAll();
    sysSystemTypeRepository.deleteAll();
    warEntityPreviewRepository.deleteAll();
}