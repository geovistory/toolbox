{
  "name": "InfRole",
  "base": "InfEntity",
  "idInjection": false,
  "options": {
    "validateUpsert": true,
    "postgresql": {
      "schema": "information",
      "table": "v_role"
    }
  },
  "mixins": {
    "SetupRemoteMethods": {
      "ignoreACL": false,
      "disableAllExcept": []
    }
  },
  "properties": {
    "fk_property": {
      "type": "number",
      "required": true
    },
    "fk_entity": {
      "type": "number",
      "required": true
    },
    "fk_temporal_entity": {
      "type": "number",
      "required": true
    },
    "is_in_project_count": {
      "type": "number"
    },
    "is_standard_in_project_count": {
      "type": "number"
    },
    "community_favorite_calendar": {
      "type": "string"
    }
  },
  "validations": [],
  "relations": {
    "persistent_item": {
      "type": "belongsTo",
      "model": "InfPersistentItem",
      "foreignKey": "fk_entity",
      "primaryKey": "pk_entity"
    },
    "range_temporal_entity": {
      "type": "belongsTo",
      "model": "InfTemporalEntity",
      "foreignKey": "fk_entity",
      "primaryKey": "pk_entity"
    },
    "appellation": {
      "type": "belongsTo",
      "model": "InfAppellation",
      "foreignKey": "fk_entity",
      "primaryKey": "pk_entity"
    },
    "time_primitive": {
      "type": "belongsTo",
      "model": "InfTimePrimitive",
      "foreignKey": "fk_entity",
      "primaryKey": "pk_entity"
    },
    "language": {
      "type": "belongsTo",
      "model": "InfLanguage",
      "foreignKey": "fk_entity",
      "primaryKey": "pk_entity"
    },
    "temporal_entity": {
      "type": "belongsTo",
      "model": "InfTemporalEntity",
      "foreignKey": "fk_temporal_entity",
      "primaryKey": "pk_entity"
    },
    "place": {
      "type": "belongsTo",
      "model": "InfPlace",
      "foreignKey": "fk_entity",
      "primaryKey": "pk_entity"
    },
    "persistent_item_preview": {
      "type": "belongsTo",
      "model": "WarEntityPreview",
      "foreignKey": "fk_entity",
      "primaryKey": "pk_entity"
    },
    "temporal_entity_preview": {
      "type": "belongsTo",
      "model": "WarEntityPreview",
      "foreignKey": "fk_temporal_entity",
      "primaryKey": "pk_entity"
    }
  },
  "acls": [
    {
      "principalType": "ROLE",
      "principalId": "$everyone",
      "permission": "DENY",
      "property": "*"
    },
    {
      "principalType": "ROLE",
      "principalId": "project_member",
      "permission": "ALLOW",
      "property": [
        "alternativesNotInProjectByEntityPk",
        "alternativesNotInProjectByTeEntPk",
        "changeRoleProjectRelation",
        "addToProjectWithTeEnt",
        "addToProject",
        "findOrCreateInfRoles"
      ]
    }
  ],
  "methods": {
    "findOrCreateInfRole": {
      "accepts": [
        {
          "arg": "projectId",
          "type": "number",
          "required": true,
          "description": "Id of the project",
          "http": {
            "source": "query"
          }
        },
        {
          "arg": "data",
          "type": "InfRole",
          "required": true,
          "description": "data",
          "http": {
            "source": "body"
          }
        },
        {
          "arg": "ctx",
          "type": "object",
          "http": {
            "source": "context"
          }
        }
      ],
      "returns": {
        "arg": "data",
        "type": "InfRole",
        "root": true
      },
      "description": "Find or create an information role version.",
      "http": {
        "path": "/findOrCreate",
        "verb": "post"
      }
    },
    "findOrCreateInfRoles": {
      "accepts": [
        {
          "arg": "pk_project",
          "type": "number",
          "required": true,
          "description": "Id of the project",
          "http": {
            "source": "query"
          }
        },
        {
          "arg": "data",
          "type": [
            "InfRole"
          ],
          "required": true,
          "description": "data",
          "http": {
            "source": "body"
          }
        },
        {
          "arg": "ctx",
          "type": "object",
          "http": {
            "source": "context"
          }
        }
      ],
      "returns": {
        "arg": "data",
        "type": [
          "InfRole"
        ],
        "root": true
      },
      "description": "Find or create information role.",
      "http": {
        "path": "/find-or-create-many",
        "verb": "post"
      }
    },
    "alternativesNotInProjectByEntityPk": {
      "accepts": [
        {
          "arg": "entityPk",
          "type": "number",
          "required": true,
          "description": "Key of the persistent item (fk_entity)",
          "http": {
            "source": "query"
          }
        },
        {
          "arg": "propertyPk",
          "type": "number",
          "required": true,
          "description": "Key of the property (fk_property)",
          "http": {
            "source": "query"
          }
        },
        {
          "arg": "pkProject",
          "type": "number",
          "required": true,
          "description": "Id of the the current project",
          "http": {
            "source": "query"
          }
        }
      ],
      "returns": {
        "arg": "data",
        "type": [
          "InfRole"
        ],
        "root": true
      },
      "description": "Get roles (with children) of given fkProperty and fkEntity from Repo that are not in project of given projectId.",
      "http": {
        "path": "/alternatives-not-in-project-by-entity-pk",
        "verb": "get"
      }
    },
    "alternativesNotInProjectByTeEntPk": {
      "accepts": [
        {
          "arg": "teEntPk",
          "type": "number",
          "required": true,
          "description": "Key of the temporal entity (fk_temporal_entity)",
          "http": {
            "source": "query"
          }
        },
        {
          "arg": "propertyPk",
          "type": "number",
          "required": true,
          "description": "Key of the property (fk_property)",
          "http": {
            "source": "query"
          }
        },
        {
          "arg": "pkProject",
          "type": "number",
          "required": true,
          "description": "Id of the the current project",
          "http": {
            "source": "query"
          }
        }
      ],
      "returns": {
        "arg": "data",
        "type": [
          "InfRole"
        ],
        "root": true
      },
      "description": "Get roles (with children) of given propertyPk and teEntPk from Repo that are not in project of given projectId.",
      "http": {
        "path": "/alternatives-not-in-project-by-te-ent-pk",
        "verb": "get"
      }
    },
    "changeRoleProjectRelation": {
      "accepts": [
        {
          "arg": "pkProject",
          "type": "number",
          "required": true,
          "description": "Id of the project",
          "http": {
            "source": "query"
          }
        },
        {
          "arg": "isInProject",
          "type": "boolean",
          "required": true,
          "description": "Include or exclude from project.",
          "http": {
            "source": "query"
          }
        },
        {
          "arg": "data",
          "type": "InfRole",
          "required": true,
          "description": "data",
          "http": {
            "source": "body"
          }
        },
        {
          "arg": "ctx",
          "type": "object",
          "http": {
            "source": "context"
          }
        }
      ],
      "returns": {
        "arg": "data",
        "type": "InfRole",
        "root": true
      },
      "description": "Relate a nested object of a InfRole to the project.",
      "http": {
        "path": "/change-project-relation",
        "verb": "post"
      }
    },
    "nestedObjectsOfProject": {
      "accepts": [
        {
          "arg": "pk_project",
          "type": "number",
          "required": true,
          "description": "Id of the project",
          "http": {
            "source": "query"
          }
        },
        {
          "arg": "pk_roles",
          "type": "array",
          "required": true,
          "description": "Array of primary keys of roles (array of pk_entity).",
          "http": {
            "source": "query"
          }
        }
      ],
      "returns": {
        "arg": "data",
        "type": "InfRole",
        "root": true
      },
      "description": "Find nested objects of InfRoles of the project.",
      "http": {
        "path": "/nested-objects-of-project",
        "verb": "get"
      }
    },
    "addToProjectWithTeEnt": {
      "accepts": [
        {
          "arg": "pk_project",
          "type": "number",
          "required": true,
          "description": "Id of the project",
          "http": {
            "source": "query"
          }
        },
        {
          "arg": "pk_roles",
          "type": "array",
          "required": true,
          "description": "Array of primary keys of roles (array of pk_entity).",
          "http": {
            "source": "body"
          }
        },
        {
          "arg": "ctx",
          "type": "object",
          "http": {
            "source": "context"
          }
        }
      ],
      "returns": {
        "arg": "data",
        "type": "InfRole",
        "root": true
      },
      "description": "Add roles with their associated temporal entity to the project.",
      "http": {
        "path": "/add-to-project-with-temporal-entity",
        "verb": "post"
      }
    },
    "addToProject": {
      "accepts": [
        {
          "arg": "pk_project",
          "type": "number",
          "required": true,
          "description": "Id of the project",
          "http": {
            "source": "query"
          }
        },
        {
          "arg": "pk_roles",
          "type": "array",
          "required": true,
          "description": "Array of primary keys of roles (array of pk_entity).",
          "http": {
            "source": "body"
          }
        },
        {
          "arg": "ctx",
          "type": "object",
          "http": {
            "source": "context"
          }
        }
      ],
      "returns": {
        "arg": "data",
        "type": "InfRole",
        "root": true
      },
      "description": "Add roles without any related entities to the project.",
      "http": {
        "path": "/add-to-project",
        "verb": "post"
      }
    }
  }
}
