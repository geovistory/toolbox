{
  "name": "InfTemporalEntity",
  "base": "InfEntity",
  "idInjection": false,
  "options": {
    "validateUpsert": true,
    "postgresql": {
      "schema": "information",
      "table": "v_temporal_entity"
    }
  },
  "mixins": {
    "SetupRemoteMethods": {
      "disableAllExcept": [
        "find",
        "findOrCreateInfTemporalEntity",
        "changeTeEntProjectRelation"
      ]
    }
  },
  "properties": {
    "fk_class": {
      "type": "number",
      "required": true
    },
    "notes": {
      "type": "string"
    }
  },
  "validations": [],
  "relations": {
    "te_roles": {
      "type": "hasMany",
      "model": "InfRole",
      "foreignKey": "fk_temporal_entity",
      "primaryKey": "pk_entity"
    },
    "domain_entity_associations": {
      "type": "hasMany",
      "model": "InfEntityAssociation",
      "foreignKey": "fk_info_domain",
      "primaryKey": "pk_entity"
    },
    "text_properties": {
      "type": "hasMany",
      "model": "InfTextProperty",
      "foreignKey": "fk_concerned_entity",
      "primaryKey": "pk_entity"
    }
  },
  "acls": [
    {
      "principalType": "ROLE",
      "principalId": "$everyone",
      "permission": "DENY",
      "property": "*"
    },
    {
      "principalType": "ROLE",
      "principalId": "$everyone",
      "permission": "ALLOW",
      "property": [
        "graphsOfRepo",
        "nestedObjectOfRepo"
      ]
    },
    {
      "principalType": "ROLE",
      "principalId": "project_member",
      "permission": "ALLOW",
      "property": [
        "findOrCreateInfTemporalEntity",
        "changeTeEntProjectRelation",
        "nestedObjectOfProject",
        "graphsOfProject"
      ]
    }
  ],
  "methods": {
    "graphsOfProject": {
      "accepts": [
        {
          "arg": "pkProject",
          "type": "number",
          "required": false,
          "description": "Pk of project.",
          "http": {
            "source": "query"
          }
        },
        {
          "arg": "pkEntities",
          "type": "array",
          "required": true,
          "description": "Primary Keys of the temporal entities (array of pk_entity)",
          "http": {
            "source": "body"
          }
        }
      ],
      "returns": {
        "arg": "data",
        "type": "InfTemporalEntity",
        "root": true
      },
      "description": "Get e nested objects of all information about the temporal entities.",
      "http": {
        "path": "/graphs-of-project",
        "verb": "post"
      }
    },
    "graphsOfRepo": {
      "accepts": [
        {
          "arg": "pkEntities",
          "type": "array",
          "required": true,
          "description": "Primary Keys of the temporal entities (array of pk_entity)",
          "http": {
            "source": "body"
          }
        }
      ],
      "returns": {
        "arg": "data",
        "type": "InfTemporalEntity",
        "root": true
      },
      "description": "Get e nested objects of all information about the temporal entities.",
      "http": {
        "path": "/graphs-of-repo",
        "verb": "post"
      }
    },
    "nestedObjectOfProject": {
      "accepts": [
        {
          "arg": "pkProject",
          "type": "number",
          "required": false,
          "description": "Pk project",
          "http": {
            "source": "query"
          }
        },
        {
          "arg": "pkEntity",
          "type": "number",
          "required": true,
          "description": "Primary Key of the temporal entity (pk_entity)",
          "http": {
            "source": "query"
          }
        }
      ],
      "returns": {
        "arg": "data",
        "type": "InfTemporalEntity",
        "root": true
      },
      "description": "Get e nested object of all information about the temporal entity in project version.",
      "http": {
        "path": "/nested-object-of-project",
        "verb": "get"
      }
    },
    "nestedObjectOfRepo": {
      "accepts": [
        {
          "arg": "pkEntity",
          "type": "number",
          "required": true,
          "description": "Primary Key of the temporal entity (pk_entity)",
          "http": {
            "source": "query"
          }
        }
      ],
      "returns": {
        "arg": "data",
        "type": "InfTemporalEntity",
        "root": true
      },
      "description": "Get e nested object of all information about the temporal entity in the repo version.",
      "http": {
        "path": "/nested-object-of-repo",
        "verb": "get"
      }
    },
    "findOrCreateInfTemporalEntity": {
      "accepts": [
        {
          "arg": "pkProject",
          "type": "number",
          "required": true,
          "description": "Id of the project",
          "http": {
            "source": "query"
          }
        },
        {
          "arg": "data",
          "type": "InfTemporalEntity",
          "required": true,
          "description": "data",
          "http": {
            "source": "body"
          }
        },
        {
          "arg": "ctx",
          "type": "object",
          "http": {
            "source": "context"
          }
        }
      ],
      "returns": {
        "arg": "data",
        "type": "InfTemporalEntity",
        "root": true
      },
      "description": "Find or create a temporal entity version.",
      "http": {
        "path": "/findOrCreate",
        "verb": "post"
      }
    },
    "changeTeEntProjectRelation": {
      "accepts": [
        {
          "arg": "pkProject",
          "type": "number",
          "required": true,
          "description": "Id of the project",
          "http": {
            "source": "query"
          }
        },
        {
          "arg": "isInProject",
          "type": "boolean",
          "required": true,
          "description": "Include or exclude from project.",
          "http": {
            "source": "query"
          }
        },
        {
          "arg": "data",
          "type": "InfTemporalEntity",
          "required": true,
          "description": "data",
          "http": {
            "source": "body"
          }
        },
        {
          "arg": "ctx",
          "type": "object",
          "http": {
            "source": "context"
          }
        }
      ],
      "returns": {
        "arg": "data",
        "type": "InfTemporalEntity",
        "root": true
      },
      "description": "Relate a nested object of a InfTemporalEntity to the project.",
      "http": {
        "path": "/change-project-relation",
        "verb": "post"
      }
    }
  }
}