{
  "name": "DfhProperty",
  "plural": "DfhProperties",
  "base": "PersistedModel",
  "idInjection": true,
  "options": {
    "validateUpsert": true,
    "postgresql": {
      "schema": "data_for_history",
      "table": "property"
    }
  },
  "mixins": {
    "SetupRemoteMethods": {
      "ignoreACL": false,
      "disableAllExcept": []
    }
  },
  "properties": {
    "pk_property": {
      "type": "number",
      "id": true,
      "required": true
    },
    "is_inherited": {
      "type": "boolean"
    },
    "has_domain": {
      "type": "number",
      "required": true
    },
    "domain_instances_min_quantifier": {
      "type": "number"
    },
    "domain_instances_max_quantifier": {
      "type": "number"
    },
    "has_range": {
      "type": "number",
      "required": true
    },
    "range_instances_min_quantifier": {
      "type": "number"
    },
    "range_instances_max_quantifier": {
      "type": "number"
    },
    "identity_defining": {
      "type": "boolean"
    },
    "is_has_type_subproperty": {
      "type": "boolean"
    },
    "identifier_in_namespace": {
      "type": "string"
    },
    "profiles": {
      "type": [
        "object"
      ]
    }
  },
  "validations": [],
  "relations": {},
  "acls": [
    {
      "principalType": "ROLE",
      "principalId": "$everyone",
      "permission": "DENY",
      "property": "*"
    },
    {
      "principalType": "ROLE",
      "principalId": "project_member",
      "permission": "ALLOW",
      "property": [
        "ofProject"
      ]
    }
  ],
  "methods": {
    "ofProject": {
      "accepts": [
        {
          "arg": "pkProject",
          "type": "number",
          "required": false,
          "description": "Project pk",
          "http": {
            "source": "query"
          }
        }
      ],
      "returns": {
        "arg": "data",
        "type": [
          "DfhClass"
        ],
        "root": true
      },
      "description": "Get all properties that are selected by at least one of the profiles used by the given project.",
      "http": {
        "path": "/of-project",
        "verb": "get"
      }
    }
  }
}
