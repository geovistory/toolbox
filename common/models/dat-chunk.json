{
  "name": "DatChunk",
  "base": "DatEntity",
  "idInjection": false,
  "options": {
    "validateUpsert": true,
    "postgresql": {
      "schema": "data",
      "table": "v_chunk"
    }
  },
  "mixins": {
    "SetupRemoteMethods": {
      "ignoreACL": false,
      "disableAllExcept": []
    }
  },
  "properties": {
    "quill_doc": {
      "type": "object"
    },
    "string": {
      "type": "string"
    },
    "fk_text": {
      "type": "number",
      "required": true
    },
    "fk_entity_version": {
      "type": "number",
      "required": true
    }
  },
  "validations": [],
  "relations": {
    "data_info_association": {
      "type": "hasMany",
      "model": "InfEntityAssociation",
      "foreignKey": "fk_domain_entity",
      "primaryKey": "pk_entity"
    }
  },
  "acls": [
    {
      "principalType": "ROLE",
      "principalId": "$everyone",
      "permission": "DENY",
      "property": "*"
    },
    {
      "principalType": "ROLE",
      "principalId": "$everyone",
      "permission": "ALLOW",
      "property": [
        "findById"
      ]
    },
    {
      "principalType": "ROLE",
      "principalId": "system_admin",
      "permission": "ALLOW",
      "property": [
        "findOrCreateChunk"
      ]
    }
  ],
  "methods": {
    "findOrCreateChunk": {
      "accepts": [
        {
          "arg": "projectId",
          "type": "number",
          "required": true,
          "description": "Id of the project",
          "http": {
            "source": "query"
          }
        },
        {
          "arg": "data",
          "type": "DatChunk",
          "required": true,
          "description": "data",
          "http": {
            "source": "body"
          }
        },
        {
          "arg": "ctx",
          "type": "object",
          "http": {
            "source": "context"
          }
        }
      ],
      "returns": {
        "arg": "data",
        "type": "DatChunk",
        "root": true
      },
      "description": "Find or create a DatChunk and update the project relation if needed.",
      "http": {
        "path": "/findOrCreate",
        "verb": "post"
      }
    }
  }
}
