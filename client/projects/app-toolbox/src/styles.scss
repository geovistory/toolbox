/* You can add global styles to this file, and also import other style files */

/* You can add global styles to this file, and also import other style files */

/**
* Bootstrap
* Bootstrap variables are customized in ./assets/scss/bootstrap-variables.scss
*/

@use "~@angular/material" as mat;
@use "~@angular/material/core/theming/palette" as mat-palettes;
@import "./assets/scss/bootstrap";
$font-size-xs: 0.68rem;
label {
  margin-bottom: 0;
}
.form-group label {
  margin-bottom: $label-margin-bottom;
}

/**
* Ngx easy table
* Docs: https://ngx-easy-table.eu/#/styles
*/

@import "./assets/scss/ngx-easy-table";
/**
* Components
* Styles for one angular component or multiple angular components with
* the same visual design (e.g. naming and additional info).
*/
.gv-search-hit {
  margin-bottom: 1.5rem;
  .gv-search-hit-is-in-project {
    font-size: $font-size-sm;
    margin-left: 1rem;
    color: theme-color("success");
  }
  .gv-search-hit-project-count {
    font-size: $font-size-sm;
    margin-left: 1rem;
    color: theme-color("secondary");
  }
  .gv-search-hit-header {
  }
  .gv-search-hit-body {
    font-size: $font-size-sm;
    .gv-search-hit-property b {
      color: theme-color("success");
    }
    .gv-search-hit-property:not(:first-child) {
    }
    .gv-search-hit-property:not(:first-child)::before {
      content: "•";
      margin-left: 0.4rem;
      margin-right: 0.4rem;
    }
  }
}
gv-project-list {
  .gv-project-language {
    font-size: $font-size-sm;
  }
}

// Project List
// @import "./assets/scss/components/_project_list";
// Project Dashboard
// @import "./assets/scss/components/_project_dashboard";
// List of Names or Additional Infos
// @import "./assets/scss/components/_name_info_list";
// Name / Additional Info
// @import "./assets/scss/components/_name_info";
// Name Part / Property Alternative
// @import "./assets/scss/components/_namepart_infoproperty";
// Name Parts View
// @import "./assets/scss/components/_name_parts_view";
// Name Version
// @import "./assets/scss/components/_name_version";
// Editor
// @import "./assets/scss/components/_edit";
// Project Entities
// @import "./assets/scss/components/_project_entities";
// Search hit
// @import "./assets/scss/components/_search_hit";
// Entity Add Modal
// @import "./assets/scss/components/_entity_add_modal";
// Entity Add Modal
// @import "./assets/scss/components/_version_modal";
// Entity Add Modal
// @import "./assets/scss/components/_appellation_label_editor";

/**
* Generic stuff
*/

body {
  background-color: $gray-100;
}

.container {
  min-width: 63rem;
  margin-top: 2rem;
}

button {
  cursor: pointer;
}

button:focus {
  outline: none;
}

.rotate-90 {
  -webkit-transform: rotate(90deg);
  -moz-transform: rotate(90deg);
  -ms-transform: rotate(90deg);
  -o-transform: rotate(90deg);
  transform: rotate(90deg);
}

.rotate-180 {
  -webkit-transform: rotate(180deg);
  -moz-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  -o-transform: rotate(180deg);
  transform: rotate(180deg);
}

.rotate-270 {
  -webkit-transform: rotate(270deg);
  -moz-transform: rotate(270deg);
  -ms-transform: rotate(270deg);
  -o-transform: rotate(270deg);
  transform: rotate(270deg);
}

.form-control {
  @extend .form-control; // overflow: hidden;
}

.gv-full {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

// text with no line break and overflow ellipsis
.gv-one-liner {
  white-space: nowrap;
  text-overflow: ellipsis;
}

.gv-white-space-nowrap {
  white-space: nowrap;
  overflow: hidden;
}
.gv-fade-out-right {
  -webkit-mask-image: linear-gradient(to right, #000000 90%, transparent 100%);
  mask-image: linear-gradient(to right, #000000 90%, transparent 100%);
}
.gv-fade-out-right-75 {
  -webkit-mask-image: linear-gradient(to right, #000000 75%, transparent 100%);
  mask-image: linear-gradient(to right, #000000 75%, transparent 100%);
}
.gv-fade-out-bottom {
  -webkit-mask-image: linear-gradient(to bottom, #000000 90%, transparent 100%);
  mask-image: linear-gradient(to bottom, #000000 90%, transparent 100%);
}
.gv-word-wrap-break-word {
  word-wrap: break-word;
  white-space: unset !important;
}

// https://stackblitz.com/edit/typescript-zozfey
.gv-full-with {
  display: flex;
  flex-direction: row;
}

.gv-ellipsis {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}
td.gv-ellipsis {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
  max-width: 0;
}
// generate .bg-gray-* classes
@each $color, $value in $grays {
  @include bg-variant(".bg-gray-#{$color}", $value);
}

// generate btn-gray-* classes
@each $color, $value in $grays {
  .btn-gray-#{$color} {
    @include button-variant($value, $value);
  }
}

// generate btn-outline-gray-* classes
@each $color, $value in $grays {
  .btn-outline-gray-#{$color} {
    @include button-outline-variant($value);
  }
}

// generate border-gray-* classes
@each $color, $value in $grays {
  .border-gray-#{$color} {
    border-color: $value !important;
  }
}

// generate btn-outline-gray-* classes
@each $color, $value in $grays {
  .btn-outline-gray-#{$color} {
    @include button-outline-variant($value);
  }
}

// generate text-gray-* classes
@each $color, $value in $grays {
  @include text-emphasis-variant(".text-gray-#{$color}", $value);
}

// generate .border-right* classes
@each $color, $value in $theme-colors {
  .border-right-#{$color} {
    border-right-color: $value !important;
  }
}

// generate .border-left* classes
@each $color, $value in $theme-colors {
  .border-left-#{$color} {
    border-left-color: $value !important;
  }
}

// generate .text-* classes for all colors
@each $color, $value in $colors {
  .text-#{$color} {
    color: $value !important;
  }
}

.gv-cover-panel {
  pointer-events: none;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background: rgba(255, 255, 255, 0.8);
  display: flex;
  align-items: center;
  justify-content: center;
}
/**
* card-body padding minus button padding
*/

// btn
.btn-r {
  padding-right: ($card-spacer-x - $btn-padding-x);
}

.btn-l {
  padding-left: ($card-spacer-x - $btn-padding-x);
}

.btn-x {
  padding-right: ($card-spacer-x - $btn-padding-x);
  padding-left: ($card-spacer-x - $btn-padding-x);
}

.btn-t {
  padding-top: ($card-spacer-y - $btn-padding-y);
}

.btn-b {
  padding-bottom: ($card-spacer-y - $btn-padding-y);
}

.btn-y {
  padding-left: ($card-spacer-y - $btn-padding-y);
  padding-right: ($card-spacer-y - $btn-padding-y);
}

/**
* Button link gray
*/

// Make a button look and behave like a link
.btn-link-gray {
  font-weight: $font-weight-normal;
  color: $gray-500;
  background-color: transparent;

  @include hover {
    color: $gray-800;
    background-color: transparent;
    border-color: transparent;
  }

  &:focus,
  &.focus {
    text-decoration: $link-hover-decoration;
    border-color: transparent;
    box-shadow: none;
  }

  &:disabled,
  &.disabled {
    color: $gray-300;
    pointer-events: none;
  }

  // No need for an active state here
}

/**
* Button link gray
*/

// Make a button look and behave like a link
.btn-link-white {
  font-weight: $font-weight-normal;
  color: $white;
  background-color: transparent;

  @include hover {
    color: $gray-800;
    background-color: transparent;
    border-color: transparent;
  }

  &:focus,
  &.focus {
    text-decoration: $link-hover-decoration;
    border-color: transparent;
    box-shadow: none;
  }

  &:disabled,
  &.disabled {
    color: $gray-300;
    pointer-events: none;
  }

  // No need for an active state here
}

/**
* Headings
*/

// h1,
// h2,
// h3,
// h4,
// h5,
// h6,
// .h1,
// .h2,
// .h3,
// .h4,
// .h5,
// .h6 {
//   // font-weight: $font-weight-light;
//   color: $gray-700;

//   small,
//   .small {
//     // font-weight: $font-weight-light;
//   }
// }

// h4,
// h5,
// .h4,
// .h5 {
//   color: $gray-800;
// }

// h6,
// .h6 {
//   color: $gray-700;
// }

// Custom Variables
$gv-color-highlighted: #ffce00;
$gv-color-selected: #00ffff;

// Custom Stuff
.font-normal {
  font-size: $font-size-base;
}

.font-lg {
  font-size: $font-size-lg;
}

.font-sm {
  font-size: $font-size-sm;
}

.font-xs {
  font-size: ($font-size-base * 0.68);
}

.gv-highlight {
  color: theme-color("success");
  font-weight: 600;
}

.gv-bg-selected {
  background-color: #b9f5ff;
}

.gv-scroll-y-auto {
  overflow-y: auto;
}
.gv-overflow-hidden {
  overflow: hidden;
}

.gv-table-scroll-y {
  @extend .gv-flex-fh;
  @extend .gv-scroll-y-auto;

  tr {
    @extend .d-flex;

    td,
    th {
      flex-basis: 100%;
    }
  }

  tbody {
    @extend .gv-scroll-y-auto;
  }
}

.dropdown-toggle.no-caret::after {
  display: none;
}

.rounded-bottom-0 {
  border-bottom-right-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
}

.rounded-top-0 {
  border-top-right-radius: 0 !important;
  border-top-left-radius: 0 !important;
}

.gv-dropdown-secondary {
  .dropdown-menu {
    margin: 0;
    border-top-right-radius: 0;
    background-color: theme-color("secondary");

    .dropdown-item {
      color: $white;
    }

    .dropdown-item:focus,
    .dropdown-item:hover {
      color: $white;
      text-decoration: none;
      background-color: darken(theme-color("secondary"), 10%);
    }
  }
}

.gv-pointer {
  cursor: pointer;
}
.gv-cursor-drag {
  cursor: move;
}

.gv-w-max-500 {
  max-width: 500px;
}

.gv-grow-1 {
  flex-grow: 1;
}

.gv-grow-2 {
  flex-grow: 2;
}

.gv-grow-5 {
  flex-grow: 5;
}

.gv-flex-shrink-0 {
  flex-shrink: 0;
}

// full height
.gv-fh {
  @extend .flex-column;
  @extend .gv-grow-1;
  flex-basis: 0%;
}

// full height and display flex
.gv-flex-fh {
  // @extend .gv-fh;
  // @extend .d-flex;
  flex-direction: column;
  -webkit-flex-direction: column;

  display: flex;
  -webkit-display: flex;

  flex: 1 0 0%;
  -webkit-flex: 1 1 0%;

  height: 100%;
  overflow: hidden;
}

//
.gv-f-1-0-auto {
  flex: 1 0 auto;
}

.gv-scroll-y-container {
  display: flex;
  flex-direction: column;
  flex: 1 0 0%;
  height: 100%;
  overflow-y: auto;
}

// full viewport height
.gv-h-100-vh {
  height: 100vh;
}

// assigns fullheight to children elements of first nesting level
.gv-flex-fh-second-child > :nth-child(2) {
  @extend .gv-flex-fh;
}

.gv-search-hits-count {
  font-size: $font-size-sm;
  color: $text-muted;
  display: inline-block;
}

.gv-ul-sm {
  color: theme-color("secondary");
  font-size: $font-size-sm;
  margin: 0;
  padding: 0;
}

.gv-li-inline {
  display: inline-block;
  margin-right: 0.4rem;
}

.gv-li-inline::before {
  content: "•";
  margin-right: 0.4rem;
}

.gv-li-inline:first-of-type::before {
  content: none;
}

.gv-li-inline:last-of-type {
  margin-right: 0;
}

.fa-caret-right {
  margin-right: 0.2rem;
}

gv-property {
  display: block;
}

.gv-card-spacer-l {
  padding-left: $card-spacer-x;
}

.gv-card-spacer-r {
  padding-right: $card-spacer-x;
}

.gv-card-spacer-b {
  padding-bottom: $card-spacer-x;
}

.gv-card-spacer-t {
  padding-top: $card-spacer-x;
}

.gv-card-spacer-y {
  padding-top: $card-spacer-y;
  padding-bottom: $card-spacer-y;
}

.gv-card-spacer-x {
  padding-left: $card-spacer-x;
  padding-right: $card-spacer-x;
}

.gv-btn-spacer {
  display: inline-block;
  font-weight: $btn-font-weight;
  white-space: nowrap;
  vertical-align: middle;
  user-select: none;
  border: $btn-border-width solid transparent;
  @include button-size(
    $btn-padding-y,
    $btn-padding-x,
    $font-size-base,
    $btn-line-height,
    $btn-border-radius
  );
}

.gv-btn-spacer-sm {
  display: inline-block;
  font-weight: $btn-font-weight;
  white-space: nowrap;
  vertical-align: middle;
  user-select: none;
  border: $btn-border-width solid transparent;
  @include button-size(
    $btn-padding-y-sm,
    $btn-padding-x-sm,
    $font-size-sm,
    $btn-line-height-sm,
    $btn-border-radius-sm
  );
}

.gv-btn-spacer-lg {
  display: inline-block;
  font-weight: $btn-font-weight;
  white-space: nowrap;
  vertical-align: middle;
  user-select: none;
  border: $btn-border-width solid transparent;
  @include button-size(
    $btn-padding-y-lg,
    $btn-padding-x-lg,
    $font-size-lg,
    $btn-line-height-lg,
    $btn-border-radius-lg
  );
}

.gv-border-selected {
  @extend .border;
  border-color: $gv-color-selected !important;
}

.gv-border-highlighted {
  @extend .border;
  border-color: $gv-color-highlighted !important;
}

.gv-shadow-outer-1 {
  box-shadow: 0 0 0 1px rgba(89, 105, 129, 0.1),
    0 1px 3px 0 rgba(89, 105, 129, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.05);
}

// Loading Bar
.slim-loading-bar-progress {
  margin: 0;
  padding: 0;
  z-index: 99998;
  background-color: theme-color("info") !important;
  color: theme-color("info") !important;
  box-shadow: 0 0 10px 0;
  height: 2px;
  opacity: 0;
  -webkit-transition: all 0.5s ease-in-out;
  transition: all 0.5s ease-in-out;
  position: absolute;
}

#global-loading-bar {
  position: absolute;
  z-index: 1;
  top: 0;
  left: 0;
  right: 0;
  mat-progress-bar {
    height: 2px !important;
    transition: visibility 0s linear 0.33s, opacity 0.33s linear;
    opacity: 0;
    transition-delay: 0s;
    &.is-visible {
      opacity: 1;
      transition-delay: 0s;
    }
  }
}

#userDashboard {
  #userImage {
    font-size: 6rem;
    color: $gray-200;
  }
}

// Forms
.ng-touched.ng-invalid {
  @extend .is-invalid;
}

.ng-touched.ng-valid {
  @extend .is-valid;
}

// Pagination
ngb-pagination {
  .pagination {
    margin: 0;
  }
}

// data unit previews
gv-entity-preview {
  display: inline-block;
}

$gv-bg-drawer-list: #cde4f3;

.gv-nav-btn {
  $background: $gray-200;
  $active-background: $gv-bg-drawer-list;
  $hover-background: darken($background, 7.5%);
  height: 80px;
  width: 100%;
  outline: none;
  color: color-yiq($background);
  background-color: $background;
  border: none;

  @include hover {
    color: color-yiq($hover-background);
    background-color: darken($background, 7.5%);
  }

  &:focus,
  &.focus {
    outline: none; // background-color: $gray-500;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    background-color: $gray-100;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: color-yiq($active-background);
    background-color: $active-background;

    &:focus {
    }
  }
}

.feedback-button.mat-raised-button {
  position: fixed;
  right: 0;
  top: 0;
  left: 50%;
  z-index: 1000;
}
.beta-banner {
  position: fixed;
  top: 8px;
  -webkit-transform: rotate(45deg);
  transform: rotate(45deg);
  background: #64ffda;
  padding: 0 27px 0 27px;
  right: -26px;
  font-weight: 600;
  font-size: 0.9rem;
}

.gv-logo {
  font-size: 2rem;
  margin: 0px 22px 0 8px;
}

.gv-logo:hover {
  text-decoration: none;
}

/***************************
* Granularities from big to small
*   0. Canvas (editor body below header)
*   1. Panel (left, right)
*   2. Tile (properties, mentioned entities, …)
*   3. Field (short title, birth, when …)
****************************/
gv-tab-handle.tab-box {
  height: 32px;
}
.gv-tab-content {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  display: flex;
  flex-direction: column;
}

.gv-detail-top-bar {
  .mat-tab-label {
    height: 40px;
  }
}

.gv-tab-group-sm {
  .mat-tab-label {
    height: 40px;
  }
  .mat-tab-label-content mat-icon {
    margin-right: 8px;
  }
}

/***************************
* Tile Header
****************************/

.gv-canvas {
  background-color: $gray-100;
  @extend .px-2;
  @extend .pb-2;
  @extend .pt-3;
  flex-basis: 100%;
  overflow-x: auto;
}

.gv-panel {
  @extend .gv-flex-fh;
  overflow-y: auto; // @extend .align-items-center;
}

.gv-tile {
  min-width: 20rem;
  background-color: $gray-100; // @extend .gv-flex-fh;
  // @extend .border;
  // @extend .border-primary;
  // @extend .mb-2;
  // @extend .rounded;
}

.gv-tile:last-child {
  margin-bottom: 0;
}

.gv-tile-header,
gv-tile-header {
  @extend .gv-flex-shrink-0;
  @extend .d-flex; // @extend .border-bottom; // @extend .border-top;
  // @extend .border-primary;
  background-color: $gray-150; // background-color: lighten($teal, 30%);
  height: 2.5rem;
  // color: $white;
  @extend .align-items-center;
  @extend .mb-0;
  @extend .px-2;
  // @extend .h4; // padding-left: $btn-padding-y-sm;
  @extend .border-bottom;

  // @extend .border-secondary; // height: calc((#{$btn-border-width} * 2) + (#{$font-size-sm} * #{$btn-line-height-sm}) + (#{$btn-padding-y-sm} * 2) + 1px); // @extend .rounded-top;

  .btn {
    @extend .btn-link-gray;
  }
}

.gv-tile-body {
  // @extend .gv-flex-fh;
  display: flex;
  flex-direction: column;
  // @extend .p-2;
}

.gv-field {
  @extend .my-2;
}

.gv-field-header-label {
  font-size: $font-size-sm;
  font-weight: 600;
  color: $secondary;
  // margin-bottom: 0.5rem;
}

.gv-section-header {
  display: flex;
  flex-direction: row;
  align-items: center;
  width: 100%;
  height: 48px;
  flex: 0 0 48px;
  padding: 0 8px 0 16px;
}

.upper-case {
  text-transform: uppercase;
}

/***************************
* Properties Tree
****************************/

.gv-view-sections {
  .tree-invisible {
    display: none;
  }

  ul,
  li {
    margin-top: 0;
    margin-bottom: 0;
    list-style-type: none;
  }

  .drop-list {
    max-width: 100%;
    border: solid 1px #ccc;
    min-height: 50px;
    display: block;
    background: white;
    border-radius: 4px;
    overflow: hidden;
    padding: 0;
    // margin: 0 0 20px 40px;
  }

  .drag-box {
    padding: 0.3rem 0.3rem 0.3rem 1rem;
    border-bottom: solid 1px #ccc;
    color: rgba(0, 0, 0, 0.87);
    display: flex;
    flex-direction: row;
    align-items: center;
    // justify-content: space-between;
    box-sizing: border-box;
    cursor: move;
    background: white;
    font-size: 16px;
  }

  .cdk-drag-preview {
    box-sizing: border-box;
    border-radius: 4px;
    box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),
      0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);
  }

  .cdk-drag-placeholder {
    opacity: 0;
  }

  .cdk-drag-animating {
    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
  }

  .drag-box:last-child {
    border: none;
  }

  .drop-list.cdk-drop-list-dragging .drag-box:not(.cdk-drag-placeholder) {
    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
  }
}

/***************************
* TeEnt
****************************/

.gv-p-list-group-item {
  padding: 0.75rem 1.25rem;
}

/***************************
* Dropdown Treeview
****************************/

.gv-outer-form-control {
  ngx-dropdown-treeview {
    button.dropdown-toggle {
      border: 0;
    }
  }
}

.placement-right .dropdown-menu.show {
  left: auto;
  right: 0;
}

/***************************
 * project edit component
 ***************************/
$tabs-height: 32px;

gv-project-edit {
  .gv-drawer-list {
    background-color: $gv-bg-drawer-list;
  }
  .tab-list {
    max-width: 100%; // border: solid 1px #ccc;
    min-height: $tabs-height;
    display: flex;
    flex-direction: row;
    background: white;
    border-radius: 0px;
    overflow: hidden;
    background: $gray-200;
  }
  .focus {
    .tab-box {
      color: inherit;
    }
  }

  .tab-box {
    color: $gray-500;
    padding: 5px 10px;
    border-right: solid 1px #ccc;
    background: $gray-200;
    font-size: $font-size-sm;
    min-width: 100px;
    display: flex;
  }

  .tab-box.active {
    background: $white;
  }

  .panel-body {
    @extend .gv-flex-fh;
    position: relative;
    .split-panel-drop-zone {
      $active-color: rgba(122, 237, 255, 0.256);
      pointer-events: none;
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      .split {
        position: absolute; // border: 1px solid blue;
        width: 33.33%;
        height: 100%;
        &.left {
          margin-left: 0;
        }
        &.center {
          margin-left: 33.33%;
        }
        &.right {
          margin-left: 66.66%;
        }
      }
      .highlight {
        position: absolute;
        width: 50%;
        height: 100%;
        &.left {
          margin-left: 0;
        }
        &.right {
          margin-left: 50%;
        }
        &.active {
          background-color: $active-color;
          z-index: 99999;
        }
      }
      &.active {
        background-color: $active-color;
        z-index: 99999;
      }
      &.enabled {
        pointer-events: initial;
      }
    }
  }
}
/***************************
 * tab handle component
 ***************************/
gv-tab-handle {
  .left {
    cursor: grab;
    display: flex;
    overflow: hidden;
    .icon {
      min-width: 1rem;
      padding-right: 0.2rem;
    }
    .label {
      max-width: 160px;
      text-overflow: ellipsis;
      flex-wrap: nowrap;
      white-space: nowrap;
      overflow: hidden;
    }
  }
  .left :active {
    cursor: grabbing;
  }
  .right {
    cursor: pointer;
    width: 1rem;
    line-height: initial;
    padding: 0 0.7rem 0 0.5rem;
    margin-left: auto;
    font-size: $font-size-sm;
    @extend .btn;
    @extend .btn-link-gray;
  }
}
/***************************
 * qf form array
 ***************************/
gv-qf-form-array {
  $top-horizontal-line: 30px;

  .full-with {
    display: flex;
    flex-direction: row;
  }

  .left-col {
    display: flex;
    justify-content: center;
    /* align-items: center; */
    flex: 1 1 0;
    /* background: #6EAFF7; */
    flex-direction: column;
    /* overflow: hidden; */
  }

  .right-col {
    display: flex;
    flex: 0 0 32px;
    align-items: center;
    justify-content: center;
  }

  .qf-arr-classes,
  .qf-arr-properties {
    display: block;
    position: relative;
    /*temp*/
  }
  .qf-arr-classes {
    // border: 1px dashed rgb(194, 48, 121);
    // margin: 5px;
    // padding: 5px;
  }

  .qf-arr-properties {
    /*temp*/
    // border: 1px dashed rgb(48, 82, 194);

    .qf-prop-controls {
      display: flex;
      flex-direction: row;
    }
  }

  .gv-condition-block {
    border: 1px solid $success;
    padding: 0.75rem;
    margin-top: 1.25rem;
  }

  .qf-arr-subgroup {
    /*temp*/
    // border: 1px dashed rgb(18, 173, 52);
    // padding: 5px;

    position: relative;
    display: flex;
    margin-bottom: 40px;

    .zero {
      width: 0.75rem;
      height: 31px;
      flex-shrink: 0;
      &.line {
        border-bottom: 1px solid $success;
      }
    }

    // .zero.line {
    //   border-bottom: 1px solid $success;
    //   border-left: 1px solid $success;
    // }

    .first {
      width: 1px;
      flex-shrink: 0;
      // margin-top: $top-horizontal-line;
      margin-bottom: 34px;
      position: relative;
      background-color: $success;
      z-index: 1;
      .subgroup-operation-container {
        position: absolute;
        bottom: 0;
        top: 45px;
        width: 46px;
        left: -23px;
        display: flex;
        flex-direction: column;
      }
      .subgroup-operation-select {
        font-size: 14px;
        background: $white;
        @extend .border;
        @extend .border-success;
        @extend .rounded;
        @extend .px-1;
        z-index: 1;
        &::ng-deep .mat-select-arrow {
          margin: 0;
        }
      }
      .add-sibling-button {
        position: absolute;
        bottom: -24px;
        left: -12px;
      }
      &.top-cut {
        margin-top: 30px;
      }
    }

    .second {
      display: flex;
      flex-direction: column;
      flex: 1 0 0%;
      .sub-query-item {
        position: relative;
        display: flex;
        align-items: flex-start;
        .subquery-left {
          position: relative;
          width: 35px;
          padding: 0 0 0 5px;
          .horizontal-line {
            position: absolute;
            top: $top-horizontal-line;
            left: 0;
            right: 0;
            height: 1px;
            background-color: $success;
            &.is-subgroup {
              top: 62px;
            }
          }
          .add-subgroup-button {
            margin-top: 18px;
          }
        }
        gv-qf-form-array {
          // margin-left: 0.75rem;
          flex: 1 0 0%;
          &.is-subgroup {
            margin-top: 2rem;
          }
        }
      }
    }
  }

  .gv-qf-button-absolute-1 {
    position: absolute;
    right: -31px;
    top: 20px;
    mat-icon-btn {
      line-height: 20px;
    }
  }
  .gv-qf-button-absolute-2 {
    position: absolute;
    left: 12px;
    bottom: -10px;
    mat-icon-btn {
      line-height: 20px;
    }
  }
  .gv-qf-button-absolute-3 {
    position: absolute;
    right: -31px;
    top: 54px;
    mat-icon-btn {
      line-height: 20px;
    }
  }
  .gv-mat-icon-button-sm {
    width: 24px !important;
    height: 24px !important;
    line-height: 20px;
    svg {
      width: 20px !important;
      height: 20px !important;
    }
    &::ng-deep .mat-button-wrapper {
      display: flex !important;
      align-items: center !important;
      justify-content: center !important;
      width: 100% !important;
      height: 100% !important;

      .mat-icon {
        font-size: 20px !important;
      }
    }
  }
}
/***************************
 * Timeline
 ***************************/
gv-timeline-table {
  $bg-timeline: none;
  $font-color: $dark;

  .timeline-container {
    background-color: $bg-timeline;
    @extend .border-top;
    @extend .border-bottom;
    @extend .border-secondary;
  }

  path.domain {
    stroke: none; // no outer line around xAxis
  }

  .header {
    .tick > line {
      stroke: none;
    }

    .tick > text {
      font-size: 13px;
      // fill: $font-color;
    }
  }

  .body.mat-cell {
    font-size: $font-size-xs;
    .tick {
      color: $gray-400;
    }
    .row-bg {
      fill: none;
    }

    .row-bg.selected {
      fill: #ffffff;
      opacity: 0.6;
    }

    .row-bg.highlighted {
      fill: #ffffff;
      opacity: 0.4;
    }
  }

  .row-label-bg {
    fill: $bg-timeline;
  }

  text.row-label {
    fill: $font-color;
  }

  .gv-open-path {
    stroke: $black;
    fill: none;
  }

  .gv-closed-path {
    stroke: none;
    fill-opacity: 0.8;
  }

  // .gv-closed-path.gv-inner,
  // .gv-rectangle.gv-inner {
  //     fill: lighten(theme-color("info"), 0%);
  // }

  // .gv-closed-path.gv-outer,
  // .gv-rectangle.gv-outer {
  //     fill: lighten(theme-color("info"), 20%);
  // }

  .separator-line {
    stroke: theme-color("dark");
  }

  .cover-rect {
    fill: $bg-timeline;
  }

  .no-data-text {
    fill: theme-color("secondary");
    font-size: $font-size-sm;
  }

  .cursor-handle {
    fill: theme-color("primary");
    stroke: $white; // fill-opacity: .8;
  }

  .cursor-line {
    stroke: theme-color("primary");
    stroke-width: 2;
  }

  .btn {
    @extend .btn-link-gray;
  }
}

gv-timeline {
  $bg-timeline: $gray-100;
  $font-color: $dark;

  .timeline-container {
    background-color: $bg-timeline;
    @extend .border-top;
    @extend .border-bottom;
    @extend .border-secondary;
  }

  path.domain {
    stroke: none; // no outer line around xAxis
  }

  .header {
    .tick > line {
      stroke: none;
    }

    .tick > text {
      font-size: $font-size-xs;
      fill: $font-color;
    }
  }

  .rows {
    border-top: 1px solid theme-color(dark);

    .tick > text {
      fill: none;
    }

    .x-axis-julian {
      .tick > line {
        stroke: $gray-400; // stroke-dasharray: 7;
      }
    }

    .x-axis-gregorian {
      .tick > line {
        stroke: $gray-400; // stroke-dasharray: 7;
      }
    }
  }

  .row {
    font-size: $font-size-xs;
  }

  .row:nth-child(odd) .row-bg {
    fill: $gray-200; //opacity: 0.2;
  }

  .row:nth-child(even) .row-bg {
    fill: $white;
    opacity: 0.2;
  }

  .row .row-bg.selected {
    fill: #ffffff;
    opacity: 0.6;
  }

  .row .row-bg.highlighted {
    fill: #ffffff;
    opacity: 0.4;
  }

  .row-label-bg {
    fill: $bg-timeline;
  }

  text.row-label {
    fill: $font-color;
  }

  .gv-open-path {
    stroke: $black;
    fill: none;
  }

  .gv-closed-path {
    stroke: none;
    fill-opacity: 0.8;
  }

  // .gv-closed-path.gv-inner,
  // .gv-rectangle.gv-inner {
  //     fill: lighten(theme-color("info"), 0%);
  // }

  // .gv-closed-path.gv-outer,
  // .gv-rectangle.gv-outer {
  //     fill: lighten(theme-color("info"), 20%);
  // }

  .separator-line {
    stroke: theme-color("dark");
  }

  .cover-rect {
    fill: $bg-timeline;
  }

  .no-data-text {
    fill: theme-color("secondary");
    font-size: $font-size-sm;
  }

  .cursor-handle {
    fill: theme-color("primary");
    stroke: $white; // fill-opacity: .8;
  }

  .cursor-line {
    stroke: theme-color("primary");
    stroke-width: 2;
  }

  .btn {
    @extend .btn-link-gray;
  }
}

gv-timeline.gv-timeline-dark {
  $bg-timeline: $gray-600;
  $font-color: $white;

  .timeline-container {
    background-color: $bg-timeline;
    @extend .border;
    @extend .border-dark;
    @extend .rounded;
  }

  path.domain {
    stroke: none; // no outer line around xAxis
  }

  .header {
    .tick > line {
      stroke: none;
    }

    .tick > text {
      font-size: $font-size-xs;
      fill: $font-color;
    }
  }

  .rows {
    border-top: 1px solid theme-color(dark);

    .tick > text {
      fill: none;
    }

    .x-axis-julian {
      .tick > line {
        stroke: $gray-400; // stroke-dasharray: 7;
      }
    }

    .x-axis-gregorian {
      .tick > line {
        stroke: $gray-400; // stroke-dasharray: 7;
      }
    }
  }

  .row {
    font-size: $font-size-xs;
  }

  .row:nth-child(odd) .row-bg {
    fill: $gray-200;
    opacity: 0.2;
  }

  .row:nth-child(even) .row-bg {
    fill: $white;
    opacity: 0.2;
  }

  .row .row-bg.selected {
    fill: #ffffff;
    opacity: 0.6;
  }

  .row .row-bg.highlighted {
    fill: #ffffff;
    opacity: 0.4;
  }

  .row-label-bg {
    fill: $bg-timeline;
  }

  text.row-label {
    fill: $font-color;
  }

  .gv-open-path {
    stroke: darken(theme-color("info"), 20%);
    fill: none;
  }

  .gv-closed-path {
    stroke: none;
    fill-opacity: 0.8;
  }

  .gv-closed-path.gv-inner,
  .gv-rectangle.gv-inner {
    fill: lighten(theme-color("info"), 20%);
  }

  .gv-closed-path.gv-outer,
  .gv-rectangle.gv-outer {
    fill: lighten(theme-color("info"), 50%);
  }

  .separator-line {
    stroke: theme-color("dark");
  }

  .cover-rect {
    fill: $bg-timeline;
  }

  .no-data-text {
    fill: theme-color("secondary");
    font-size: $font-size-sm;
  }

  .cursor-handle {
    fill: theme-color("primary");
    stroke: $white; // fill-opacity: .8;
  }

  .cursor-line {
    stroke: theme-color("primary");
    stroke-width: 2;
  }

  .btn {
    @extend .btn-gray-700;
  }
}

/***************************
 * Quill
 ***************************/

.ql-editor {
  [highlight] {
    background-color: $gv-color-highlighted;
  }
}

gv-quill-view {
  .ql-container.ql-snow {
    height: auto;
    border: none;
    font-size: $font-size-base;
    font-family: $font-family-base;
  }

  .ql-editor {
    padding: 0;
  }
}

gv-quill-edit {
  .ql-container.ql-snow {
    @extend .d-flex;
    @extend .flex-column;
    @extend .gv-grow-1;

    font-family: $font-family-base;
  }

  .ql-editor {
    @extend .gv-grow-1;
  }

  .ql-snow.ql-toolbar button.mat-icon-button {
    padding: 0;
    width: 40px;
    height: 40px;
  }
  .ql-snow.ql-toolbar button.mat-icon-button:focus {
    color: unset;
  }
}
gv-text-detail2 {
  gv-quill-edit {
    .ql-container.ql-snow {
      font-size: $font-size-base;
    }
  }
}

gv-quill-edit.gv-hide-toolbar {
  .ql-toolbar,
  .ql-tooltip {
    display: none;
  }
}

.gv-quill-borderless {
  .ql-toolbar.ql-snow {
    border-top: 0;
    border-left: 0;
    border-right: 0;
    @extend .border-bottom;
  }
  .ql-container.ql-snow {
    border: 0;
  }
}

// Outer form control is for nesting form controls
// Assign this class to the wrapper form-control.
.gv-outer-form-control {
  @extend .form-control;
  padding: 0;
  overflow-y: visible;

  .form-control {
    border: 0;
    height: $input-height-inner;
  }
}

gv-quill-edit.gv-quill-input-like {
  .ql-toolbar,
  .ql-tooltip {
    display: none;
  }

  .gv-editor {
    height: auto;
  }

  .ql-editor {
    @extend .form-control;
    border: 0;
    height: $input-height-inner;
  }
}

gv-quill-edit.gv-quill-mat-input-like {
  .ql-toolbar,
  .ql-tooltip {
    display: none;
  }

  background-color: none;

  .gv-editor {
    height: auto;
    border: 0;
    background-color: none;

    .ql-editor {
      padding: 0;
      overflow: hidden;
      border: 0;
      height: 21px;
    }
  }
}

gv-quill-edit.gv-quill-textarea-like.gv-outer-form-control {
  height: auto;
}

gv-quill-edit.gv-quill-textarea-like {
  .ql-toolbar,
  .ql-tooltip {
    display: none;
  }

  .gv-editor {
    height: auto;
    background: unset;
  }

  .ql-editor {
    border: 0;
    min-height: 3.5rem; // copy from .form-control except border and height
    display: block;
    width: 100%;
    padding: 0;
    font-size: $font-size-base;
    line-height: $input-line-height;
    color: $input-color;
    // background-color: $input-bg;
    background-clip: padding-box;

    @if $enable-rounded {
      // Manually use the if/else instead of the mixin to account for iOS override
      border-radius: $input-border-radius;
    } @else {
      // Otherwise undo the iOS default
      border-radius: 0;
    }

    @include box-shadow($input-box-shadow);
    @include transition(
      $input-transition
    ); // Unstyle the caret on `<select>`s in IE10+.

    &::-ms-expand {
      background-color: transparent;
      border: 0;
    }

    // Customize the `:focus` state to imitate native WebKit styles.
    // @include form-control-focus(); // Placeholder

    &::placeholder {
      color: $input-placeholder-color; // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
      opacity: 1;
    }

    // Disabled and read-only inputs
    //
    // HTML5 says that controls under a fieldset > legend:first-child won't be
    // disabled if the fieldset is disabled. Due to implementation difficulty, we
    // don't honor that edge case; we style them as disabled anyway.
    &:disabled,
    &[readonly] {
      background-color: $input-disabled-bg; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
      opacity: 1;
    }
  }
}

gv-source-list {
  @extend .d-flex;
  @extend .gv-grow-1;
  @extend .flex-column;
}

gv-information {
  @extend .d-flex;
  @extend .gv-grow-1;
  @extend .flex-column;
}

gv-pe-it-property-field-editable {
  min-width: 360px;
  display: block;
}

gv-add-info-pe-it {
  .dropdown-item.active {
    color: inherit;
    background-color: $gray-300; // border: 1px solid theme-color("primary");
  }
}

gv-mentioning-list .ngx-table__header-title {
  white-space: nowrap;
  text-overflow: ellipsis;
}

.gv-show-token-ids {
  span[charid] {
    background: lightpink;
    margin: 0 1px;
  }

  span[charid]::after {
    content: attr(charid);
    vertical-align: super;
    font-size: smaller;
  }
}

/***************************
 * Cesium / Map
 ***************************/

gv-map {
  ac-map {
    height: 400px;

    .map-container {
      flex: 1 1 100px;
      height: 400px;
      background-color: lightcyan;
      position: relative;
      border: 1px solid #00ffff;
      display: flex;
      flex-direction: column;
      flex-flow: column;
      @extend .border;

      .cesium-viewer {
        flex: 1 1 auto;
      }
    }
  }
}

/***************************
 * Drop Zone
 ***************************/

.gv-drop-zone {
  background-color: #dcdede4d;
  padding: 2rem;
  text-align: center;
  font-size: $font-size-lg;
  border: 3px dashed #dcdede95;
  border-radius: $btn-border-radius-lg;
}
.gv-select-text {
  background-color: #dcdede4d;
  padding: 2rem;
  text-align: center;
  font-size: $font-size-lg;
  border: 3px solid #dcdede95;
  border-radius: $btn-border-radius-lg;
}

/**************************
* Ngx easy table vertical scroll
**************************/

ngx-table.light-header {
  th {
    font-weight: 400;
  }
}

ngx-table.sticky-header {
  @extend .gv-flex-fh;

  .ngx-container {
    @extend .gv-flex-fh;
  }

  .ngx-table {
    @extend .gv-flex-fh;
  }

  thead {
    display: table;

    th {
      font-weight: 400;
    }
  }

  tbody {
    @extend .gv-flex-fh;
    overflow-y: auto;

    tr {
      display: flex;
      flex-shrink: 0;

      td {
        flex-grow: 1;
        flex-shrink: 0;
      }
    }
  }
}

/**************************
* Switch / Toggle Button
**************************/

.switch {
  /* Box around the slider */
  .box {
    position: relative;
    display: inline-block;
    width: 60px;
    height: 34px;
    @extend .mr-1;
  }

  /* Hide default HTML checkbox */
  .box input {
    opacity: 0;
    width: 0;
    height: 0;
  }

  /* The slider */
  .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: $gray-300;
    -webkit-transition: 0.4s;
    transition: 0.4s;
  }

  .slider:before {
    position: absolute;
    content: "";
    height: 26px;
    width: 26px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    -webkit-transition: 0.4s;
    transition: 0.4s;
  }

  input:checked + .slider {
    background-color: $primary;
  }

  input:focus + .slider {
    box-shadow: 0 0 1px $primary;
  }

  input:checked + .slider:before {
    -webkit-transform: translateX(26px);
    -ms-transform: translateX(26px);
    transform: translateX(26px);
  }

  /* Rounded sliders */
  .slider.round {
    border-radius: 34px;
  }

  .slider.round:before {
    border-radius: 50%;
  }
}

/***********************************
* Drag & Drop
************************************/
$border: 1px solid #000;

.dnd-drag-flex-start {
  -moz-transform: scale(0.8);
  -webkit-transform: scale(0.8);
  transform: scale(0.8);
  opacity: 0.7;
  border: $border;
}

.dnd-drag-enter {
  opacity: 0.7;
  border: $border;
}

.dnd-drag-over {
  border: $border;
}

.dnd-sortable-drag {
  -moz-transform: scale(0.9);
  -webkit-transform: scale(0.9);
  transform: scale(0.9);
  opacity: 0.7;
  border: 1px dashed #000;
}

.cdk-drag-preview {
  box-sizing: border-box;
  border-radius: 4px;
  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),
    0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);
}

.cdk-drag-placeholder {
  opacity: 0;
}

.cdk-drag-animating {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

.example-box:last-child {
  border: none;
}

.list-group.cdk-drop-list-dragging .list-group-item:not(.cdk-drag-placeholder) {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

/*****************
* MccColorPicker
*****************/

// mcc-color-picker-selector {
//   .mcc-color-picker-selector-preview {
//     box-sizing: content-box;
//   }
// }

/******************
** Resizable Split Panel
******************/
as-split.gv-split-style {
  .as-split-area {
    // background-color: lightgrey;
    & > p {
      padding: 5px;
    }
  }

  ::ng-deep .as-split-gutter {
    background-color: $gray-300 !important;
    position: relative;
  }

  .as-split-gutter {
    background-color: $gray-300 !important;
    position: relative;
  }

  ::ng-deep .as-split-gutter-icon {
    background-image: none !important;
    background-color: black;
    transition: opacity 0.3s;
    opacity: 0;
    position: absolute;
    z-index: 101;
  }

  .as-split-gutter-icon {
    background-image: none !important;
    background-color: black;
    transition: opacity 0.3s;
    opacity: 0;
    position: absolute;
    z-index: 101;
  }

  ::ng-deep .as-split-gutter.is-dragged .as-split-gutter-icon,
  ::ng-deep .as-split-gutter-icon:hover {
    opacity: 0.1;
  }

  .as-split-gutter.is-dragged .as-split-gutter-icon,
  .as-split-gutter-icon:hover {
    opacity: 0.1;
  }

  &.as-horizontal {
    > ::ng-deep > .as-split-gutter > .as-split-gutter-icon {
      width: 13px !important;
      left: -6px;
      right: 6px;
    }

    > .as-split-gutter > .as-split-gutter-icon {
      width: 13px !important;
      left: -6px;
      right: 6px;
    }
  }

  &.as-vertical {
    > ::ng-deep > .as-split-gutter > .as-split-gutter-icon {
      height: 13px !important;
      top: -6px;
      bottom: 6px;
    }

    > .as-split-gutter > .as-split-gutter-icon {
      height: 13px !important;
      top: -6px;
      bottom: 6px;
    }
  }
}
as-split.gv-split-style.gv-hide-split-gutter {
  .as-split-gutter {
    display: none;
  }
}

// Query Details
.gv-sub-query-item {
  margin-left: 0rem;
}

$gv-category-primary: (
  digitals: #ee7f18,
  sources: #17a2b8,
  entities: #007bff,
  analysis: #e83e8c,
  stories: #28a745,
  values: #68747b,
);

$gv-category-secondary: (
  digitals: #f1af72,
  sources: #85d2de,
  entities: #7cb7f7,
  analysis: #e080ac,
  stories: #70e08a,
  values: #9aaab1,
);

$gv-category-light: (
  digitals: #f8d0af,
  sources: #c3e5eb,
  entities: #b2d7ff,
  analysis: #e8b3cb,
  stories: #9de0ac,
  values: #d4dade,
);

$categories: digitals, sources, entities, analysis, stories, values;
@each $category in $categories {
  .gv-#{$category}-primary-bg {
    background-color: map_get($gv-category-primary, $category);
  }
  .gv-#{$category}-primary-color {
    color: map_get($gv-category-primary, $category);
  }
}
@each $category in $categories {
  .gv-#{$category}-secondary-bg {
    background-color: map_get($gv-category-secondary, $category);
  }
  .gv-#{$category}-secondary-color {
    color: map_get($gv-category-secondary, $category);
  }
}
@each $category in $categories {
  .gv-#{$category}-light-bg {
    background-color: map_get($gv-category-light, $category);
  }
  .gv-#{$category}-light-color {
    color: map_get($gv-category-light, $category);
  }
}
.gv-digital-color {
  color: $secondary;
}
// Main category icons
.gv-source-color {
  color: $cyan;
}

.gv-entity-color {
  color: $blue;
}

// .gv-query-color {
//   color: $pink;
// }

.gv-visual-color {
  color: $pink;
}

.gv-settings-color {
  color: $secondary;
}

.gv-story-color {
  color: $green;
  // color: $orange;
}

gv-qf-form-array {
  position: relative;
  display: block;
}

/************************************************************************************
** INCLUDE MATERIAL THEME
************************************************************************************/

// Define a custom typography config that overrides the font-family as well as the
// `title` and `body-2` and `button` levels to have a wheight of 600 instead of 500
// because Source Sans Pro does not have 500
$gv-typography: mat.define-typography-config(
  $font-family: $font-family-base,
  $body-2: mat.define-typography-level(14px, 24px, 600),
  $button: mat.define-typography-level(14px, 14px, 600),
);

// Plus imports for other components in your app.
// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core($gv-typography);
// Custom color Palette for primary colors (flex-starting with $purple)
$gv-mat-purple: (
  50: #f2e7f5,
  100: #dfc3e8,
  200: #ca9cda,
  300: #b576cb,
  400: #a55abf,
  500: #9643b3,
  600: #893eac,
  700: #7638a2,
  800: #663399,
  900: #482a87,
  A100: #ea80fc,
  A200: #e040fb,
  A400: #d500f9,
  A700: #aa00ff,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: white,
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
    A100: rgba(black, 0.87),
    A200: white,
    A400: white,
    A700: white,
  ),
);
$gv-mat-teal: (
  50: #dff6ed,
  100: #b1e8d1,
  200: #7ad8b4,
  300: #20c996,
  400: #00bd80,
  500: #00b06a,
  600: #00a15f,
  700: #008f52,
  800: #007d45,
  900: #005d2f,
  A100: #a7ffeb,
  A200: #64ffda,
  A400: #1de9b6,
  A700: #00bfa5,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: rgba(black, 0.87),
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
    A100: rgba(black, 0.87),
    A200: rgba(black, 0.87),
    A400: rgba(black, 0.87),
    A700: rgba(black, 0.87),
  ),
);

$gv-grey-palette: (
  50: #f7f8fb,
  100: #eeeff6,
  200: #e5e9f0,
  300: #d4dade,
  400: #b7c2c8,
  500: #9aaab1,
  600: #68747b,
  700: #4e5d65,
  800: #374348,
  900: #21282b,
  A100: #eeeff6,
  A200: #e5e9f0,
  A400: #b7c2c8,
  A700: #4e5d65,
  contrast: (
    50: mat-palettes.$dark-primary-text,
    100: mat-palettes.$dark-primary-text,
    200: mat-palettes.$dark-primary-text,
    300: mat-palettes.$dark-primary-text,
    400: mat-palettes.$dark-primary-text,
    500: mat-palettes.$light-primary-text,
    600: mat-palettes.$light-primary-text,
    700: mat-palettes.$light-primary-text,
    800: mat-palettes.$light-primary-text,
    900: mat-palettes.$light-primary-text,
    A100: mat-palettes.$dark-primary-text,
    A200: mat-palettes.$dark-primary-text,
    A400: mat-palettes.$light-primary-text,
    A700: mat-palettes.$light-primary-text,
  ),
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$app-primary: mat.define-palette($gv-mat-purple);
$app-accent: mat.define-palette($gv-mat-teal, A200, A100, A400);
// The warn palette is optional (defaults to red).
$app-warn: mat.define-palette(mat.$red-palette);
// Create the theme object (a Sass map containing all of the palettes).
$app-theme: mat.define-light-theme($app-primary, $app-accent, $app-warn);
// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($app-theme);

/***********************************
* Custom sidenav accordion theme
***********************************/
// Define a mixin that accepts a theme and outputs the theme-specific styles.
@mixin gv-sidenav-accordion-theme($theme) {
  // Extract the palettes you need from the theme definition.
  $foreground: map-get($theme, foreground);
  $background: map-get($theme, background);

  // Define any styles affected by the theme.
  mat-accordion.gv-sidenav-accordion {
    border: none;

    > mat-expansion-panel {
      background-color: transparent;
      box-shadow: none !important;

      > mat-expansion-panel-header {
        .mat-expansion-panel-header-title {
          color: mat.get-color-from-palette($foreground, secondary-text);
        }
      }
    }

    > mat-expansion-panel:not(:first-of-type) {
      $foreground: map-get($theme, foreground);

      border-top-color: mat.get-color-from-palette($foreground, divider);
      border-top-width: 1px;
      border-top-style: solid;
    }
  }
}

@mixin gv-sidenav-accordion-typography($config) {
  mat-accordion.gv-sidenav-accordion {
    > mat-expansion-panel {
      > mat-expansion-panel-header {
        font-family: mat.font-family($config, body-2);
        font-size: mat.font-size($config, body-2);
        font-weight: mat.font-weight($config, body-2);
        padding: 0 16px;
      }

      .mat-expansion-panel-content {
        @include mat.typography-level($config, body-1);
      }

      .mat-expansion-panel-body {
        padding: 0;
      }

      mat-action-list {
        padding-top: 0;
      }
    }
  }
}

// Include theme styles for your custom components.
@include gv-sidenav-accordion-theme($app-theme);
@include gv-sidenav-accordion-typography($gv-typography);

.mat-table.gv-head-gray thead {
  background: #f5f5f5;
}
.mat-paginator {
  background: inherit;
}
$foreground: map-get($app-theme, foreground);

$mat-color-primary: mat.get-color-from-palette($app-primary);
$mat-color-accent: mat.get-color-from-palette($app-accent);
$mat-color-warn: mat.get-color-from-palette($app-warn);
$mat-color-disabled-text: mat.get-color-from-palette(
  $foreground,
  disabled-text
);
$mat-color-secondary-text: mat.get-color-from-palette(
  $foreground,
  secondary-text
);

.mat-text-primary {
  color: $mat-color-primary;
}

.mat-text-accent {
  color: $mat-color-accent;
}

.mat-text-warn {
  color: $mat-color-warn;
}

.mat-text-disabled {
  color: $mat-color-disabled-text;
}
.mat-text-secondary {
  color: $mat-color-secondary-text;
}

.mat-bg-primary {
  background-color: $mat-color-primary;
}

.mat-bg-primary-50 {
  background-color: map-get($app-primary, 50);
}
.mat-bg-accent-50 {
  background-color: map-get($app-accent, 50);
}

.mat-bg-accent {
  background-color: $mat-color-accent;
}

.mat-bg-warn {
  background-color: $mat-color-warn;
}

.mat-bg-white {
  background-color: white;
}

.mat-bg-accent-A700 {
  background-color: map-get($app-accent, A700);
  color: rgba(black, 0.87);
}

$color-ids: 50, 100, 200, 300, 400, 500, 600, 700, 800, 900, "A100", "A200",
  "A400", "A700";

.mat-bg-grey-100-on-hover:hover {
  background-color: map_get($gv-grey-palette, 100);
  $contrast-map: map_get($gv-grey-palette, "contrast");
  color: map_get($contrast-map, 100);
}
.mat-bg-accent-50-on-hover:hover {
  background-color: map_get($app-accent, 50);
  $contrast-map: map_get($app-accent, "contrast");
  color: map_get($contrast-map, 50);
}

@mixin mat-bg($palette, $prefix, $id) {
  .mat-bg-#{$prefix}-#{$id} {
    background-color: map_get($palette, $id);
    $contrast-map: map_get($palette, "contrast");
    color: map_get($contrast-map, $id);
  }
}
@each $id in $color-ids {
  @include mat-bg($gv-grey-palette, "grey", $id);
}
@each $id in $color-ids {
  @include mat-bg($app-primary, "primary", $id);
}
@each $id in $color-ids {
  @include mat-bg($app-accent, "accent", $id);
}
/*
* theme colors for svg strokes
*/
.mat-stroke-primary {
  stroke: $mat-color-primary;
}

.mat-stroke-accent {
  stroke: $mat-color-accent;
}

.mat-stroke-warn {
  stroke: $mat-color-warn;
}

.mat-stroke-disabled {
  stroke: mat.get-color-from-palette($foreground, disabled-text);
}
.mat-stroke-secondary {
  stroke: mat.get-color-from-palette($foreground, secondary-text);
}

$mat-color-divider: mat.get-color-from-palette($foreground, divider);

.mat-border-top {
  border-top-color: $mat-color-divider !important;
  border-top-width: 1px !important;
  border-top-style: solid !important;
}

.mat-border-bottom {
  border-bottom-color: $mat-color-divider !important;
  border-bottom-width: 1px !important;
  border-bottom-style: solid !important;
}
.mat-border-left {
  border-left-color: $mat-color-divider !important;
  border-left-width: 1px !important;
  border-left-style: solid !important;
}

.mat-border-right {
  border-right-color: $mat-color-divider !important;
  border-right-width: 1px !important;
  border-right-style: solid !important;
}

.mat-border-edit-mode {
  border-top-color: $mat-color-primary !important;
  border-top-width: 1px !important;
  border-top-style: solid !important;
}

.mat-bg-edit-mode {
  background-color: $mat-color-primary;
}

mat-checkbox {
  label {
    margin-bottom: 0;
  }
}

button:not(.mat-icon-button) {
  mat-icon {
    font-size: 20px !important;
  }
}

// .mat-icon svg {
//   height: 24px;
//   width: 24px;
// }
mat-icon {
  svg {
    overflow: unset;
    vertical-align: unset;
  }
}
mat-icon.mat-icon-sm,
.material-icons.md-18 {
  font-size: 18px;
  svg {
    height: 18px;
    width: 18px;
  }
}

mat-icon.mat-icon-caption {
  font-size: 12px;
  height: 13px;
  width: 13px;
  svg {
    height: 13px;
    width: 13px;
  }
}

.mat-btn-padding-x-8 {
  padding-left: 8px !important;
  padding-right: 8px !important;
  min-width: unset !important;
}
.mat-btn-padding-left-8 {
  padding-left: 8px !important;
  min-width: unset !important;
}

/**
* fix for inproper alignement
* see: https://www.npmjs.com/package/@mdi/angular-material
*/
button.mat-menu-item {
  line-height: 24px !important;
}
a.mat-menu-item > mat-icon {
  margin-bottom: 14px;
}
.gv-btn-info {
  background: $white;
  @extend .border;
  @extend .border-info;
  @extend .rounded-circle;
}

.gv-btn-danger {
  background: $white;
  @extend .border;
  @extend .border-danger;
  @extend .rounded-circle;
}

.gv-btn-success {
  background: $white;
  @extend .border;
  @extend .border-success;
  @extend .rounded-circle;
}

@mixin mix-mat-button-toggle($app-theme) {
  $primary: map-get($app-theme, primary);
  $accent: map-get($app-theme, accent);

  .mat-button-toggle {
    background-color: unset;
    color: mat.get-color-from-palette($primary);
  }

  .mat-button-toggle-checked,
  .mat-button-toggle-checked.mat-button-toggle-appearance-standard {
    background-color: mat.get-color-from-palette($primary);
    color: mat.get-color-from-palette($primary, default-contrast);
  }
}

// Include the mixin
@include mix-mat-button-toggle($app-theme);

/***************************
 * Highlighting
 ***************************/

.gv-quill-text-highlight {
  background-color: hsla(271, 68%, 80%, 0.5);
}
.gv-quill-text-highlight:hover {
  background-color: hsla(271, 68%, 80%, 0.9);
}
.gv-quill-text-accent {
  background-color: mat.get-color-from-palette($app-accent);
}
.mat-row.gv-bg-highlight {
  background-color: rgba(223, 213, 232, 0.5);
}

/**
* Styles for primeng table (virtual scroll table)
  */
@mixin primeng-table-theme($theme) {
  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);

  .p-datatable {
    background: mat.get-color-from-palette($background, "card");

    .p-datatable-thead {
      tr {
        height: 56px;
        th {
          color: mat.get-color-from-palette($foreground, secondary-text);
          text-align: left;
        }
        th:first-of-type {
          padding-left: 24px;
        }
        th:last-of-type {
          padding-right: 24px;
        }
      }
      tr.loading-bar {
        height: 0;
        th {
          padding: 0;
        }
      }
    }

    .p-datatable-tbody > tr > td,
    .p-datatable-tfoot > tr > td {
      color: mat.get-color-from-palette($foreground, text);
    }
    .p-datatable-tbody > tr > td:first-of-type,
    .p-datatable-tfoot > tr > td:first-of-type {
      padding-left: 24px;
    }
    .p-datatable-tfoot > tr {
      height: 36px;
    }
    .p-datatable-tfoot > tr > td {
      color: mat.get-color-from-palette($foreground, secondary-text);
      padding: 0;
      border-top-width: 1px;
      border-top-style: solid;
      border-top-color: mat.get-color-from-palette($foreground, divider);
    }
    .p-datatable-tbody > tr > td:last-of-type,
    .p-datatable-tfoot > tr > td:last-of-type {
      padding-right: 24px;
    }
  }

  td,
  .p-datatable-scrollable-header-box {
    padding: 0;
    border-bottom-width: 1px;
    border-bottom-style: solid;
    border-bottom-color: mat.get-color-from-palette($foreground, divider);
  }

  .p-datatable-dragpoint-bottom {
    border-bottom-width: 3px;
    border-bottom-style: solid;
    border-bottom-color: $mat-color-primary;
  }
  .p-datatable-dragpoint-top {
    border-top-width: 3px;
    border-top-style: solid;
    border-top-color: $mat-color-primary;
  }

  .ui-column-resizer-helper {
    background-color: $mat-color-primary;
  }

  .ui-column-resizer-helper {
    width: 1px;
    position: absolute;
    z-index: 10;
    display: none;
  }
}
@mixin primeng-table-typography($config) {
  .p-datatable {
    font-family: mat.font-family($config);
  }

  .p-datatable-scrollable-header {
    font-size: mat.font-size($config, caption);
    font-weight: mat.font-weight($config, body-2);
  }

  .p-datatable td {
    font-size: mat.font-size($config, body-1);
  }

  .p-datatable-tfoot > tr {
    @include mat.typography-level($config, caption);
  }
}

@include primeng-table-theme($app-theme);
@include primeng-table-typography($gv-typography);

/*
* Styles for primeng toast
*/
@mixin primeng-toast($theme) {
  .p-toast {
    opacity: 0.9;
  }
  .p-toast .p-toast-message {
    margin: 0 0 1rem 0;
    box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),
      0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);
    border-radius: 4px;
  }
  .p-toast .p-toast-message .p-toast-message-content {
    padding: 1.25rem;
    border-width: 0 0 0 0;
  }
  .p-toast .p-toast-message .p-toast-message-content .p-toast-message-text {
    margin: 0 0 0 1rem;
  }
  .p-toast .p-toast-message .p-toast-message-content .p-toast-message-icon {
    font-size: 2rem;
  }
  .p-toast .p-toast-message .p-toast-message-content .p-toast-summary {
    font-weight: 700;
  }
  .p-toast .p-toast-message .p-toast-message-content .p-toast-detail {
    margin: 0.5rem 0 0 0;
  }
  .p-toast .p-toast-message .p-toast-icon-close {
    width: 2rem;
    height: 2rem;
    border-radius: 50%;
    background: transparent;
    transition: background-color 0.2s, color 0.2s, box-shadow 0.2s;
  }
  .p-toast .p-toast-message .p-toast-icon-close:hover {
    background: rgba(255, 255, 255, 0.3);
  }
  .p-toast .p-toast-message .p-toast-icon-close:focus {
    outline: 0 none;
    outline-offset: 0;
    box-shadow: none;
  }
  .p-toast .p-toast-message.p-toast-message-info {
    background: #b3e5fc;
    border: solid transparent;
    border-width: 0 0 0 0;
    color: #01579b;
  }
  .p-toast .p-toast-message.p-toast-message-info .p-toast-message-icon,
  .p-toast .p-toast-message.p-toast-message-info .p-toast-icon-close {
    color: #01579b;
  }
  .p-toast .p-toast-message.p-toast-message-success {
    background: #c8e6c9;
    border: solid transparent;
    border-width: 0 0 0 0;
    color: #1b5e20;
  }
  .p-toast .p-toast-message.p-toast-message-success .p-toast-message-icon,
  .p-toast .p-toast-message.p-toast-message-success .p-toast-icon-close {
    color: #1b5e20;
  }
  .p-toast .p-toast-message.p-toast-message-warn {
    background: #ffecb3;
    border: solid transparent;
    border-width: 0 0 0 0;
    color: #7f6003;
  }
  .p-toast .p-toast-message.p-toast-message-warn .p-toast-message-icon,
  .p-toast .p-toast-message.p-toast-message-warn .p-toast-icon-close {
    color: #7f6003;
  }
  .p-toast .p-toast-message.p-toast-message-error {
    background: #ffcdd2;
    border: solid transparent;
    border-width: 0 0 0 0;
    color: #b71c1c;
  }
  .p-toast .p-toast-message.p-toast-message-error .p-toast-message-icon,
  .p-toast .p-toast-message.p-toast-message-error .p-toast-icon-close {
    color: #b71c1c;
  }
}
@include primeng-toast($app-theme);

// override bootsrap symbol
.form-control.ng-touched.ng-invalid,
.form-control.ng-touched.ng-valid,
.custom-select.ng-touched.ng-invalid,
.custom-select.ng-touched.ng-valid {
  background: none;
  padding-right: inherit;
}

mat-list-item.p-0 .mat-list-item-content {
  padding: 0 !important;
}

mat-dialog-actions {
  box-sizing: content-box;
}

/**
* classes for styling mat-table witout using mat-angular components / directives
*/
// .mat-table-plain-html {
//   display: block;

//   .mat-row,
//   .mat-header-row {
//     display: flex;
//     border-bottom-width: 1px;
//     border-bottom-style: solid;
//     align-items: center;
//     min-height: 48px;
//     padding: 0 24px;
//     border-bottom-color: mat.get-color-from-palette($foreground, divider);
//   }

//   .mat-cell,
//   .mat-header-cell {
//     text-align: left;
//     flex: 1;
//     overflow: hidden;
//     word-wrap: break-word;
//   }
// }

.gv-p-datatable-border-cells {
  .p-datatable {
    .p-datatable-thead > tr > th,
    .p-datatable-tbody > tr > td,
    .p-datatable-tfoot > tr > td {
      border: 1px solid rgb(229, 233, 240);
    }
  }
}

.gv-p-datatable-full-height {
  height: 100%;
  display: flex;
  flex-direction: column;

  .p-datatable {
    height: 100%;
    display: flex;
    flex-direction: column;

    > * {
      flex: 0 0 auto;
    }

    > .p-datatable-scrollable-wrapper {
      flex: 1 1 0%;
      overflow: hidden;

      > .p-datatable-scrollable-view {
        height: 100%;
        display: flex;
        flex-direction: column;

        > .p-datatable-scrollable-header {
          flex: 0 0 auto;
        }

        > .p-datatable-scrollable-body {
          flex: 1 1 auto;
        }

        > .p-datatable-scrollable-footer {
          flex: 0 0 auto;
        }
      }
    }
  }
}

.gv-form-field-slim .mat-form-field-wrapper {
  padding-bottom: 0;
  .mat-form-field-infix {
    padding: 0.2em 0 0.7em 0;
  }
}

.gv-split-area {
  position: relative;
}
.gv-split-area-toggle-button {
  cursor: pointer;

  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;

  -webkit-user-drag: none;
  -webkit-tap-highlight-color: transparent;

  display: flex;
  position: absolute;
  height: 2.5rem;
  background: none;
  background-color: $white;
  width: 24px;
  padding: 0;

  border-radius: 0;
  border: none;

  &.align-left {
    left: 0;
  }
  &.align-right {
    right: 0;
  }

  &:hover {
    .gv-focus-overlay {
      background-color: black;
      opacity: 0.04;
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
    }
  }
}

.gv-panel-top-bar-tabs {
  > .mat-tab-header {
    background-color: $white;
    height: 2.5rem;
    margin-left: 24px;
    .mat-tab-label {
      height: 2.5rem;
    }
  }
}

.gv-slim-tabs {
  > .mat-tab-header {
    height: 2.5rem;
    .mat-tab-label {
      height: 2.5rem;
    }
  }
}

.gv-mat-tabs-shrink {
  .mat-tab-label {
    min-width: unset;
  }
}

.mat-tab-group.gv-flex-fh {
  > .mat-tab-body-wrapper {
    @extend .gv-flex-fh;
  }
}

.gv-add-list-table-and-paginator-container {
  min-width: 320px;
  margin: 2.5rem 0;
}
.gv-add-list-table-container {
  position: relative;
  min-width: 240px;
  width: 100%;
  overflow: auto;
}

.gv-table-spinner {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1;
  background-color: rgba(255, 255, 255, 0.6);
}

gv-importer {
  .gv-drop-zone {
    height: 100%;
    width: 100%;
    border: 2px dotted #9643b3;
    border-radius: 30px;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .gv-drop-zone-content {
    margin: auto;
  }
}

.mat-form-field[dense] {
  .mat-form-field-flex > .mat-form-field-infix {
    padding: 0.6em 0 0.4em 0 !important;
    border-top: unset !important;
  }
  .mat-form-field-label-wrapper {
    top: -1.5em;
  }
  &.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float
    .mat-form-field-label {
    transform: translateY(-1.1em) scale(0.75);
  }
  .mat-form-field-wrapper {
    padding-bottom: 0;
  }
}

// About columns
.gv-col {
  display: flex;
  flex-direction: column;
}

.gv-col-center {
  @extend .gv-col;
  justify-content: center;
}

.gv-col-start {
  @extend .gv-col;
  justify-content: start;
}

.gv-col-end {
  @extend .gv-col;
  justify-content: end;
}

.gv-col-space-between {
  @extend .gv-col;
  justify-content: space-between;
}

// About rows
.gv-row {
  display: flex;
  flex-direction: row;
}

.gv-row-center {
  @extend .gv-row;
  justify-content: center;
}

.gv-row-space-between {
  @extend .gv-row;
  justify-content: space-between;
}

.gv-row-space-around {
  @extend .gv-row;
  justify-content: space-around;
}

.gv-row-start {
  @extend .gv-row;
  justify-content: start;
}

.gv-row-end {
  @extend .gv-row;
  justify-content: end;
}

// About widths
.gv-fw {
  width: 100%;
}

.gv-width-auto {
  width: auto;
}

.gv-center {
  align-items: center;
}

// About heights
.gv-fh {
  height: 100%;
}

.gv-height-auto {
  height: auto;
}

// about overflows
.gv-ovf-auto {
  overflow: auto;
}

// for mat-dialog reset padding
.gv-no-padding mat-dialog-container {
  padding: 0;
}

.gv-text-align-center {
  text-align: center;
}

@import "~jsoneditor/dist/jsoneditor.min.css";
