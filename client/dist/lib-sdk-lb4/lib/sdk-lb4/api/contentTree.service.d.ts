/**
 * geovistory
 * Geovistory â€“ Platform for Digital History
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpClient, HttpHeaders, HttpResponse, HttpEvent, HttpParameterCodec } from '@angular/common/http';
import { Observable } from 'rxjs';
import { GvSchemaObject } from '../model/models';
import { Configuration } from '../configuration';
export declare class ContentTreeService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: Configuration;
    encoder: HttpParameterCodec;
    constructor(httpClient: HttpClient, basePath: string, configuration: Configuration);
    private addToHttpParams;
    private addToHttpParamsRecursive;
    /**
     * Get SchemaObject with everything needed to build the tree of the content of an F2 Expression.
     * @param pkProject Primary key of the project
     * @param pkExpressionEntity Primary Key of the F2 Expression entity for which the content tree is needed.
     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.
     * @param reportProgress flag to report request and response progress.
     */
    contentTreeControllerGetContentTree(pkProject: number, pkExpressionEntity: number, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<GvSchemaObject>;
    contentTreeControllerGetContentTree(pkProject: number, pkExpressionEntity: number, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<GvSchemaObject>>;
    contentTreeControllerGetContentTree(pkProject: number, pkExpressionEntity: number, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<GvSchemaObject>>;
}
