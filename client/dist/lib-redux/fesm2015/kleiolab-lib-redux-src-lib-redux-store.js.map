{"version":3,"file":"kleiolab-lib-redux-src-lib-redux-store.js","sources":["ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/actions/account.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/actions/loading-bar.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/actions/notifications.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/epics/account.epics.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/actions/active-project.action.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducer-configs/dat.config.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/_helpers/schema-actions-factory.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/actions/dat.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducer-configs/dfh.config.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/actions/dfh.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducer-configs/inf.config.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/_helpers/inf-action-factory.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/actions/inf.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducer-configs/pro.config.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/actions/pro.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducer-configs/sys.config.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/actions/sys.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducer-configs/tab.config.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/actions/tab.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducer-configs/war.config.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/actions/war.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/services/schema.service.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/epics/active-project.epics.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/epics/loading-bar.epics.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/epics/notifications.epics.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/epics/action-resolver.epics.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/_helpers/flattener.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/_helpers/schema-epics-factory.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/epics/dat.epics.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/epics/dfh.epics.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/_helpers/inf-epic-factory.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/epics/inf.epics.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/epics/pro.epics.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/actions/schema.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/_helpers/createPaginateByKey.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/epics/schema.epics.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/epics/sys.epics.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/root/root-epics.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/reducers/account.reducers.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/reducers/loading-bar.reducer.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/reducers/active-project.reducer.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/models/entity-list.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/actions/entity-list.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/reducers/entity-list.reducer.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/actions/source-list.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/models/source-list.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/reducers/source-list.reducer.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/actions/projects.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/reducers/projects.reducers.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/_helpers/reducer-factory.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducers/sys.reducer.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducers/dfh.reducer.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducers/inf.reducer.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducers/dat.reducer.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducers/pro.reducer.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducers/war.reducer.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducers/tab.reducer.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/root/root-reducer.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/module/redux-store.module.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/root/models/model.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/models/account.model.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/models/active-project.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/models/active-project/entity-detail.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/models/active-project/project-settings-data.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/models/active-project/tab-layout.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/models/active-project/types.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/models/list.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/models/loading-bar.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/models/notifications.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/models/projects.model.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/models/dat.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/models/dfh.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/models/inf.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/models/pro.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/models/sys.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/models/tab.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/models/war.models.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { PubAccount } from '@kleiolab/lib-sdk-lb4';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { AccountRole, IAccount } from '../models/account.model';\n\nexport interface AccountActionMeta {\n  accountId?: number;\n  accountRoles?: AccountRole[];\n  account?: PubAccount;\n};\nexport type AccountAction = FluxStandardAction<IAccount, AccountActionMeta>;\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountActions {\n  static LOGIN = 'Account::LOGIN';\n  static LOGIN_SUCCEEDED = 'Account::LOGIN_SUCCEEDED';\n  static LOGIN_FAILED = 'Account::LOGIN_FAILED';\n\n  static LOAD_ROLES = 'Account::LOAD_ROLES';\n  static LOAD_ROLES_SUCCEEDED = 'Account::LOAD_ROLES_SUCCEEDED';\n  static LOAD_ROLES_FAILED = 'Account::LOAD_ROLES_FAILED';\n\n  static ACCOUNT_UPDATED = 'Account::ACCOUNT_UPDATED';\n\n\n  login(): AccountAction {\n    return {\n      type: AccountActions.LOGIN,\n      payload: null,\n      meta: null\n    };\n  }\n\n  loginSucceeded(account: PubAccount): AccountAction {\n    return {\n      type: AccountActions.LOGIN_SUCCEEDED,\n      payload: null,\n      meta: { account }\n    };\n  }\n\n  loginFailed(error): AccountAction {\n    return {\n      type: AccountActions.LOGIN_FAILED,\n      payload: null,\n      meta: null,\n      error\n    };\n  }\n\n  accountUpdated(account: PubAccount): AccountAction {\n    return {\n      type: AccountActions.ACCOUNT_UPDATED,\n      payload: null,\n      meta: { account }\n    };\n  }\n\n  // Roles of the account, used to check permissions\n  loadRoles(accountId: number): AccountAction {\n    return {\n      type: AccountActions.LOAD_ROLES,\n      payload: null,\n      meta: { accountId }\n    };\n  }\n\n  loadRolesSucceeded(accountRoles: AccountRole[]): AccountAction {\n    return {\n      type: AccountActions.LOAD_ROLES_SUCCEEDED,\n      payload: null,\n      meta: { accountRoles }\n    };\n  }\n\n  loadRolesFailed(accountRoles: AccountRole[]): AccountAction {\n    return {\n      type: AccountActions.LOAD_ROLES_FAILED,\n      payload: null,\n      meta: null\n    };\n  }\n\n}\n","import { dispatch } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { FluxStandardAction } from 'flux-standard-action';\n\n// Flux-standard-action gives us stronger typing of our actions.\ntype Payload = any;\ninterface MetaData { null };\nexport type LoadingBarAction = FluxStandardAction<Payload, undefined>;\n\n\n/**\n* This actions start, stop and complete the global loading bar\n* using a SlimLoadingBarService instantiated within the loading-bar\n* module.\n*\n* In order to show a loading bar in GUI, use the LoadingBarComponent\n* exported by this module.\n*/\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingBarActions {\n  static readonly START = 'LOADING_BAR_START';\n  static readonly STOP = 'LOADING_BAR_STOP';\n  static readonly COPMLETE = 'LOADING_BAR_COPMLETE';\n  @dispatch() startLoading = (): LoadingBarAction => ({\n    type: LoadingBarActions.START,\n    meta: null,\n    payload: null,\n  })\n\n  @dispatch() stopLoading = (): LoadingBarAction => ({\n    type: LoadingBarActions.STOP,\n    meta: null,\n    payload: null\n  })\n\n  @dispatch() completeLoading = (): LoadingBarAction => ({\n    type: LoadingBarActions.COPMLETE,\n    meta: null,\n    payload: null,\n  })\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { NotificationsI } from '../models/notifications.models';\n\ntype Payload = NotificationsI;\ninterface MetaData {\n  itemsArray?: any[]\n};\nexport type NotificationsAPIAction = FluxStandardAction<Payload, MetaData>;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsAPIActions {\n  static readonly ADD_TOAST = 'Notifications::ADD_TOAST';\n\n  addToast = (payload: Payload): NotificationsAPIAction => ({\n    type: NotificationsAPIActions.ADD_TOAST,\n    meta: null,\n    payload\n  });\n\n}\n","import { Injectable } from '@angular/core';\nimport { PubAccountApi } from '@kleiolab/lib-sdk-lb3';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { Action } from 'redux';\nimport { combineEpics, Epic, ofType } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { AccountAction, AccountActions } from '../actions/account.actions';\nimport { LoadingBarActions } from '../actions/loading-bar.actions';\nimport { NotificationsAPIActions } from '../actions/notifications.actions';\nimport { AccountRole } from '../models/account.model';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountEpics {\n  constructor(\n    private actions: AccountActions,\n    private loadingBarActions: LoadingBarActions,\n    private accountApi: PubAccountApi,\n    private notificationActions: NotificationsAPIActions,\n  ) { }\n\n  public createEpics(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return combineEpics(\n      this.loadRoles()\n    );\n  }\n\n  private loadRoles(): Epic {\n    return (action$, store) => action$.pipe(\n      ofType(AccountActions.LOAD_ROLES),\n      mergeMap((action: AccountAction) => new Observable<Action>((globalStore) => {\n\n        globalStore.next(this.loadingBarActions.startLoading());\n        this.accountApi.getRoles(action.meta.accountId)\n          .subscribe((data: AccountRole[]) => {\n            globalStore.next(this.loadingBarActions.completeLoading());\n            globalStore.next(this.actions.loadRolesSucceeded(data));\n          }, error => {\n            globalStore.next(this.notificationActions.addToast({\n              type: 'error',\n              options: { title: error }\n            }))\n          })\n      }))\n\n    )\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { DatChunk, InfPersistentItem, InfTemporalEntity, ProDfhClassProjRel, ProInfoProjRel } from '@kleiolab/lib-sdk-lb3';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { ListType, Panel, PanelTab, ProjectDetail, ProjectPreview, TypePeIt } from '../models/active-project.models';\n\nexport interface ActiveProjectMeta {\n\n  projectPreview?: ProjectPreview;\n\n  pk_project?: number;\n  pk_entity?: number;\n  pk_entities?: number[];\n  pk_classes?: number[]\n  pk_ui_context?: number;\n  entity_version?: number;\n\n\n  chunk?: DatChunk\n  teEnGraphs?: InfTemporalEntity[]\n  peItGraphs?: InfPersistentItem[]\n  types?: TypePeIt[]\n\n  // CRM and Config\n  projRel?: ProDfhClassProjRel;\n  dfh_pk_class?: number;\n  // hasTypeProperties?: HasTypePropertyReadable[]\n\n  // Information\n  infProjRel?: ProInfoProjRel;\n\n  // layout\n  panels?: Panel[];\n  list?: ListType;\n  panelIndex?: number;\n  panelSerial?: number;\n  tabIndex?: number;\n  uiIdSerial?: number;\n  focusedPanel?: number;\n  previousPanelIndex?: number\n  currentPanelIndex?: number\n  previousTabIndex?: number\n  currentTabIndex?: number\n  tab?: PanelTab<any>;\n\n  // Layout Modals\n  // createOrAddEntity?: CreateOrAddEntity; // Check if this really belongt in state\n};\ntype Payload = ProjectDetail;\nexport type ActiveProjectAction = FluxStandardAction<Payload, ActiveProjectMeta>;\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActiveProjectActions {\n\n  /* tslint:disable:member-ordering */\n\n  /************************************************************************************\n   * CRM and Config (metadata, crm)\n  ************************************************************************************/\n  static LOAD_PROJECT_BASICS = 'ActiveProject::LOAD_PROJECT_BASICS';\n  static LOAD_PROJECT_BASICS_FAILED = 'ActiveProject::LOAD_PROJECT_BASICS_FAILED';\n  static LOAD_PROJECT_BASICS_SUCCEEDED = 'ActiveProject::LOAD_PROJECT_BASICS_SUCCEEDED';\n  static LOAD_PROJECT_CONFIG = 'ActiveProject::LOAD_PROJECT_CONFIG';\n  static LOAD_PROJECT_CONFIG_SUCCEEDED = 'ActiveProject::LOAD_PROJECT_CONFIG_SUCCEEDED';\n\n\n  loadProjectBasics(pk_project: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.LOAD_PROJECT_BASICS,\n      payload: null,\n      meta: {\n        pk_project\n      }\n    }\n  }\n\n  loadProjectBasiscsSucceded(projectPreview: ProjectPreview): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.LOAD_PROJECT_BASICS_SUCCEEDED,\n      payload: null,\n      meta: { projectPreview },\n    }\n  }\n\n  loadProjectConfig(pk_project: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.LOAD_PROJECT_CONFIG,\n      payload: null,\n      meta: {\n        pk_project\n      },\n    }\n  }\n\n  loadProjectConfigSucceeded(): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.LOAD_PROJECT_CONFIG_SUCCEEDED,\n      payload: {\n        // crm\n      },\n      meta: null,\n    }\n  }\n\n  /************************************************************************************\n   * Layout -- Tabs\n  ************************************************************************************/\n  static SET_LIST_TYPE = 'ActiveProject::SET_LIST_TYPE';\n\n  setListType(list: ListType): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_LIST_TYPE,\n      payload: null,\n      meta: {\n        list\n      }\n    }\n  }\n\n  static SET_PANELS = 'ActiveProject::SET_PANELS';\n\n  setPanels(panels: Panel[], uiIdSerial: number, panelSerial: number, focusedPanel: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_PANELS,\n      payload: null,\n      meta: { panels, uiIdSerial, panelSerial, focusedPanel }\n    }\n  }\n\n  static ACTIVATE_TAB = 'ActiveProject::ACTIVATE_TAB';\n\n  activateTab(panelIndex: number, tabIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.ACTIVATE_TAB,\n      payload: null,\n      meta: {\n        panelIndex, tabIndex\n      }\n    }\n  }\n  static MOVE_TAB = 'ActiveProject::MOVE_TAB';\n  moveTab(previousPanelIndex: number, currentPanelIndex: number, previousTabIndex: number, currentTabIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.MOVE_TAB,\n      payload: null,\n      meta: {\n        previousPanelIndex, currentPanelIndex, previousTabIndex, currentTabIndex\n      }\n    }\n  }\n\n  static CLOSE_TAB = 'ActiveProject::CLOSE_TAB';\n  closeTab(panelIndex: number, tabIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.CLOSE_TAB,\n      payload: null,\n      meta: {\n        panelIndex, tabIndex\n      }\n    }\n  }\n\n  static ADD_TAB = 'ActiveProject::ADD_TAB';\n  addTab<TabData>(tab: PanelTab<TabData>): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.ADD_TAB,\n      payload: null,\n      meta: { tab }\n    }\n  }\n\n  static SPLIT_PANEL = 'ActiveProject::SPLIT_PANEL';\n  splitPanel(previousPanelIndex: number, tabIndex: number, currentPanelIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SPLIT_PANEL,\n      payload: null,\n      meta: { previousPanelIndex, tabIndex, currentPanelIndex }\n    }\n  }\n\n  static CLOSE_PANEL = 'ActiveProject::CLOSE_PANEL';\n  closePanel(panelIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.CLOSE_PANEL,\n      payload: null,\n      meta: { panelIndex }\n    }\n  }\n\n\n  static FOCUS_PANEL = 'ActiveProject::FOCUS_PANEL';\n  focusPanel(panelIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.FOCUS_PANEL,\n      payload: null,\n      meta: { panelIndex }\n    }\n  }\n\n\n  // /************************************************************************************\n  //  * Layout -- Modals\n  // ************************************************************************************/\n  // // create or add entity modal\n  // static readonly OPEN_ADD_FORM = 'ActiveProject::OPEN_ADD_FORM';\n  // static readonly CLOSE_ADD_FORM = 'ActiveProject::CLOSE_ADD_FORM';\n\n  // openAddForm = (createOrAddEntity: CreateOrAddEntity): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.OPEN_ADD_FORM,\n  //   meta: { createOrAddEntity },\n  //   payload: null\n  // })\n\n  // closeAddForm = (): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.CLOSE_ADD_FORM,\n  //   meta: null,\n  //   payload: null\n  // })\n\n\n  /************************************************************************************\n  * Information cache\n  ************************************************************************************/\n\n  // EntityPreviews\n  // static LOAD_ENTITY_PREVIEW = 'ActiveProject::LOAD_ENTITY_PREVIEW';\n  // static LOAD_ENTITY_PREVIEW_SUCCEEDED = 'ActiveProject::LOAD_ENTITY_PREVIEW_SUCCEEDED';\n  // static LOAD_ENTITY_PREVIEW_FAILED = 'ActiveProject::LOAD_ENTITY_PREVIEW_FAILED';\n\n\n  // loadEntityPreview(pk_project: number, pk_entity: number, pk_ui_context: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_ENTITY_PREVIEW,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entity, pk_ui_context\n  //     }\n  //   }\n  // }\n\n  // loadEntityPreviewSucceeded(entityPreview: EntityPreview): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_ENTITY_PREVIEW_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       entityPreview\n  //     },\n  //   }\n  // }\n\n  // loadEntityPreviewFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_ENTITY_PREVIEW_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n  // // EntityPreviews\n  // static LOAD_TYPES = 'ActiveProject::LOAD_TYPES';\n  // static LOAD_TYPES_SUCCEEDED = 'ActiveProject::LOAD_TYPES_SUCCEEDED';\n  // static LOAD_TYPES_FAILED = 'ActiveProject::LOAD_TYPES_FAILED';\n  // loadTypes(pk_project: number, pk_classes: number[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TYPES,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_classes\n  //     }\n  //   }\n  // }\n\n  // loadTypesSucceeded(types: TypePeIt[], pk_classes: number[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TYPES_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       types, pk_classes\n  //     },\n  //   }\n  // }\n\n  // loadTypesFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TYPES_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n\n  // // Entities Details for display in Modals\n  // static LOAD_ENTITY_DETAIL_FOR_MODAL = 'ActiveProject::LOAD_ENTITY_DETAIL_FOR_MODAL';\n  // static LOAD_PE_IT_DETAIL_FOR_MODAL_SUCCEEDED = 'ActiveProject::LOAD_PE_IT_DETAIL_FOR_MODAL_SUCCEEDED';\n  // static LOAD_TE_EN_DETAIL_FOR_MODAL_SUCCEEDED = 'ActiveProject::LOAD_TE_EN_DETAIL_FOR_MODAL_SUCCEEDED'; // TODO: Implement action/reducer\n  // static LOAD_ENTITY_DETAIL_FOR_MODAL_FAILED = 'ActiveProject::LOAD_ENTITY_DETAIL_FOR_MODAL_FAILED';\n\n  // loadEntityDetailForModal(pk_project: number, pk_entity: number, pk_ui_context: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_ENTITY_DETAIL_FOR_MODAL,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entity, pk_ui_context\n  //     }\n  //   }\n  // }\n\n  // loadPeItDetailsForModalSucceeded(peItDetail: EntityDetail): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_PE_IT_DETAIL_FOR_MODAL_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       peItDetail\n  //     },\n  //   }\n  // }\n\n  // loaEntitytDetailsForModalFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_ENTITY_DETAIL_FOR_MODAL_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n  // // Chunks\n  // static LOAD_CHUNK = 'ActiveProject::LOAD_CHUNK';\n  // static LOAD_CHUNK_SUCCEEDED = 'ActiveProject::LOAD_CHUNK_SUCCEEDED';\n  // static LOAD_CHUNK_FAILED = 'ActiveProject::LOAD_CHUNK_FAILED';\n\n  // loadChunk(pk_project: number, pk_entity: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_CHUNK,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entity\n  //     }\n  //   }\n  // }\n\n  // loadChunkSucceeded(chunk: DatChunk): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_CHUNK_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       chunk\n  //     },\n  //   }\n  // }\n\n  // loadChunkFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_CHUNK_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n  // // PeIt Graphs\n  // static LOAD_PEIT_GRAPHS = 'ActiveProject::LOAD_PEIT_GRAPHS';\n  // static LOAD_PEIT_GRAPHS_SUCCEEDED = 'ActiveProject::LOAD_PEIT_GRAPHS_SUCCEEDED';\n  // static LOAD_PEIT_GRAPHS_FAILED = 'ActiveProject::LOAD_PEIT_GRAPHS_FAILED';\n\n\n  // loadPeItGraphs(pk_project: number, pk_entities: number[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_PEIT_GRAPHS,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entities\n  //     }\n  //   }\n  // }\n\n  // loadPeItGraphsSucceeded(peItGraphs: InfPersistentItem[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_PEIT_GRAPHS_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       peItGraphs\n  //     },\n  //   }\n  // }\n\n  // loadPeItGraphsFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_PEIT_GRAPHS_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n  // // TeEn Graphs\n  // static LOAD_TEEN_GRAPHS = 'ActiveProject::LOAD_TEEN_GRAPHS';\n  // static LOAD_TEEN_GRAPHS_SUCCEEDED = 'ActiveProject::LOAD_TEEN_GRAPHS_SUCCEEDED';\n  // static LOAD_TEEN_GRAPHS_FAILED = 'ActiveProject::LOAD_TEEN_GRAPHS_FAILED';\n\n  // loadTeEnGraphs(pk_project: number, pk_entities: number[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TEEN_GRAPHS,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entities\n  //     }\n  //   }\n  // }\n\n  // loadTeEnGraphsSucceeded(teEnGraphs: InfTemporalEntity[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TEEN_GRAPHS_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       teEnGraphs\n  //     },\n  //   }\n  // }\n\n  // loadTeEnGraphsFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TEEN_GRAPHS_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n  // // Queries\n  // static LOAD_QUERIES = 'ActiveProject::LOAD_QUERIES';\n  // static LOAD_QUERIES_SUCCEEDED = 'ActiveProject::LOAD_QUERIES_SUCCEEDED';\n  // static LOAD_QUERIES_FAILED = 'ActiveProject::LOAD_QUERIES_FAILED';\n\n  // loadQueries(pk_project: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERIES,\n  //     payload: null,\n  //     meta: {\n  //       pk_project\n  //     }\n  //   }\n  // }\n\n  // loadQueriesSucceeded(comQueryArray: ComQueryV[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERIES_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       comQueryArray\n  //     },\n  //   }\n  // }\n\n  // loadQueriesFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERIES_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n  // // Query Version\n  // static LOAD_QUERY_VERSION = 'ActiveProject::LOAD_QUERY_VERSION';\n  // static LOAD_QUERY_VERSION_SUCCEEDED = 'ActiveProject::LOAD_QUERY_VERSION_SUCCEEDED';\n  // static LOAD_QUERY_VERSION_FAILED = 'ActiveProject::LOAD_QUERY_VERSION_FAILED';\n\n  // loadQueryVersion(pk_project: number, pk_entity: number, entity_version: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERY_VERSION,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entity, entity_version\n  //     }\n  //   }\n  // }\n\n  // loadQueryVersionSucceeded(comQuery: ProQuery): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERY_VERSION_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       comQuery\n  //     },\n  //   }\n  // }\n\n  // loadQueryVersionFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERY_VERSION_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n\n  // // Visuals\n  // static LOAD_VISUALS = 'ActiveProject::LOAD_VISUALS';\n  // static LOAD_VISUALS_SUCCEEDED = 'ActiveProject::LOAD_VISUALS_SUCCEEDED';\n  // static LOAD_VISUALS_FAILED = 'ActiveProject::LOAD_VISUALS_FAILED';\n\n  // loadVisuals(pk_project: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUALS,\n  //     payload: null,\n  //     meta: {\n  //       pk_project\n  //     }\n  //   }\n  // }\n\n  // loadVisualsSucceeded(comVisualArray: ComVisualV[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUALS_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       comVisualArray\n  //     },\n  //   }\n  // }\n\n  // loadVisualsFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUALS_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n  // // Visual Version\n  // static LOAD_VISUAL_VERSION = 'ActiveProject::LOAD_VISUAL_VERSION';\n  // static LOAD_VISUAL_VERSION_SUCCEEDED = 'ActiveProject::LOAD_VISUAL_VERSION_SUCCEEDED';\n  // static LOAD_VISUAL_VERSION_FAILED = 'ActiveProject::LOAD_VISUAL_VERSION_FAILED';\n\n  // loadVisualVersion(pk_project: number, pk_entity: number, entity_version?: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUAL_VERSION,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entity, entity_version\n  //     }\n  //   }\n  // }\n\n  // loadVisualVersionSucceeded(comVisualArray: ComVisualV[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUAL_VERSION_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       comVisualArray\n  //     },\n  //   }\n  // }\n\n  // loadVisualVersionFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUAL_VERSION_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n\n\n  /************************************************************************************\n   *  Things for Mentionings / Annotations\n  ************************************************************************************/\n  static UPDATE_SELECTED_CHUNK = 'ActiveProject::UPDATE_SELECTED_CHUNK';\n  static SET_REFINING_CHUNK = 'ActiveProject::SET_REFINING_CHUNK';\n  static SET_CREATING_MENTIONING = 'ActiveProject::SET_CREATING_MENTIONING';\n\n\n  // updateSelectedChunk(selectedChunk: DatChunk): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.UPDATE_SELECTED_CHUNK,\n  //     payload: { selectedChunk },\n  //     meta: null\n  //   }\n  // }\n\n  setRefiningChunk(refiningChunk: boolean): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_REFINING_CHUNK,\n      payload: { refiningChunk },\n      meta: null\n    }\n  }\n\n  setCreatingMentioning(creatingMentioning: boolean): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_CREATING_MENTIONING,\n      payload: { creatingMentioning },\n      meta: null\n    }\n  }\n\n  /************************************************************************************\n  * Highlighting of mentionings in the gui\n  ************************************************************************************/\n  static SET_MENTIONINGS_FOCUSED_IN_TEXT = 'ActiveProject::SET_MENTIONINGS_FOCUSED_IN_TEXT';\n  static SET_MENTIONINGS_FOCUSED_IN_TABLE = 'ActiveProject::SET_MENTIONINGS_FOCUSED_IN_TABLE';\n\n  setMentioningsFocusedInText(mentioningsFocusedInText: number[]): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_MENTIONINGS_FOCUSED_IN_TEXT,\n      payload: { mentioningsFocusedInText },\n      meta: null\n    }\n  }\n\n  setMentioningsFocusedInTable(mentioningsFocusedInTable: number[]): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_MENTIONINGS_FOCUSED_IN_TABLE,\n      payload: { mentioningsFocusedInTable },\n      meta: null\n    }\n  }\n\n\n  // /*********************************************************************\n  //  *  Methods to manage enabling and disabling a class for the project\n  //  *********************************************************************/\n  // static readonly UPSERT_CLASS_PROJ_REL = 'ActiveProject::UPSERT_CLASS_PROJ_REL';\n  // static readonly UPSERT_CLASS_PROJ_REL_SUCCEEDED = 'ActiveProject::UPSERT_CLASS_PROJ_REL_SUCCEEDED';\n  // static readonly UPSERT_CLASS_PROJ_REL_FAILED = 'ActiveProject::UPSERT_CLASS_PROJ_REL_FAILED';\n\n  // upsertClassProjRel = (projRel: ProDfhClassProjRel, dfh_pk_class: number): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_CLASS_PROJ_REL,\n  //   meta: { projRel, dfh_pk_class },\n  //   payload: null,\n  // });\n\n  // upsertClassProjRelSucceeded = (projRel: ProDfhClassProjRel, dfh_pk_class: number): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_CLASS_PROJ_REL_SUCCEEDED,\n  //   meta: { projRel, dfh_pk_class },\n  //   payload: null\n  // })\n\n  // upsertClassProjRelFailed = (error, dfh_pk_class: number): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_CLASS_PROJ_REL_FAILED,\n  //   meta: { dfh_pk_class },\n  //   payload: null,\n  //   error,\n  // })\n\n\n  // /*********************************************************************\n  //  *  Methods to manage enabling and disabling an entity for the project\n  //  *********************************************************************/\n  // static readonly UPSERT_ENTITY_PROJ_REL = 'ActiveProject::UPSERT_ENTITY_PROJ_REL';\n  // static readonly UPSERT_ENTITY_PROJ_REL_SUCCEEDED = 'ActiveProject::UPSERT_ENTITY_PROJ_REL_SUCCEEDED';\n  // static readonly UPSERT_ENTITY_PROJ_REL_FAILED = 'ActiveProject::UPSERT_ENTITY_PROJ_REL_FAILED';\n\n  // upsertEntityProjRel = (infProjRel: ProInfoProjRel): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_ENTITY_PROJ_REL,\n  //   meta: { infProjRel },\n  //   payload: null,\n  // });\n\n  // upsertEntityProjRelSucceeded = (infProjRel: ProInfoProjRel): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_ENTITY_PROJ_REL_SUCCEEDED,\n  //   meta: { infProjRel },\n  //   payload: null\n  // })\n\n  // upsertEntityProjRelFailed = (error): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_ENTITY_PROJ_REL_FAILED,\n  //   meta: null,\n  //   payload: null,\n  //   error,\n  // })\n\n\n  /************************************************************************************\n   * Destroy the active project state (on closing a project)\n  ************************************************************************************/\n  static DESTROY = 'ActiveProject::DESTROY';\n  destroy(): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.DESTROY,\n      payload: null,\n      meta: null,\n    }\n  }\n}\n","import { DatDigital, DatTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { ReducerConfigCollection } from '../_helpers/reducer-factory';\nimport { DatClassColumnMapping } from '@kleiolab/lib-sdk-lb4';\n\nexport const datRoot = 'dat';\nexport const facetteByPk = 'by_namespace';\n\nexport const datDefinitions: ReducerConfigCollection = {\n  digital: {\n    equals: (newItem: DatDigital, oldItem: DatDigital) => {\n      if (!oldItem.quill_doc && newItem.quill_doc) return false;\n      return (\n        newItem.pk_entity === oldItem.pk_entity &&\n        newItem.entity_version === oldItem.entity_version\n      )\n    },\n    indexBy: {\n      keyInStore: 'pk_entity__entity_version',\n      indexByFn: (item) => item.pk_entity.toString() + '_' + item.entity_version.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'pk_entity',\n        groupByFn: (item): string => item.pk_entity.toString()\n      },\n      {\n        keyInStore: 'pk_text',\n        groupByFn: (item): string => item.pk_text.toString()\n      }\n    ]\n  },\n  chunk: {\n    // facetteByPk,\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_text',\n        groupByFn: (item): string => item.fk_text.toString()\n      }\n    ]\n  },\n  column: {\n    // facetteByPk,\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_digital',\n        groupByFn: (item): string => item.fk_digital.toString()\n      }\n    ]\n  },\n  class_column_mapping: {\n    // facetteByPk,\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_column',\n        groupByFn: (item: DatClassColumnMapping): string => item.fk_column.toString()\n      }\n    ]\n  },\n  text_property: {\n    // facetteByPk,\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_entity__fk_system_type',\n        groupByFn: (item: DatTextProperty): string => item.fk_entity + '_' + item.fk_system_type\n      }\n    ]\n  },\n  namespace: {\n    // facetteByPk,\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_project',\n        groupByFn: (item): string => item.fk_project.toString()\n      }\n    ]\n  }\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { GvSubfieldPage } from '@kleiolab/lib-sdk-lb4';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { ActionsObservable } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { IAppState } from '../../root/models/model';\n\nexport interface LoadActionMeta { addPending: string, pk?: number }\nexport interface LoadVersionAction extends LoadActionMeta { pkEntity: number, entityVersion: number };\nexport interface LoadByPkAndVersionActionMeta { addPending: string, pk?: number, pkEntity: number, version: number }\n\nexport interface ModifyActionMeta<Model> { items: Model[], addPending: string, pk?: number }\nexport interface SucceedActionMeta<Model> { items: Model[], removePending: string, pk?: number }\nexport interface FailActionMeta { removePending: string, pk?: number }\n\nexport interface PaginateByParam { [key: string]: number | boolean | string }\nexport interface LoadPageMeta { page: GvSubfieldPage, pk?: number }\nexport interface LoadPageSucceededMeta { pks: number[], count: number, page: GvSubfieldPage, pk?: number }\n\n\n\nexport interface ActionResultObservable<Model> { pending$: Observable<boolean>, resolved$: Observable<SucceedActionMeta<Model>>, key: string }\n\nexport type FluxActionObservable<Payload, Meta> = ActionsObservable<FluxStandardAction<Payload, Meta>>\n\n\n\n/**\n * A: Schema Action Type (e.g. DfhAction)\n * M: Model for whitch the Actions are produced\n */\n\nexport class SchemaActionsFactory<Payload, Model> {\n\n  load: (suffix?: string, pk?: number) => ActionResultObservable<Model>;\n\n  /**\n   * @param pk is used for facetting\n   */\n  loadSucceeded: (items: Model[], removePending: string, pk?: number) => void;\n\n  /**\n   * @param pk is used for facetting\n   */\n  upsert: (items: Partial<Model>[], pk?: number) => ActionResultObservable<Model>;\n\n  /**\n   * @param pk is used for facetting\n   */\n  upsertSucceeded: (items: Model[], removePending: string, pk?: number) => void;\n\n  /**\n   * @param pk is used for facetting\n   */\n  delete: (items: Model[], pk?: number) => ActionResultObservable<Model>;\n\n  /**\n   * @param pk is used for facetting\n   */\n  deleteSucceeded: (items: Model[], removePending: string, pk?: number) => void;\n\n  /**\n   * @param pk is used for facetting\n   */\n  failed: (error, removePending: string, pk?: number) => void;\n\n\n  /**\n   * @param pk is used for facetting\n   */\n  loadPage: (page: GvSubfieldPage, pk?: number) => void;\n\n  /**\n * @param pk is used for facetting\n */\n  loadPageSucceeded: (pks: number[], count: number, page: GvSubfieldPage, pk?: number) => void;\n  loadPageFailed: (page: GvSubfieldPage, pk?: number) => void;\n\n  /**\n   * this action is not model specific but pendingKey specific.\n   * Reducer will add whole meta part to the resolved key.\n   */\n  succeeded: (items: Model[], removePending: string, pk?: number) => void;\n\n  actionPrefix: string;\n  modelName: string;\n\n  constructor(public ngRedux: NgRedux<IAppState>) {\n  }\n\n\n  createCrudActions(actionPrefix: string, modelName: string): SchemaActionsFactory<Payload, Model> {\n    this.actionPrefix = actionPrefix;\n    this.modelName = modelName;\n\n    this.load = (suffix: string = '', pk?: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + (suffix ? '::' + suffix : ''),\n        meta: { addPending, pk },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<Model>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n\n    this.loadSucceeded = (items: Model[], removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, SucceedActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD_SUCCEEDED',\n        meta: { items, removePending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    /**\n     * Call the Redux Action to upsert model instances.\n     */\n    this.upsert = (items: Model[], pk?: number) => {\n      const addPending = U.uuid();\n      const action: FluxStandardAction<Payload, ModifyActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::UPSERT',\n        meta: { items, addPending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<Model>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n\n    this.upsertSucceeded = (items: Model[], removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, SucceedActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::UPSERT_SUCCEEDED',\n        meta: { items, removePending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    /**\n     * this action is not model specific but pendingKey specific.\n     * Reducer will add whole meta part to the resolved key\n     */\n    this.succeeded = (items: Model[], removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, SucceedActionMeta<Model>> = ({\n        type: 'general::UPSERT_SUCCEEDED',\n        meta: { items, removePending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n\n    /**\n    * Call the Redux Action to delete model instances.\n    */\n    this.delete = (items: Model[], pk?: number) => {\n      const addPending = U.uuid();\n      const action: FluxStandardAction<Payload, ModifyActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::DELETE',\n        meta: { items, addPending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<Model>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    this.deleteSucceeded = (items: Model[], removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, SucceedActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::DELETE_SUCCEEDED',\n        meta: { items, removePending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n\n\n    this.failed = (error, removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, FailActionMeta> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::FAILED',\n        meta: { removePending, pk },\n        payload: null,\n        error,\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n\n    this.loadPage = (page: GvSubfieldPage, pk?: number) => {\n      const action: FluxStandardAction<Payload, LoadPageMeta> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD_PAGE',\n        meta: { page, pk },\n        payload: null,\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    this.loadPageSucceeded = (pks: number[], count: number, page: GvSubfieldPage, pk?: number) => {\n      const action: FluxStandardAction<Payload, LoadPageSucceededMeta> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD_PAGE_SUCCEEDED',\n        meta: { page, pks, count, pk },\n        payload: null,\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    this.loadPageFailed = (page: GvSubfieldPage, pk?: number) => {\n      const action: FluxStandardAction<Payload, LoadPageMeta> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD_PAGE_FAILED',\n        meta: { page, pk },\n        payload: null,\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    return this;\n  }\n\n}\n\nexport interface SchemaObjectLoadActionMeta { removePending: string, pk?: number }\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { DatChunk, DatColumn, DatDigital, DatNamespace, DatTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { DatClassColumnMapping } from '@kleiolab/lib-sdk-lb4';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { IAppState } from '../../root/models/model';\nimport { ChunkSlice, ClassColumnMappingSlice, ColumnSlice, DigitalSlice, NamespaceSlice, TextPropertySlice } from '../models/dat.models';\nimport { datRoot } from '../reducer-configs/dat.config';\nimport { ActionResultObservable, LoadActionMeta, LoadVersionAction, SchemaActionsFactory, SucceedActionMeta } from '../_helpers/schema-actions-factory';\n\n\nexport class DigitalActionsFactory extends SchemaActionsFactory<DigitalSlice, DatDigital> {\n\n  // Suffixes of load action types\n  static readonly LOAD_VERSION = 'LOAD_VERSION';\n\n  /**\n   * Load a version. if entityVersion omitted, latest version is returned.\n   */\n  loadVersion: (pkEntity: number, entityVersion?: number) => ActionResultObservable<DatDigital>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): DigitalActionsFactory {\n    Object.assign(this, this.createCrudActions(datRoot, 'digital'))\n\n    this.loadVersion = (pkEntity: number, entityVersion?: number) => {\n      const addPending = U.uuid()\n\n      const action: FluxStandardAction<DigitalSlice, LoadVersionAction> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + DigitalActionsFactory.LOAD_VERSION,\n        meta: { addPending, pkEntity, entityVersion },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DatDigital>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n    return this;\n  }\n}\n\nexport interface LoadChunksOfDigitalAction extends LoadActionMeta { pkDigital: number }\n\nexport class ChunkActionsFactory extends SchemaActionsFactory<ChunkSlice, DatChunk> {\n\n  // Suffixes of load action types\n  static readonly CHUNKS_OF_DIGITAL = 'CHUNKS_OF_DIGITAL';\n\n  /**\n   * Load a version. if entityVersion omitted, latest version is returned.\n   */\n  loadChunksOfDigital: (pkDigital: number, pk: number) => ActionResultObservable<DatChunk>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ChunkActionsFactory {\n    Object.assign(this, this.createCrudActions(datRoot, 'chunk'))\n\n    this.loadChunksOfDigital = (pkDigital: number, pk: number) => {\n      const addPending = U.uuid()\n\n      const action: FluxStandardAction<ChunkSlice, LoadChunksOfDigitalAction> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ChunkActionsFactory.CHUNKS_OF_DIGITAL,\n        meta: { addPending, pkDigital, pk },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DatChunk>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n    return this;\n  }\n}\n\nexport interface LoadColumnsOfTableAction extends LoadActionMeta { pkDigital: number }\n\nexport class ColumnActionsFactory extends SchemaActionsFactory<ColumnSlice, DatColumn> {\n\n  // Suffixes of load action types\n  static readonly COLUMNS_OF_TABLE = 'COLUMNS_OF_TABLE';\n\n  /**\n   * Load a version. if entityVersion omitted, latest version is returned.\n   */\n  loadColumnsOfTable: (pkDigital: number, pk: number) => ActionResultObservable<DatColumn>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ColumnActionsFactory {\n    Object.assign(this, this.createCrudActions(datRoot, 'column'))\n\n    this.loadColumnsOfTable = (pkDigital: number, pk: number) => {\n      const addPending = U.uuid()\n\n      const action: FluxStandardAction<ColumnSlice, LoadColumnsOfTableAction> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ColumnActionsFactory.COLUMNS_OF_TABLE,\n        meta: { addPending, pkDigital, pk },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DatColumn>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n    return this;\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatActions {\n\n  digital = new DigitalActionsFactory(this.ngRedux).createActions();\n\n  chunk = new ChunkActionsFactory(this.ngRedux).createActions()\n\n  column = new ColumnActionsFactory(this.ngRedux).createActions()\n\n  class_column_mapping = new SchemaActionsFactory<ClassColumnMappingSlice, DatClassColumnMapping>(this.ngRedux).createCrudActions(datRoot, 'class_column_mapping')\n\n  namespace = new SchemaActionsFactory<NamespaceSlice, DatNamespace>(this.ngRedux).createCrudActions(datRoot, 'namespace')\n\n  text_property = new SchemaActionsFactory<TextPropertySlice, DatTextProperty>(this.ngRedux).createCrudActions(datRoot, 'text_property')\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","import { ReducerConfigCollection } from '../_helpers/reducer-factory';\nimport { DfhLabel, DfhProfile } from '@kleiolab/lib-sdk-lb3';\nimport { DfhProperty } from '@kleiolab/lib-sdk-lb4';\n\nimport { DfhClass } from '@kleiolab/lib-sdk-lb4';\n\nexport const dfhRoot = 'dfh';\n\nexport const dfhLabelByFksKey = (item: Partial<DfhLabel>) => `${item.type || null}_${item.language || null}_${item.fk_class || null}_${item.fk_profile || null}_${item.fk_property || null}_${item.fk_project || null}`;\n\nexport const dfhDefinitions: ReducerConfigCollection = {\n  profile: {\n    indexBy: {\n      keyInStore: 'pk_profile',\n      indexByFn: (item: DfhProfile) => item.pk_profile.toString()\n    }\n  },\n  klass: {\n    indexBy: {\n      keyInStore: 'pk_class',\n      indexByFn: (item: DfhClass) => item.pk_class.toString(),\n    },\n    groupBy: [\n      {\n        keyInStore: 'basic_type',\n        groupByFn: (d: DfhClass): string => d.basic_type.toString()\n      },\n    ]\n  },\n  property: {\n    indexBy: {\n      keyInStore: 'pk_property__has_domain__has_range',\n      indexByFn: (item: DfhProperty) => item.pk_property + '_' + item.has_domain + '_' + item.has_range\n    },\n    groupBy: [\n      {\n        keyInStore: 'pk_property',\n        groupByFn: (d: DfhProperty): string => d.pk_property.toString()\n      },\n      {\n        keyInStore: 'has_domain',\n        groupByFn: (d: DfhProperty): string => d.has_domain.toString()\n      },\n      {\n        keyInStore: 'has_range',\n        groupByFn: (d: DfhProperty): string => d.has_range.toString()\n      },\n      {\n        keyInStore: 'has_domain__fk_property',\n        groupByFn: (d: DfhProperty): string => d.has_domain + '_' + d.pk_property\n      },\n      {\n        keyInStore: 'has_range__fk_property',\n        groupByFn: (d: DfhProperty): string => d.has_range + '_' + d.pk_property\n      },\n      {\n        keyInStore: 'is_has_type_subproperty',\n        groupByFn: (d: DfhProperty): string => d.is_has_type_subproperty ? d.is_has_type_subproperty.toString() : undefined\n      }\n    ]\n  },\n  label: {\n    indexBy: {\n      keyInStore: 'fks',\n      indexByFn: dfhLabelByFksKey\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_class__type',\n        groupByFn: (d: DfhLabel): string => !d.fk_class ? undefined : `${d.fk_class}_${d.type}`\n      },\n      {\n        keyInStore: 'fk_property__type',\n        groupByFn: (d: DfhLabel): string => !d.fk_property ? undefined : `${d.fk_property}_${d.type}`\n      },\n      {\n        keyInStore: 'fk_profile__type',\n        groupByFn: (d: DfhLabel): string => !d.fk_profile ? undefined : `${d.fk_profile}_${d.type}`\n      }\n    ]\n  },\n};\n","\nimport { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { DfhLabel, DfhProfile } from '@kleiolab/lib-sdk-lb3';\nimport { DfhClass, DfhProperty } from '@kleiolab/lib-sdk-lb4';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { filter } from 'rxjs/operators';\nimport { IAppState } from '../../root/models/model';\nimport { DfhClassSlice } from '../models/dfh.models';\nimport { dfhRoot } from '../reducer-configs/dfh.config';\nimport { ActionResultObservable, LoadActionMeta, SchemaActionsFactory, SucceedActionMeta } from '../_helpers/schema-actions-factory';\n\n\nexport class DfhProfileActionFactory extends SchemaActionsFactory<Payload, DfhProfile> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<DfhProfile>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): DfhProfileActionFactory {\n    Object.assign(this, this.createCrudActions(dfhRoot, 'profile'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + DfhProfileActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DfhProfile>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\nexport class DfhClassActionFactory extends SchemaActionsFactory<Payload, DfhClass> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<DfhClass>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): DfhClassActionFactory {\n    Object.assign(this, this.createCrudActions(dfhRoot, 'klass'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + DfhClassActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DfhClass>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\nexport class DfhPropertyActionFactory extends SchemaActionsFactory<Payload, DfhProperty> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<DfhProperty>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): DfhPropertyActionFactory {\n    Object.assign(this, this.createCrudActions(dfhRoot, 'property'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + DfhPropertyActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DfhProperty>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\nexport class DfhLabelActionFactory extends SchemaActionsFactory<Payload, DfhLabel> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<DfhLabel>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): DfhLabelActionFactory {\n    Object.assign(this, this.createCrudActions(dfhRoot, 'label'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + DfhLabelActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DfhLabel>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    return this;\n  }\n}\n\n\ntype Payload = DfhClassSlice;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DfhActions {\n\n\n  profile = new DfhProfileActionFactory(this.ngRedux).createActions();\n  klass = new DfhClassActionFactory(this.ngRedux).createActions();\n  property = new DfhPropertyActionFactory(this.ngRedux).createActions();\n  label = new DfhLabelActionFactory(this.ngRedux).createActions();\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","import { ReducerConfigCollection } from '../_helpers/reducer-factory';\n\nimport { InfStatement, InfTextProperty, InfDimension } from '@kleiolab/lib-sdk-lb3';\nimport { U } from '@kleiolab/lib-utils';\n\nexport const infRoot = 'inf';\n\nexport const infDefinitions: ReducerConfigCollection = {\n  persistent_item: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_class',\n        groupByFn: (d): string => d.fk_class.toString()\n      }\n    ]\n  },\n  temporal_entity: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_class',\n        groupByFn: (d): string => d.fk_class.toString()\n      }\n    ]\n  },\n  statement: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item: InfStatement) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: [\n      {\n        keyInStore: 'subject',\n        groupByFn: (d: InfStatement): string => indexStatementBySubject(d)\n      },\n      {\n        keyInStore: 'subject+property',\n        groupByFn: (d: InfStatement): string => indexStatementBySubjectProperty(d)\n      },\n      {\n        keyInStore: 'object',\n        groupByFn: (d: InfStatement): string => indexStatementByObject(d)\n      },\n      {\n        keyInStore: 'object+property',\n        groupByFn: (d: InfStatement): string => indexStatementByObjectProperty(d)\n      },\n\n      {\n        keyInStore: 'fk_subject_data',\n        groupByFn: (d: InfStatement): string => U.toStr0undef(d.fk_subject_data)\n      },\n    ]\n  },\n\n  text_property: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_concerned_entity__fk_class_field',\n        groupByFn: (d: InfTextProperty): string => d.fk_concerned_entity + '_' + d.fk_class_field\n      },\n      {\n        keyInStore: 'fk_concerned_entity',\n        groupByFn: (d: InfTextProperty): string => d.fk_concerned_entity.toString()\n      },\n    ]\n  },\n  lang_string: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n  appellation: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n  time_primitive: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n  place: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n  language: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n  dimension: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item: InfDimension) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n}\n\n\n\n\n\n/**\n * This function creates a key for the given statement by\n * - subject (all subject foreign keys)\n *\n * The key is created on the basis of the given foreign keys.\n * Keys are separated by dash '-', undefined keys are replaced by a zero '0'\n *\n * Use this function to index groups of statements with the same subject\n * or to retrieve statements from such a group index\n */\nexport function indexStatementBySubject(fks: IndexStatementBySubject = {}): string {\n  return `${fks.fk_subject_info || '0'}-${fks.fk_subject_data || '0'}-${(fks.fk_subject_tables_row) || '0'}-${(fks.fk_subject_tables_cell) || '0'}`\n}\nexport interface IndexStatementBySubject {\n  fk_subject_info?: number;\n  fk_subject_data?: number;\n  fk_subject_tables_row?: number;\n  fk_subject_tables_cell?: number;\n};\n\n\n/**\n * This function creates a key for the given statement by\n * - object (all object foreign keys)\n *\n * The key is created on the basis of the given foreign keys.\n * Keys are separated by dash '-', undefined keys are replaced by a zero '0'\n *\n * Use this function to index groups of statements with the same object\n * or to retrieve statements from such a group index\n */\nexport function indexStatementByObject(fks: IndexStatementByObject = {}): string {\n  return `${fks.fk_object_info || '0'}-${fks.fk_object_data || '0'}-${fks.fk_object_tables_row || '0'}-${fks.fk_object_tables_cell || '0'}`\n}\nexport interface IndexStatementByObject {\n  fk_object_info?: number;\n  fk_object_data?: number;\n  fk_object_tables_row?: number;\n  fk_object_tables_cell?: number;\n};\n\n\n/**\n * This function creates a key for the given statement by\n * - subject (all subject foreign keys)\n * - property (all property foreign keys)\n *\n * The key is created on the basis of the given foreign keys.\n * Keys are separated by dash '-', undefined keys are replaced by a zero '0'\n *\n * Use this function to index groups of statements with the same subject + property\n * or to retrieve statements from such a group index\n */\nexport function indexStatementBySubjectProperty(fks: IndexStatementBySubjectProperty = {}): string {\n  return `${fks.fk_subject_info || '0'}-${fks.fk_subject_data || '0'}-${(fks.fk_subject_tables_row) || '0'}-${(fks.fk_subject_tables_cell) || '0'}-${fks.fk_property || '0'}-${fks.fk_property_of_property || '0'}`\n}\nexport interface IndexStatementBySubjectProperty {\n  fk_subject_info?: number;\n  fk_subject_data?: number;\n  fk_subject_tables_row?: number;\n  fk_subject_tables_cell?: number;\n  fk_property?: number;\n  fk_property_of_property?: number;\n}\n\n\n/**\n * This function creates a key for the given statement by\n * - object (all object foreign keys)\n * - property (all property foreign keys)\n *\n * The key is created on the basis of the given foreign keys.\n * Keys are separated by dash '-', undefined keys are replaced by a zero '0'\n *\n * Use this function to index groups of statements with the same object + property\n * or to retrieve statements from such a group index\n */\nexport function indexStatementByObjectProperty(fks: IndexStatementByObjectProperty = {}): string {\n  return `${fks.fk_object_info || '0'}-${fks.fk_object_data || '0'}-${fks.fk_object_tables_row || '0'}-${fks.fk_object_tables_cell || '0'}-${fks.fk_property || '0'}-${fks.fk_property_of_property || '0'}`\n}\nexport interface IndexStatementByObjectProperty {\n  fk_object_info?: number;\n  fk_object_data?: number;\n  fk_object_tables_row?: number;\n  fk_object_tables_cell?: number;\n  fk_property?: number;\n  fk_property_of_property?: number;\n}\n\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { IAppState } from '../../root/models/model';\nimport { ActionResultObservable, ModifyActionMeta, SchemaActionsFactory, SucceedActionMeta } from './schema-actions-factory';\n\n@Injectable()\nexport class InfActionFactory<Payload, Model> extends SchemaActionsFactory<Payload, Model> {\n\n\n  /**\n   * @param pk is used for facetting\n   */\n  remove: (items: Model[], pk?: number) => ActionResultObservable<Model>;\n\n  /**\n   * @param pk is used for facetting\n   */\n  removeSucceeded: (items: Model[], removePending: string, pk?: number) => void;\n\n  constructor(public ngRedux: NgRedux<IAppState>) {\n    super(ngRedux);\n  }\n\n  createInfActions(actionPrefix: string, modelName: string): InfActionFactory<Payload, Model> {\n    this.createCrudActions(actionPrefix, modelName)\n\n    /**\n     * Call the Redux Action to remove model instances from project.\n     */\n    this.remove = (items: Model[], pk?: number) => {\n      const addPending = U.uuid();\n      const action: FluxStandardAction<Payload, ModifyActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::REMOVE',\n        meta: { items, addPending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<Model>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n\n    this.removeSucceeded = (items: Model[], removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, SucceedActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::REMOVE_SUCCEEDED',\n        meta: { items, removePending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    return this;\n  }\n\n}\n","\nimport { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { DatDigital, InfAppellation, InfDimension, InfLangString, InfLanguage, InfPersistentItem, InfPlace, InfStatement, InfTemporalEntity, InfTextProperty, InfTimePrimitive } from '@kleiolab/lib-sdk-lb3';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { filter } from 'rxjs/operators';\nimport { IAppState, SchemaObject } from '../../root/models/model';\nimport { InfDimensionSlice, InfPersistentItemSlice } from '../models/inf.models';\nimport { infRoot } from '../reducer-configs/inf.config';\nimport { InfActionFactory } from '../_helpers/inf-action-factory';\nimport { ActionResultObservable, LoadActionMeta, SchemaActionsFactory, SucceedActionMeta } from '../_helpers/schema-actions-factory';\n\n\n\ntype Payload = InfPersistentItemSlice;\n\nexport interface LoadByPkMeta extends LoadActionMeta { pkEntity: number };\nexport type LoadTypesOfProjectAction = LoadActionMeta;\nexport interface LoadTypeOfProjectAction extends LoadActionMeta { pkEntity: number };\ntype LoadNestetedPeItResult = InfPersistentItem[]\n\nexport class InfPersistentItemActionFactory extends InfActionFactory<Payload, InfPersistentItem> {\n\n  // Suffixes of load action types\n  // static readonly NESTED_BY_PK = 'NESTED_BY_PK';\n  static readonly MINIMAL_BY_PK = 'MINIMAL_BY_PK';\n  static readonly TYPES_OF_PROJECT = 'TYPES_OF_PROJECT';\n  static readonly TYPE_OF_PROJECT = 'TYPE_OF_PROJECT';\n\n  loadMinimal: (pkProject: number, pkEntity: number) => ActionResultObservable<SchemaObject>;\n  loadNestedObject: (pkProject: number, pkEntity: number) => ActionResultObservable<LoadNestetedPeItResult>;\n\n  typesOfProject: (pkProject: number) => ActionResultObservable<LoadActionMeta>;\n  // typeOfProject: (pkProject: number, pkEntity: number) => ActionResultObservable<LoadNestetedPeItResult>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): InfPersistentItemActionFactory {\n    Object.assign(this, this.createInfActions(infRoot, 'persistent_item'))\n\n    // this.loadNestedObject = (pkProject: number, pkEntity: number) => {\n    //   const addPending = U.uuid();\n    //   const action: FluxStandardAction<Payload, LoadByPkMeta> = {\n    //     type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfPersistentItemActionFactory.NESTED_BY_PK,\n    //     meta: { addPending, pk: pkProject, pkEntity },\n    //     payload: null,\n    //   };\n    //   this.ngRedux.dispatch(action)\n    //   return {\n    //     pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n    //     resolved$: this.ngRedux.select<SucceedActionMeta<LoadNestetedPeItResult>>(['resolved', addPending]).pipe(filter(x => !!x)),\n    //     key: addPending\n    //   };\n    // }\n    this.loadMinimal = (pkProject: number, pkEntity: number) => {\n      const addPending = U.uuid();\n      const action: FluxStandardAction<Payload, LoadByPkMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfPersistentItemActionFactory.MINIMAL_BY_PK,\n        meta: { addPending, pk: pkProject, pkEntity },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<SchemaObject>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    this.typesOfProject = (pkProject: number) => {\n      const addPending = U.uuid();\n\n      const action: FluxStandardAction<Payload, LoadTypesOfProjectAction> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfPersistentItemActionFactory.TYPES_OF_PROJECT,\n        meta: { addPending, pk: pkProject },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<LoadActionMeta>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    // this.typeOfProject = (pkProject: number, pkEntity: number) => {\n    //   const addPending = U.uuid();\n\n    //   const action: FluxStandardAction<Payload, LoadTypeOfProjectAction> = {\n    //     type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfPersistentItemActionFactory.TYPE_OF_PROJECT,\n    //     meta: { addPending, pk: pkProject, pkEntity },\n    //     payload: null,\n    //   };\n    //   this.ngRedux.dispatch(action)\n    //   return {\n    //     pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n    //     resolved$: this.ngRedux.select<SucceedActionMeta<LoadNestetedPeItResult>>(['resolved', addPending]).pipe(filter(x => !!x)),\n    //     key: addPending\n    //   };\n    // }\n\n    return this;\n  }\n\n}\nexport type PaginatedStatements = number[]\nexport interface PaginatedStatementList {\n  count: number,\n  schemas: SchemaObject,\n  paginatedStatements: PaginatedStatements\n}\nexport interface LoadPaginatedStatementListMeta extends LoadActionMeta {\n  pkSourceEntity: number // Pk of the source entity.\n  pkProperty: number // Pk of the property.\n  fkTargetClass: number // Pk of the target class.\n  isOutgoing: boolean // If true, the source entity is domain, else range.\n  limit: number // number of items per page.\n  offset: number // offset.\n  alternatives: boolean\n}\nexport class InfTemporalEntityActionFactory extends InfActionFactory<Payload, InfTemporalEntity> {\n\n  // Suffixes of load action types\n  static readonly OWN_PROPERTIES = 'OWN_PROPERTIES';\n  static readonly PAGINATED_LIST = 'PAGINATED_LIST';\n  static readonly PAGINATED_ALTERNATIVE_LIST = 'PAGINATED_ALTERNATIVE_LIST';\n\n  loadNestedObject: (pkProject: number, pkEntity: number) => ActionResultObservable<InfTemporalEntity[]>;\n  loadPaginatedList: (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => ActionResultObservable<PaginatedStatementList>;\n  loadPaginatedAlternativeList: (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => ActionResultObservable<PaginatedStatementList>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): InfTemporalEntityActionFactory {\n    Object.assign(this, this.createInfActions(infRoot, 'temporal_entity'))\n\n    this.loadNestedObject = (pkProject: number, pkEntity: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadByPkMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfTemporalEntityActionFactory.OWN_PROPERTIES,\n        meta: { addPending, pk: pkProject, pkEntity },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<InfTemporalEntity[]>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    this.loadPaginatedList = (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadPaginatedStatementListMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfTemporalEntityActionFactory.PAGINATED_LIST,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkSourceEntity,\n          fkTargetClass,\n          pkProperty,\n          isOutgoing,\n          limit,\n          offset,\n          alternatives: false\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<PaginatedStatementList>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n    this.loadPaginatedAlternativeList = (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadPaginatedStatementListMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfTemporalEntityActionFactory.PAGINATED_ALTERNATIVE_LIST,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkSourceEntity,\n          pkProperty,\n          fkTargetClass,\n          isOutgoing,\n          limit,\n          offset,\n          alternatives: true\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<PaginatedStatementList>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n    return this;\n  }\n}\nexport interface FindStatementByParams extends LoadActionMeta {\n  ofProject: boolean,\n  pkEntity: number,\n  pkInfoRange: number,\n  pkInfoDomain: number,\n  pkProperty: number,\n}\nexport interface ContentTreeMeta extends LoadActionMeta {\n  pkExpressionEntity: number,\n}\nexport interface SourcesAndDigitalsOfEntity extends LoadActionMeta {\n  ofProject: boolean,\n  pkEntity: number,\n}\nexport interface SourcesAndDigitalsOfEntityResult {\n  statements: InfStatement[],\n  digitals: DatDigital[],\n}\n\n\nexport interface LoadOutgoingAlternativeStatements extends LoadActionMeta { pkTemporalEntity: number, pkProperty: number };\nexport interface LoadIngoingAlternativeStatements extends LoadActionMeta { pkEntity: number, pkProperty: number };\nexport interface AddToProjectWithTeEntActionMeta { pkStatements: number[], pk: number, addPending: string };\n\nexport class InfStatementActionFactory extends InfActionFactory<Payload, InfStatement> {\n\n  // Suffixes of load action types\n  // static readonly ALTERNATIVES_OUTGOING = 'ALTERNATIVES_OUTGOING';\n  static readonly ALTERNATIVES_INGOING = 'ALTERNATIVES_INGOING';\n  // static readonly ADD_TO_PROJECT_WITH_TE_EN = 'ADD_TO_PROJECT_WITH_TE_EN';\n  static readonly PAGINATED_LIST = 'PAGINATED_LIST';\n  static readonly CONTENT_TREE = 'CONTENT_TREE';\n  static readonly SOURCES_AND_DIGITALS_OF_ENTITY = 'SOURCES_AND_DIGITALS_OF_ENTITY';\n  static readonly BY_PARAMS = 'BY_PARAMS';\n\n  loadIngoingAlternatives: (pkEntity, pkProperty, pkProjec) => ActionResultObservable<InfStatement>;\n  loadPaginatedList: (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => ActionResultObservable<PaginatedStatementList>;\n\n  // contentTree: (pkProject: number, pkExpressionEntity: number) => void;\n  sourcesAndDigitalsOfEntity: (ofProject: boolean, pkProject: number, pkEntity: number) => ActionResultObservable<SourcesAndDigitalsOfEntityResult>;\n  findByParams: (\n    ofProject: boolean,\n    pkProject: number,\n    pkEntity: number,\n    pkInfoRange: number,\n    pkInfoDomain: number,\n    pkProperty: number,\n  ) => void;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): InfStatementActionFactory {\n    Object.assign(this, this.createInfActions(infRoot, 'statement'))\n\n    this.findByParams = (\n      ofProject: boolean,\n      pkProject: number,\n      pkEntity: number,\n      pkInfoRange: number,\n      pkInfoDomain: number,\n      pkProperty: number,\n    ) => {\n      const action: FluxStandardAction<Payload, FindStatementByParams> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfStatementActionFactory.BY_PARAMS,\n        meta: {\n          addPending: U.uuid(),\n          pk: pkProject,\n          ofProject,\n          pkEntity,\n          pkInfoRange,\n          pkInfoDomain,\n          pkProperty,\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n    }\n\n\n    this.loadIngoingAlternatives = (pkEntity: number, pkProperty: number, pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadIngoingAlternativeStatements> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfStatementActionFactory.ALTERNATIVES_INGOING,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkEntity,\n          pkProperty,\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<InfStatement>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    this.loadPaginatedList = (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadPaginatedStatementListMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfStatementActionFactory.PAGINATED_LIST,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkSourceEntity,\n          fkTargetClass,\n          pkProperty,\n          isOutgoing,\n          limit,\n          offset,\n          alternatives: false\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<PaginatedStatementList>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    /**\n    * Get an nested object with everything needed to display the\n    * links made from an entity towards sources and digitals.\n    */\n    this.sourcesAndDigitalsOfEntity = (ofProject: boolean, pkProject: number, pkEntity: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, SourcesAndDigitalsOfEntity> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfStatementActionFactory.SOURCES_AND_DIGITALS_OF_ENTITY,\n        meta: {\n          addPending,\n          ofProject,\n          pk: pkProject,\n          pkEntity\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<SourcesAndDigitalsOfEntityResult>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\nexport interface LoadAlternativeTextProperties extends LoadActionMeta { fkEntity: number, fkClassField: number };\n\nexport class InfTextPropertyActionFactory extends InfActionFactory<Payload, InfTextProperty> {\n\n  // Suffixes of load action types\n  static readonly ALTERNATIVES = 'ALTERNATIVES';\n\n  loadAlternatives: (fkEntity, fkClassField, fkProject) => ActionResultObservable<InfTextProperty>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): InfTextPropertyActionFactory {\n    Object.assign(this, this.createInfActions(infRoot, 'text_property'))\n\n    this.loadAlternatives = (fkEntity: number, fkClassField: number, pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadAlternativeTextProperties> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfTextPropertyActionFactory.ALTERNATIVES,\n        meta: {\n          addPending,\n          pk: pkProject,\n          fkEntity,\n          fkClassField,\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<InfTextProperty>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InfActions {\n\n  persistent_item = new InfPersistentItemActionFactory(this.ngRedux).createActions();\n  temporal_entity = new InfTemporalEntityActionFactory(this.ngRedux).createActions()\n  statement = new InfStatementActionFactory(this.ngRedux).createActions()\n\n  // TODO: pimp those up to real Inf Actions!\n  language = new SchemaActionsFactory<Payload, InfLanguage>(this.ngRedux).createCrudActions(infRoot, 'language')\n  appellation = new SchemaActionsFactory<Payload, InfAppellation>(this.ngRedux).createCrudActions(infRoot, 'appellation')\n  lang_string = new SchemaActionsFactory<Payload, InfLangString>(this.ngRedux).createCrudActions(infRoot, 'lang_string')\n  dimension = new SchemaActionsFactory<InfDimensionSlice, InfDimension>(this.ngRedux).createCrudActions(infRoot, 'dimension')\n  place = new SchemaActionsFactory<Payload, InfPlace>(this.ngRedux).createCrudActions(infRoot, 'place')\n  time_primitive = new SchemaActionsFactory<Payload, InfTimePrimitive>(this.ngRedux).createCrudActions(infRoot, 'time_primitive')\n  text_property = new InfTextPropertyActionFactory(this.ngRedux).createActions()\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","import { ReducerConfigCollection } from '../_helpers/reducer-factory';\nimport { ProClassFieldConfig, ProDfhClassProjRel, ProTextProperty, ProDfhProfileProjRel } from '@kleiolab/lib-sdk-lb3';\nimport { ProAnalysis } from '@kleiolab/lib-sdk-lb4';\n\nexport const proRoot = 'pro';\n\n\nexport const textPropertyByFksKey = (d: Partial<ProTextProperty>) => `${d.fk_project || null}_${d.fk_system_type || null}_${d.fk_language || null}_${d.fk_dfh_class || null}_${d.fk_dfh_property || null}_${d.fk_dfh_property_domain || null}_${d.fk_dfh_property_range || null}`\nexport const textPropertyByFksWithoutLang = (d: Partial<ProTextProperty>): string => `${d.fk_project || null}_${d.fk_system_type || null}_${d.fk_dfh_class || null}_${d.fk_dfh_property || null}_${d.fk_dfh_property_domain || null}_${d.fk_dfh_property_range || null}`;\nexport const proClassFieldConfgByProjectAndClassKey = (d: Partial<ProClassFieldConfig>): string => {\n  const fk_class = d.fk_range_class || d.fk_domain_class || d.fk_class_for_class_field;\n  return `${d.fk_project || null}_${fk_class || null}`;\n};\n\nexport const proDefinitions: ReducerConfigCollection = {\n  project: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    }\n  },\n  info_proj_rel: {\n    indexBy: {\n      keyInStore: 'fk_project__fk_entity',\n      indexByFn: (item) => item.fk_project.toString() + '_' + item.fk_entity.toString()\n    }\n  },\n  class_field_config: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_project__fk_class',\n        groupByFn: proClassFieldConfgByProjectAndClassKey\n      }\n    ]\n  },\n  dfh_class_proj_rel: {\n    indexBy: {\n      keyInStore: 'fk_project__fk_class',\n      indexByFn: (item: ProDfhClassProjRel) => item.fk_project + '_' + item.fk_class\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_project__enabled_in_entities',\n        groupByFn: (d: ProDfhClassProjRel): string => d.fk_project + '_' + d.enabled_in_entities\n      },\n      {\n        keyInStore: 'fk_project',\n        groupByFn: (d: ProDfhClassProjRel): string => d.fk_project.toString()\n      }\n    ],\n  },\n  dfh_profile_proj_rel: {\n    indexBy: {\n      keyInStore: 'fk_project__fk_profile',\n      indexByFn: (item: ProDfhProfileProjRel) => item.fk_project + '_' + item.fk_profile\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_project__enabled',\n        groupByFn: (d: ProDfhProfileProjRel): string => d.fk_project + '_' + d.enabled\n      },\n      {\n        keyInStore: 'fk_project',\n        groupByFn: (d: ProDfhProfileProjRel): string => d.fk_project.toString()\n      }\n    ],\n  },\n  text_property: {\n    indexBy: {\n      keyInStore: 'fks',\n      indexByFn: textPropertyByFksKey\n    },\n    groupBy: [\n      {\n        keyInStore: 'fks_without_lang',\n        groupByFn: textPropertyByFksWithoutLang\n      }\n    ]\n  },\n  analysis: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item: ProAnalysis) => item.pk_entity.toString()\n    }\n  }\n}\n","\nimport { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { ProClassFieldConfig, ProDfhClassProjRel, ProDfhProfileProjRel, ProInfoProjRel, ProProject, ProTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { ProAnalysis } from '@kleiolab/lib-sdk-lb4';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { filter } from 'rxjs/operators';\nimport { IAppState } from '../../root/models/model';\nimport { ProAnalysisSlice, ProInfoProjRelSlice } from '../models/pro.models';\nimport { proRoot } from '../reducer-configs/pro.config';\nimport { ActionResultObservable, LoadActionMeta, LoadByPkAndVersionActionMeta, SchemaActionsFactory, SucceedActionMeta } from '../_helpers/schema-actions-factory';\n\n\ntype Payload = ProInfoProjRelSlice;\n\nexport class ProProjectActionFactory extends SchemaActionsFactory<Payload, ProProject> {\n\n  // Suffixes of load action types\n  static readonly OF_ACCOUNT = 'OF_ACCOUNT';\n  static readonly LOAD_BASICS = 'LOAD_BASICS';\n\n  loadOfAccount: (pkProject) => ActionResultObservable<ProProject>;\n\n  /**\n   * loads the ProProject and the default InfLanguage\n   */\n  loadBasics: (pkProject) => ActionResultObservable<ProProject>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProProjectActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'project'))\n\n    this.loadOfAccount = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProProjectActionFactory.OF_ACCOUNT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProProject>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    this.loadBasics = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProProjectActionFactory.LOAD_BASICS,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProProject>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    return this;\n  }\n}\n\nexport interface MarkStatementAsFavoriteActionMeta {\n  addPending: string,\n  pk: number\n  pkStatement: number\n  isOutgoing: boolean\n}\nexport class ProInfoProjRelActionFactory extends SchemaActionsFactory<Payload, ProInfoProjRel> {\n\n  // Suffixes of load action types\n  static readonly MARK_ROLE_AS_FAVORITE = 'MARK_ROLE_AS_FAVORITE';\n\n  markStatementAsFavorite: (pkProject: number, pkStatement: number, isOutgoing: boolean) => ActionResultObservable<ProInfoProjRel>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProInfoProjRelActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'info_proj_rel'))\n\n    this.markStatementAsFavorite = (pkProject: number, pkStatement: number, isOutgoing: boolean) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, MarkStatementAsFavoriteActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProInfoProjRelActionFactory.MARK_ROLE_AS_FAVORITE,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkStatement: pkStatement,\n          isOutgoing\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProInfoProjRel>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\nexport class ProDfhClassProjRelActionFactory extends SchemaActionsFactory<Payload, ProDfhClassProjRel> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<ProDfhClassProjRel>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProDfhClassProjRelActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'dfh_class_proj_rel'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProDfhClassProjRelActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProDfhClassProjRel>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\nexport class ProDfhProfileProjRelActionFactory extends SchemaActionsFactory<Payload, ProDfhProfileProjRel> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<ProDfhProfileProjRel>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProDfhProfileProjRelActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'dfh_profile_proj_rel'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProDfhProfileProjRelActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProDfhProfileProjRel>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\nexport class ProClassFieldConfigActionFactory extends SchemaActionsFactory<Payload, ProClassFieldConfig> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<ProClassFieldConfig>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProClassFieldConfigActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'class_field_config'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProClassFieldConfigActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProClassFieldConfig>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\nexport class ProTextPropertyActionFactory extends SchemaActionsFactory<Payload, ProTextProperty> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<ProTextProperty>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProTextPropertyActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'text_property'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProTextPropertyActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProTextProperty>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\nexport class ProAnalysisActionFactory extends SchemaActionsFactory<ProAnalysisSlice, ProAnalysis> {\n\n  // Suffixes of load action types\n  static readonly BY_PK_AND_VERSION = 'BY_PK_AND_VERSION';\n\n  loadByIdAndVersion: (pkProject: number, pkEntity: number, version: number) => ActionResultObservable<ProAnalysis>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProAnalysisActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'analysis'))\n\n    this.loadByIdAndVersion = (pkProject: number, pkEntity: number, version: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadByPkAndVersionActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProAnalysisActionFactory.BY_PK_AND_VERSION,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkEntity,\n          version\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProAnalysis>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProActions {\n  project = new ProProjectActionFactory(this.ngRedux).createActions()\n  info_proj_rel = new ProInfoProjRelActionFactory(this.ngRedux).createActions()\n  text_property = new ProTextPropertyActionFactory(this.ngRedux).createActions()\n  dfh_class_proj_rel = new ProDfhClassProjRelActionFactory(this.ngRedux).createActions()\n  dfh_profile_proj_rel = new ProDfhProfileProjRelActionFactory(this.ngRedux).createActions()\n  class_field_config = new ProClassFieldConfigActionFactory(this.ngRedux).createActions()\n  analysis = new ProAnalysisActionFactory(this.ngRedux).createActions()\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","import { ReducerConfigCollection } from '../_helpers/reducer-factory';\nimport { SysSystemRelevantClass } from '@kleiolab/lib-sdk-lb3';\n\nexport const sysRoot = 'sys';\n\nexport const sysDefinitions: ReducerConfigCollection = {\n  system_relevant_class: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_class',\n        groupByFn: (d: SysSystemRelevantClass): string => d.fk_class.toString()\n      },\n      {\n        keyInStore: 'required_by_sources',\n        groupByFn: (d: SysSystemRelevantClass): string => d.required_by_sources.toString()\n      },\n      {\n        keyInStore: 'required',\n        groupByFn: (d: SysSystemRelevantClass): string => (d.required_by_sources || d.required_by_entities || d.required_by_basics) ? 'true' : 'false'\n      }\n    ]\n  },\n  config: {\n    indexBy: {\n      keyInStore: 'main',\n      indexByFn: () => 'main'\n    }\n  }\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { SysSystemRelevantClass } from '@kleiolab/lib-sdk-lb3';\nimport { SysConfigValue } from '@kleiolab/lib-sdk-lb4';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { IAppState } from '../../root/models/model';\nimport { Sys } from '../models/sys.models';\nimport { sysRoot } from '../reducer-configs/sys.config';\nimport { SchemaActionsFactory } from '../_helpers/schema-actions-factory';\n\ntype Payload = Sys;\ninterface MetaData {\n  systemRelevantClasses?: SysSystemRelevantClass[]\n};\nexport type SysAction = FluxStandardAction<Payload, MetaData>;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SysActions {\n\n  system_relevant_class = new SchemaActionsFactory<Payload, SysSystemRelevantClass>\n    (this.ngRedux).createCrudActions(sysRoot, 'system_relevant_class');\n\n  // analysis_type = new StandardActionsFactory<Payload, SysAnalysisType>\n  //   (this.ngRedux).createCrudActions(sysRoot, 'analysis_type');\n\n\n  config = new SchemaActionsFactory<Payload, SysConfigValue>\n    (this.ngRedux).createCrudActions(sysRoot, 'config');\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","import { ReducerConfigCollection } from '../_helpers/reducer-factory';\nimport { TabCell } from '@kleiolab/lib-sdk-lb4';\n\nexport const tabRoot = 'tab';\n\nexport const tabDefinitions: ReducerConfigCollection = {\n  cell: {\n    indexBy: {\n      keyInStore: 'pk_cell',\n      indexByFn: (item: TabCell) => item.pk_cell.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_column_fk_row',\n        groupByFn: (item: TabCell): string => item.fk_column + '_' + item.fk_row\n      }\n    ]\n  }\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { TabCell } from '@kleiolab/lib-sdk-lb4';\nimport { IAppState } from '../../root/models/model';\nimport { TabCellSlice } from '../models/tab.models';\nimport { tabRoot } from '../reducer-configs/tab.config';\nimport { SchemaActionsFactory } from '../_helpers/schema-actions-factory';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TabActions {\n\n  cell = new SchemaActionsFactory<TabCellSlice, TabCell>(this.ngRedux).createCrudActions(tabRoot, 'cell')\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","import { ReducerConfigCollection } from '../_helpers/reducer-factory';\nimport { WarEntityPreview } from '@kleiolab/lib-sdk-lb4';\n\nexport const warRoot = 'war';\n\nexport const warDefinitions: ReducerConfigCollection = {\n  entity_preview: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item: WarEntityPreview) => item.pk_entity.toString()\n    }\n  }\n}\n","\nimport { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { WarEntityPreview } from '@kleiolab/lib-sdk-lb4';\nimport { IAppState } from '../../root/models/model';\nimport { WarEntityPreviewSlice } from '../models/war.models';\nimport { warRoot } from '../reducer-configs/war.config';\nimport { SchemaActionsFactory } from '../_helpers/schema-actions-factory';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WarActions {\n  entity_preview = new SchemaActionsFactory<WarEntityPreviewSlice, WarEntityPreview>(this.ngRedux).createCrudActions(warRoot, 'entity_preview')\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaObjectApi } from '@kleiolab/lib-sdk-lb3';\nimport { GvSchemaObject } from '@kleiolab/lib-sdk-lb4';\nimport { Observable, Subject } from 'rxjs';\nimport { SchemaObject } from '../../root/models/model';\nimport { NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\nimport { DatActions } from '../actions/dat.actions';\nimport { DfhActions } from '../actions/dfh.actions';\nimport { InfActions } from '../actions/inf.actions';\nimport { ProActions } from '../actions/pro.actions';\nimport { SysActions } from '../actions/sys.actions';\nimport { TabActions } from '../actions/tab.actions';\nimport { WarActions } from '../actions/war.actions';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Class to put schema objects into store\n */\nexport class SchemaService {\n\n  constructor(\n    public api: SchemaObjectApi,\n    public infActions: InfActions,\n    public proActions: ProActions,\n    public datActions: DatActions,\n    public warActions: WarActions,\n    public tabActions: TabActions,\n    public dfhActions: DfhActions,\n    public sysActions: SysActions,\n    public notifications: NotificationsAPIActions,\n  ) { }\n\n\n  /**\n   * watches an Observable<SchemaObject>\n   * on success stores the parts of the object at right place of store\n   * on error emits error message\n   *\n   * @param apiCall$\n   * @param pkProject primary key of project or 'ofRepo', if repo versions\n   */\n  store(apiCall$: Observable<SchemaObject>, pkProject: number | 'ofRepo'): Observable<SchemaObject> {\n\n\n    const s$ = new Subject<SchemaObject>()\n    apiCall$.subscribe(\n      result => {\n        this.storeSchemaObject(result, pkProject === 'ofRepo' ? null : pkProject)\n        s$.next(result)\n      },\n      error => {\n        this.notifications.addToast({\n          type: 'error',\n          options: { title: error.message }\n        })\n        s$.error(error)\n      }\n    )\n    return s$\n  }\n\n  /**\n   * watches an Observable<SchemaObject>\n   * on success stores the parts of the object at right place of store\n   * on error emits error message\n   *\n   * @param apiCall$\n   * @param pkProject primary key of project or 'ofRepo', if repo versions\n   */\n  storeGv(apiCall$: Observable<GvSchemaObject>, pkProject: number | 'ofRepo'): Observable<GvSchemaObject> {\n\n    const s$ = new Subject<GvSchemaObject>()\n    apiCall$.subscribe(\n      result => {\n        this.storeSchemaObjectGv(result, pkProject === 'ofRepo' ? null : pkProject)\n        s$.next(result)\n      },\n      error => {\n        this.notifications.addToast({\n          type: 'error',\n          options: { title: error.message }\n        })\n        s$.error(error)\n      }\n    )\n    return s$\n  }\n\n  /**\n   *\n   * @param object\n   * @param pkProject primary key of project or null, if repo versions\n   */\n  storeSchemaObject(object: SchemaObject, pkProject: number | null) {\n    if (object && Object.keys(object).length > 0) {\n      Object.keys(object).forEach(schema => {\n        let actions;\n        if (schema === 'inf') actions = this.infActions;\n        else if (schema === 'pro') actions = this.proActions;\n        else if (schema === 'dat') actions = this.datActions;\n        else if (schema === 'war') actions = this.warActions;\n        if (actions) {\n          Object.keys(object[schema]).forEach(model => {\n            actions[model].loadSucceeded(object[schema][model], undefined, pkProject);\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   *\n   * @param object\n   * @param pkProject primary key of project or null, if repo versions\n   */\n  storeSchemaObjectGv(object: GvSchemaObject, pkProject: number | null) {\n    if (object && Object.keys(object).length > 0) {\n      Object.keys(object).forEach(schema => {\n        let actions;\n        if (schema === 'inf') actions = this.infActions;\n        else if (schema === 'pro') actions = this.proActions;\n        else if (schema === 'dat') actions = this.datActions;\n        else if (schema === 'war') actions = this.warActions;\n        else if (schema === 'tab') actions = this.tabActions;\n        else if (schema === 'dfh') actions = this.dfhActions;\n        else if (schema === 'sys') actions = this.sysActions;\n        if (actions) {\n          Object.keys(object[schema]).forEach(model => {\n            actions[model].loadSucceeded(object[schema][model], undefined, pkProject);\n          });\n        }\n      });\n      // this.extendEntityPreviewStream(object, pkProject);\n      console.warn('!!!!!!!! Need to call this.extendEntityPreviewStream(object, pkProject);')\n    }\n  }\n\n\n  // /**\n  //  * Adds the entity previews to the streamed entity previews (for ws communication)\n  //  * @param object\n  //  * @param pkProject\n  //  */\n  // private extendEntityPreviewStream(object: GvSchemaObject, pkProject: number) {\n  //   if (object && object.war && object.war.entity_preview && object.war.entity_preview.length) {\n  //     this.entityPreviewSocket.emit('extendStream', {\n  //       pkProject,\n  //       pks: object.war.entity_preview.map(p => p.pk_entity)\n  //     });\n  //   }\n  // }\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { SysConfig } from '@kleiolab/lib-config';\nimport { ProProject, ProProjectApi, ProTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { omit } from 'ramda';\nimport { Action } from 'redux';\nimport { combineEpics, Epic, ofType } from 'redux-observable-es6-compat';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, mapTo, mergeMap, switchMap } from 'rxjs/operators';\nimport { IAppState } from '../../root/models/model';\nimport { ActiveProjectAction, ActiveProjectActions } from '../../state-gui/actions/active-project.action';\nimport { LoadingBarActions } from '../../state-gui/actions/loading-bar.actions';\nimport { NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\nimport { DatActions } from '../../state-schema/actions/dat.actions';\nimport { DfhActions } from '../../state-schema/actions/dfh.actions';\nimport { InfActions } from '../../state-schema/actions/inf.actions';\nimport { ProActions } from '../../state-schema/actions/pro.actions';\nimport { SysActions } from '../../state-schema/actions/sys.actions';\nimport { SchemaService } from '../../state-schema/services/schema.service';\nimport { ProjectPreview } from '../models/active-project.models';\n\nfunction firstProTextPropStringOfType(textProperties: ProTextProperty[], fkSystemType): string {\n  return (textProperties.find(t => t.fk_system_type === fkSystemType) || { string: '' }).string\n}\n/**\n * Transform ProProject to ProjectPreview\n */\nfunction proProjectToProjectPreview(project: ProProject): ProjectPreview {\n  return {\n    label: firstProTextPropStringOfType(project.text_properties, SysConfig.PK_SYSTEM_TYPE__TEXT_PROPERTY__LABEL),\n    description: firstProTextPropStringOfType(project.text_properties, SysConfig.PK_SYSTEM_TYPE__TEXT_PROPERTY__DESCRIPTION),\n    default_language: project.default_language,\n    pk_project: project.pk_entity\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActiveProjectEpics {\n  constructor(\n    private sys: SysActions,\n    private dat: DatActions,\n    private dfh: DfhActions,\n    private pro: ProActions,\n    private inf: InfActions,\n    private projectApi: ProProjectApi,\n    private actions: ActiveProjectActions,\n    private notificationActions: NotificationsAPIActions,\n    private loadingBarActions: LoadingBarActions,\n    private ngRedux: NgRedux<IAppState>,\n    private schemaObj: SchemaService\n  ) { }\n\n  public createEpics(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return combineEpics(\n      this.createLoadProjectBasicsEpic(),\n      this.createLoadProjectConfigEpic(),\n      this.createLoadProjectUpdatedEpic(),\n      this.createClosePanelEpic(),\n      this.createActivateTabFocusPanelEpic(),\n      this.createMoveTabFocusPanelEpic(),\n      this.createClosePanelFocusPanelEpic(),\n      this.createSplitPanelActivateTabEpic(),\n      this.createAddTabCloseListEpic(),\n    );\n  }\n\n  /**\n   * This epic listenes to an action that wants to load tha active project (by id)\n   * It loads the project info and\n   * - on loaded dispaches an action that reduces the project into the store\n   * - on fail dispaches an action that shows an error notification\n   */\n  private createLoadProjectBasicsEpic(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return (action$, store) => action$.pipe(\n\n      ofType(ActiveProjectActions.LOAD_PROJECT_BASICS),\n      switchMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n        /**\n       * Emit the global action that activates the loading bar\n       */\n        globalStore.next(this.loadingBarActions.startLoading());\n\n        this.projectApi.getBasics(action.meta.pk_project)\n          .subscribe(\n            (data: ProProject[]) => {\n              globalStore.next(this.actions.loadProjectBasiscsSucceded(proProjectToProjectPreview(data[0])))\n              this.schemaObj.storeSchemaObject({\n                inf: { language: [data[0].default_language] },\n                pro: { project: [omit(['default_language'], data[0])] }\n              }, action.meta.pk_project)\n            },\n            error => {\n              globalStore.next(this.notificationActions.addToast({\n                type: 'error',\n                options: { title: error.message }\n              }))\n            })\n      }))\n\n    )\n  }\n\n  /**\n  * This epic listenes to an action that is dispached when loading projcect succeeded\n  *\n  * It dispaches an action that completes the loading bar\n  */\n  private createLoadProjectUpdatedEpic(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return (action$, store) => action$.pipe(\n      ofType(ActiveProjectActions.LOAD_PROJECT_BASICS_SUCCEEDED),\n      mapTo(this.loadingBarActions.completeLoading())\n    )\n  }\n\n  private createLoadProjectConfigEpic(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return (action$, store) => action$.pipe(\n\n      ofType(ActiveProjectActions.LOAD_PROJECT_CONFIG),\n      switchMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n        globalStore.next(this.loadingBarActions.startLoading());\n\n        combineLatest(\n          this.dfh.profile.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n\n          this.dfh.klass.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n          this.dfh.property.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n          this.dfh.label.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n\n          this.sys.system_relevant_class.load().resolved$.pipe(filter(x => !!x)),\n          this.sys.config.load().resolved$.pipe(filter(x => !!x)),\n          this.dat.namespace.load('', action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n\n          this.pro.text_property.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n          this.pro.dfh_class_proj_rel.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n          this.pro.dfh_profile_proj_rel.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n          this.pro.class_field_config.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n\n          this.inf.persistent_item.typesOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x))\n        )\n          .pipe(filter((res: any[]) => !res.includes(undefined)))\n          .subscribe((res) => {\n\n            globalStore.next(this.actions.loadProjectConfigSucceeded());\n            globalStore.next(this.loadingBarActions.completeLoading());\n\n          }, error => {\n            // subStore.dispatch(this.actions.loadFailed({ status: '' + error.status }))\n          });\n\n      }))\n\n    )\n  }\n\n\n  /**\n   * LAYOUT\n   */\n  private createClosePanelEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.CLOSE_TAB, ActiveProjectActions.MOVE_TAB, ActiveProjectActions.SPLIT_PANEL),\n        mergeMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n          this.ngRedux.getState().activeProject.panels.forEach((panel, panelIndex) => {\n            if (panel.tabs.length === 0) globalStore.next(this.actions.closePanel(panelIndex));\n          })\n        }))\n      )\n    }\n  }\n  private createSplitPanelActivateTabEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.SPLIT_PANEL),\n        map((action: ActiveProjectAction) => {\n          const p = this.ngRedux.getState().activeProject;\n          const c = action.meta.currentPanelIndex;\n          const panelIndex = p.panels.length < (c + 1) ? c - 1 : c;\n          return this.actions.activateTab(panelIndex, 0)\n        })\n      )\n    }\n  }\n  private createActivateTabFocusPanelEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.ACTIVATE_TAB),\n        mergeMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n          if (this.ngRedux.getState().activeProject.focusedPanel !== action.meta.panelIndex) {\n            globalStore.next(this.actions.focusPanel(action.meta.panelIndex));\n          }\n        }))\n      )\n    }\n  }\n  private createMoveTabFocusPanelEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.MOVE_TAB),\n        mergeMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n          if (this.ngRedux.getState().activeProject.focusedPanel !== action.meta.currentPanelIndex) {\n            globalStore.next(this.actions.focusPanel(action.meta.currentPanelIndex));\n          }\n        }))\n      )\n    }\n  }\n  private createClosePanelFocusPanelEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.CLOSE_PANEL),\n        mergeMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n          if (this.ngRedux.getState().activeProject.focusedPanel > (this.ngRedux.getState().activeProject.panels.length - 1)) {\n            globalStore.next(this.actions.focusPanel(0));\n          }\n        }))\n      )\n    }\n  }\n  private createAddTabCloseListEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.ADD_TAB),\n        mapTo(this.actions.setListType(''))\n      )\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { SlimLoadingBarService } from '@cime/ngx-slim-loading-bar';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { combineEpics, Epic, ofType } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { LoadingBarActions } from '../../state-gui/actions/loading-bar.actions';\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingBarEpics {\n  constructor(\n    private service: SlimLoadingBarService,\n  ) { }\n\n  public createEpics(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return combineEpics(\n      this.createStartLoadingBarEpic(),\n      this.createCompleteLoadingBarEpic()\n    );\n  }\n\n  private createCompleteLoadingBarEpic(): Epic {\n    return (action$, store) => action$.pipe(\n      ofType(LoadingBarActions.COPMLETE),\n      switchMap(() => {\n        return Observable.create(observer => {\n          this.service.complete()\n          // observer.next(this.actions.stopLoading())\n        })\n      })\n    )\n  }\n\n  private createStartLoadingBarEpic(): Epic {\n    return (action$, store) => action$.pipe(\n      ofType(LoadingBarActions.START),\n      switchMap(() => {\n        return Observable.create(observer => {\n          this.service.start();\n        })\n      })\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ToastyConfig, ToastyService } from '@cime/ngx-toasty';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { combineEpics, Epic, ofType } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { filter, switchMap } from 'rxjs/operators';\nimport { NotificationsAPIAction, NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsAPIEpics {\n  constructor(\n    private toastyService: ToastyService,\n    private toastyConfig: ToastyConfig\n  ) {\n    // Assign the selected theme name to the `theme` property of the instance of ToastyConfig.\n    // Possible values: default, bootstrap, material\n    this.toastyConfig.theme = 'bootstrap';\n  }\n\n  public createEpics(): Epic {\n    return combineEpics(this.createAddToastEpic());\n  }\n\n  private createAddToastEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        /**\n         * Filter the actions that triggers this epic\n         */\n        filter((a) => {\n          return a;\n        }),\n        ofType(NotificationsAPIActions.ADD_TOAST),\n        switchMap((action) => new Observable<FluxStandardAction<any>>((observer) => {\n          /**\n           * Add Toast\n           */\n          const a = action as NotificationsAPIAction;\n          if (!a.payload.options.title && !a.payload.options.msg) {\n            if (a.payload.type === 'error') {\n              a.payload.options.title = 'Oops, something went wrong!'\n            }\n          }\n          this.toastyService[a.payload.type](a.payload.options);\n\n        })),\n      )\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActionsObservable, combineEpics, Epic } from 'redux-observable-es6-compat';\nimport { of } from 'rxjs';\nimport { filter, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionResolverEpics {\n\n  // requestMap: { [uuid: string]: ActionResultObservable<any> } = {};\n\n  constructor() { }\n\n  createEpics = () => combineEpics(this.createResolveEpic());\n  private createResolveEpic(): Epic {\n    return (action$: ActionsObservable<any>, store) => action$.pipe(\n      filter(action => !!action && !!action.meta && !!action.meta.removePending),\n\n      switchMap(action => (of({ type: 'CLEAN_UP_RESOLVED', meta: { uuid: action.meta.removePending } }))),\n    )\n  }\n\n\n\n}\n","import { DatChunk, DatDigital, InfAppellation, InfDimension, InfLangString, InfLanguage, InfPersistentItem, InfPlace, InfStatement, InfTemporalEntity, InfTextProperty, InfTimePrimitive, ProClassFieldConfig, ProDfhClassProjRel, ProDfhProfileProjRel, ProInfoProjRel, ProProject, ProTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { ProAnalysis } from '@kleiolab/lib-sdk-lb4';\nimport { keys, omit, values } from 'ramda';\nimport { DatActions } from '../actions/dat.actions';\nimport { InfActions } from '../actions/inf.actions';\nimport { ProActions } from '../actions/pro.actions';\nimport { ChunkSlice, DigitalSlice } from '../models/dat.models';\nimport { InfAppellationSlice, InfDimensionSlice, InfLangStringSlice, InfLanguageSlice, InfPersistentItemSlice, InfPlaceSlice, InfTextPropertySlice, InfTimePrimitiveSlice } from '../models/inf.models';\nimport { ProAnalysisSlice, ProClassFieldConfigSlice, ProDfhClassProjRelSlice, ProDfhProfileProjRelSlice, ProInfoProjRelSlice, ProProjectSlice, ProTextPropertySlice } from '../models/pro.models';\nimport { SchemaActionsFactory } from './schema-actions-factory';\n\nclass ModelFlattener<Payload, Model> {\n  items: Model[]\n  constructor(\n    public actions: SchemaActionsFactory<Payload, Model>,\n    public modelDefinition: any,\n    public flattenCb: (items: Model[]) => void,\n  ) { }\n\n  flatten(items: Model[]) {\n    if (items && items.length > 0) {\n\n      this.flattenCb(items);\n      // todo remove properties of those objects, using getModelDefinition()\n      const keysToOmit = keys(this.modelDefinition.relations).map(item => item.toString())\n      this.items = [\n        ...(this.items || []),\n        ...items.filter(item => !!item && Object.keys(item).length > 0)\n          .map(item => omit(keysToOmit, item)) as Model[]\n      ]\n    }\n    return true;\n  }\n\n}\n\ninterface FlattenerInterface {\n  [key: string]: ModelFlattener<any, any>\n}\n\n/**\n * Flattener is the class used to flatten nested objects.\n * Use storeFlattened() to call all actions to put the\n * flattened items into the store.\n */\nexport class Flattener {\n\n\n\n  info_proj_rel = new ModelFlattener<ProInfoProjRelSlice, ProInfoProjRel>(\n    this.proActions.info_proj_rel,\n    ProInfoProjRel.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new ProInfoProjRel(item);\n      })\n    })\n\n  pro_dfh_class_proj_rel = new ModelFlattener<ProDfhClassProjRelSlice, ProDfhClassProjRel>(\n    this.proActions.dfh_class_proj_rel,\n    ProDfhClassProjRel.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new ProDfhClassProjRel(item);\n      })\n    })\n\n  pro_dfh_profile_proj_rel = new ModelFlattener<ProDfhProfileProjRelSlice, ProDfhProfileProjRel>(\n    this.proActions.dfh_profile_proj_rel,\n    ProDfhProfileProjRel.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new ProDfhProfileProjRel(item);\n      })\n    })\n\n\n  persistent_item = new ModelFlattener<InfPersistentItemSlice, InfPersistentItem>(\n    this.infActions.persistent_item,\n    InfPersistentItem.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfPersistentItem(item);\n        this.statement.flatten(item.incoming_statements)\n        this.statement.flatten(item.outgoing_statements)\n        this.text_property.flatten(item.text_properties)\n        this.info_proj_rel.flatten(item.entity_version_project_rels)\n      })\n    })\n\n  temporal_entity = new ModelFlattener<InfPersistentItemSlice, InfTemporalEntity>(\n    this.infActions.temporal_entity,\n    InfTemporalEntity.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfTemporalEntity(item);\n        this.statement.flatten(item.outgoing_statements)\n        this.statement.flatten(item.incoming_statements)\n        this.text_property.flatten(item.text_properties)\n        this.info_proj_rel.flatten(item.entity_version_project_rels)\n      })\n    })\n\n\n  statement = new ModelFlattener<InfPersistentItemSlice, InfStatement>(\n    this.infActions.statement,\n    InfStatement.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfStatement(item);\n        this.info_proj_rel.flatten(item.entity_version_project_rels)\n\n        // Subject\n        if (item.subject_temporal_entity) this.temporal_entity.flatten([item.subject_temporal_entity])\n        else if (item.subject_statement) this.statement.flatten([item.subject_statement])\n\n        // Object\n        if (item.object_persistent_item) this.persistent_item.flatten([item.object_persistent_item])\n        else if (item.object_appellation) this.appellation.flatten([item.object_appellation])\n        else if (item.object_place) this.place.flatten([item.object_place])\n        else if (item.object_time_primitive) this.time_primitive.flatten([item.object_time_primitive])\n        else if (item.object_language) this.language.flatten([item.object_language])\n        else if (item.subject_chunk) this.chunk.flatten([item.subject_chunk])\n        else if (item.object_lang_string) this.lang_string.flatten([item.object_lang_string])\n        else if (item.object_dimension) this.dimension.flatten([item.object_dimension])\n      })\n    })\n\n  appellation = new ModelFlattener<InfAppellationSlice, InfAppellation>(\n    this.infActions.appellation,\n    InfAppellation.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfAppellation(item);\n      })\n    })\n\n\n  place = new ModelFlattener<InfPlaceSlice, InfPlace>(\n    this.infActions.place,\n    InfPlace.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfPlace(item);\n      })\n    })\n\n  time_primitive = new ModelFlattener<InfTimePrimitiveSlice, InfTimePrimitive>(\n    this.infActions.time_primitive,\n    InfTimePrimitive.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfTimePrimitive(item);\n      })\n    })\n\n  language = new ModelFlattener<InfLanguageSlice, InfLanguage>(\n    this.infActions.language,\n    InfLanguage.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfLanguage(item);\n      })\n    })\n\n  lang_string = new ModelFlattener<InfLangStringSlice, InfLangString>(\n    this.infActions.lang_string,\n    InfLangString.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfLangString(item);\n        this.language.flatten([item.language])\n        this.info_proj_rel.flatten(item.entity_version_project_rels)\n      })\n    })\n\n  dimension = new ModelFlattener<InfDimensionSlice, InfDimension>(\n    this.infActions.dimension,\n    InfDimension.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfDimension(item);\n        this.info_proj_rel.flatten(item.entity_version_project_rels)\n      })\n    })\n\n  text_property = new ModelFlattener<InfTextPropertySlice, InfTextProperty>(\n    this.infActions.text_property,\n    InfTextProperty.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfTextProperty(item);\n        this.language.flatten([item.language])\n        this.info_proj_rel.flatten(item.entity_version_project_rels)\n      })\n    })\n\n  digital = new ModelFlattener<DigitalSlice, DatDigital>(\n    this.datActions.digital,\n    DatDigital.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new DatDigital(item);\n      })\n    })\n\n  chunk = new ModelFlattener<ChunkSlice, DatChunk>(\n    this.datActions.chunk,\n    DatChunk.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new DatChunk(item);\n        this.statement.flatten(item.outgoing_statements)\n      })\n    })\n\n  pro_project = new ModelFlattener<ProProjectSlice, ProProject>(\n    this.proActions.project,\n    ProProject.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new ProProject(item);\n        this.language.flatten([item.default_language])\n      })\n    })\n\n  pro_text_property = new ModelFlattener<ProTextPropertySlice, ProTextProperty>(\n    this.proActions.text_property,\n    ProTextProperty.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new ProTextProperty(item);\n        this.language.flatten([item.language])\n      })\n    })\n\n\n  pro_class_field_config = new ModelFlattener<ProClassFieldConfigSlice, ProClassFieldConfig>(\n    this.proActions.class_field_config,\n    ProClassFieldConfig.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new ProClassFieldConfig(item);\n      })\n    })\n\n\n  analysis = new ModelFlattener<ProAnalysisSlice, ProAnalysis>(\n    this.proActions.analysis,\n    { relations: [] },\n    (items) => {\n      items.forEach(item => { })\n    })\n  constructor(\n    public infActions: InfActions,\n    public datActions: DatActions,\n    public proActions: ProActions\n  ) { }\n  getFlattened(): FlattenerInterface {\n    return {\n      pro_project: this.pro_project,\n      pro_text_property: this.pro_text_property,\n      pro_class_field_config: this.pro_class_field_config,\n      pro_dfh_profile_proj_rel: this.pro_dfh_profile_proj_rel,\n      pro_dfh_class_proj_rel: this.pro_dfh_class_proj_rel,\n\n      info_proj_rel: this.info_proj_rel,\n      analysis: this.analysis,\n\n      persistent_item: this.persistent_item,\n      temporal_entity: this.temporal_entity,\n      statement: this.statement,\n      appellation: this.appellation,\n      place: this.place,\n      time_primitive: this.time_primitive,\n      language: this.language,\n      text_property: this.text_property,\n      lang_string: this.lang_string,\n      dimension: this.dimension,\n\n      digital: this.digital,\n      chunk: this.chunk,\n    }\n  }\n}\n\nexport const storeFlattened = (flattened: FlattenerInterface, pk?, type?: 'LOAD' | 'UPSERT') => {\n  values(flattened).forEach(model => {\n    if (model.items) {\n      if (type === 'UPSERT') {\n        model.actions.upsertSucceeded(model.items, undefined, pk)\n      } else {\n        model.actions.loadSucceeded(model.items, undefined, pk)\n      }\n    }\n  })\n}\n","import { FluxStandardAction } from 'flux-standard-action';\nimport { Action } from 'redux';\nimport { ofType } from 'redux-observable-es6-compat';\nimport { Observable, Subscriber } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\nimport { FluxActionObservable, LoadActionMeta, ModifyActionMeta, SchemaActionsFactory } from './schema-actions-factory';\n\nexport class SchemaEpicsFactory<Payload, Model> {\n  constructor(\n    public actionPrefix: string,\n    public modelName: string,\n    public actions: SchemaActionsFactory<Payload, Model>,\n    public notifications: NotificationsAPIActions) { }\n\n\n  createLoadEpic<T>(apiFn: (meta: T) => Observable<Model[]>, actionSuffix: string, onSuccessHook?: (data: Model[], pk?, initialMeta?: T) => void) {\n    return (action$: FluxActionObservable<Payload, LoadActionMeta>, store) => {\n      return action$.pipe(\n        ofType(this.type('LOAD', actionSuffix)),\n        mergeMap((action) => new Observable<Action>((globalActions) => {\n          const pendingKey = action.meta.addPending;\n          const meta = action.meta as any as T;\n          apiFn(meta).subscribe((data: Model[]) => {\n            if (onSuccessHook) {\n              onSuccessHook(data, action.meta.pk, meta);\n              this.actions.succeeded(data, pendingKey, action.meta.pk);\n            }\n            else {\n              this.actions.loadSucceeded(data, pendingKey, action.meta.pk);\n            }\n          }, error => {\n            this.onError(globalActions, error, pendingKey, action.meta.pk)\n          });\n        })));\n    };\n  }\n  createUpsertEpic<T>(apiFn: (meta: T) => Observable<Model[]>, onSuccessHook?: (data: Model[], pk?) => void) {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(this.actionPrefix + '.' + this.modelName + '::UPSERT'),\n        mergeMap((action: FluxStandardAction<Payload, ModifyActionMeta<Model>>) => new Observable<Action>((globalActions) => {\n          const pendingKey = action.meta.addPending;\n          const meta = action.meta as any as T;\n          apiFn(meta).subscribe((data: Model[]) => {\n            if (onSuccessHook) {\n              onSuccessHook(data, action.meta.pk);\n              this.actions.succeeded(data, pendingKey, action.meta.pk);\n            }\n            else {\n              this.actions.upsertSucceeded(data, pendingKey, action.meta.pk);\n            }\n          }, error => {\n            this.onError(globalActions, error, pendingKey, action.meta.pk)\n          });\n        })));\n    };\n  }\n  createDeleteEpic(apiFn: (meta: ModifyActionMeta<Model>) => Observable<Model[]>) {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(this.actionPrefix + '.' + this.modelName + '::DELETE'),\n        mergeMap((action: FluxStandardAction<Payload, ModifyActionMeta<Model>>) => new Observable<Action>((globalActions) => {\n          const pendingKey = action.meta.addPending;\n          apiFn(action.meta).subscribe((data: Model[]) => {\n            this.actions.deleteSucceeded(action.meta.items, pendingKey, action.meta.pk);\n          }, error => {\n            this.onError(globalActions, error, pendingKey, action.meta.pk)\n          });\n        })));\n    };\n  }\n\n  /**\n   * Create the string used as action.type\n   */\n  type(operation: 'LOAD' | 'UPSERT' | 'Â DELETE', actionSuffix: string): string {\n    return this.actionPrefix + '.' + this.modelName + '::' + operation + (actionSuffix ? '::' + actionSuffix : '')\n  }\n\n  /**\n  * Create the onError logic for standard actions\n  * @param globalActions pass in the subscriber to the action$ stream\n  */\n  onError(globalActions: Subscriber<Action>, error, pendingKey, pkProject) {\n    globalActions.next(this.notifications.addToast({\n      type: 'error',\n      options: { title: error.message }\n    }));\n    this.actions.failed({ status: '' + error.status }, pendingKey, pkProject);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DatChunk, DatChunkApi, DatColumn, DatColumnApi, DatDigital, DatDigitalApi, DatNamespace, DatNamespaceApi, SchemaObject } from '@kleiolab/lib-sdk-lb3';\nimport { combineEpics, Epic } from 'redux-observable-es6-compat';\nimport { NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\nimport { ChunkActionsFactory, ColumnActionsFactory, DatActions, DigitalActionsFactory, LoadChunksOfDigitalAction, LoadColumnsOfTableAction } from '../actions/dat.actions';\nimport { InfActions } from '../actions/inf.actions';\nimport { ProActions } from '../actions/pro.actions';\nimport { ChunkSlice, ColumnSlice, DigitalSlice, NamespaceSlice } from '../models/dat.models';\nimport { datRoot } from '../reducer-configs/dat.config';\nimport { SchemaService } from '../services/schema.service';\nimport { Flattener, storeFlattened } from '../_helpers/flattener';\nimport { LoadActionMeta, LoadVersionAction, ModifyActionMeta } from '../_helpers/schema-actions-factory';\nimport { SchemaEpicsFactory } from '../_helpers/schema-epics-factory';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatEpics {\n  constructor(\n    public notification: NotificationsAPIActions,\n    public datActions: DatActions,\n    public infActions: InfActions,\n    public proActions: ProActions,\n    public digitalApi: DatDigitalApi,\n    public chunkApi: DatChunkApi,\n    public columnApi: DatColumnApi,\n    public namespaceApi: DatNamespaceApi,\n    private schemaObjectService: SchemaService\n  ) { }\n\n  public createEpics(): Epic {\n    const digitalEpicsFactory = new SchemaEpicsFactory<DigitalSlice, DatDigital>\n      (datRoot, 'digital', this.datActions.digital, this.notification);\n\n    const chunkEpicsFactory = new SchemaEpicsFactory<ChunkSlice, DatChunk>\n      (datRoot, 'chunk', this.datActions.chunk, this.notification);\n\n    const namespaceEpicsFactory = new SchemaEpicsFactory<NamespaceSlice, DatNamespace>\n      (datRoot, 'namespace', this.datActions.namespace, this.notification);\n\n    const columnEpicsFactory = new SchemaEpicsFactory<ColumnSlice, DatColumn>\n      (datRoot, 'column', this.datActions.column, this.notification);\n\n    return combineEpics(\n\n      // Digital\n      digitalEpicsFactory.createLoadEpic<LoadVersionAction>(\n        (meta) => this.digitalApi.getVersion(meta.pkEntity, meta.entityVersion ? meta.entityVersion : null),\n        DigitalActionsFactory.LOAD_VERSION\n      ),\n      digitalEpicsFactory.createUpsertEpic<ModifyActionMeta<DatDigital>>(\n        (meta) => this.digitalApi.bulkUpsert(meta.pk, meta.items)\n      ),\n      digitalEpicsFactory.createDeleteEpic(\n        (meta) => this.digitalApi.bulkDelete(meta.items.map(item => item.pk_entity))\n      ),\n\n      // Chunk\n      chunkEpicsFactory.createLoadEpic<LoadChunksOfDigitalAction>(\n        (meta) => this.chunkApi.ofDigital(meta.pk, meta.pkDigital),\n        ChunkActionsFactory.CHUNKS_OF_DIGITAL,\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.chunk.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk);\n        }\n      ),\n\n      // Namespace\n      namespaceEpicsFactory.createLoadEpic<LoadActionMeta>(\n        (meta) => this.namespaceApi.byProject(meta.pk), ''\n      ),\n\n      columnEpicsFactory.createLoadEpic<LoadColumnsOfTableAction>(\n        (meta) => this.columnApi.ofDigital(meta.pk, meta.pkDigital),\n        ColumnActionsFactory.COLUMNS_OF_TABLE,\n        (results, pk) => {\n          const schemaObject = results as unknown as SchemaObject;\n\n          this.schemaObjectService.storeSchemaObject(schemaObject, pk)\n        }\n      ),\n\n    )\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { DfhLabel, DfhLabelApi, DfhProfile, DfhProfileApi } from '@kleiolab/lib-sdk-lb3';\nimport { DfhClass, DfhClassControllerService, DfhProperty, DfhPropertyControllerService } from '@kleiolab/lib-sdk-lb4';\nimport { combineEpics, Epic } from 'redux-observable-es6-compat';\nimport { NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\nimport { DfhActions, DfhClassActionFactory, DfhLabelActionFactory, DfhProfileActionFactory, DfhPropertyActionFactory } from '../actions/dfh.actions';\nimport { DfhClassSlice, DfhLabelSlice, DfhProfileSlice, DfhPropertySlice } from '../models/dfh.models';\nimport { LoadActionMeta } from '../_helpers/schema-actions-factory';\nimport { SchemaEpicsFactory } from '../_helpers/schema-epics-factory';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DfhEpics {\n  constructor(\n    private actions: DfhActions,\n    private notification: NotificationsAPIActions,\n    private profileApi: DfhProfileApi,\n    private classApi: DfhClassControllerService,\n    private propertyApi: DfhPropertyControllerService,\n    private labelApi: DfhLabelApi,\n  ) { }\n\n  public createEpics(): Epic {\n    const dfhProfileEpicsFactory = new SchemaEpicsFactory<DfhProfileSlice, DfhProfile>('dfh', 'profile', this.actions.profile, this.notification);\n    const dfhClassEpicsFactory = new SchemaEpicsFactory<DfhClassSlice, DfhClass>('dfh', 'klass', this.actions.klass, this.notification);\n    const dfhLabelEpicsFactory = new SchemaEpicsFactory<DfhLabelSlice, DfhLabel>('dfh', 'label', this.actions.label, this.notification);\n    const dfhPropertyEpicsFactory = new SchemaEpicsFactory<DfhPropertySlice, DfhProperty>('dfh', 'property', this.actions.property, this.notification);\n\n    return combineEpics(\n      // Profile Loaders\n      dfhProfileEpicsFactory.createLoadEpic<LoadActionMeta>((meta) => this.profileApi.ofProject(meta.pk),\n        DfhProfileActionFactory.OF_PROJECT\n      ),\n      // Property Loaders\n      dfhPropertyEpicsFactory.createLoadEpic<LoadActionMeta>((meta) => this.propertyApi.dfhPropertyControllerOfProject(meta.pk),\n        DfhPropertyActionFactory.OF_PROJECT\n      ),\n      // Class Loaders\n      dfhClassEpicsFactory.createLoadEpic<LoadActionMeta>((meta) => this.classApi.dfhClassControllerOfProject(meta.pk),\n        DfhClassActionFactory.OF_PROJECT\n      ),\n      // Label Loaders\n      dfhLabelEpicsFactory.createLoadEpic<LoadActionMeta>((meta) => this.labelApi.ofProject(meta.pk),\n        DfhLabelActionFactory.OF_PROJECT\n      )\n    )\n\n  }\n\n\n}\n","import { ProInfoProjRel, ProInfoProjRelApi } from '@kleiolab/lib-sdk-lb3';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { pathOr } from 'ramda';\nimport { Action } from 'redux';\nimport { ofType } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { ProActions } from '../actions/pro.actions';\nimport { NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\nimport { InfActionFactory } from './inf-action-factory';\nimport { ModifyActionMeta } from './schema-actions-factory';\nimport { SchemaEpicsFactory } from './schema-epics-factory';\n\nexport class InfEpicsFactory<Payload, Model> extends SchemaEpicsFactory<Payload, Model> {\n  constructor(\n    public actionPrefix: string,\n    public modelName: string,\n    public actions: InfActionFactory<Payload, Model>,\n    public notifications: NotificationsAPIActions,\n    public infoProjRelApi: ProInfoProjRelApi,\n    public proActions: ProActions\n  ) {\n    super(actionPrefix, modelName, actions, notifications)\n  }\n\n  /**\n   * This upsert epic overrides the standard upsert.\n   * In addition to the standard, it extends the items to upsert, so that\n   * they are added to the project.\n   */\n  createUpsertEpic<T>(apiFn: (meta: T) => Observable<Model[]>, onSuccessHook?: (data: Model[], pk?) => void) {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(this.actionPrefix + '.' + this.modelName + '::UPSERT'),\n        mergeMap((action: FluxStandardAction<Payload, ModifyActionMeta<Model>>) => new Observable<Action>((globalActions) => {\n          const pendingKey = action.meta.addPending;\n\n          const meta = action.meta as any;\n          // add is_in_project true\n\n          meta.items = meta.items.map(i => ({\n            ...i, entity_version_project_rels: [{\n              ...pathOr({}, ['entity_version_project_rels', 0], i),\n              is_in_project: true,\n            }]\n          }))\n\n          apiFn(meta).subscribe((data: Model[]) => {\n            if (onSuccessHook) {\n              onSuccessHook(data, action.meta.pk);\n              this.actions.succeeded(data, pendingKey, action.meta.pk);\n            }\n            else {\n              this.actions.upsertSucceeded(data, pendingKey, action.meta.pk);\n            }\n          }, error => {\n            globalActions.next(this.notifications.addToast({\n              type: 'error',\n              options: { title: error.message }\n            }));\n            this.actions.failed({ status: '' + error.status }, pendingKey, action.meta.pk);\n          });\n        })));\n    };\n  }\n\n  /**\n   * This epic maps the items to remove in minimalisic instances of\n   * InfoProjRel, containing only the fk_entity and is_in_project=false.\n   * The pk of the project, that removes the items, is transported in meta.pk.\n   */\n  createRemoveEpic() {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(this.actionPrefix + '.' + this.modelName + '::REMOVE'),\n        mergeMap((action: FluxStandardAction<Payload, ModifyActionMeta<Model>>) => new Observable<Action>((globalActions) => {\n          const pendingKey = action.meta.addPending;\n\n          this.infoProjRelApi.bulkUpdateEprAttributes(\n            action.meta.pk,\n            action.meta.items.map((item: any) => ({\n              fk_entity: item.pk_entity,\n              is_in_project: false\n            }))\n          )\n            .subscribe((infoProjRels: ProInfoProjRel[]) => {\n              if (infoProjRels.length) {\n                this.proActions.info_proj_rel.upsertSucceeded(infoProjRels, undefined, action.meta.pk)\n              }\n              this.actions.removeSucceeded(action.meta.items, pendingKey, action.meta.pk)\n            }, error => {\n              globalActions.next(this.notifications.addToast({\n                type: 'error',\n                options: { title: error.message }\n              }));\n              this.actions.failed({ status: '' + error.status }, pendingKey, action.meta.pk)\n            })\n        }))\n\n      )\n    }\n  }\n\n\n\n  /**\n   * This upsert epic overrides the standard upsert.\n   * In addition to the standard, it extends the items to upsert, so that\n   * they are added to the project.\n   */\n  createCustomUpsertEpic<T>(apiFn: (meta: T) => Observable<Model[]>, actionSuffix: string, onSuccessHook?: (data: Model[], pk?) => void) {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(this.actionPrefix + '.' + this.modelName + '::UPSERT' + (actionSuffix ? '::' + actionSuffix : '')),\n        mergeMap((action: FluxStandardAction<Payload, ModifyActionMeta<Model>>) => new Observable<Action>((globalActions) => {\n          const pendingKey = action.meta.addPending;\n          const meta = action.meta as any;\n          apiFn(meta).subscribe((data: Model[]) => {\n            if (onSuccessHook) {\n              onSuccessHook(data, action.meta.pk);\n              this.actions.upsertSucceeded([], pendingKey, action.meta.pk);\n            }\n            else {\n              this.actions.upsertSucceeded(data, pendingKey, action.meta.pk);\n            }\n          }, error => {\n            globalActions.next(this.notifications.addToast({\n              type: 'error',\n              options: { title: error.message }\n            }));\n            this.actions.failed({ status: '' + error.status }, pendingKey, action.meta.pk);\n          });\n        })));\n    };\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfPersistentItem, InfPersistentItemApi, InfStatement, InfStatementApi, InfTemporalEntity, InfTemporalEntityApi, InfTextProperty, InfTextPropertyApi, ProInfoProjRelApi } from '@kleiolab/lib-sdk-lb3';\nimport { GvSubfieldaPageScope, GvSubfieldPage } from '@kleiolab/lib-sdk-lb4';\nimport { Action } from 'redux';\nimport { combineEpics, Epic, ofType } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { SchemaObject } from '../../root/models/model';\nimport { NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\nimport { DatActions } from '../actions/dat.actions';\nimport { FindStatementByParams, InfActions, InfPersistentItemActionFactory, InfStatementActionFactory, InfTemporalEntityActionFactory, InfTextPropertyActionFactory, LoadAlternativeTextProperties, LoadByPkMeta, LoadIngoingAlternativeStatements, LoadPaginatedStatementListMeta, PaginatedStatementList, SourcesAndDigitalsOfEntity, SourcesAndDigitalsOfEntityResult } from '../actions/inf.actions';\nimport { ProActions } from '../actions/pro.actions';\nimport { InfPersistentItemSlice, InfStatementSlice, InfTemporalEntitySlice, InfTextPropertySlice } from '../models/inf.models';\nimport { infRoot } from '../reducer-configs/inf.config';\nimport { SchemaService } from '../services/schema.service';\nimport { Flattener, storeFlattened } from '../_helpers/flattener';\nimport { InfEpicsFactory } from '../_helpers/inf-epic-factory';\nimport { FluxActionObservable, ModifyActionMeta } from '../_helpers/schema-actions-factory';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InfEpics {\n  constructor(\n    public notification: NotificationsAPIActions,\n    public peItApi: InfPersistentItemApi,\n    public teEnApi: InfTemporalEntityApi,\n    public statementApi: InfStatementApi,\n    public textPropertyApi: InfTextPropertyApi,\n    public infActions: InfActions,\n    public proActions: ProActions,\n    public datActions: DatActions,\n    public infoProjRelApi: ProInfoProjRelApi,\n    private schemaObjectService: SchemaService\n  ) { }\n\n  public createEpics(): Epic {\n    const infPersistentItemEpicsFactory = new InfEpicsFactory<InfPersistentItemSlice, InfPersistentItem>\n      (infRoot, 'persistent_item', this.infActions.persistent_item, this.notification, this.infoProjRelApi, this.proActions);\n\n    const infTemporalEntityEpicsFactory = new InfEpicsFactory<InfTemporalEntitySlice, InfTemporalEntity>\n      (infRoot, 'temporal_entity', this.infActions.temporal_entity, this.notification, this.infoProjRelApi, this.proActions);\n\n    const infStatementEpicsFactory = new InfEpicsFactory<InfStatementSlice, InfStatement>\n      (infRoot, 'statement', this.infActions.statement, this.notification, this.infoProjRelApi, this.proActions);\n\n    const infTextPropertyEpicsFactory = new InfEpicsFactory<InfTextPropertySlice, InfTextProperty>\n      (infRoot, 'text_property', this.infActions.text_property, this.notification, this.infoProjRelApi, this.proActions);\n\n    return combineEpics(\n      /**\n       * Perstistent Item\n       *\n       */\n      infPersistentItemEpicsFactory.createLoadEpic<LoadByPkMeta>(\n        (meta) => this.peItApi.ownProperties(meta.pk, meta.pkEntity),\n        InfPersistentItemActionFactory.MINIMAL_BY_PK,\n        (results, pk) => {\n          const schemas = results as any as SchemaObject;\n          // call action to store records\n          Object.keys(schemas).forEach(schema => {\n            let actions;\n            if (schema === 'inf') actions = this.infActions;\n            else if (schema === 'pro') actions = this.proActions;\n            if (actions) {\n              Object.keys(schemas[schema]).forEach(model => {\n                actions[model].loadSucceeded(schemas[schema][model], undefined, pk)\n              })\n            }\n          })\n        }\n      ),\n      infPersistentItemEpicsFactory.createLoadEpic<LoadByPkMeta>(\n        (meta) => this.peItApi.typesOfProject(meta.pk),\n        InfPersistentItemActionFactory.TYPES_OF_PROJECT,\n        (results, pk) => {\n          const schemaObject = results as SchemaObject;\n          this.schemaObjectService.storeSchemaObject(schemaObject, pk)\n        }\n      ),\n      // infPersistentItemEpicsFactory.createLoadEpic<LoadTypeOfProjectAction>(\n      //   (meta) => this.peItApi.typeOfProject(meta.pk, meta.pkEntity),\n      //   InfPersistentItemActionFactory.TYPE_OF_PROJECT,\n      //   (results, pk) => {\n      //     const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n      //     flattener.persistent_item.flatten(results);\n      //     storeFlattened(flattener.getFlattened(), pk);\n      //   }\n      // ),\n      infPersistentItemEpicsFactory.createUpsertEpic<ModifyActionMeta<InfPersistentItem>>((meta) => this.peItApi\n        .findOrCreateInfPersistentItems(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.persistent_item.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n      infPersistentItemEpicsFactory.createRemoveEpic(),\n\n\n      /**\n       * Temporal Entity\n       *\n       */\n      infTemporalEntityEpicsFactory.createLoadEpic<LoadByPkMeta>(\n        (meta) => this.teEnApi.ownProperties(meta.pk, meta.pkEntity),\n        InfTemporalEntityActionFactory.OWN_PROPERTIES,\n        (results, pk) => {\n          const schemaObject = results as SchemaObject;\n          this.schemaObjectService.storeSchemaObject(schemaObject, pk)\n        }\n      ),\n      /**\n       * Epic to load paginated Temporal Entity List\n       */\n      (action$: FluxActionObservable<any, LoadPaginatedStatementListMeta>, store) => action$.pipe(\n        ofType(infTemporalEntityEpicsFactory.type('LOAD', InfTemporalEntityActionFactory.PAGINATED_LIST)),\n        mergeMap(action => new Observable<Action>((globalActions) => {\n          const meta = action.meta;\n          const apiCal$ = this.teEnApi.temporalEntityList(\n            meta.pk, meta.pkSourceEntity, meta.pkProperty, meta.fkTargetClass, meta.isOutgoing, meta.limit, meta.offset\n          )\n          const pkProject = meta.pk;\n          this.handleTemporalEntityListAction(action, infTemporalEntityEpicsFactory, globalActions, apiCal$, pkProject);\n        }))\n      ),\n      /**\n       * Epic to load paginated Alternative Temporal Entity List\n       */\n      (action$: FluxActionObservable<any, LoadPaginatedStatementListMeta>, store) => action$.pipe(\n        ofType(infTemporalEntityEpicsFactory.type('LOAD', InfTemporalEntityActionFactory.PAGINATED_ALTERNATIVE_LIST)),\n        mergeMap(action => new Observable<Action>((globalActions) => {\n          const meta = action.meta;\n          const apiCal$ = this.teEnApi.alternativeTemporalEntityList(\n            meta.pk, meta.pkSourceEntity, meta.pkProperty, meta.fkTargetClass, meta.isOutgoing, meta.limit, meta.offset\n          )\n          const pkProject = null;\n          this.handleTemporalEntityListAction(action, infTemporalEntityEpicsFactory, globalActions, apiCal$, pkProject);\n        }))\n      ),\n      infTemporalEntityEpicsFactory.createUpsertEpic<ModifyActionMeta<InfTemporalEntity>>((meta) => this.teEnApi\n        .findOrCreateInfTemporalEntities(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.temporal_entity.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n      infTemporalEntityEpicsFactory.createRemoveEpic(),\n\n\n      /**\n       * Statement\n       *\n       */\n      infStatementEpicsFactory.createLoadEpic<LoadIngoingAlternativeStatements>(\n        (meta) => this.statementApi.alternativesNotInProjectByEntityPk(meta.pkEntity, meta.pkProperty, meta.pk),\n        InfStatementActionFactory.ALTERNATIVES_INGOING,\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.statement.flatten(results);\n          storeFlattened(flattener.getFlattened(), null);\n        }\n      ),\n      infStatementEpicsFactory.createUpsertEpic<ModifyActionMeta<InfStatement>>((meta) => this.statementApi\n        .findOrCreateInfStatements(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.statement.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n\n      (action$: FluxActionObservable<any, LoadPaginatedStatementListMeta>, store) => action$.pipe(\n        ofType(infStatementEpicsFactory.type('LOAD', InfTemporalEntityActionFactory.PAGINATED_LIST)),\n        mergeMap(action => new Observable<Action>((globalActions) => {\n          const meta = action.meta;\n          const apiCal$ = this.statementApi.paginatedListTargetingEntityPreviews(\n            meta.pk, meta.pkSourceEntity, meta.pkProperty, meta.fkTargetClass, meta.isOutgoing, meta.limit, meta.offset\n          )\n          const pkProject = meta.pk;\n          this.handleTemporalEntityListAction(action, infStatementEpicsFactory, globalActions, apiCal$, pkProject);\n        }))\n      ),\n\n      infStatementEpicsFactory.createRemoveEpic(),\n\n\n      infStatementEpicsFactory.createLoadEpic<FindStatementByParams>(\n        (meta) => this.statementApi.queryByParams(meta.ofProject, meta.pk, meta.pkEntity, meta.pkInfoRange, meta.pkInfoDomain, meta.pkProperty),\n        InfStatementActionFactory.BY_PARAMS,\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.statement.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'LOAD');\n        }\n      ),\n\n      infStatementEpicsFactory.createLoadEpic<SourcesAndDigitalsOfEntity>(\n        (meta) => this.statementApi.sourcesAndDigitalsOfEntity(meta.ofProject, meta.pk, meta.pkEntity),\n        InfStatementActionFactory.SOURCES_AND_DIGITALS_OF_ENTITY,\n        (results, pk) => {\n          const res = results as any as SourcesAndDigitalsOfEntityResult;\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.statement.flatten(res.statements);\n          storeFlattened(flattener.getFlattened(), pk);\n\n          const flattener2 = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener2.digital.flatten(res.digitals);\n          storeFlattened(flattener2.getFlattened(), pk);\n\n        }\n      ),\n\n\n\n      /**\n       * Text Property\n       *\n       */\n      infTextPropertyEpicsFactory.createLoadEpic<LoadAlternativeTextProperties>((meta) => this.textPropertyApi\n        .findAlternativeTextProperties(meta.pk, meta.fkEntity, meta.fkClassField),\n        InfTextPropertyActionFactory.ALTERNATIVES,\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.text_property.flatten(results);\n          storeFlattened(flattener.getFlattened(), null);\n        }\n      ),\n\n      infTextPropertyEpicsFactory.createUpsertEpic<ModifyActionMeta<InfTextProperty>>((meta) => this.textPropertyApi\n        .findOrCreateInfTextProperties(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.text_property.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk);\n        }\n      ),\n      infTextPropertyEpicsFactory.createRemoveEpic(),\n\n    );\n  }\n\n\n  /**\n   * handles the update of store for paginated temporal entity lists.\n   * @param pkProject if null, list is handled as 'repo' list\n   */\n  private handleTemporalEntityListAction<M>(\n    action,\n    epicsFactory: InfEpicsFactory<InfTemporalEntitySlice, InfTemporalEntity> | InfEpicsFactory<InfStatementSlice, InfStatement>,\n    globalActions,\n    apiCall$: Observable<any>,\n    pkProject) {\n    const meta: LoadPaginatedStatementListMeta = action.meta;\n    const scope: GvSubfieldaPageScope = meta.alternatives ? { notInProject: pkProject } : { inProject: pkProject }\n    const req: GvSubfieldPage = {\n      fkSourceEntity: meta.pkSourceEntity,\n      fkProperty: meta.pkProperty,\n      isOutgoing: meta.isOutgoing,\n      targetClass: meta.fkTargetClass,\n      limit: meta.limit,\n      offset: meta.offset,\n      scope,\n    }\n    const pendingKey = meta.addPending;\n\n    // call action to set pagination loading on true\n    this.infActions.statement.loadPage(req, pkProject);\n    // call api to load data\n    apiCall$.subscribe((data: PaginatedStatementList) => {\n      // call action to store records\n      this.schemaObjectService.storeSchemaObject(data.schemas, pkProject);\n      // call action to store pagination\n      this.infActions.statement.loadPageSucceeded(data.paginatedStatements, data.count, req, pkProject);\n      // call action to conclude the pending request\n      epicsFactory.actions.loadSucceeded([], pendingKey, pkProject);\n    }, error => {\n      // call action to handle error\n      epicsFactory.onError(globalActions, error, pendingKey, pkProject);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ProClassFieldConfig, ProClassFieldConfigApi, ProDfhClassProjRel, ProDfhClassProjRelApi, ProDfhProfileProjRel, ProDfhProfileProjRelApi, ProInfoProjRel, ProInfoProjRelApi, ProProject, ProProjectApi, ProTextProperty, ProTextPropertyApi } from '@kleiolab/lib-sdk-lb3';\nimport { AnalysisService, ProAnalysis } from '@kleiolab/lib-sdk-lb4';\nimport { combineEpics, Epic } from 'redux-observable-es6-compat';\nimport { SchemaObject } from '../../root/models/model';\nimport { NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\nimport { DatActions } from '../actions/dat.actions';\nimport { InfActions } from '../actions/inf.actions';\nimport { MarkStatementAsFavoriteActionMeta, ProActions, ProClassFieldConfigActionFactory, ProDfhClassProjRelActionFactory, ProDfhProfileProjRelActionFactory, ProInfoProjRelActionFactory, ProProjectActionFactory, ProTextPropertyActionFactory } from '../actions/pro.actions';\nimport { ProAnalysisSlice, ProClassFieldConfigSlice, ProDfhClassProjRelSlice, ProDfhProfileProjRelSlice, ProInfoProjRelSlice, ProProjectSlice, ProTextPropertySlice } from '../models/pro.models';\nimport { proRoot } from '../reducer-configs/pro.config';\nimport { SchemaService } from '../services/schema.service';\nimport { Flattener, storeFlattened } from '../_helpers/flattener';\nimport { LoadActionMeta, ModifyActionMeta } from '../_helpers/schema-actions-factory';\nimport { SchemaEpicsFactory } from '../_helpers/schema-epics-factory';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProEpics {\n  constructor(\n    public notification: NotificationsAPIActions,\n    public infActions: InfActions,\n    public proActions: ProActions,\n    public datActions: DatActions,\n    public projectApi: ProProjectApi,\n    public infoProjRelApi: ProInfoProjRelApi,\n    public classProjRelApi: ProDfhClassProjRelApi,\n    public profileProjRelApi: ProDfhProfileProjRelApi,\n    public classFieldConfApi: ProClassFieldConfigApi,\n    public textPropertyApi: ProTextPropertyApi,\n    public analysisApi: AnalysisService,\n    private schemaObjectService: SchemaService\n  ) { }\n\n  public createEpics(): Epic {\n    const proProjectEpicsFactory = new SchemaEpicsFactory<ProProjectSlice, ProProject>\n      (proRoot, 'project', this.proActions.project, this.notification);\n\n    const proInfoProjRelEpicsFactory = new SchemaEpicsFactory<ProInfoProjRelSlice, ProInfoProjRel>\n      (proRoot, 'info_proj_rel', this.proActions.info_proj_rel, this.notification);\n\n    const proDfhClassProjRelEpicsFactory = new SchemaEpicsFactory<ProDfhClassProjRelSlice, ProDfhClassProjRel>\n      (proRoot, 'dfh_class_proj_rel', this.proActions.dfh_class_proj_rel, this.notification);\n\n    const proDfhProfileProjRelEpicsFactory = new SchemaEpicsFactory<ProDfhProfileProjRelSlice, ProDfhProfileProjRel>\n      (proRoot, 'dfh_profile_proj_rel', this.proActions.dfh_profile_proj_rel, this.notification);\n\n    const proClassFieldConfigEpicsFactory = new SchemaEpicsFactory<ProClassFieldConfigSlice, ProClassFieldConfig>\n      (proRoot, 'class_field_config', this.proActions.class_field_config, this.notification);\n\n    const proTextPropertyEpicsFactory = new SchemaEpicsFactory<ProTextPropertySlice, ProTextProperty>\n      (proRoot, 'text_property', this.proActions.text_property, this.notification);\n\n    const proAnalysisEpicsFactory = new SchemaEpicsFactory<ProAnalysisSlice, ProAnalysis>\n      (proRoot, 'analysis', this.proActions.analysis, this.notification);\n\n\n\n    return combineEpics(\n      /**\n      * ProProject\n      */\n      proProjectEpicsFactory.createLoadEpic<LoadActionMeta>((meta) => this.projectApi\n        .ofAccount(meta.pk),\n        ProProjectActionFactory.OF_ACCOUNT,\n        (results) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_project.flatten(results);\n          storeFlattened(flattener.getFlattened());\n        }\n      ),\n      proProjectEpicsFactory.createLoadEpic<LoadActionMeta>((meta) => this.projectApi\n        .getBasics(meta.pk),\n        ProProjectActionFactory.LOAD_BASICS,\n        (results) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_project.flatten(results);\n          storeFlattened(flattener.getFlattened());\n        }\n      ),\n      /**\n       * ProInfoProjRel\n       */\n      proInfoProjRelEpicsFactory.createUpsertEpic<ModifyActionMeta<ProInfoProjRel>>((meta) => this.infoProjRelApi\n        .bulkUpdateEprAttributes(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.info_proj_rel.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n      proInfoProjRelEpicsFactory.createLoadEpic<MarkStatementAsFavoriteActionMeta>((meta) => this.infoProjRelApi\n        .markStatementAsFavorite(meta.pk, meta.pkStatement, meta.isOutgoing),\n        ProInfoProjRelActionFactory.MARK_ROLE_AS_FAVORITE,\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.info_proj_rel.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n      /**\n       * ProClassFieldConfig\n       */\n      proClassFieldConfigEpicsFactory.createLoadEpic<LoadActionMeta>(\n        (meta) => this.classFieldConfApi.ofProject(meta.pk),\n        ProClassFieldConfigActionFactory.OF_PROJECT,\n        (results) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_class_field_config.flatten(results);\n          storeFlattened(flattener.getFlattened());\n        }\n      ),\n      proClassFieldConfigEpicsFactory.createUpsertEpic<ModifyActionMeta<ProClassFieldConfig>>((meta) => this.classFieldConfApi\n        .bulkUpsert(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_class_field_config.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n      /**\n       * ProProDfhClassProjRel\n       */\n      proDfhClassProjRelEpicsFactory.createLoadEpic<LoadActionMeta>(\n        (meta) => this.classProjRelApi.ofProject(meta.pk),\n        ProDfhClassProjRelActionFactory.OF_PROJECT,\n        (results) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_dfh_class_proj_rel.flatten(results);\n          storeFlattened(flattener.getFlattened());\n        }\n      ),\n      proDfhClassProjRelEpicsFactory.createUpsertEpic<ModifyActionMeta<ProDfhClassProjRel>>((meta) => this.classProjRelApi\n        .bulkUpsert(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_dfh_class_proj_rel.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n      /**\n      * ProDfhProfileProjRel\n      */\n      proDfhProfileProjRelEpicsFactory.createLoadEpic<LoadActionMeta>(\n        (meta) => this.profileProjRelApi.ofProject(meta.pk),\n        ProDfhProfileProjRelActionFactory.OF_PROJECT,\n        (results) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_dfh_profile_proj_rel.flatten(results);\n          storeFlattened(flattener.getFlattened());\n        }\n      ),\n      proDfhProfileProjRelEpicsFactory.createUpsertEpic<ModifyActionMeta<ProDfhProfileProjRel>>((meta) => this.profileProjRelApi\n        .bulkUpsert(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_dfh_profile_proj_rel.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n      /**\n      * ProTextProperty\n      */\n      proTextPropertyEpicsFactory.createLoadEpic<LoadActionMeta>(\n        (meta) => this.textPropertyApi.ofProject(meta.pk),\n        ProTextPropertyActionFactory.OF_PROJECT,\n        (results, pk) => {\n          const schemas = results as any as SchemaObject;\n          this.schemaObjectService.storeSchemaObject(schemas, pk)\n        }\n      ),\n      proTextPropertyEpicsFactory.createUpsertEpic<ModifyActionMeta<ProTextProperty>>((meta) => this.textPropertyApi\n        .bulkUpsert(meta.pk, meta.items),\n        (results, pk) => {\n          const schemas = results as any as SchemaObject;\n          this.schemaObjectService.storeSchemaObject(schemas, pk)\n        }\n      ),\n      proTextPropertyEpicsFactory.createDeleteEpic((meta) => this.textPropertyApi.bulkDelete(meta.pk, meta.items)),\n      /**\n      * ProAnalysis\n      */\n      // proAnalysisEpicsFactory.createLoadEpic<LoadByPkANsVersionActionMeta>(\n      //   (meta) => this.analysisApi.analysisControllerGetVersion(meta.pk, meta.pkEntity, meta.version).pipe(map(x => [x])),\n      //   ProAnalysisActionFactory.BY_PK_AND_VERSION,\n      //   (results) => {\n      //     const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n      //     flattener.analysis.flatten(results);\n      //     storeFlattened(flattener.getFlattened());\n      //   }\n      // ),\n      // proAnalysisEpicsFactory.createUpsertEpic<ModifyActionMeta<ProAnalysis>>(\n      //   (meta) => this.analysisApi.analysisControllerBulkUpsert(meta.pk, meta.items),\n      //   (results, pk) => {\n      //     const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n      //     flattener.analysis.flatten(results);\n      //     storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n      //   }\n      // ),\n      proAnalysisEpicsFactory.createDeleteEpic(\n        (meta) => this.analysisApi.analysisControllerBulkDelete(meta.pk, meta.items.map(item => item.pk_entity)),\n      ),\n    )\n  }\n  // private storeSchemaObject(schemas: SchemaObject, pkProject) {\n  //   if (schemas && Object.keys(schemas).length > 0) {\n  //     Object.keys(schemas).forEach(schema => {\n  //       let actions;\n  //       if (schema === 'inf') actions = this.infActions;\n  //       else if (schema === 'pro') actions = this.proActions;\n  //       if (actions) {\n  //         Object.keys(schemas[schema]).forEach(model => {\n  //           actions[model].loadSucceeded(schemas[schema][model], undefined, pkProject);\n  //         });\n  //       }\n  //     });\n  //   }\n  // }\n\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { GvLoadSubfieldPageReq, GvSchemaObject } from '@kleiolab/lib-sdk-lb4';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { Observable } from 'rxjs';\nimport { IAppState } from '../../root/models/model';\nimport { LoadActionMeta } from '../_helpers/schema-actions-factory';\n\nexport type GvSchemaObjectAction = FluxStandardAction<Observable<GvSchemaObject>, LoadActionMeta>;\n\ninterface GvPaginationObjectActionMeta extends LoadActionMeta {\n  req: GvLoadSubfieldPageReq\n}\nexport type GvPaginationObjectAction = FluxStandardAction<null, GvPaginationObjectActionMeta>;\n\n\n/**\n * Class for actions that handle the loading of schema objects,\n * negative schema objects ect.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GvSchemaActions {\n  static readonly GV_SCHEMA_OBJECT_LOAD = 'GV_SCHEMA_OBJECT::LOAD';\n  static readonly GV_PAGINATION_OBJECT_LOAD = 'GV_PAGINATION_OBJECT::LOAD';\n\n  constructor(private ngRedux: NgRedux<IAppState>) { }\n\n  /**\n   * Action for loading GvSchemaObject into the store\n   * @param apiCall$ Pass in the api call. Don't subscribe to the call, since otherwise\n   *                we'll end up with two subscriptions and thus two api calls\n   */\n  loadGvSchemaObject(\n    apiCall$: Observable<GvSchemaObject>\n  ): void {\n    const addPending = U.uuid()\n    const action: GvSchemaObjectAction = {\n      type: GvSchemaActions.GV_SCHEMA_OBJECT_LOAD,\n      meta: { addPending },\n      payload: apiCall$,\n    };\n    this.ngRedux.dispatch(action)\n  }\n\n  /**\n * Action for loading GvPaginationObject into the store\n * @param apiCall$ Pass in the api call. Don't subscribe to the call, since otherwise\n *                we'll end up with two subscriptions and thus two api calls\n */\n  loadGvPaginationObject(\n    req: GvLoadSubfieldPageReq,\n  ): void {\n    const addPending = U.uuid()\n    const action: GvPaginationObjectAction = {\n      type: GvSchemaActions.GV_PAGINATION_OBJECT_LOAD,\n      meta: { addPending, req },\n    };\n    this.ngRedux.dispatch(action)\n  }\n}\n","import { GvSubfieldPage } from '@kleiolab/lib-sdk-lb4';\nimport { keys, values } from 'ramda';\nexport function createPaginateByKey(x: GvSubfieldPage): string {\n  return `${x.fkSourceEntity}_${x.fkProperty}_${x.isOutgoing ? 'out' : 'in'}_${x.targetClass}_${keys(x.scope)[0]}_${values(x.scope)[0]}`\n}\n","import { Injectable } from '@angular/core';\nimport { PaginatedStatementsControllerService } from '@kleiolab/lib-sdk-lb4';\nimport { Action } from 'redux';\nimport { combineEpics, Epic, ofType, StateObservable } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { IAppState } from '../../root/models/model';\nimport { LoadingBarActions } from '../../state-gui/actions/loading-bar.actions';\nimport { NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\nimport { InfActions } from '../actions/inf.actions';\nimport { GvPaginationObjectAction, GvSchemaActions, GvSchemaObjectAction } from '../actions/schema.actions';\nimport { SchemaService } from '../services/schema.service';\nimport { createPaginateByKey } from '../_helpers/createPaginateByKey';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SchemaEpics {\n  constructor(\n    private schemaObjectService: SchemaService,\n    private loadingBarActions: LoadingBarActions,\n    private notificationActions: NotificationsAPIActions,\n    public infActions: InfActions,\n    private pag: PaginatedStatementsControllerService\n\n  ) { }\n\n  public createEpics(): Epic {\n\n    return combineEpics(\n      /**\n       * Epic for loading GvSchemaObjects\n       * - it subscribes to the given observable (payload), which usually triggers a REST API call\n       * - on success it stores the GvSchemaObject\n       * - else it toasts an error message\n       */\n      (action$, store) => action$.pipe(\n        ofType(GvSchemaActions.GV_SCHEMA_OBJECT_LOAD),\n        mergeMap((action: GvSchemaObjectAction) => new Observable<Action>((actionEmitter) => {\n          actionEmitter.next(this.loadingBarActions.startLoading());\n          action.payload.subscribe((data) => {\n            this.schemaObjectService.storeSchemaObjectGv(data, 0)\n            actionEmitter.next(this.loadingBarActions.completeLoading());\n          }, error => {\n            actionEmitter.next(this.notificationActions.addToast({\n              type: 'error',\n              options: { title: error }\n            }))\n          })\n        }))\n      ),\n      /**\n      * Epic for loading GvPaginationObjects\n      * - it subscribes to the given observable (payload), which usually triggers a REST API call\n      * - on success it stores the GvPaginationObject\n      * - else it toasts an error message\n      */\n      (action$, store: StateObservable<IAppState>) => action$.pipe(\n        ofType(GvSchemaActions.GV_PAGINATION_OBJECT_LOAD),\n        mergeMap((action: GvPaginationObjectAction) => new Observable<Action>((actionEmitter) => {\n          actionEmitter.next(this.loadingBarActions.startLoading());\n\n          const pkProject = store.value.activeProject.pk_project;\n          const meta = action.meta;\n          const paginateBy = createPaginateByKey(meta.req.page);\n\n          // call action to set pagination loading on true\n          this.infActions.statement.loadPage(meta.req.page, pkProject);\n\n          this.pag.paginatedStatementsControllerLoadSubfieldPage(action.meta.req)\n            .subscribe((data) => {\n              // call action to store records\n              this.schemaObjectService.storeSchemaObjectGv(data.schemas, pkProject);\n              // call action to store page informations\n              for (const subfieldPage of data.subfieldPages) {\n                this.infActions.statement.loadPageSucceeded(subfieldPage.paginatedStatements, subfieldPage.count, subfieldPage.page, pkProject);\n              }\n              // call action to complete loading bar\n              actionEmitter.next(this.loadingBarActions.completeLoading());\n            }, error => {\n              actionEmitter.next(this.notificationActions.addToast({\n                type: 'error',\n                options: { title: error }\n              }))\n            })\n        }))\n      )\n    )\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { SysSystemRelevantClass, SysSystemRelevantClassApi } from '@kleiolab/lib-sdk-lb3';\nimport { SysConfigValue, SystemConfigurationService } from '@kleiolab/lib-sdk-lb4';\nimport { combineEpics, Epic } from 'redux-observable-es6-compat';\nimport { map } from 'rxjs/operators';\nimport { NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\nimport { SysActions } from '../actions/sys.actions';\nimport { SysConfigSlice, SysRelevantClassSlice } from '../models/sys.models';\nimport { sysRoot } from '../reducer-configs/sys.config';\nimport { ModifyActionMeta } from '../_helpers/schema-actions-factory';\nimport { SchemaEpicsFactory } from '../_helpers/schema-epics-factory';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SysEpics {\n  constructor(\n    private actions: SysActions,\n    private notification: NotificationsAPIActions,\n    private sysRelevantClassApi: SysSystemRelevantClassApi,\n    // private sysAnalysisTypeApi: SysAnalysisTypeApi,\n    private sysConfigApi: SystemConfigurationService\n  ) { }\n\n  public createEpics(): Epic {\n    const systemRelevantClassEpicsFactory = new SchemaEpicsFactory<SysRelevantClassSlice, SysSystemRelevantClass>\n      (sysRoot, 'system_relevant_class', this.actions.system_relevant_class, this.notification);\n\n    // const analysisTypeEpicsFactory = new StandardEpicsFactory<SysRelevantClassSlice, SysAnalysisType>\n    //   (sysRoot, 'analysis_type', this.actions.analysis_type, this.notification);\n\n    const configEpicsFactory = new SchemaEpicsFactory<SysConfigSlice, SysConfigValue>\n      (sysRoot, 'config', this.actions.config, this.notification);\n\n\n\n    return combineEpics(\n\n      // SystemRelevantClass Epics\n      systemRelevantClassEpicsFactory.createLoadEpic((action) => this.sysRelevantClassApi.find(), ''),\n      systemRelevantClassEpicsFactory.createUpsertEpic<ModifyActionMeta<SysSystemRelevantClass>>((meta) => this.sysRelevantClassApi.bulkReplaceOrCreate(meta.items)),\n\n      // analysisTypeEpicsFactory.createLoadEpic(() => this.sysAnalysisTypeApi.find(), ''),\n\n      configEpicsFactory.createLoadEpic(\n        () => this.sysConfigApi.sysConfigControllerGetSystemConfig().pipe(map(x => [x])),\n        '')\n    );\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Action } from 'redux';\nimport { ActionsObservable, combineEpics, Epic, StateObservable } from 'redux-observable-es6-compat';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { AccountEpics } from '../state-gui/epics/account.epics';\nimport { ActiveProjectEpics } from '../state-gui/epics/active-project.epics';\nimport { LoadingBarEpics } from '../state-gui/epics/loading-bar.epics';\nimport { NotificationsAPIEpics } from '../state-gui/epics/notifications.epics';\nimport { ActionResolverEpics } from '../state-schema/epics/action-resolver.epics';\nimport { DatEpics } from '../state-schema/epics/dat.epics';\nimport { DfhEpics } from '../state-schema/epics/dfh.epics';\nimport { InfEpics } from '../state-schema/epics/inf.epics';\nimport { ProEpics } from '../state-schema/epics/pro.epics';\nimport { SchemaEpics } from '../state-schema/epics/schema.epics';\nimport { SysEpics } from '../state-schema/epics/sys.epics';\nimport { IAppState } from './models/model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RootEpics {\n\n  private rootEpicStream$;\n  private rootEpic;\n\n  constructor(\n    private loadingBarEpics: LoadingBarEpics,\n    private notificationEpics: NotificationsAPIEpics,\n    private activeProjectEpics: ActiveProjectEpics,\n    private accountEpics: AccountEpics,\n    private sysEpics: SysEpics,\n    private dfhEpics: DfhEpics,\n    private infEpics: InfEpics,\n    private datEpics: DatEpics,\n    private proEpics: ProEpics,\n    private schemaObjectEpics: SchemaEpics,\n    private actionResolver: ActionResolverEpics\n  ) {\n\n    this.rootEpicStream$ = new BehaviorSubject(combineEpics(\n      this.loadingBarEpics.createEpics(),\n      this.notificationEpics.createEpics(),\n      this.activeProjectEpics.createEpics(),\n      this.accountEpics.createEpics(),\n      this.sysEpics.createEpics(),\n      this.dfhEpics.createEpics(),\n      this.infEpics.createEpics(),\n      this.datEpics.createEpics(),\n      this.proEpics.createEpics(),\n      this.schemaObjectEpics.createEpics(),\n      // important: this needs to be the last epic in\n      this.actionResolver.createEpics()\n    ));\n\n    this.rootEpic = (\n      action$: ActionsObservable<Action>,\n      state$: StateObservable<IAppState>,\n      dependencies = undefined\n    ): Observable<Action> => {\n      return this.rootEpicStream$.pipe(\n        mergeMap((epic: Epic) => epic(action$, state$, dependencies))\n      );\n    }\n  }\n\n  public getRootEpic(): Epic<Action<any>, Action<any>, void, any> {\n    return this.rootEpic;\n  }\n\n  /**\n   * Adds an epic to the RootEpic middleware\n   * @param epic that will be added to the RootEpics\n   */\n  public addEpic(epic: Epic<Action<any>, Action<any>, void, any>) {\n    this.rootEpicStream$.next(epic);\n  }\n}\n","import { AccountActions, AccountAction } from '../../state-gui/actions/account.actions';\nimport { IAccount } from '../models/account.model';\n\n\nconst INITIAL_STATE: IAccount = {\n  account: undefined,\n  roles: undefined\n};\n\nexport const accountRootReducer = (lastState: IAccount = INITIAL_STATE, action: AccountAction): IAccount => {\n  switch (action.type) {\n    case AccountActions.LOGIN_SUCCEEDED:\n      lastState = {\n        ...lastState,\n        account: action.meta.account\n      };\n      break;\n\n\n    case AccountActions.ACCOUNT_UPDATED:\n      lastState = {\n        ...lastState,\n        account: action.meta.account\n      };\n      break;\n\n    case AccountActions.LOAD_ROLES_SUCCEEDED:\n      lastState = {\n        ...lastState,\n        roles: action.meta.accountRoles\n      };\n      break;\n\n    case AccountActions.LOAD_ROLES_FAILED:\n      lastState = {\n        ...lastState,\n        roles: []\n      };\n      break;\n\n\n\n  }\n  return lastState;\n}\n\n","import { Action } from 'redux';\nimport { LoadingBarAction, LoadingBarActions } from '../actions/loading-bar.actions';\nimport { LoadingBar } from '../models/loading-bar.models';\n\nconst INITIAL_STATE: LoadingBar = {\n  loading: false,\n  progress: 0,\n};\n\n\nexport function loadingBarReducer(state: LoadingBar = INITIAL_STATE, a: Action): LoadingBar {\n\n  const action = a as LoadingBarAction;\n\n\n  switch (action.type) {\n\n    case LoadingBarActions.START:\n      return {\n        ...state,\n        loading: true\n      };\n\n    case LoadingBarActions.STOP:\n      return {\n        ...state,\n        loading: false,\n      };\n\n    case LoadingBarActions.COPMLETE:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n\n  return state;\n};\n\n","import { moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { omit } from 'ramda';\nimport { ActiveProjectActions, ActiveProjectAction } from '../../state-gui/actions/active-project.action';\nimport { ProjectDetail } from '../models/active-project.models';\n\n\nconst INITIAL_STATE: ProjectDetail = {\n  label: '',\n  list: '',\n  uiIdSerial: 0,\n  panelSerial: 0,\n  focusedPanel: 0,\n  panels: []\n};\nexport const activeProjectReducer = (state: ProjectDetail = INITIAL_STATE, action: ActiveProjectAction): ProjectDetail => {\n  let pi, ti, ppi, cpi, pti, cti;\n  switch (action.type) {\n    /************************************************************************************\n     * Load project data (metadata, crm)\n    ************************************************************************************/\n    case ActiveProjectActions.LOAD_PROJECT_BASICS_SUCCEEDED:\n      state = {\n        ...state,\n        ...action.meta.projectPreview\n      };\n      break;\n    case ActiveProjectActions.LOAD_PROJECT_CONFIG:\n      state = {\n        ...state,\n        loadingConfigData: true\n      }\n      break;\n    case ActiveProjectActions.LOAD_PROJECT_CONFIG_SUCCEEDED:\n      state = {\n        ...state,\n        // crm: action.payload.crm,\n        configDataInitialized: true,\n        loadingConfigData: false\n      }\n      break;\n\n    /************************************************************************************\n     * Layout -- Tabs\n    ************************************************************************************/\n    case ActiveProjectActions.SET_PANELS:\n      state = {\n        ...state,\n        panels: action.meta.panels,\n        uiIdSerial: action.meta.uiIdSerial,\n        panelSerial: action.meta.panelSerial,\n        focusedPanel: action.meta.focusedPanel\n      }\n      break;\n    case ActiveProjectActions.SET_LIST_TYPE:\n      state = {\n        ...state,\n        list: action.meta.list\n      }\n      break;\n    case ActiveProjectActions.ACTIVATE_TAB:\n      pi = action.meta.panelIndex;\n      ti = action.meta.tabIndex;\n      state = {\n        ...state,\n        panels: Object.assign([...state.panels], {\n          [pi]: {\n            ...state.panels[pi],\n            tabs: [...state.panels[pi].tabs].map((tab, index) => {\n              tab.active = (index === ti);\n              return tab;\n            })\n          }\n        })\n      }\n      break;\n    case ActiveProjectActions.MOVE_TAB:\n      ppi = action.meta.previousPanelIndex;\n      cpi = action.meta.currentPanelIndex;\n      pti = action.meta.previousTabIndex;\n      cti = action.meta.currentTabIndex;\n\n      if (ppi === cpi) {\n        const tabs = [...state.panels[cpi].tabs];\n        moveItemInArray(tabs, pti, cti);\n        state = {\n          ...state,\n          panels: Object.assign([...state.panels], {\n            [cpi]: {\n              ...state.panels[cpi],\n              tabs\n            }\n          })\n        }\n      } else {\n        const pTabs = [...state.panels[ppi].tabs];\n        const cTabs = [...state.panels[cpi].tabs];\n        transferArrayItem(pTabs, cTabs, pti, cti);\n        state = {\n          ...state,\n          panels: Object.assign([...state.panels], {\n            [ppi]: {\n              ...state.panels[ppi],\n              tabs: pTabs.map((tab, index) => {\n                tab.active = (index === (pti < pTabs.length ? pti : (pti - 1)));\n                return tab;\n              })\n            },\n            [cpi]: {\n              ...state.panels[cpi],\n              tabs: cTabs.map((tab, index) => {\n                tab.active = (index === cti);\n                return tab;\n              })\n            }\n          })\n        }\n      }\n\n      break;\n    case ActiveProjectActions.ADD_TAB:\n      if (state.panels.length === 0) {\n        state = {\n          ...state,\n          panels: [\n            {\n              id: state.panelSerial,\n              tabs: []\n            }\n          ],\n          focusedPanel: 0,\n          panelSerial: state.panelSerial + 1\n        }\n      }\n      pi = state.focusedPanel;\n      state = {\n        ...state,\n        panels: Object.assign([...state.panels], {\n          [pi]: {\n            ...state.panels[pi],\n            tabs: [\n              ...state.panels[pi].tabs.map(t => {\n                t.active = false;\n                return t;\n              }),\n              {\n                ...omit(['pathSegment'], action.meta.tab),\n                // panelIndex: pi,\n                path: ['activeProject', action.meta.tab.pathSegment, state.uiIdSerial.toString()]\n              }\n            ]\n          }\n        }),\n        uiIdSerial: (state.uiIdSerial + 1)\n      }\n      break;\n    case ActiveProjectActions.CLOSE_TAB:\n      pi = action.meta.panelIndex;\n      ti = action.meta.tabIndex;\n      // remove the closing tab\n      state = {\n        ...state,\n        panels: Object.assign([...state.panels], {\n          [pi]: {\n            ...state.panels[pi],\n            tabs: [...state.panels[pi].tabs]\n              .filter((tab, index) => index !== ti)\n\n          }\n        })\n      }\n      // activate a sibling tab, if needed and possible\n      if (!state.panels[pi].tabs.find(t => t.active)) {\n        state = {\n          ...state,\n          panels: Object.assign([...state.panels], {\n            [pi]: {\n              ...state.panels[pi],\n              tabs: [...state.panels[pi].tabs]\n                .map((tab, index) => {\n                  tab.active = (index === (ti < state.panels[pi].tabs.length ? ti : (ti - 1)));\n                  return tab;\n                })\n            }\n          })\n\n        }\n      }\n      break;\n    case ActiveProjectActions.CLOSE_PANEL:\n      pi = action.meta.panelIndex;\n      const panels = [...state.panels];\n      panels.splice(pi, 1);\n      state = {\n        ...state,\n        panels\n      }\n      break;\n\n    case ActiveProjectActions.FOCUS_PANEL:\n      state = {\n        ...state,\n        focusedPanel: action.meta.panelIndex\n      }\n      break;\n    case ActiveProjectActions.SPLIT_PANEL:\n      ppi = action.meta.previousPanelIndex;\n      ti = action.meta.tabIndex;\n      cpi = action.meta.currentPanelIndex;\n      const moveTab = state.panels[ppi].tabs[ti];\n      // removes tab from old panel\n      state = {\n        ...state,\n        panels: Object.assign([...state.panels], {\n          [ppi]: {\n            ...state.panels[ppi],\n            tabs: [...state.panels[ppi].tabs]\n              .filter((tab, index) => index !== ti)\n              .map((tab, index) => {\n                if (index === 0) tab.active = true;\n                return tab;\n              })\n          }\n        })\n      }\n      // insert a new panel at position of cpi\n      const newPanels = [...state.panels];\n      newPanels.splice(cpi, 0, {\n        id: state.panelSerial,\n        tabs: [moveTab]\n      })\n      state = {\n        ...state,\n        panels: newPanels,\n        // increase panel id sequence\n        panelSerial: state.panelSerial + 1\n      }\n\n      break;\n\n\n    case ActiveProjectActions.SET_REFINING_CHUNK:\n      state = {\n        ...state,\n        refiningChunk: action.payload.refiningChunk\n      };\n      break;\n    case ActiveProjectActions.SET_CREATING_MENTIONING:\n      state = {\n        ...state,\n        creatingMentioning: action.payload.creatingMentioning\n      };\n      break;\n\n    /************************************************************************************\n    * Highlighting of mentionings in the gui\n    ************************************************************************************/\n    case ActiveProjectActions.SET_MENTIONINGS_FOCUSED_IN_TEXT:\n      state = {\n        ...state,\n        mentioningsFocusedInText: action.payload.mentioningsFocusedInText\n      };\n      break;\n\n    case ActiveProjectActions.SET_MENTIONINGS_FOCUSED_IN_TABLE:\n      state = {\n        ...state,\n        mentioningsFocusedInTable: action.payload.mentioningsFocusedInTable\n      };\n      break;\n\n\n    /************************************************************************************\n     * Destroy the active project state (on closing a project)\n    ************************************************************************************/\n    case ActiveProjectActions.DESTROY:\n      state = INITIAL_STATE;\n      break;\n  }\n\n  return state;\n}\n","import { List } from './list';\n\nexport class Information {\n\n  // search results\n  items?: List;\n\n  loading?: boolean;\n\n  constructor(data?: Information) {\n    Object.assign(this, data);\n  }\n}\n","import { dispatch } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { Information } from '../models/entity-list.models';\n\ntype Payload = Information;\nexport type InformationAPIAction = FluxStandardAction<Payload, {}>;\n\n@Injectable()\nexport class InformationAPIActions {\n\n\n\n  static readonly DESTROY = 'Information::DESTROY';\n\n\n  /*********************************************************************\n  *  Method to distroy the slice of store\n  *********************************************************************/\n  @dispatch() destroy = (): InformationAPIAction => ({\n    type: InformationAPIActions.DESTROY,\n    meta: null,\n    payload: null\n  })\n}\n","import { Action } from 'redux';\nimport { Information } from '../models/entity-list.models';\nimport { InformationAPIAction, InformationAPIActions } from '../actions/entity-list.actions';\n\n\nconst INITIAL_STATE = new Information();\n\nexport function informationReducer(state: Information = INITIAL_STATE, a: Action): Information {\n\n  const action = a as InformationAPIAction;\n\n  switch (action.type) {\n\n\n    /*****************************************************\n    * Reducers called on destroy of component\n    *****************************************************/\n    case InformationAPIActions.DESTROY:\n      state = {};\n      break;\n\n  }\n\n  return state;\n};\n\n","import { dispatch } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { SourceList } from '../models/source-list.models';\n\ntype Payload = SourceList;\ninterface MetaData {\n  // pkEntity?: number;\n  // pkSource?: number;\n  // pkProject?: number;\n  // crm?: ProjectCrm;\n\n  // sourceDetail?: PeItDetail;\n  // sectionDetail?: PeItDetail;\n\n  // classAndTypePk?: ClassAndTypePk;\n  // pkUiContext?: number;\n  pkAllowedClasses?: number[];\n};\nexport type SourceListAPIAction = FluxStandardAction<Payload, MetaData>;\n\n@Injectable()\nexport class SourceListAPIActions {\n\n  static readonly INITIALIZE_LIST = 'SourceList::INITIALIZE_LIST';\n\n  static readonly DESTROY = 'SourceList::DESTROY';\n\n\n  /*********************************************************************\n  *  Actions to manage the list\n  *********************************************************************/\n\n  @dispatch() initializeList = (pkAllowedClasses: number[]): SourceListAPIAction => ({\n    type: SourceListAPIActions.INITIALIZE_LIST,\n    meta: { pkAllowedClasses },\n    payload: null\n  })\n\n\n\n\n  /*********************************************************************\n  *  Method to distroy the slice of store\n  *********************************************************************/\n  @dispatch()\n  destroy = (): SourceListAPIAction => ({\n    type: SourceListAPIActions.DESTROY,\n    meta: null,\n    payload: null\n  })\n\n}\n","import { List } from './list';\n\n// Class of this slice of store\nexport class SourceList {\n\n  // the list of sources (search result)\n  list?: List;\n\n  // // class and type selector\n  // classAndTypeSelector?: ClassAndTypeSelector;\n\n  loading?: boolean;\n\n  constructor(data?: SourceList) {\n    Object.assign(this, data);\n  }\n}\n","import { Action } from 'redux';\nimport { SourceListAPIAction, SourceListAPIActions } from '../actions/source-list.actions';\nimport { SourceList } from '../models/source-list.models';\n\nconst INITIAL_STATE = new SourceList();\n\nexport function sourceListReducer(state: SourceList = INITIAL_STATE, a: Action): SourceList {\n\n  const action = a as SourceListAPIAction;\n\n  switch (action.type) {\n\n    case SourceListAPIActions.INITIALIZE_LIST:\n      state = {\n        ...state,\n        list: {\n          pkAllowedClasses: action.meta.pkAllowedClasses\n        }\n      }\n      break;\n\n\n    /*****************************************************\n    * Reducers called on destroy of component\n    *****************************************************/\n    case SourceListAPIActions.DESTROY:\n      state = {};\n      break;\n\n  }\n\n  return state;\n};\n\n","import { Injectable } from '@angular/core';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { ProjectPreview } from '../models/active-project.models';\nexport type ProjectsAction = FluxStandardAction<ProjectPreview[], {}>;\n\n\n@Injectable()\nexport class ProjectsActions {\n  static LOAD_PROJECTS_SUCCEEDED = 'LOAD_PROJECTS_SUCCEEDED';\n\n  loadProjectsSucceeded(payload: ProjectPreview[]): ProjectsAction {\n    return {\n      type: ProjectsActions.LOAD_PROJECTS_SUCCEEDED,\n      payload,\n      meta: null\n    };\n  }\n\n}\n","import { ProjectsAction, ProjectsActions } from '../actions/projects.actions';\nimport { IProjectList } from '../models/projects.model';\nimport { ProjectPreview } from '../models/active-project.models';\n\nconst INITIAL_STATE: IProjectList = {\n  records: []\n};\n\nconst projectListReducer = (lastState: IProjectList = INITIAL_STATE, action: ProjectsAction): IProjectList => {\n  switch (action.type) {\n    case ProjectsActions.LOAD_PROJECTS_SUCCEEDED: return {\n      ...lastState, records: action.payload.map((record: ProjectPreview) => ({ record: record }))\n    };\n  }\n\n  return lastState;\n}\n\nexport const createProjectsReducer = () => {\n  return projectListReducer;\n}\n","import { composeReducers } from '@angular-redux/form';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { equals, indexBy, keys, omit, values } from 'ramda';\nimport { combineReducers, Reducer } from 'redux';\nimport { createPaginateByKey } from './createPaginateByKey';\nimport { LoadPageMeta, LoadPageSucceededMeta } from './schema-actions-factory';\n\nexport const PR_ENTITY_MODEL_MAP = 'pkEntityModelMap'\nexport interface EntityModelAndClass<ModelName> {\n  modelName: ModelName,\n  fkClass: number\n}\n\nexport interface ReducerConfigCollection {\n  [key: string]: ReducerConfig\n}\n\nexport interface ReducerConfig {\n  // wraps everything in facette named by facetteByPk and grouped by action.meta.pk\n  facetteByPk?: string,\n  indexBy?: {\n    keyInStore: string;\n    indexByFn: (item) => string;\n  },\n  groupBy?: {\n    keyInStore: string;\n    groupByFn: (item) => string;\n  }[],\n  equals?: (itemA, itemB) => boolean\n}\n\nexport interface Meta<Model> { items: Model[], pk?: number }\n\n\nexport const by = (name: string) => 'by_' + name;\n// export const paginateName = (pagBy: PaginateByParam[]) => pagBy.map(p => Object.keys(p)[0]).join('__');\n\n// export const pag = (name: string) => 'pag_' + name;\n// export const paginatedBy = (name: string) => pag(by(name));\n\n// export const paginateKey = (pagBy: PaginateByParam[]) => pagBy.map(p => values(p)[0]).join('_');\nexport const paginateBy = 'by_subfield_page'\n\nexport function getFromTo(limit: number, offset: number) {\n  return getStart(limit, offset) + '_' + getEnd(limit, offset);\n}\n\nexport function getEnd(limit: number, offset: number) {\n  return getStart(limit, offset) + limit;\n}\n\nexport function getStart(limit: number, offset: number) {\n  return offset;\n}\n\n/**\n * Creates standard reducers for the given model.\n *\n * Adds indexes according to config.\n *\n * S: Interface of the state (slice of store)\n */\nexport class ReducerFactory<Payload, Model> {\n\n  constructor(public actionPrefix: string, public configs: ReducerConfigCollection) { }\n\n  public createReducers() {\n\n    const reducers = {}\n    U.obj2KeyValueArr(this.configs).forEach(x => {\n      reducers[x.key] = this.createModelReducers(x.key, x.value);\n    });\n\n    const entityModelMapReducers = keys(this.configs).map(modelName => this.createEntityModelMapReducers(modelName))\n    reducers[PR_ENTITY_MODEL_MAP] = composeReducers(...entityModelMapReducers)\n\n    return combineReducers(reducers)\n  }\n\n  private createModelReducers(modelName, config: ReducerConfig) {\n    const actionPrefix = this.actionPrefix;\n    const reducer = (state = {}, action: FluxStandardAction<Payload, Meta<Model>>) => {\n\n      const facette = this.facette(modelName, config)\n\n      if (action.type === actionPrefix + '.' + modelName + '::LOAD') {\n\n        state = facette(action, state, (innerState) => ({\n          // TODO refactor this for partial lodings\n          ...omit([by(config.indexBy.keyInStore)], innerState),\n          loading: true\n        }));\n\n      }\n\n\n      else if (action.type === actionPrefix + '.' + modelName + '::LOAD_SUCCEEDED') {\n        // If action state differs from\n        state = facette(action, state, (innerState) => (\n          {\n            ...this.mergeItemsInState(config, innerState, action),\n            loading: false\n          }))\n      }\n\n\n      else if (action.type === actionPrefix + '.' + modelName + '::UPSERT') {\n        state = facette(action, state, (innerState) => ({\n          ...innerState,\n          [this.updatingBy(config.indexBy.keyInStore)]: this.indexKeyObject(action, config)\n        }))\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::UPSERT_SUCCEEDED') {\n        state = facette(action, state, (innerState) => ({\n          ... this.mergeItemsInState(config, innerState, action\n            // , true\n          ),\n          [this.updatingBy(config.indexBy.keyInStore)]:\n            omit(values(this.indexKeyObject(action, config)), innerState[this.updatingBy(config.indexBy.keyInStore)])\n        }))\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::DELETE') {\n        state = facette(action, state, (innerState) => ({\n          ...innerState,\n          [this.deletingBy(config.indexBy.keyInStore)]: this.indexKeyObject(action, config)\n        }));\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::DELETE_SUCCEEDED') {\n\n        const deletingKey = this.deletingBy(config.indexBy.keyInStore)\n        state = facette(action, state, (innerState) => {\n          innerState = {\n            ...this.deleteItemsFromState(config, action, innerState),\n            [deletingKey]: omit(values(this.indexKeyObject(action, config)), innerState[this.deletingBy(config.indexBy.keyInStore)])\n          }\n          if (!Object.keys(innerState[deletingKey]).length) innerState = omit([deletingKey], innerState);\n          return innerState;\n        })\n\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::REMOVE') {\n        state = facette(action, state, (innerState) => ({\n          ...innerState,\n          [this.removingBy(config.indexBy.keyInStore)]: this.indexKeyObject(action, config)\n        }));\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::REMOVE_SUCCEEDED') {\n\n        const removingKey = this.removingBy(config.indexBy.keyInStore)\n        state = facette(action, state, (innerState) => {\n          innerState = {\n            ...this.deleteItemsFromState(config, action, innerState),\n            [removingKey]: omit(values(this.indexKeyObject(action, config)), innerState[this.removingBy(config.indexBy.keyInStore)])\n          }\n          if (!Object.keys(innerState[removingKey]).length) innerState = omit([removingKey], innerState);\n          return innerState;\n        })\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::FAILED') {\n\n        state = facette(action, state, (innerState) => ({\n          ...innerState,\n          ...omit([by(config.indexBy.keyInStore)], innerState),\n          loading: false\n        }));\n\n      }\n\n\n      else if (action.type === actionPrefix + '.' + modelName + '::LOAD_PAGE') {\n        const meta = action.meta as any as LoadPageMeta;\n        const key = createPaginateByKey(meta.page)\n        const fromTo = getFromTo(meta.page.limit, meta.page.offset);\n\n        state = facette(action, state, (innerState) => ({\n          ...innerState,\n          [paginateBy]: {\n            ...innerState[paginateBy],\n            [key]: {\n              ...(innerState[paginateBy] || {})[key],\n              loading: {\n                ...((innerState[paginateBy] || {})[key] || {}).loading,\n                [fromTo]: true\n              }\n            }\n          }\n        }));\n      }\n      else if (action.type === actionPrefix + '.' + modelName + '::LOAD_PAGE_FAILED') {\n        const meta = action.meta as any as LoadPageMeta;\n\n        const key = createPaginateByKey(meta.page)\n        const fromTo = getFromTo(meta.page.limit, meta.page.offset);\n\n        state = facette(action, state, (innerState) => ({\n          ...innerState,\n          [paginateBy]: {\n            ...innerState[paginateBy],\n            [key]: {\n              ...(innerState[paginateBy] || {})[key],\n              loading: {\n                ...((innerState[paginateBy] || {})[key] || {}).loading,\n                [fromTo]: false\n              }\n            }\n          }\n        }));\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::LOAD_PAGE_SUCCEEDED') {\n        const meta = action.meta as any as LoadPageSucceededMeta;\n        const key = createPaginateByKey(meta.page)\n        const fromTo = getFromTo(meta.page.limit, meta.page.offset);\n        const start = getStart(meta.page.limit, meta.page.offset);\n\n        const rows = {}\n        if (meta.pks) {\n          meta.pks.forEach((pk, i) => {\n            rows[start + i] = pk;\n          })\n        }\n        state = facette(action, state, (innerState) => ({\n          ...innerState,\n          [paginateBy]: {\n            ...innerState[paginateBy],\n            [key]: {\n              ...(innerState[paginateBy] || {})[key],\n              count: meta.count || 0,\n              rows: {\n                ...((innerState[paginateBy] || {})[key] || {}).rows,\n                ...rows\n              },\n              loading: {\n                ...((innerState[paginateBy] || {})[key] || {}).loading,\n                [fromTo]: false\n              }\n            }\n          }\n        }));\n\n      }\n\n      return state;\n    };\n\n\n    return reducer;\n  }\n\n  /**\n   * Creates an map for pk_entity -> modelName on the level of the schema:\n   * example:\n   */\n  private createEntityModelMapReducers(modelName): Reducer<unknown, FluxStandardAction<Payload, Meta<Model>>> {\n    const actionPrefix = this.actionPrefix;\n    const reducer = (state = {}, action: FluxStandardAction<Payload, Meta<Model>>) => {\n      const modelPath = actionPrefix + '.' + modelName;\n\n      if (!action || !action.meta || !action.meta.items || !action.meta.items.length) return state;\n      const items = action.meta.items;\n\n      switch (action.type) {\n        case modelPath + '::LOAD_SUCCEEDED':\n        case modelPath + '::UPSERT_SUCCEEDED':\n          const idx = {}\n          for (let i = 0; i < items.length; i++) {\n            const item = items[i] as any;\n            if (item.pk_entity) {\n              idx[item.pk_entity] = {\n                modelName,\n                fkClass: item.fkClass\n              }\n            }\n          }\n          state = {\n            ...state,\n            ...idx\n          }\n          break;\n\n        case modelPath + '::DELETE_SUCCEEDED':\n        case modelPath + '::REMOVE_SUCCEEDED':\n          const pkEntities = []\n          for (let i = 0; i < items.length; i++) {\n            const item = items[i] as any;\n            if (item.pk_entity) {\n              pkEntities.push(item.pk_entity);\n            }\n          }\n          state = omit(pkEntities, state)\n          break;\n\n        default:\n          break;\n      }\n      return state;\n    };\n    return reducer;\n  }\n\n\n  updatingBy = (name: string) => 'updating_' + by(name);\n  deletingBy = (name: string) => 'deleting_' + by(name);\n  removingBy = (name: string) => 'removing_' + by(name);\n\n\n\n  private facette(modelName: any, config: ReducerConfig) {\n    return (action, state, cb: (innerState) => any) => {\n      let outerState;\n      ({ outerState, state } = this.deFacette(modelName, config, action, outerState, state));\n      const innerState = cb(state);\n      return this.enFacette(modelName, config, action, innerState, outerState);\n    };\n  }\n\n  private deFacette(modelName: string, config: ReducerConfig, action: FluxStandardAction<Payload, { items: Model[]; pk?: number; }>, outerState: any, state: {}) {\n    if (this.isFacetteByPk(config, action)) {\n      // outerState = clone(state);\n      const pk = action.meta.pk || 'repo'\n      // state = !state[config.facetteByPk] ? {} : state[config.facetteByPk][pk] || {};\n      const innerState = !state[config.facetteByPk] ? {} : state[config.facetteByPk][pk] || {};\n      return {\n        outerState: state,\n        state: innerState\n      }\n    }\n    return { outerState, state };\n  }\n\n  private enFacette(modelName: string, config: ReducerConfig, action: FluxStandardAction<Payload, { items: Model[]; pk?: number; }>, state: {}, outerState: any) {\n    if (this.isFacetteByPk(config, action)) {\n      const pk = action.meta.pk || 'repo'\n      state = {\n        ...outerState,\n        [config.facetteByPk]: {\n          ...outerState[config.facetteByPk],\n          [pk]: state\n        }\n      };\n    }\n    return state;\n  }\n\n\n  private isFacetteByPk(config: ReducerConfig, action: FluxStandardAction<Payload, { items: Model[]; pk?: number; }>) {\n    if (config.facetteByPk) {\n      if (!action.meta || action.meta.pk === undefined) throw Error('Facette actionÂ must provide pk for facette');\n      else return true;\n    }\n    else return false;\n  }\n\n\n\n  deleteItemsFromState(config: ReducerConfig, action: FluxStandardAction<Payload, { items: Model[]; }>, state) {\n    const items = action.meta.items;\n    // let state = {}\n    const groupBys = !(config.groupBy && config.groupBy.length) ? [] : config.groupBy;\n    const groups = groupBys.map(i => ({\n      groupByKey: by(i.keyInStore),\n      groupByFn: i.groupByFn,\n    }))\n    const mainIndexKey = by(config.indexBy.keyInStore); // first segment e.g. 'by_pk_entity'\n\n    items.forEach((removedItem) => {\n      // get path segments of new item\n      const itemKey = config.indexBy.indexByFn(removedItem); // second segment e.g. '807060'\n\n      // get old item, if exists\n      const oldItem = state[mainIndexKey] ? state[mainIndexKey][itemKey] : undefined;\n\n      // Q: Does the item exists?\n      if (oldItem) {\n        // A: Yes. use old item does exist\n\n        // remove the removedItem at path in main index\n        state = {\n          ...state,\n          [mainIndexKey]: {\n            ...omit([itemKey], state[mainIndexKey]),\n          }\n        }\n\n        // delete the removedItem at path in the group index\n        groups.forEach(g => {\n          const groupKey = this.getGroupKeyOfItem(g.groupByFn, removedItem)\n          state = {\n            ...state,\n            [g.groupByKey]: {\n              ...state[g.groupByKey],\n              [groupKey]: {\n                ...omit([itemKey], (state[g.groupByKey] || {})[groupKey])\n              }\n            }\n          }\n          // // cleanup paginations\n          // state = this.resetPaginationsByGroup(g.groupByKey, state, groupKey);\n\n        })\n      }\n\n\n    })\n\n    // cleanup main index\n    if (Object.keys(state[mainIndexKey]).length < 1) {\n      state = { ...omit([mainIndexKey], state) }\n    }\n    // cleanup group indices\n    groups.forEach(g => {\n\n      // cleanup groups in group index\n      Object.keys(state[g.groupByKey]).forEach(groupKey => {\n\n        if (Object.keys(state[g.groupByKey][groupKey]).length < 1) {\n          state = {\n            ...state,\n            [g.groupByKey]: omit([groupKey], state[g.groupByKey])\n          }\n        }\n      })\n\n      // cleanup group index\n      if (Object.keys(state[g.groupByKey]).length < 1) {\n        state = { ...omit([g.groupByKey], state) }\n      }\n    })\n\n\n    return state;\n  }\n\n  mergeItemsInState(config: ReducerConfig, state, action: FluxStandardAction<Payload, { items: Model[]; }>\n    // , resetPaginations = false\n  ) {\n    const items = action.meta.items;\n    const groupBys = !(config.groupBy && config.groupBy.length) ? [] : config.groupBy;\n    const groups = groupBys.map(i => ({\n      groupByKey: by(i.keyInStore),\n      groupByFn: i.groupByFn,\n    }))\n\n    const mainIndexKey = by(config.indexBy.keyInStore); // first segment e.g. 'by_pk_entity'\n\n    items.forEach((newItem) => {\n      // get path segments of new item\n      const itemKey = config.indexBy.indexByFn(newItem); // second segment e.g. '807060'\n\n      // get old item, if exists\n      const oldItem = state[mainIndexKey] ? state[mainIndexKey][itemKey] : undefined;\n\n      let itemToSet;\n\n      // Q: Does the item exists, and is it deeply-equal to the new item?\n      const equalsFn = config.equals || equals\n      if (oldItem && equalsFn(newItem, oldItem)) {\n        // A: Yes. use old item as itemToSet\n        itemToSet = oldItem;\n      }\n      else {\n        // A: No. use new item as itemToSet\n        itemToSet = newItem;\n\n        // put the itemToSet at path in main index\n        state = {\n          ...state,\n          [mainIndexKey]: {\n            ...state[mainIndexKey],\n            [itemKey]: itemToSet\n          }\n        }\n\n        // iterate over the group indexes\n        groups.forEach(g => {\n          // remove the oldItem from all group indexes\n          const oldGroupKey = this.getGroupKeyOfItem(g.groupByFn, oldItem)\n          state = {\n            ...state,\n            [g.groupByKey]: {\n              ...state[g.groupByKey],\n              [oldGroupKey]: {\n                ...omit([itemKey], (state[g.groupByKey] || {})[oldGroupKey])\n              }\n            }\n          }\n\n          // add the itemToSet to all group indexes, if not undefined\n          const newGroupKey = this.getGroupKeyOfItem(g.groupByFn, itemToSet)\n          if (newGroupKey !== undefined) {\n            state = {\n              ...state,\n              [g.groupByKey]: {\n                ...state[g.groupByKey],\n                [newGroupKey]: {\n                  ...(state[g.groupByKey] || {})[newGroupKey],\n                  [itemKey]: itemToSet\n                }\n              }\n            }\n          }\n\n        })\n      }\n    })\n\n\n    return state;\n  }\n\n\n  // /**\n  //  * resets pagination within a group, e.g. 'pag_by_fk_property'\n  //  * TODO: check if can be deleted\n  //  */\n  // private resetPaginationsByGroup(groupByKey: string, state: any, groupKey: any, isUpsert = false) {\n  //   const paginateBy = pag(groupByKey);\n  //   if (state[paginateBy] && state[paginateBy][groupKey] && state[paginateBy][groupKey].count !== undefined) {\n  //     state = {\n  //       ...state,\n  //       [paginateBy]: {\n  //         ...state[paginateBy],\n  //         [groupKey]: {\n  //           ...state[paginateBy][groupKey],\n  //           ...(!isUpsert ? {} : { count: state[paginateBy][groupKey].count + 1 }),\n  //           rows: {},\n  //           loading: {}\n  //         }\n  //       }\n  //     };\n  //   }\n  //   return state;\n  // }\n\n  /**\n   * Creates object where the key returned by the configured indexByFn\n   */\n  private indexKeyObject(action: FluxStandardAction<Payload, { items: Model[]; }>, config: ReducerConfig) {\n    return indexBy((i) => (i), action.meta.items\n      // filter items that are not (yet) indexable. This is normally the case, when creating new items that have no pk yet.\n      .filter(item => {\n        try {\n          config.indexBy.indexByFn(item);\n          return true;\n        } catch (error) {\n          return false;\n        }\n      })\n      .map(item => config.indexBy.indexByFn(item)));\n  }\n\n  groupBy(items: any[], groupByFn: (item) => string, indexByFn: (item) => string) {\n    const groups = {}\n    items.forEach(item => {\n      // if the group by key is not possible to create, the item won't be added to the index\n      const groupKey = this.getGroupKeyOfItem(groupByFn, item);\n\n      if (groupKey) {\n        const indexKey = indexByFn(item);\n        groups[groupKey] = { ...groups[groupKey], ...{ [indexKey]: item } }\n      }\n    })\n    return groups;\n  }\n\n\n\n\n  private getGroupKeyOfItem(groupByFn: (item: any) => string, item: any): string {\n    let groupKey\n    try {\n      groupKey = groupByFn(item);\n    } catch (error) {\n\n    }\n    return groupKey;\n  }\n}\n","import { sysDefinitions, sysRoot } from '../reducer-configs/sys.config';\nimport { ReducerFactory } from '../_helpers/reducer-factory';\nexport function createSysReducer() {\n  return new ReducerFactory(sysRoot, sysDefinitions).createReducers()\n}\n","\nimport { ReducerFactory } from '../_helpers/reducer-factory';\nimport { dfhDefinitions } from '../reducer-configs/dfh.config';\n\nexport function createDfhReducer() {\n  return new ReducerFactory('dfh', dfhDefinitions).createReducers()\n}\n","import { ReducerFactory } from '../_helpers/reducer-factory';\nimport { infDefinitions, infRoot } from '../reducer-configs/inf.config';\n\n\n\nexport function createInfReducer() {\n  return new ReducerFactory(infRoot, infDefinitions).createReducers()\n}\n\n\n","import { ReducerFactory } from '../_helpers/reducer-factory';\nimport { datDefinitions, datRoot } from '../reducer-configs/dat.config';\n\nexport function createDatReducer() {\n  return new ReducerFactory(datRoot, datDefinitions).createReducers()\n}\n","import { ReducerFactory } from '../_helpers/reducer-factory';\nimport { proDefinitions, proRoot } from '../reducer-configs/pro.config';\n\n\n\n\nexport function createProReducer() {\n  return new ReducerFactory(proRoot, proDefinitions).createReducers()\n}\n\n\n","import { warDefinitions, warRoot } from '../reducer-configs/war.config';\nimport { ReducerFactory } from '../_helpers/reducer-factory';\n\nexport function createWarReducer() {\n  return new ReducerFactory(warRoot, warDefinitions).createReducers()\n}\n\n\n","import { tabDefinitions, tabRoot } from '../reducer-configs/tab.config';\nimport { ReducerFactory } from '../_helpers/reducer-factory';\n\nexport function createTabReducer() {\n  return new ReducerFactory(tabRoot, tabDefinitions).createReducers()\n}\n","import { composeReducers, defaultFormReducer } from '@angular-redux/form';\nimport { routerReducer } from '@angular-redux/router';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { omit } from 'ramda';\nimport { combineReducers } from 'redux';\nimport { accountRootReducer } from '../state-gui/reducers/account.reducers';\nimport { loadingBarReducer } from '../state-gui/reducers/loading-bar.reducer';\nimport { activeProjectReducer } from '../state-gui/reducers/active-project.reducer';\nimport { informationReducer } from '../state-gui/reducers/entity-list.reducer';\nimport { sourceListReducer } from '../state-gui/reducers/source-list.reducer';\nimport { createProjectsReducer } from '../state-gui/reducers/projects.reducers';\nimport { createSysReducer } from '../state-schema/reducers/sys.reducer';\nimport { createDfhReducer } from '../state-schema/reducers/dfh.reducer';\nimport { createInfReducer } from '../state-schema/reducers/inf.reducer';\nimport { createDatReducer } from '../state-schema/reducers/dat.reducer';\nimport { createProReducer } from '../state-schema/reducers/pro.reducer';\nimport { createWarReducer } from '../state-schema/reducers/war.reducer';\nimport { createTabReducer } from '../state-schema/reducers/tab.reducer';\n\n\nexport const INIT_SANDBOX_STATE = 'INIT_SANDBOX_STATE';\nexport const sandboxStateReducer = (lastState = {}, action: FluxStandardAction<any>) => {\n  if (action.type === INIT_SANDBOX_STATE) {\n    lastState = {\n      ...lastState,\n      ...action.payload\n    };\n  }\n  return lastState;\n};\n\n\nexport const pendingRequestReducer = (state = {}, action) => {\n\n  if (action && action.meta && action.meta.addPending) {\n    const uuid = action.meta.addPending;\n    state = {\n      ...state,\n      [uuid]: true\n    }\n    // console.log('add ' + uuid + ' ' + Date.now())\n  }\n\n  if (action && action.meta && action.meta.removePending) {\n    const uuid = action.meta.removePending;\n    state = {\n      ...omit([uuid], state)\n    }\n  }\n  return state;\n}\n\n\nexport const resolvedRequestReducer = (state = {}, action) => {\n\n  if (action && action.meta && action.meta.removePending) {\n    const uuid = action.meta.removePending;\n    state = {\n      ...state,\n      [uuid]: action.meta\n    }\n  }\n  return state;\n}\n\nexport const cleanupResolved = (state = {}, action) => {\n\n  if (action && action.type === 'CLEAN_UP_RESOLVED') {\n    const uuid = action.meta.uuid;\n    state = {\n      ...omit([uuid], state)\n    }\n    // console.log('resolve ' + uuid + ' ' + Date.now().toString())\n  }\n  return state;\n}\nexport const SET_APP_STATE = 'SET_APP_STATE';\nexport const setAppState = (state = {}, action) => {\n  if (action && action.type === SET_APP_STATE) {\n    state = action.payload\n  }\n  return state;\n}\n\nexport const rootReducer = composeReducers(\n  defaultFormReducer(),\n  combineReducers({\n    account: accountRootReducer,\n    loadingBar: loadingBarReducer,\n    activeProject: activeProjectReducer,\n    routes: routerReducer,\n    information: informationReducer,\n    sources: sourceListReducer,\n    sandboxState: sandboxStateReducer,\n    projects: createProjectsReducer(),\n    sys: createSysReducer(),\n    dfh: createDfhReducer(),\n    inf: createInfReducer(),\n    dat: createDatReducer(),\n    pro: createProReducer(),\n    war: createWarReducer(),\n    tab: createTabReducer(),\n    pending: pendingRequestReducer,\n    resolved: composeReducers(resolvedRequestReducer, cleanupResolved),\n  }),\n  setAppState\n)\n","// Angular-redux ecosystem stuff.\n// @angular-redux/form and @angular-redux/router are optional\n// extensions that sync form and route location state between\n// our store and Angular.\nimport { DevToolsExtension, NgRedux, NgReduxModule } from '@angular-redux/store';\nimport { Inject, InjectionToken, ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { SlimLoadingBarModule } from '@cime/ngx-slim-loading-bar';\nimport { ToastyModule } from '@cime/ngx-toasty';\nimport { SdkLb3Module } from '@kleiolab/lib-sdk-lb3';\nimport { Configuration, ConfigurationParameters, SdkLb4Module } from '@kleiolab/lib-sdk-lb4';\nimport { equals } from 'ramda';\nimport dynamicMiddlewares from 'redux-dynamic-middlewares';\nimport { createEpicMiddleware } from 'redux-observable-es6-compat';\nimport { IAppState } from '../root/models/model';\nimport { RootEpics } from '../root/root-epics';\nimport { rootReducer } from '../root/root-reducer';\n\n\n/**\n * Function to use in combination with rxjs/operator .filter()\n * in order to get only actions dispached with a fractalkey\n * equal to the provided path.\n *\n * example:\n * pipe(\n *    filter(action => ofSubstore(c.basePath)(action)),\n *    ofType('Foo')\n * )\n * @param path\n */\nexport const ofSubstore = (path: string[]) => (action): boolean => {\n  if (!('@angular-redux::fractalkey' in action)) return false;\n\n  const actionPath = JSON.parse(action['@angular-redux::fractalkey']);\n  const bool = equals(actionPath, path);\n  return bool;\n}\n\nexport const APP_INITIAL_STATE = new InjectionToken<IAppState>('app.INITIAL_STATE');\n\nexport function apiConfigFactory(): Configuration {\n  const params: ConfigurationParameters = {\n    // set configuration parameters here.\n  }\n  return new Configuration(params);\n}\n\n@NgModule({\n  imports: [\n    NgReduxModule,\n\n    // for gui-state epics\n    SlimLoadingBarModule,\n    ToastyModule.forRoot(),\n\n  ],\n  providers: [\n\n    // AccountActions,\n    // ActiveProjectActions,\n    // LoadingBarActions,\n    // NotificationsAPIActions,\n\n    // AccountEpics,\n    // ActiveProjectEpics,\n    // LoadingBarEpics,\n    // NotificationsAPIEpics,\n\n    // DatActions,\n    // DfhActions,\n    // InfActions,\n    // ProActions,\n    // SysActions,\n    // TabActions,\n    // WarActions,\n\n    // DatEpics,\n    // DfhEpics,\n    // InfEpics,\n    // ProEpics,\n    // SysEpics,\n    // TabEpics,\n    // WarEpics,\n\n    // RootEpics,\n    // // SchemaActionsFactory,\n    // SchemaObjectService,\n    // { provide: APP_INITIAL_STATE, useValue: {} }\n  ]\n})\nexport class ReduxModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: ReduxModule,\n      providers: [{ provide: APP_INITIAL_STATE, useValue: {} }]\n    };\n  }\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    devTools: DevToolsExtension,\n    rootEpics: RootEpics,\n    @Optional() @SkipSelf() parentModule?: ReduxModule,\n    @Optional() sdkLb3?: SdkLb3Module,\n    @Optional() sdkLb4?: SdkLb4Module,\n    @Optional() @Inject(APP_INITIAL_STATE) initialState?: IAppState\n  ) {\n    const errors: string[] = []\n    if (parentModule) errors.push('ReduxModule is already loaded. Import in your base AppModule only.');\n    if (!sdkLb3) errors.push('You need to import the SdkLb3Module in your AppModule!');\n    if (!sdkLb4) errors.push('You need to import the SdkLb4Module in your AppModule!');\n    if (errors.length) throw new Error(errors.join('\\n'));\n    if (!initialState) initialState = {}\n\n    const epicMiddleware = createEpicMiddleware();\n\n    // Tell Redux about our reducers and epics. If the Redux DevTools\n    // chrome extension is available in the browser, tell Redux about\n    // it too.\n    ngRedux.configureStore(\n      // RootReducer\n      rootReducer,\n\n      // Initial state\n      initialState,\n\n      // Middleware\n      [\n        // createLogger(),\n        epicMiddleware,\n        dynamicMiddlewares,\n      ],\n      // Enhancers\n      devTools.isEnabled() ? [devTools.enhancer()] : []\n    );\n\n    // Apply rootEpic\n    epicMiddleware.run(rootEpics.getRootEpic());\n\n\n    // // Enable syncing of Angular router state with our Redux store.\n    // if (ngReduxRouter) {\n    //     ngReduxRouter.initialize();\n    // }\n\n    // Enable syncing of Angular form state with our Redux store.\n    // provideReduxForms(ngRedux);\n  }\n}\n","import { DatDigital, InfAppellation, InfDimension, InfLangString, InfLanguage, InfPersistentItem, InfPlace, InfStatement, InfTemporalEntity, InfTextProperty, InfTimePrimitive, ProInfoProjRel, ProProject } from '@kleiolab/lib-sdk-lb3';\nimport { WarEntityPreview } from '@kleiolab/lib-sdk-lb4';\nimport { IAccount } from '../../state-gui/models/account.model';\nimport { ProjectDetail } from '../../state-gui/models/active-project.models';\nimport { Information } from '../../state-gui/models/entity-list.models';\nimport { LoadingBar } from '../../state-gui/models/loading-bar.models';\nimport { IProjectList } from '../../state-gui/models/projects.model';\nimport { SourceList } from '../../state-gui/models/source-list.models';\nimport { Dat } from '../../state-schema/models/dat.models';\nimport { Dfh } from '../../state-schema/models/dfh.models';\nimport { Inf } from '../../state-schema/models/inf.models';\nimport { Pro } from '../../state-schema/models/pro.models';\nimport { Sys } from '../../state-schema/models/sys.models';\nimport { Tab } from '../../state-schema/models/tab.models';\nimport { War } from '../../state-schema/models/war.models';\n\n\nexport interface InfObject {\n  persistent_item?: InfPersistentItem[]\n  temporal_entity?: InfTemporalEntity[]\n  statement?: InfStatement[]\n  place?: InfPlace[]\n  language?: InfLanguage[]\n  appellation?: InfAppellation[]\n  time_primitive?: InfTimePrimitive[]\n  text_property?: InfTextProperty[]\n  lang_string?: InfLangString[]\n  dimension?: InfDimension[]\n}\nexport interface ProObject {\n  info_proj_rel?: ProInfoProjRel[]\n  project?: ProProject[]\n}\nexport interface DatObject {\n  digital?: DatDigital[]\n}\n\nexport interface WarObject {\n  entity_preview?: WarEntityPreview[]\n}\n\nexport interface SchemaObject {\n  inf?: InfObject\n  pro?: ProObject\n  dat?: DatObject\n  war?: WarObject\n}\n\nexport interface PaginationObject {\n  count: number\n  schemas: SchemaObject\n  statements: number[]\n}\n\nexport interface IAppState {\n  account?: IAccount,\n  // backoffice?: Backoffice,\n  loadingBar?: LoadingBar,\n  projects?: IProjectList\n  sys?: Sys\n  dfh?: Dfh\n  inf?: Inf\n  dat?: Dat\n  pro?: Pro\n  war?: War\n  tab?: Tab\n  activeProject?: ProjectDetail\n  routes?: any,\n  information?: Information,\n  sources?: SourceList,\n  sandboxState?: any,\n  pending?: ByPk<string>\n}\n\n// generic interfaces used by different store modules\nexport interface ByPk<T> {\n  [pk: string]: T\n}\n\n","import { PubAccount } from '@kleiolab/lib-sdk-lb4';\n\nexport interface AccountRole {\n  id: number\n  name: string\n}\nexport interface IAccount {\n  account: PubAccount,\n  roles?: AccountRole[]\n}\n","import { DatChunk, InfPersistentItem, InfTemporalEntity, ProDfhClassProjRel, SysAppContextInterface, SysClassFieldInterface } from '@kleiolab/lib-sdk-lb3';\nimport { DfhProperty, InfLanguage, WarEntityPreview } from '@kleiolab/lib-sdk-lb4';\nimport { Observable } from 'rxjs';\nimport { Types } from './active-project/types.models';\nimport { EntityDetail } from './active-project/entity-detail';\nimport { TabBase } from './active-project/tab-layout.models';\nimport { ProjectSettingsData } from './active-project/project-settings-data.models';\n\n\nexport interface ProjectPreview {\n  label?: string,\n  description?: string,\n  default_language?: InfLanguage,\n  pk_project?: number\n}\n\nexport interface EntityByPk<T> {\n  [pk_entity: number]: T\n}\n\nexport interface VersionEntity<T> {\n  _latestVersion: number, // version number of the latest version\n  [v: number]: T\n}\n\nexport interface EntityVersionsByPk<T> {\n  [pk_entity: number]: VersionEntity<T>\n}\n\nexport interface ChunkList { [pk_entity: number]: DatChunk }\nexport interface PeItList { [pk_entity: number]: InfPersistentItem }\nexport interface TeEnList { [pk_entity: number]: InfTemporalEntity }\nexport interface PropertyList { [pk_entity: string]: DfhProperty; }\nexport interface TypePeIt extends InfPersistentItem { fk_typed_class: number; } // TODO remove if replaced by TypePreview\nexport interface TypesByClass { [dfh_pk_class: string]: TypePeIt[]; }\nexport interface TypesByPk { [pk_entity: string]: TypePeIt; }\n\nexport interface TypePreview extends WarEntityPreview { fk_typed_class: number; }\nexport interface TypePreviewsByClass { [dfh_pk_class: string]: TypePreview[]; }\nexport interface TypePreviewList { [pk_entity: string]: TypePreview[]; }\n// export interface ComQueryByPk { [key: string]: ProQuery }\n\n// export interface HasTypePropertyList { [dfh_pk_property: number]: HasTypePropertyReadable }\n\nexport type IconType = 'text' | 'table' | 'persistent-entity' | 'temporal-entity' | 'source' | 'expression-portion' | 'analysis' | 'query' | 'visual' | 'story' | 'settings';\n\nexport interface Panel {\n  id: number;\n  tabs: PanelTab<any>[];\n}\n\nexport type ListType = '' | 'entities' | 'sources' | 'analysis' | 'queries' | 'visuals' | 'stories' | 'settings';\nexport interface PanelTab<D> {\n  // wheter tab is active or not\n  active: boolean;\n  // the root component included in this tab, in dash separate minuscles: PeItDetailComponent -> 'entity-detail'\n  component: 'text-detail' | 'table-detail' | 'entity-detail' | 'te-en-detail' | 'analysis-detail' | 'query-detail' | 'visual-detail' | 'ontome-profiles-settings' | 'classes-settings' | 'contr-vocab-settings';\n  // icon to be displayed in tab, e.g.: gv-icon-source\n  icon: IconType\n  // name of the pathSegment under 'activeProject', used to generate the path: ['activeProject', pathSegment, uiId]\n  pathSegment?: 'textDetails' | 'tableDetails' | 'peItDetails' | 'teEnDetails' | 'analysisDetails' | 'queryDetails' | 'visualDetails' | 'ontomeProfilesSettings' | 'classesSettings' | 'contrVocabSettings';\n  // data to pass to component via input variabales\n  data?: D\n  // generated by reducer: base path where the component will be attatch his SubStore\n  path?: string[];\n  // generated on the fly, never in store\n  tabTitle$?: Observable<string>;\n  loading$?: Observable<boolean>;\n}\nexport interface PeItTabData {\n  // Used by peIt detail state creato\n  peItDetailConfig?: {\n    peItDetail?: EntityDetail\n    // stateSettings?: StateSettings\n  }\n}\n// export interface TeEntTabData {\n//   // Used by teEnt detail state creato\n//   teEntDetailConfig?: {\n//     teEntDetail?: TeEntDetail\n//     // stateSettings?: StateSettings\n//   }\n// }\nexport interface AnalysisTabData {\n  pkEntity?: number;\n  fkAnalysisType?: number;\n}\nexport interface TabData {\n  pkEntity?: number;\n  // classAndTypePk?: ClassAndTypePk;\n\n  pkProperty?: number;\n\n  // Used by peIt detail state creato\n  peItDetailConfig?: {\n    peItDetail?: EntityDetail\n    // stateSettings?: StateSettings\n  }\n\n  // // Used by teEnt detail state creato\n  // teEntDetailConfig?: {\n  //   teEntDetail?: TeEntDetail\n  //   // stateSettings?: StateSettingsÃ\n  // }\n}\n\nexport interface RamSource {\n  pkEntity?: number,\n  chunk?: DatChunk;\n}\n\nexport interface ProjectDetail extends ProjectPreview {\n\n  /******************************************************************\n   * CRM and Project Config\n   */\n\n  // Conceptional Reference Model\n  // crm?: ProjectCrm,\n  loadingConfigData?: boolean;\n  configDataInitialized?: boolean;\n\n  /******************************************************************\n   * Information Cache\n   */\n\n  // inf?: Inf;\n\n  // // data unit previews\n  // entityPreviews?: EntityPreviewList;\n\n  // // types by pk class\n  // typesByClass?: TypesByClass;\n\n  // // types by pk_entity\n  // typesByPk?: TypesByPk;\n\n  // // data unit details for display in modal\n  // peItModals?: PeItDetailList;\n\n  // // chunk List\n  // chunks?: ChunkList;\n\n  // // InfPersistentItems with statements by pk_entity\n  // peItGraphs?: PeItList;\n\n  // // InfPersistentItems with statements by pk_entity\n  // teEnGraphs?: TeEnList;\n\n  // // ComQuery list by pk_entity\n  // comQueryVersionsByPk?: EntityVersionsByPk<ProQuery>;\n  // comQueryLoading?: boolean;\n  // comQueryVersionLoading?: { [key: string]: boolean };\n\n  // // ComVisual list by pk_entity\n  // comVisualVersionsByPk?: EntityVersionsByPk<ProVisual>;\n  // comVisualLoading?: boolean;\n  // comVisualVersionLoading?: boolean;\n\n\n  /******************************************************************\n   * Layout â Tabs\n   */\n  list?: ListType;\n\n  panels?: Panel[]\n\n  // index of focused Panel\n  focusedPanel?: number;\n\n  // serial number for panels\n  panelSerial?: number;\n\n  // serial number for uiId\n  uiIdSerial?: number;\n\n  tabLayouts?: { [uiId: string]: TabBase }\n\n  // reference the uiId within the path of the tab (uiId has nothing to do with pk_entity)\n  textDetails?: { [uiId: string]: TabBase }\n\n  // reference the uiId within the path of the tab (uiId has nothing to do with pk_entity)\n  peItDetails?: { [uiId: string]: EntityDetail }\n\n  // // reference the uiId within the path of the tab (uiId has nothing to do with pk_entity)\n  // teEnDetails?: { [uiId: string]: TeEntDetail }\n\n  // reference the uiId within the path of the tab (uiId has nothing to do with pk_entity)\n  analysisDetails?: { [uiId: string]: any }\n\n  // // reference the uiId within the path of the tab (uiId has nothing to do with pk_entity)\n  // queryDetails?: { [uiId: string]: QueryDetail }\n\n  // // reference the uiId within the path of the tab (uiId has nothing to do with pk_entity)\n  // visualDetails?: { [uiId: string]: VisualDetail }\n\n  // reference the uiId within the path of the tab (uiId has nothing to do with pk_entity)\n  classesSettings?: { [uiId: string]: ProjectSettingsData }\n\n  // reference the uiId within the path of the tab (uiId has nothing to do with pk_entity)\n  contrVocabSettings?: { [uiId: string]: Types }\n\n  // reference the uiId within the path of the tab (uiId has nothing to do with pk_entity)\n  ontomeProfilesSettings?: { [uiId: string]: any }\n\n  // /******************************************************************\n  //  * Layout â Modals\n  //  */\n\n  // addModal?: CreateOrAddEntity;\n\n\n  /******************************************************************\n   * Things for Mentionings / Annotations\n   */\n\n\n  // // the chunk that is used to create mentionings\n  // selectedChunk?: DatChunk;\n\n  // if true, the text editor behaves so that each node can be clicked to de-/activate\n  refiningChunk?: boolean;\n\n  // true, when mentioning is being created.\n  // TODO: check, if needed\n  creatingMentioning?: boolean;\n\n  // Array of pk_entities of mentionings (a.k.a. statements of property \"is mentioned in\")\n  // that are focused by a click on a chunk (in text editor)\n  mentioningsFocusedInText?: number[]\n\n  // Array of pk_entities of mentionings (a.k.a. statements of property \"is mentioned in\")\n  // that are focused by click on mentioning in a list/table view\n  mentioningsFocusedInTable?: number[]\n\n}\n\nexport interface ProjectCrm {\n  classes?: ClassConfigList;\n  properties?: PropertyList\n}\n\nexport interface ClassConfigList { [dfh_pk_class: number]: ClassConfig }\n\nexport interface ClassConfig {\n  pkEntity: number;\n  dfh_pk_class: number;\n\n  label: string;\n  dfh_standard_label: string;\n\n  profileLabels: string;\n  profilePks: number[];\n\n  projRel?: ProDfhClassProjRel;\n  isInProject?: boolean; // reflects the enabled / disabled state from data settings of the project\n  changingProjRel: boolean;\n\n  subclassOf?: 'peIt' | 'teEnt' | 'other'; // to distinguish TeEnts from PeIts\n\n  subclassOfType?: boolean; // true if subclass of E55 Type\n\n  scopeNote: string;\n\n  dfh_identifier_in_namespace: string;\n\n  // propertyFields?: PropertyFieldList;\n  uiContexts?: {\n    [pk: number]: UiContext\n  }\n\n  required_by_sources?: boolean\n  required_by_entities?: boolean\n  required_by_basics?: boolean\n  excluded_from_entities?: boolean\n}\n\nexport interface UiContext extends SysAppContextInterface {\n  uiElements?: UiElement[]\n}\n\n// short version of ComUiContextConfig\nexport interface UiElement {\n  fk_property?: number,\n  property_is_outgoing?: boolean,\n  propertyFieldKey?: string, // TODO: merge the propertyFieldKey and propSetKey to fieldKey\n  propSetKey?: string,\n  fk_class_field?: number,\n  class_field?: SysClassFieldInterface\n  ord_num: number\n}\n","export type RightPanelTab = 'linked-sources' | 'linked-digitals' | 'content-tree';\n\nexport interface PeItDetailList { [pk_entity: number]: EntityDetail };\n\n\nexport class EntityDetail {\n\n\n  // _fields?: FieldList;\n\n  pkEntity?: number;\n\n  /** Left Panel Visibility */\n\n  // the properties with information about the peIt\n  showProperties?= false;\n\n  // the right area\n  showRightArea?= true;\n\n  /** Right panel */\n  rightPanelTabs?: RightPanelTab[] = []\n  rightPanelActiveTab?= 0; // index of the active tab\n\n  // the bar to above the properties\n  // showPropertiesHeader?= true;\n\n  // the header with name of peIt\n  showHeader?= true;\n\n\n  constructor(data?: EntityDetail) {\n    Object.assign(this, data);\n  }\n\n\n}\n","import { ClassConfig } from '../active-project.models';\n\nexport type EntityType = 'teEnt' | 'peIt' | 'other';\n\n\n// Class of this slice of store\nexport class ProjectSettingsData {\n  items?: ClassConfig[];\n  // profiles?: DfhClassProfileView[];\n  tabTitle?: string;\n  loading?: boolean;\n  error?: any;\n\n  constructor(data?: ProjectSettingsData) {\n    Object.assign(this, data);\n  }\n}\n","export type TabLayoutMode = 'left-only' | 'right-only' | 'both';\n\n// Class of this slice of store\nexport class TabBase {\n\n  pkEntity?: number;\n\n  tabTitle?: string;\n\n  tabTooltip?: string;\n\n  loading?: boolean;\n\n  layoutMode?: TabLayoutMode;\n\n  constructor(data?: TabBase) {\n    Object.assign(this, data);\n  }\n}\n","\n\n// Class of this slice of store\nexport class Types {\n  items?: {};\n  edit?: boolean;\n  loading?: boolean;\n  error?: any;\n\n  // title in the tab\n  tabTitle?: string;\n\n  constructor(data?: Types) {\n    Object.assign(this, data);\n  }\n}\n","import { EntitySearchHit } from '@kleiolab/lib-sdk-lb4';\n// Class of this slice of store\nexport class List {\n    searchString?: string;\n    // Array of dfh_pk_class of those classes that may appear in the list\n    pkAllowedClasses?: number[];\n    collectionSize?: number;\n    items?: EntitySearchHit[];\n    loading?: boolean;\n    error?: any;\n    constructor(data?: List) {\n        Object.assign(this, data);\n        if (true) {\n        }\n        else {\n        }\n    }\n}\n","export interface LoadingBar {\n  loading?: boolean;\n  progress?: number;\n}\n","import { ToastOptions } from '@cime/ngx-toasty';\n\n// Interface of this slice of store\nexport interface NotificationsI {\n    type: 'info' | Â 'success' | Â 'wait' | 'error' | 'warning';\n    options: ToastOptions;\n}\n\n// Class of this slice of store\nexport class Notifications implements NotificationsI {\n    type: 'info' | Â 'success' | Â 'wait' | 'error' | 'warning';\n    options: ToastOptions;\n\n    constructor(data?: NotificationsI) {\n        Object.assign(this, data);\n    }\n}\n","import { ProjectPreview } from './active-project.models';\n\nexport interface IProject {\n  record: ProjectPreview\n}\n\nexport interface IProjectList {\n  records: IProject[]\n}\n","import { DatColumn, DatNamespace, DatTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { DatClassColumnMapping, DatDigital } from '@kleiolab/lib-sdk-lb4';\nimport { ByPk } from '../../root/models/model';\n\n\n\n\nexport class DigitalSlice {\n  by_pk_entity__entity_version?: ByPk<DatDigital>;\n  by_pk_entity?: ByPk<ByPk<DatDigital>>;\n  by_pk_text?: ByPk<ByPk<DatDigital>>;\n  loading?: boolean\n}\nexport class ChunkSlice {\n  by_pk_entity?: ByPk<DatDigital>;\n  by_fk_text?: ByPk<ByPk<DatDigital>>;\n  loading?: boolean\n}\n\nexport class ColumnSlice {\n  by_pk_entity?: ByPk<DatColumn>;\n  by_fk_digital?: ByPk<ByPk<DatColumn>>;\n}\n\nexport class ClassColumnMappingSlice {\n  by_pk_entity?: ByPk<DatClassColumnMapping>;\n  by_fk_column?: ByPk<ByPk<DatClassColumnMapping>>;\n}\n\nexport class TextPropertySlice {\n  by_pk_entity?: ByPk<DatTextProperty>;\n  by_fk_digital?: ByPk<ByPk<DatTextProperty>>;\n}\n\nexport class NamespaceSlice {\n  by_pk_entity?: ByPk<DatNamespace>;\n  by_fk_project?: ByPk<ByPk<DatNamespace>>;\n  loading?: boolean\n}\n\nexport interface Dat {\n  digital?: DigitalSlice;\n  chunk?: ChunkSlice;\n  column?: ColumnSlice;\n  text_property?: TextPropertySlice;\n}\n\n\n\n\n","import { DfhLabel, DfhProfile } from '@kleiolab/lib-sdk-lb3';\nimport { DfhClass, DfhProperty } from '@kleiolab/lib-sdk-lb4';\nimport { ByPk } from '../../root/models/model';\n\n\nexport class DfhProfileSlice {\n  by_pk_profile?: ByPk<DfhProfile>;\n\n  loading?: boolean; // todo remove in reducer factory then here\n}\n\nexport class DfhClassSlice {\n  by_pk_class?: ByPk<DfhClass>;\n  by_basic_type?: ByPk<ByPk<DfhClass>>;\n  loading?: boolean; // todo remove in reducer factory then here\n}\n\nexport class DfhPropertySlice {\n  by_pk_property?: ByPk<ByPk<DfhProperty>>;\n  by_has_domain__fk_property?: ByPk<ByPk<DfhProperty>>;\n  by_has_range__fk_property?: ByPk<ByPk<DfhProperty>>;\n  by_has_domain?: ByPk<ByPk<DfhProperty>>;\n  by_has_range?: ByPk<ByPk<DfhProperty>>;\n  by_pk_property__has_domain__has_range?: ByPk<DfhProperty>;\n  by_is_has_type_subproperty?: ByPk<ByPk<DfhProperty>>;\n\n  loading?: boolean; // todo remove in reducer factory then here\n}\n\nexport class DfhLabelSlice {\n  by_fks?: ByPk<DfhLabel>;\n  by_fk_class__type?: ByPk<ByPk<DfhLabel>>;\n  by_fk_property__type?: ByPk<ByPk<DfhLabel>>;\n  by_fk_profile__type?: ByPk<ByPk<DfhLabel>>;\n\n  loading?: boolean; // todo remove in reducer factory then here\n}\n\nexport interface Dfh {\n  profile?: DfhProfileSlice;\n  klass?: DfhClassSlice;\n  property?: DfhPropertySlice;\n  label?: DfhLabelSlice;\n\n  pkEntityModelMap: ByPk<{ modelName: string }>\n}\n","import { InfAppellation, InfDimension, InfLangString, InfLanguage, InfPersistentItem, InfPlace, InfTemporalEntity, InfTextProperty, InfTimePrimitive } from '@kleiolab/lib-sdk-lb3';\nimport { InfStatement } from '@kleiolab/lib-sdk-lb4';\nimport { ByPk } from '../../root/models/model';\n\ninterface PaginationInfo {\n  loading: {\n    [key: string]: boolean\n  },\n  count: number,\n  rows: {\n    [key: string]: number\n  }\n}\nexport class InfPersistentItemSlice {\n  by_pk_entity?: ByPk<InfPersistentItem>;\n  by_fk_class?: ByPk<ByPk<InfPersistentItem>>;\n  loading?: boolean\n}\n\nexport class InfTemporalEntitySlice {\n  by_pk_entity?: ByPk<InfTemporalEntity>;\n  by_fk_class?: ByPk<ByPk<InfPersistentItem>>;\n  loading?: boolean\n}\n\nexport class InfStatementSlice {\n  by_pk_entity?: ByPk<InfStatement>;\n  by_subject?: ByPk<ByPk<InfStatement>>;\n  by_object?: ByPk<ByPk<InfStatement>>;\n  'by_subject+property'?: ByPk<ByPk<InfStatement>>;\n  'by_object+property'?: ByPk<ByPk<InfStatement>>;\n  by_fk_subject_data?: ByPk<ByPk<InfStatement>>;\n  by_subfield_page?: ByPk<PaginationInfo>\n  loading?: boolean\n}\n\nexport class InfPlaceSlice {\n  by_pk_entity?: ByPk<InfPlace>;\n  loading?: boolean\n}\n\nexport class InfTimePrimitiveSlice {\n  by_pk_entity?: ByPk<InfTimePrimitive>;\n  loading?: boolean\n}\n\nexport class InfLanguageSlice {\n  by_pk_entity?: ByPk<InfLanguage>;\n  loading?: boolean\n}\n\nexport class InfAppellationSlice {\n  by_pk_entity?: ByPk<InfAppellation>;\n  loading?: boolean\n}\n\n\nexport class InfLangStringSlice {\n  by_pk_entity?: ByPk<InfLangString>;\n  loading?: boolean\n}\n\n\nexport class InfDimensionSlice {\n  by_pk_entity?: ByPk<InfDimension>;\n  loading?: boolean\n}\n\nexport class InfTextPropertySlice {\n  by_pk_entity?: ByPk<InfTextProperty>;\n  by_fk_concerned_entity__fk_class_field?: ByPk<ByPk<InfTextProperty>>;\n  by_fk_concerned_entity?: ByPk<ByPk<InfTextProperty>>;\n  loading?: boolean\n}\n\n\nexport interface Inf {\n  persistent_item?: InfPersistentItemSlice;\n  temporal_entity?: InfTemporalEntitySlice;\n  statement?: InfStatementSlice;\n  place?: InfPlaceSlice;\n  time_primitive?: InfTimePrimitiveSlice;\n  language?: InfLanguageSlice;\n  appellation?: InfAppellationSlice;\n  lang_string?: InfLangStringSlice;\n  dimension?: InfDimensionSlice;\n  text_property?: InfTextPropertySlice;\n\n  pkEntityModelMap?: ByPk<{ modelName: string }>\n}\n\n\n\n\n","import { ProClassFieldConfig, ProDfhClassProjRel, ProDfhProfileProjRel, ProInfoProjRel, ProProject, ProTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { ProAnalysis } from '@kleiolab/lib-sdk-lb4';\nimport { ByPk } from '../../root/models/model';\n\nexport interface ProProjectSlice {\n  by_pk_entity?: ByPk<ProProject>;\n}\n\nexport interface ProInfoProjRelSlice {\n  by_fk_project__fk_entity?: ByPk<ProInfoProjRel>;\n  loading?: boolean\n}\n\nexport interface ProDfhClassProjRelSlice {\n  by_fk_project__fk_class?: ByPk<ProDfhClassProjRel>;\n  by_fk_project__enabled_in_entities?: ByPk<ByPk<ProDfhClassProjRel>>;\n  loading?: boolean\n}\nexport interface ProDfhProfileProjRelSlice {\n  by_fk_project__fk_profile?: ByPk<ProDfhProfileProjRel>;\n  by_fk_project__enabled?: ByPk<ByPk<ProDfhProfileProjRel>>;\n  loading?: boolean\n}\n\nexport interface ProClassFieldConfigSlice {\n  by_fk_project__fk_class?: ByPk<ProClassFieldConfig>;\n  loading?: boolean\n}\n\nexport interface ProTextPropertySlice {\n  by_pk_entity?: ProTextProperty;\n  by_fk_project__fk_property__fk_domain_class__fk_range_class?: ByPk<ProTextProperty>;\n  loading?: boolean\n}\nexport interface ProAnalysisSlice {\n  by_pk_entity?: ProAnalysis;\n}\n\nexport interface Pro {\n  info_proj_rel?: ProInfoProjRelSlice;\n  dfh_profile_proj_rel?: ProDfhProfileProjRelSlice;\n  dfh_class_proj_rel?: ProDfhClassProjRelSlice;\n  class_field_config?: ProClassFieldConfigSlice;\n  text_property?: ProTextPropertySlice;\n  analysis?: ProAnalysisSlice;\n}\n\n\n\n\n","import { SysSystemRelevantClass } from '@kleiolab/lib-sdk-lb3';\nimport { SysConfigValue } from '@kleiolab/lib-sdk-lb4';\nimport { ByPk } from '../../root/models/model';\n\nexport interface SysRelevantClassSlice {\n  by_pk_entity?: ByPk<SysSystemRelevantClass>;\n  by_fk_class?: ByPk<ByPk<SysSystemRelevantClass>>;\n  by_required_by_sources?: ByPk<ByPk<SysSystemRelevantClass>>;\n  by_required?: ByPk<ByPk<SysSystemRelevantClass>>;\n  loading?: boolean;\n}\n\n// export interface SysAnalysisTypeSlice {\n//   by_pk_entity?: ByPk<SysAnalysisType>;\n// }\nexport interface SysConfigSlice {\n  by_main?: ByPk<SysConfigValue>;\n  loading?: boolean;\n}\n\nexport interface Sys {\n  system_relevant_class?: SysRelevantClassSlice\n  config?: SysConfigSlice\n\n  pkEntityModelMap: ByPk<{ modelName: string }>\n}\n","import { TabCell } from '@kleiolab/lib-sdk-lb4';\nimport { ByPk } from '../../root/models/model';\n\nexport class TabCellSlice {\n  by_pk_cell?: ByPk<TabCell>;\n  by_fk_column_fk_row?: ByPk<ByPk<TabCell>>;\n}\n\nexport interface Tab {\n  cell?: TabCellSlice;\n}\n\n\n\n\n","import { WarEntityPreview } from '@kleiolab/lib-sdk-lb4';\nimport { ByPk } from '../../root/models/model';\n\nexport interface WarEntityPreviewSlice {\n  by_pk_entity?: ByPk<WarEntityPreview>;\n}\n\nexport interface War {\n  entity_preview?: WarEntityPreviewSlice;\n}\n\n\n\n\n"],"names":["tslib_1.__decorate","MetaData","INITIAL_STATE"],"mappings":"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"}