{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducer-configs/dat.config.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducer-configs/inf.config.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducer-configs/pro.config.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducer-configs/sys.config.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducer-configs/tab.config.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducer-configs/war.config.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/_helpers/schema-actions-factory.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/actions/dat.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/actions/dfh.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducer-configs/dfh.config.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/_helpers/inf-action-factory.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/actions/inf.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/actions/pro.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/actions/sys.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/actions/tab.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/actions/war.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/models/dat.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/models/dfh.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/models/inf.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/models/tab.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/actions/account.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/actions/active-project.action.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/actions/entity-list.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/actions/loading-bar.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/actions/notifications.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/actions/projects.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/actions/source-list.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/epics/account.epics.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/epics/active-project.epics.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/epics/loading-bar.epics.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/epics/notifications.epics.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/models/entity-list.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/models/list.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/models/notifications.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/models/source-list.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/models/active-project/entity-detail.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/models/active-project/project-settings-data.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/models/active-project/tab-layout.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/models/active-project/types.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/reducers/account.reducers.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/reducers/active-project.reducer.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/reducers/entity-list.reducer.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/reducers/loading-bar.reducer.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/reducers/notifications.reducer.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/reducers/projects.reducers.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/reducers/source-list.reducer.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__read","o","m","Symbol","iterator","e","ar","next","done","push","value","error","__spread","concat","datRoot","infRoot","sysRoot","tabRoot","warRoot","SchemaActionsFactory","ngRedux","createCrudActions","actionPrefix","modelName","_this","load","suffix","pk","addPending","U","uuid","action","type","meta","payload","dispatch","pending$","select","resolved$","loadSucceeded","items","removePending","upsert","upsertSucceeded","succeeded","delete","pipe","filter","x","deleteSucceeded","failed","loadPage","paginateBy","limit","offset","loadPageSucceeded","pks","count","loadPageFailed","DigitalActionsFactory","_super","tslib_1.__extends","createActions","loadVersion","pkEntity","entityVersion","LOAD_VERSION","ChunkActionsFactory","loadChunksOfDigital","pkDigital","CHUNKS_OF_DIGITAL","ColumnActionsFactory","loadColumnsOfTable","COLUMNS_OF_TABLE","DatActions","digital","chunk","column","class_column_mapping","namespace","text_property","Injectable","NgRedux","DfhProfileActionFactory","loadOfProject","pkProject","OF_PROJECT","DfhClassActionFactory","DfhPropertyActionFactory","DfhLabelActionFactory","DfhActions","profile","klass","property","label","InfActionFactory","createInfActions","remove","removeSucceeded","InfPersistentItemActionFactory","loadMinimal","MINIMAL_BY_PK","typesOfProject","TYPES_OF_PROJECT","TYPE_OF_PROJECT","InfTemporalEntityActionFactory","loadNestedObject","OWN_PROPERTIES","loadPaginatedList","pkSourceEntity","pkProperty","fkTargetClass","isOutgoing","PAGINATED_LIST","alternatives","loadPaginatedAlternativeList","PAGINATED_ALTERNATIVE_LIST","InfStatementActionFactory","findByParams","ofProject","pkInfoRange","pkInfoDomain","BY_PARAMS","loadIngoingAlternatives","ALTERNATIVES_INGOING","sourcesAndDigitalsOfEntity","SOURCES_AND_DIGITALS_OF_ENTITY","CONTENT_TREE","InfTextPropertyActionFactory","loadAlternatives","fkEntity","fkClassField","ALTERNATIVES","InfActions","persistent_item","temporal_entity","statement","language","appellation","lang_string","dimension","place","time_primitive","ProProjectActionFactory","loadOfAccount","OF_ACCOUNT","loadBasics","LOAD_BASICS","ProInfoProjRelActionFactory","markStatementAsFavorite","pkStatement","MARK_ROLE_AS_FAVORITE","ProDfhClassProjRelActionFactory","ProDfhProfileProjRelActionFactory","ProClassFieldConfigActionFactory","ProTextPropertyActionFactory","ProAnalysisActionFactory","loadByIdAndVersion","version","BY_PK_AND_VERSION","ProActions","project","info_proj_rel","dfh_class_proj_rel","dfh_profile_proj_rel","class_field_config","analysis","SysActions","system_relevant_class","config","TabActions","cell","WarActions","entity_preview","DigitalSlice","ChunkSlice","ColumnSlice","ClassColumnMappingSlice","TextPropertySlice","NamespaceSlice","DfhProfileSlice","DfhClassSlice","DfhPropertySlice","DfhLabelSlice","InfPersistentItemSlice","InfTemporalEntitySlice","InfStatementSlice","InfPlaceSlice","InfTimePrimitiveSlice","InfLanguageSlice","InfAppellationSlice","InfLangStringSlice","InfDimensionSlice","InfTextPropertySlice","TabCellSlice","AccountActions","login","LOGIN","loginSucceeded","account","LOGIN_SUCCEEDED","loginFailed","LOGIN_FAILED","accountUpdated","ACCOUNT_UPDATED","loadRoles","accountId","LOAD_ROLES","loadRolesSucceeded","accountRoles","LOAD_ROLES_SUCCEEDED","loadRolesFailed","LOAD_ROLES_FAILED","ActiveProjectActions","loadProjectBasics","pk_project","LOAD_PROJECT_BASICS","loadProjectBasiscsSucceded","projectPreview","LOAD_PROJECT_BASICS_SUCCEEDED","loadProjectConfig","LOAD_PROJECT_CONFIG","loadProjectConfigSucceeded","LOAD_PROJECT_CONFIG_SUCCEEDED","setListType","list","SET_LIST_TYPE","setPanels","panels","uiIdSerial","panelSerial","focusedPanel","SET_PANELS","activateTab","panelIndex","tabIndex","ACTIVATE_TAB","moveTab","previousPanelIndex","currentPanelIndex","previousTabIndex","currentTabIndex","MOVE_TAB","closeTab","CLOSE_TAB","addTab","tab","ADD_TAB","splitPanel","SPLIT_PANEL","closePanel","CLOSE_PANEL","focusPanel","FOCUS_PANEL","setRefiningChunk","refiningChunk","SET_REFINING_CHUNK","setCreatingMentioning","creatingMentioning","SET_CREATING_MENTIONING","setMentioningsFocusedInText","mentioningsFocusedInText","SET_MENTIONINGS_FOCUSED_IN_TEXT","setMentioningsFocusedInTable","mentioningsFocusedInTable","SET_MENTIONINGS_FOCUSED_IN_TABLE","destroy","DESTROY","LOAD_PROJECT_BASICS_FAILED","UPDATE_SELECTED_CHUNK","InformationAPIActions","tslib_1.__decorate","LoadingBarActions","startLoading","START","stopLoading","STOP","completeLoading","COPMLETE","NotificationsAPIActions","addToast","ADD_TOAST","ProjectsActions","loadProjectsSucceeded","LOAD_PROJECTS_SUCCEEDED","SourceListAPIActions","initializeList","pkAllowedClasses","INITIALIZE_LIST","AccountEpics","actions","loadingBarActions","accountApi","notificationActions","createEpics","combineEpics","action$","store","ofType","mergeMap","Observable","globalStore","getRoles","subscribe","data","options","title","PubAccountApi","ActiveProjectEpics","sys","dat","dfh","pro","inf","projectApi","createLoadProjectBasicsEpic","createLoadProjectConfigEpic","createLoadProjectUpdatedEpic","createClosePanelEpic","createActivateTabFocusPanelEpic","createMoveTabFocusPanelEpic","createClosePanelFocusPanelEpic","createSplitPanelActivateTabEpic","createAddTabCloseListEpic","switchMap","getBasics","firstProTextPropStringOfType","text_properties","SysConfig","PK_SYSTEM_TYPE__TEXT_PROPERTY__LABEL","description","PK_SYSTEM_TYPE__TEXT_PROPERTY__DESCRIPTION","default_language","pk_entity","proProjectToProjectPreview","message","mapTo","combineLatest","res","includes","undefined","getState","activeProject","forEach","panel","tabs","map","ProProjectApi","LoadingBarEpics","service","createStartLoadingBarEpic","createCompleteLoadingBarEpic","observer","complete","start","SlimLoadingBarService","NotificationsAPIEpics","toastyService","toastyConfig","theme","createAddToastEpic","a","msg","ToastyService","ToastyConfig","Information","EntityDetail","showProperties","showRightArea","rightPanelTabs","rightPanelActiveTab","showHeader","INITIAL_STATE","roles","loading","progress","Notifications","records","projectListReducer","lastState","INITIAL_STATE$5","record","SourceList","state","pi","ti","ppi","cpi","pti","cti","INITIAL_STATE$1","loadingConfigData","configDataInitialized","_a","tslib_1.__spread","index","active","moveItemInArray","_b","pTabs_1","cTabs","transferArrayItem","_c","id","_d","omit","path","pathSegment","toString","_e","find","_f","splice","_g","newPanels","INITIAL_STATE$2","INITIAL_STATE$3","INITIAL_STATE$4","INITIAL_STATE$6"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { DatDigital, DatTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { ReducerConfigCollection } from '../_helpers';\nimport { DatClassColumnMapping } from '@kleiolab/lib-sdk-lb4';\n\nexport const datRoot = 'dat';\nexport const facetteByPk = 'by_namespace';\n\nexport const datDefinitions: ReducerConfigCollection = {\n  digital: {\n    equals: (newItem: DatDigital, oldItem: DatDigital) => {\n      if (!oldItem.quill_doc && newItem.quill_doc) return false;\n      return (\n        newItem.pk_entity === oldItem.pk_entity &&\n        newItem.entity_version === oldItem.entity_version\n      )\n    },\n    indexBy: {\n      keyInStore: 'pk_entity__entity_version',\n      indexByFn: (item) => item.pk_entity.toString() + '_' + item.entity_version.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'pk_entity',\n        groupByFn: (item): string => item.pk_entity.toString()\n      },\n      {\n        keyInStore: 'pk_text',\n        groupByFn: (item): string => item.pk_text.toString()\n      }\n    ]\n  },\n  chunk: {\n    // facetteByPk,\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_text',\n        groupByFn: (item): string => item.fk_text.toString()\n      }\n    ]\n  },\n  column: {\n    // facetteByPk,\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_digital',\n        groupByFn: (item): string => item.fk_digital.toString()\n      }\n    ]\n  },\n  class_column_mapping: {\n    // facetteByPk,\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_column',\n        groupByFn: (item: DatClassColumnMapping): string => item.fk_column.toString()\n      }\n    ]\n  },\n  text_property: {\n    // facetteByPk,\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_entity__fk_system_type',\n        groupByFn: (item: DatTextProperty): string => item.fk_entity + '_' + item.fk_system_type\n      }\n    ]\n  },\n  namespace: {\n    // facetteByPk,\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_project',\n        groupByFn: (item): string => item.fk_project.toString()\n      }\n    ]\n  }\n}\n","import { ReducerConfigCollection } from '../_helpers';\nimport { InfStatement, InfTextProperty, InfDimension } from '@kleiolab/lib-sdk-lb3';\nimport { U } from '@kleiolab/lib-utils';\n\nexport const infRoot = 'inf';\n\nexport const infDefinitions: ReducerConfigCollection = {\n  persistent_item: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_class',\n        groupByFn: (d): string => d.fk_class.toString()\n      }\n    ]\n  },\n  temporal_entity: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_class',\n        groupByFn: (d): string => d.fk_class.toString()\n      }\n    ]\n  },\n  statement: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item: InfStatement) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: [\n      {\n        keyInStore: 'subject',\n        groupByFn: (d: InfStatement): string => indexStatementBySubject(d)\n      },\n      {\n        keyInStore: 'subject+property',\n        groupByFn: (d: InfStatement): string => indexStatementBySubjectProperty(d)\n      },\n      {\n        keyInStore: 'object',\n        groupByFn: (d: InfStatement): string => indexStatementByObject(d)\n      },\n      {\n        keyInStore: 'object+property',\n        groupByFn: (d: InfStatement): string => indexStatementByObjectProperty(d)\n      },\n\n      {\n        keyInStore: 'fk_subject_data',\n        groupByFn: (d: InfStatement): string => U.toStr0undef(d.fk_subject_data)\n      },\n    ]\n  },\n\n  text_property: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_concerned_entity__fk_class_field',\n        groupByFn: (d: InfTextProperty): string => d.fk_concerned_entity + '_' + d.fk_class_field\n      },\n      {\n        keyInStore: 'fk_concerned_entity',\n        groupByFn: (d: InfTextProperty): string => d.fk_concerned_entity.toString()\n      },\n    ]\n  },\n  lang_string: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n  appellation: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n  time_primitive: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n  place: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n  language: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n  dimension: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item: InfDimension) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n}\n\n\n\n\n\n/**\n * This function creates a key for the given statement by\n * - subject (all subject foreign keys)\n *\n * The key is created on the basis of the given foreign keys.\n * Keys are separated by dash '-', undefined keys are replaced by a zero '0'\n *\n * Use this function to index groups of statements with the same subject\n * or to retrieve statements from such a group index\n */\nexport function indexStatementBySubject(fks: IndexStatementBySubject = {}): string {\n  return `${fks.fk_subject_info || '0'}-${fks.fk_subject_data || '0'}-${(fks.fk_subject_tables_row) || '0'}-${(fks.fk_subject_tables_cell) || '0'}`\n}\nexport interface IndexStatementBySubject {\n  fk_subject_info?: number;\n  fk_subject_data?: number;\n  fk_subject_tables_row?: number;\n  fk_subject_tables_cell?: number;\n};\n\n\n/**\n * This function creates a key for the given statement by\n * - object (all object foreign keys)\n *\n * The key is created on the basis of the given foreign keys.\n * Keys are separated by dash '-', undefined keys are replaced by a zero '0'\n *\n * Use this function to index groups of statements with the same object\n * or to retrieve statements from such a group index\n */\nexport function indexStatementByObject(fks: IndexStatementByObject = {}): string {\n  return `${fks.fk_object_info || '0'}-${fks.fk_object_data || '0'}-${fks.fk_object_tables_row || '0'}-${fks.fk_object_tables_cell || '0'}`\n}\nexport interface IndexStatementByObject {\n  fk_object_info?: number;\n  fk_object_data?: number;\n  fk_object_tables_row?: number;\n  fk_object_tables_cell?: number;\n};\n\n\n/**\n * This function creates a key for the given statement by\n * - subject (all subject foreign keys)\n * - property (all property foreign keys)\n *\n * The key is created on the basis of the given foreign keys.\n * Keys are separated by dash '-', undefined keys are replaced by a zero '0'\n *\n * Use this function to index groups of statements with the same subject + property\n * or to retrieve statements from such a group index\n */\nexport function indexStatementBySubjectProperty(fks: IndexStatementBySubjectProperty = {}): string {\n  return `${fks.fk_subject_info || '0'}-${fks.fk_subject_data || '0'}-${(fks.fk_subject_tables_row) || '0'}-${(fks.fk_subject_tables_cell) || '0'}-${fks.fk_property || '0'}-${fks.fk_property_of_property || '0'}`\n}\nexport interface IndexStatementBySubjectProperty {\n  fk_subject_info?: number;\n  fk_subject_data?: number;\n  fk_subject_tables_row?: number;\n  fk_subject_tables_cell?: number;\n  fk_property?: number;\n  fk_property_of_property?: number;\n}\n\n\n/**\n * This function creates a key for the given statement by\n * - object (all object foreign keys)\n * - property (all property foreign keys)\n *\n * The key is created on the basis of the given foreign keys.\n * Keys are separated by dash '-', undefined keys are replaced by a zero '0'\n *\n * Use this function to index groups of statements with the same object + property\n * or to retrieve statements from such a group index\n */\nexport function indexStatementByObjectProperty(fks: IndexStatementByObjectProperty = {}): string {\n  return `${fks.fk_object_info || '0'}-${fks.fk_object_data || '0'}-${fks.fk_object_tables_row || '0'}-${fks.fk_object_tables_cell || '0'}-${fks.fk_property || '0'}-${fks.fk_property_of_property || '0'}`\n}\nexport interface IndexStatementByObjectProperty {\n  fk_object_info?: number;\n  fk_object_data?: number;\n  fk_object_tables_row?: number;\n  fk_object_tables_cell?: number;\n  fk_property?: number;\n  fk_property_of_property?: number;\n}\n\n","import { ReducerConfigCollection } from '../_helpers';\nimport { ProClassFieldConfig, ProDfhClassProjRel, ProTextProperty, ProDfhProfileProjRel } from '@kleiolab/lib-sdk-lb3';\nimport { ProAnalysis } from '@kleiolab/lib-sdk-lb4';\n\nexport const proRoot = 'pro';\n\n\nexport const textPropertyByFksKey = (d: Partial<ProTextProperty>) => `${d.fk_project || null}_${d.fk_system_type || null}_${d.fk_language || null}_${d.fk_dfh_class || null}_${d.fk_dfh_property || null}_${d.fk_dfh_property_domain || null}_${d.fk_dfh_property_range || null}`\nexport const textPropertyByFksWithoutLang = (d: Partial<ProTextProperty>): string => `${d.fk_project || null}_${d.fk_system_type || null}_${d.fk_dfh_class || null}_${d.fk_dfh_property || null}_${d.fk_dfh_property_domain || null}_${d.fk_dfh_property_range || null}`;\nexport const proClassFieldConfgByProjectAndClassKey = (d: Partial<ProClassFieldConfig>): string => {\n  const fk_class = d.fk_range_class || d.fk_domain_class || d.fk_class_for_class_field;\n  return `${d.fk_project || null}_${fk_class || null}`;\n};\n\nexport const proDefinitions: ReducerConfigCollection = {\n  project: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    }\n  },\n  info_proj_rel: {\n    indexBy: {\n      keyInStore: 'fk_project__fk_entity',\n      indexByFn: (item) => item.fk_project.toString() + '_' + item.fk_entity.toString()\n    }\n  },\n  class_field_config: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_project__fk_class',\n        groupByFn: proClassFieldConfgByProjectAndClassKey\n      }\n    ]\n  },\n  dfh_class_proj_rel: {\n    indexBy: {\n      keyInStore: 'fk_project__fk_class',\n      indexByFn: (item: ProDfhClassProjRel) => item.fk_project + '_' + item.fk_class\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_project__enabled_in_entities',\n        groupByFn: (d: ProDfhClassProjRel): string => d.fk_project + '_' + d.enabled_in_entities\n      },\n      {\n        keyInStore: 'fk_project',\n        groupByFn: (d: ProDfhClassProjRel): string => d.fk_project.toString()\n      }\n    ],\n  },\n  dfh_profile_proj_rel: {\n    indexBy: {\n      keyInStore: 'fk_project__fk_profile',\n      indexByFn: (item: ProDfhProfileProjRel) => item.fk_project + '_' + item.fk_profile\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_project__enabled',\n        groupByFn: (d: ProDfhProfileProjRel): string => d.fk_project + '_' + d.enabled\n      },\n      {\n        keyInStore: 'fk_project',\n        groupByFn: (d: ProDfhProfileProjRel): string => d.fk_project.toString()\n      }\n    ],\n  },\n  text_property: {\n    indexBy: {\n      keyInStore: 'fks',\n      indexByFn: textPropertyByFksKey\n    },\n    groupBy: [\n      {\n        keyInStore: 'fks_without_lang',\n        groupByFn: textPropertyByFksWithoutLang\n      }\n    ]\n  },\n  analysis: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item: ProAnalysis) => item.pk_entity.toString()\n    }\n  }\n}\n","import { ReducerConfigCollection } from '../_helpers';\nimport { SysSystemRelevantClass } from '@kleiolab/lib-sdk-lb3';\n\nexport const sysRoot = 'sys';\n\nexport const sysDefinitions: ReducerConfigCollection = {\n  system_relevant_class: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_class',\n        groupByFn: (d: SysSystemRelevantClass): string => d.fk_class.toString()\n      },\n      {\n        keyInStore: 'required_by_sources',\n        groupByFn: (d: SysSystemRelevantClass): string => d.required_by_sources.toString()\n      },\n      {\n        keyInStore: 'required',\n        groupByFn: (d: SysSystemRelevantClass): string => (d.required_by_sources || d.required_by_entities || d.required_by_basics) ? 'true' : 'false'\n      }\n    ]\n  },\n  config: {\n    indexBy: {\n      keyInStore: 'main',\n      indexByFn: () => 'main'\n    }\n  }\n}\n","import { ReducerConfigCollection } from '../_helpers';\nimport { TabCell } from '@kleiolab/lib-sdk-lb4';\n\nexport const tabRoot = 'tab';\n\nexport const tabDefinitions: ReducerConfigCollection = {\n  cell: {\n    indexBy: {\n      keyInStore: 'pk_cell',\n      indexByFn: (item: TabCell) => item.pk_cell.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_column_fk_row',\n        groupByFn: (item: TabCell): string => item.fk_column + '_' + item.fk_row\n      }\n    ]\n  }\n}\n","import { ReducerConfigCollection } from '../_helpers';\nimport { WarEntityPreview } from '@kleiolab/lib-sdk-lb4';\n\nexport const warRoot = 'war';\n\nexport const warDefinitions: ReducerConfigCollection = {\n  entity_preview: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item: WarEntityPreview) => item.pk_entity.toString()\n    }\n  }\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { ActionsObservable } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { IAppState } from '../../root/models/model';\n\nexport interface LoadActionMeta { addPending: string, pk?: number }\nexport interface LoadVersionAction extends LoadActionMeta { pkEntity: number, entityVersion: number };\nexport interface LoadByPkAndVersionActionMeta { addPending: string, pk?: number, pkEntity: number, version: number }\n\nexport interface ModifyActionMeta<Model> { items: Model[], addPending: string, pk?: number }\nexport interface SucceedActionMeta<Model> { items: Model[], removePending: string, pk?: number }\nexport interface FailActionMeta { removePending: string, pk?: number }\n\nexport interface PaginateByParam { [key: string]: number | boolean }\nexport interface LoadPageMeta { paginateBy: PaginateByParam[], limit: number, offset: number, pk?: number }\nexport interface LoadPageSucceededMeta { pks: number[], count: number, paginateBy: PaginateByParam[], limit: number, offset: number, pk?: number }\n\n\n\nexport interface ActionResultObservable<Model> { pending$: Observable<boolean>, resolved$: Observable<SucceedActionMeta<Model>>, key: string }\n\nexport type FluxActionObservable<Payload, Meta> = ActionsObservable<FluxStandardAction<Payload, Meta>>\n\n\n\n/**\n * A: Schema Action Type (e.g. DfhAction)\n * M: Model for whitch the Actions are produced\n */\nexport class SchemaActionsFactory<Payload, Model> {\n\n  load: (suffix?: string, pk?: number) => ActionResultObservable<Model>;\n\n  /**\n   * @param pk is used for facetting\n   */\n  loadSucceeded: (items: Model[], removePending: string, pk?: number) => void;\n\n  /**\n   * @param pk is used for facetting\n   */\n  upsert: (items: Partial<Model>[], pk?: number) => ActionResultObservable<Model>;\n\n  /**\n   * @param pk is used for facetting\n   */\n  upsertSucceeded: (items: Model[], removePending: string, pk?: number) => void;\n\n  /**\n   * @param pk is used for facetting\n   */\n  delete: (items: Model[], pk?: number) => ActionResultObservable<Model>;\n\n  /**\n   * @param pk is used for facetting\n   */\n  deleteSucceeded: (items: Model[], removePending: string, pk?: number) => void;\n\n  /**\n   * @param pk is used for facetting\n   */\n  failed: (error, removePending: string, pk?: number) => void;\n\n\n  /**\n   * @param pk is used for facetting\n   */\n  loadPage: (paginateBy: PaginateByParam[], limit: number, offset: number, pk?: number) => void;\n\n  /**\n * @param pk is used for facetting\n */\n  loadPageSucceeded: (pks: number[], count: number, paginateBy: PaginateByParam[], limit: number, offset: number, pk?: number) => void;\n  loadPageFailed: (paginateBy: PaginateByParam[], limit: number, offset: number, pk?: number) => void;\n\n  /**\n   * this action is not model specific but pendingKey specific.\n   * Reducer will add whole meta part to the resolved key.\n   */\n  succeeded: (items: Model[], removePending: string, pk?: number) => void;\n\n  actionPrefix: string;\n  modelName: string;\n\n  constructor(public ngRedux: NgRedux<IAppState>) {\n  }\n\n\n  createCrudActions(actionPrefix: string, modelName: string): SchemaActionsFactory<Payload, Model> {\n    this.actionPrefix = actionPrefix;\n    this.modelName = modelName;\n\n    this.load = (suffix: string = '', pk?: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + (suffix ? '::' + suffix : ''),\n        meta: { addPending, pk },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<Model>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n\n    this.loadSucceeded = (items: Model[], removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, SucceedActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD_SUCCEEDED',\n        meta: { items, removePending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    /**\n     * Call the Redux Action to upsert model instances.\n     */\n    this.upsert = (items: Model[], pk?: number) => {\n      const addPending = U.uuid();\n      const action: FluxStandardAction<Payload, ModifyActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::UPSERT',\n        meta: { items, addPending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<Model>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n\n    this.upsertSucceeded = (items: Model[], removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, SucceedActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::UPSERT_SUCCEEDED',\n        meta: { items, removePending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    /**\n     * this action is not model specific but pendingKey specific.\n     * Reducer will add whole meta part to the resolved key\n     */\n    this.succeeded = (items: Model[], removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, SucceedActionMeta<Model>> = ({\n        type: 'general::UPSERT_SUCCEEDED',\n        meta: { items, removePending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n\n    /**\n    * Call the Redux Action to delete model instances.\n    */\n    this.delete = (items: Model[], pk?: number) => {\n      const addPending = U.uuid();\n      const action: FluxStandardAction<Payload, ModifyActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::DELETE',\n        meta: { items, addPending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<Model>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    this.deleteSucceeded = (items: Model[], removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, SucceedActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::DELETE_SUCCEEDED',\n        meta: { items, removePending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n\n\n    this.failed = (error, removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, FailActionMeta> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::FAILED',\n        meta: { removePending, pk },\n        payload: null,\n        error,\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n\n    this.loadPage = (paginateBy: PaginateByParam[], limit: number, offset: number, pk?: number) => {\n      const action: FluxStandardAction<Payload, LoadPageMeta> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD_PAGE',\n        meta: { paginateBy, limit, offset, pk },\n        payload: null,\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    this.loadPageSucceeded = (pks: number[], count: number, paginateBy: PaginateByParam[], limit: number, offset: number, pk?: number) => {\n      const action: FluxStandardAction<Payload, LoadPageSucceededMeta> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD_PAGE_SUCCEEDED',\n        meta: { pks, paginateBy, count, limit, offset, pk },\n        payload: null,\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    this.loadPageFailed = (paginateBy: PaginateByParam[], limit: number, offset: number, pk?: number) => {\n      const action: FluxStandardAction<Payload, LoadPageMeta> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD_PAGE_FAILED',\n        meta: { paginateBy, limit, offset, pk },\n        payload: null,\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    return this;\n  }\n\n}\n\nexport interface SchemaObjectLoadActionMeta { removePending: string, pk?: number }\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { DatChunk, DatColumn, DatDigital, DatNamespace, DatTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { DatClassColumnMapping } from '@kleiolab/lib-sdk-lb4';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { IAppState } from '../../root/models';\nimport { ChunkSlice, ClassColumnMappingSlice, ColumnSlice, DigitalSlice, NamespaceSlice, TextPropertySlice } from '../models';\nimport { datRoot } from '../reducer-configs';\nimport { ActionResultObservable, LoadActionMeta, SchemaActionsFactory, SucceedActionMeta, LoadVersionAction } from '../_helpers/schema-actions-factory';\n\n\nexport class DigitalActionsFactory extends SchemaActionsFactory<DigitalSlice, DatDigital> {\n\n  // Suffixes of load action types\n  static readonly LOAD_VERSION = 'LOAD_VERSION';\n\n  /**\n   * Load a version. if entityVersion omitted, latest version is returned.\n   */\n  loadVersion: (pkEntity: number, entityVersion?: number) => ActionResultObservable<DatDigital>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): DigitalActionsFactory {\n    Object.assign(this, this.createCrudActions(datRoot, 'digital'))\n\n    this.loadVersion = (pkEntity: number, entityVersion?: number) => {\n      const addPending = U.uuid()\n\n      const action: FluxStandardAction<DigitalSlice, LoadVersionAction> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + DigitalActionsFactory.LOAD_VERSION,\n        meta: { addPending, pkEntity, entityVersion },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DatDigital>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n    return this;\n  }\n}\n\nexport interface LoadChunksOfDigitalAction extends LoadActionMeta { pkDigital: number }\n\nexport class ChunkActionsFactory extends SchemaActionsFactory<ChunkSlice, DatChunk> {\n\n  // Suffixes of load action types\n  static readonly CHUNKS_OF_DIGITAL = 'CHUNKS_OF_DIGITAL';\n\n  /**\n   * Load a version. if entityVersion omitted, latest version is returned.\n   */\n  loadChunksOfDigital: (pkDigital: number, pk: number) => ActionResultObservable<DatChunk>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ChunkActionsFactory {\n    Object.assign(this, this.createCrudActions(datRoot, 'chunk'))\n\n    this.loadChunksOfDigital = (pkDigital: number, pk: number) => {\n      const addPending = U.uuid()\n\n      const action: FluxStandardAction<ChunkSlice, LoadChunksOfDigitalAction> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ChunkActionsFactory.CHUNKS_OF_DIGITAL,\n        meta: { addPending, pkDigital, pk },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DatChunk>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n    return this;\n  }\n}\n\nexport interface LoadColumnsOfTableAction extends LoadActionMeta { pkDigital: number }\n\nexport class ColumnActionsFactory extends SchemaActionsFactory<ColumnSlice, DatColumn> {\n\n  // Suffixes of load action types\n  static readonly COLUMNS_OF_TABLE = 'COLUMNS_OF_TABLE';\n\n  /**\n   * Load a version. if entityVersion omitted, latest version is returned.\n   */\n  loadColumnsOfTable: (pkDigital: number, pk: number) => ActionResultObservable<DatColumn>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ColumnActionsFactory {\n    Object.assign(this, this.createCrudActions(datRoot, 'column'))\n\n    this.loadColumnsOfTable = (pkDigital: number, pk: number) => {\n      const addPending = U.uuid()\n\n      const action: FluxStandardAction<ColumnSlice, LoadColumnsOfTableAction> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ColumnActionsFactory.COLUMNS_OF_TABLE,\n        meta: { addPending, pkDigital, pk },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DatColumn>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n    return this;\n  }\n}\n\n@Injectable()\nexport class DatActions {\n\n  digital = new DigitalActionsFactory(this.ngRedux).createActions();\n\n  chunk = new ChunkActionsFactory(this.ngRedux).createActions()\n\n  column = new ColumnActionsFactory(this.ngRedux).createActions()\n\n  class_column_mapping = new SchemaActionsFactory<ClassColumnMappingSlice, DatClassColumnMapping>(this.ngRedux).createCrudActions(datRoot, 'class_column_mapping')\n\n  namespace = new SchemaActionsFactory<NamespaceSlice, DatNamespace>(this.ngRedux).createCrudActions(datRoot, 'namespace')\n\n  text_property = new SchemaActionsFactory<TextPropertySlice, DatTextProperty>(this.ngRedux).createCrudActions(datRoot, 'text_property')\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","\nimport { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { DfhLabel, DfhProfile } from '@kleiolab/lib-sdk-lb3';\nimport { DfhClass, DfhProperty } from '@kleiolab/lib-sdk-lb4';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { ActionResultObservable, LoadActionMeta, SchemaActionsFactory, SucceedActionMeta } from '../_helpers/schema-actions-factory';\nimport { filter } from 'rxjs/operators';\nimport { IAppState } from '../../root/models';\nimport { DfhClassSlice } from '../models';\nimport { dfhRoot } from '../reducer-configs';\n\n\nexport class DfhProfileActionFactory extends SchemaActionsFactory<Payload, DfhProfile> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<DfhProfile>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): DfhProfileActionFactory {\n    Object.assign(this, this.createCrudActions(dfhRoot, 'profile'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + DfhProfileActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DfhProfile>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\nexport class DfhClassActionFactory extends SchemaActionsFactory<Payload, DfhClass> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<DfhClass>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): DfhClassActionFactory {\n    Object.assign(this, this.createCrudActions(dfhRoot, 'klass'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + DfhClassActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DfhClass>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\nexport class DfhPropertyActionFactory extends SchemaActionsFactory<Payload, DfhProperty> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<DfhProperty>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): DfhPropertyActionFactory {\n    Object.assign(this, this.createCrudActions(dfhRoot, 'property'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + DfhPropertyActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DfhProperty>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\nexport class DfhLabelActionFactory extends SchemaActionsFactory<Payload, DfhLabel> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<DfhLabel>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): DfhLabelActionFactory {\n    Object.assign(this, this.createCrudActions(dfhRoot, 'label'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + DfhLabelActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DfhLabel>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    return this;\n  }\n}\n\n\ntype Payload = DfhClassSlice;\n\n@Injectable()\nexport class DfhActions {\n\n\n  profile = new DfhProfileActionFactory(this.ngRedux).createActions();\n  klass = new DfhClassActionFactory(this.ngRedux).createActions();\n  property = new DfhPropertyActionFactory(this.ngRedux).createActions();\n  label = new DfhLabelActionFactory(this.ngRedux).createActions();\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","import { ReducerConfigCollection } from '../_helpers';\nimport { DfhLabel, DfhProfile } from '@kleiolab/lib-sdk-lb3';\nimport { DfhProperty } from '@kleiolab/lib-sdk-lb4';\n\nimport { DfhClass } from '@kleiolab/lib-sdk-lb4';\n\nexport const dfhRoot = 'dfh';\n\nexport const dfhLabelByFksKey = (item: Partial<DfhLabel>) => `${item.type || null}_${item.language || null}_${item.fk_class || null}_${item.fk_profile || null}_${item.fk_property || null}_${item.fk_project || null}`;\n\nexport const dfhDefinitions: ReducerConfigCollection = {\n  profile: {\n    indexBy: {\n      keyInStore: 'pk_profile',\n      indexByFn: (item: DfhProfile) => item.pk_profile.toString()\n    }\n  },\n  klass: {\n    indexBy: {\n      keyInStore: 'pk_class',\n      indexByFn: (item: DfhClass) => item.pk_class.toString(),\n    },\n    groupBy: [\n      {\n        keyInStore: 'basic_type',\n        groupByFn: (d: DfhClass): string => d.basic_type.toString()\n      },\n    ]\n  },\n  property: {\n    indexBy: {\n      keyInStore: 'pk_property__has_domain__has_range',\n      indexByFn: (item: DfhProperty) => item.pk_property + '_' + item.has_domain + '_' + item.has_range\n    },\n    groupBy: [\n      {\n        keyInStore: 'pk_property',\n        groupByFn: (d: DfhProperty): string => d.pk_property.toString()\n      },\n      {\n        keyInStore: 'has_domain',\n        groupByFn: (d: DfhProperty): string => d.has_domain.toString()\n      },\n      {\n        keyInStore: 'has_range',\n        groupByFn: (d: DfhProperty): string => d.has_range.toString()\n      },\n      {\n        keyInStore: 'has_domain__fk_property',\n        groupByFn: (d: DfhProperty): string => d.has_domain + '_' + d.pk_property\n      },\n      {\n        keyInStore: 'has_range__fk_property',\n        groupByFn: (d: DfhProperty): string => d.has_range + '_' + d.pk_property\n      },\n      {\n        keyInStore: 'is_has_type_subproperty',\n        groupByFn: (d: DfhProperty): string => d.is_has_type_subproperty ? d.is_has_type_subproperty.toString() : undefined\n      }\n    ]\n  },\n  label: {\n    indexBy: {\n      keyInStore: 'fks',\n      indexByFn: dfhLabelByFksKey\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_class__type',\n        groupByFn: (d: DfhLabel): string => !d.fk_class ? undefined : `${d.fk_class}_${d.type}`\n      },\n      {\n        keyInStore: 'fk_property__type',\n        groupByFn: (d: DfhLabel): string => !d.fk_property ? undefined : `${d.fk_property}_${d.type}`\n      },\n      {\n        keyInStore: 'fk_profile__type',\n        groupByFn: (d: DfhLabel): string => !d.fk_profile ? undefined : `${d.fk_profile}_${d.type}`\n      }\n    ]\n  },\n};\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { IAppState } from '../../root/models';\nimport { ActionResultObservable, ModifyActionMeta, SchemaActionsFactory, SucceedActionMeta } from './schema-actions-factory';\n\n@Injectable()\nexport class InfActionFactory<Payload, Model> extends SchemaActionsFactory<Payload, Model> {\n\n\n  /**\n   * @param pk is used for facetting\n   */\n  remove: (items: Model[], pk?: number) => ActionResultObservable<Model>;\n\n  /**\n   * @param pk is used for facetting\n   */\n  removeSucceeded: (items: Model[], removePending: string, pk?: number) => void;\n\n  constructor(public ngRedux: NgRedux<IAppState>) {\n    super(ngRedux);\n  }\n\n  createInfActions(actionPrefix: string, modelName: string): InfActionFactory<Payload, Model> {\n    this.createCrudActions(actionPrefix, modelName)\n\n    /**\n     * Call the Redux Action to remove model instances from project.\n     */\n    this.remove = (items: Model[], pk?: number) => {\n      const addPending = U.uuid();\n      const action: FluxStandardAction<Payload, ModifyActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::REMOVE',\n        meta: { items, addPending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<Model>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n\n    this.removeSucceeded = (items: Model[], removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, SucceedActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::REMOVE_SUCCEEDED',\n        meta: { items, removePending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    return this;\n  }\n\n}\n","\nimport { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { DatDigital, InfAppellation, InfDimension, InfLangString, InfLanguage, InfPersistentItem, InfPlace, InfStatement, InfTemporalEntity, InfTextProperty, InfTimePrimitive } from '@kleiolab/lib-sdk-lb3';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { filter } from 'rxjs/operators';\nimport { IAppState, SchemaObject } from '../../root/models';\nimport { InfDimensionSlice, InfPersistentItemSlice } from '../models';\nimport { infRoot } from '../reducer-configs';\nimport { InfActionFactory } from '../_helpers/inf-action-factory';\nimport { ActionResultObservable, LoadActionMeta, SchemaActionsFactory, SucceedActionMeta } from '../_helpers/schema-actions-factory';\n\n\n\ntype Payload = InfPersistentItemSlice;\n\nexport interface LoadByPkMeta extends LoadActionMeta { pkEntity: number };\nexport type LoadTypesOfProjectAction = LoadActionMeta;\nexport interface LoadTypeOfProjectAction extends LoadActionMeta { pkEntity: number };\ntype LoadNestetedPeItResult = InfPersistentItem[]\n\nexport class InfPersistentItemActionFactory extends InfActionFactory<Payload, InfPersistentItem> {\n\n  // Suffixes of load action types\n  // static readonly NESTED_BY_PK = 'NESTED_BY_PK';\n  static readonly MINIMAL_BY_PK = 'MINIMAL_BY_PK';\n  static readonly TYPES_OF_PROJECT = 'TYPES_OF_PROJECT';\n  static readonly TYPE_OF_PROJECT = 'TYPE_OF_PROJECT';\n\n  loadMinimal: (pkProject: number, pkEntity: number) => ActionResultObservable<SchemaObject>;\n  loadNestedObject: (pkProject: number, pkEntity: number) => ActionResultObservable<LoadNestetedPeItResult>;\n\n  typesOfProject: (pkProject: number) => ActionResultObservable<LoadActionMeta>;\n  // typeOfProject: (pkProject: number, pkEntity: number) => ActionResultObservable<LoadNestetedPeItResult>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): InfPersistentItemActionFactory {\n    Object.assign(this, this.createInfActions(infRoot, 'persistent_item'))\n\n    // this.loadNestedObject = (pkProject: number, pkEntity: number) => {\n    //   const addPending = U.uuid();\n    //   const action: FluxStandardAction<Payload, LoadByPkMeta> = {\n    //     type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfPersistentItemActionFactory.NESTED_BY_PK,\n    //     meta: { addPending, pk: pkProject, pkEntity },\n    //     payload: null,\n    //   };\n    //   this.ngRedux.dispatch(action)\n    //   return {\n    //     pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n    //     resolved$: this.ngRedux.select<SucceedActionMeta<LoadNestetedPeItResult>>(['resolved', addPending]).pipe(filter(x => !!x)),\n    //     key: addPending\n    //   };\n    // }\n    this.loadMinimal = (pkProject: number, pkEntity: number) => {\n      const addPending = U.uuid();\n      const action: FluxStandardAction<Payload, LoadByPkMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfPersistentItemActionFactory.MINIMAL_BY_PK,\n        meta: { addPending, pk: pkProject, pkEntity },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<SchemaObject>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    this.typesOfProject = (pkProject: number) => {\n      const addPending = U.uuid();\n\n      const action: FluxStandardAction<Payload, LoadTypesOfProjectAction> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfPersistentItemActionFactory.TYPES_OF_PROJECT,\n        meta: { addPending, pk: pkProject },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<LoadActionMeta>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    // this.typeOfProject = (pkProject: number, pkEntity: number) => {\n    //   const addPending = U.uuid();\n\n    //   const action: FluxStandardAction<Payload, LoadTypeOfProjectAction> = {\n    //     type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfPersistentItemActionFactory.TYPE_OF_PROJECT,\n    //     meta: { addPending, pk: pkProject, pkEntity },\n    //     payload: null,\n    //   };\n    //   this.ngRedux.dispatch(action)\n    //   return {\n    //     pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n    //     resolved$: this.ngRedux.select<SucceedActionMeta<LoadNestetedPeItResult>>(['resolved', addPending]).pipe(filter(x => !!x)),\n    //     key: addPending\n    //   };\n    // }\n\n    return this;\n  }\n\n}\nexport type PaginatedStatements = number[]\nexport interface PaginatedStatementList {\n  count: number,\n  schemas: SchemaObject,\n  paginatedStatements: PaginatedStatements\n}\nexport interface LoadPaginatedStatementListMeta extends LoadActionMeta {\n  pkSourceEntity: number // Pk of the source entity.\n  pkProperty: number // Pk of the property.\n  fkTargetClass: number // Pk of the target class.\n  isOutgoing: boolean // If true, the source entity is domain, else range.\n  limit: number // number of items per page.\n  offset: number // offset.\n  alternatives: boolean\n}\nexport class InfTemporalEntityActionFactory extends InfActionFactory<Payload, InfTemporalEntity> {\n\n  // Suffixes of load action types\n  static readonly OWN_PROPERTIES = 'OWN_PROPERTIES';\n  static readonly PAGINATED_LIST = 'PAGINATED_LIST';\n  static readonly PAGINATED_ALTERNATIVE_LIST = 'PAGINATED_ALTERNATIVE_LIST';\n\n  loadNestedObject: (pkProject: number, pkEntity: number) => ActionResultObservable<InfTemporalEntity[]>;\n  loadPaginatedList: (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => ActionResultObservable<PaginatedStatementList>;\n  loadPaginatedAlternativeList: (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => ActionResultObservable<PaginatedStatementList>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): InfTemporalEntityActionFactory {\n    Object.assign(this, this.createInfActions(infRoot, 'temporal_entity'))\n\n    this.loadNestedObject = (pkProject: number, pkEntity: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadByPkMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfTemporalEntityActionFactory.OWN_PROPERTIES,\n        meta: { addPending, pk: pkProject, pkEntity },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<InfTemporalEntity[]>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    this.loadPaginatedList = (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadPaginatedStatementListMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfTemporalEntityActionFactory.PAGINATED_LIST,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkSourceEntity,\n          fkTargetClass,\n          pkProperty,\n          isOutgoing,\n          limit,\n          offset,\n          alternatives: false\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<PaginatedStatementList>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n    this.loadPaginatedAlternativeList = (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadPaginatedStatementListMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfTemporalEntityActionFactory.PAGINATED_ALTERNATIVE_LIST,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkSourceEntity,\n          pkProperty,\n          fkTargetClass,\n          isOutgoing,\n          limit,\n          offset,\n          alternatives: true\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<PaginatedStatementList>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n    return this;\n  }\n}\nexport interface FindStatementByParams extends LoadActionMeta {\n  ofProject: boolean,\n  pkEntity: number,\n  pkInfoRange: number,\n  pkInfoDomain: number,\n  pkProperty: number,\n}\nexport interface ContentTreeMeta extends LoadActionMeta {\n  pkExpressionEntity: number,\n}\nexport interface SourcesAndDigitalsOfEntity extends LoadActionMeta {\n  ofProject: boolean,\n  pkEntity: number,\n}\nexport interface SourcesAndDigitalsOfEntityResult {\n  statements: InfStatement[],\n  digitals: DatDigital[],\n}\n\n\nexport interface LoadOutgoingAlternativeStatements extends LoadActionMeta { pkTemporalEntity: number, pkProperty: number };\nexport interface LoadIngoingAlternativeStatements extends LoadActionMeta { pkEntity: number, pkProperty: number };\nexport interface AddToProjectWithTeEntActionMeta { pkStatements: number[], pk: number, addPending: string };\n\nexport class InfStatementActionFactory extends InfActionFactory<Payload, InfStatement> {\n\n  // Suffixes of load action types\n  // static readonly ALTERNATIVES_OUTGOING = 'ALTERNATIVES_OUTGOING';\n  static readonly ALTERNATIVES_INGOING = 'ALTERNATIVES_INGOING';\n  // static readonly ADD_TO_PROJECT_WITH_TE_EN = 'ADD_TO_PROJECT_WITH_TE_EN';\n  static readonly PAGINATED_LIST = 'PAGINATED_LIST';\n  static readonly CONTENT_TREE = 'CONTENT_TREE';\n  static readonly SOURCES_AND_DIGITALS_OF_ENTITY = 'SOURCES_AND_DIGITALS_OF_ENTITY';\n  static readonly BY_PARAMS = 'BY_PARAMS';\n\n  loadIngoingAlternatives: (pkEntity, pkProperty, pkProjec) => ActionResultObservable<InfStatement>;\n  loadPaginatedList: (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => ActionResultObservable<PaginatedStatementList>;\n\n  // contentTree: (pkProject: number, pkExpressionEntity: number) => void;\n  sourcesAndDigitalsOfEntity: (ofProject: boolean, pkProject: number, pkEntity: number) => ActionResultObservable<SourcesAndDigitalsOfEntityResult>;\n  findByParams: (\n    ofProject: boolean,\n    pkProject: number,\n    pkEntity: number,\n    pkInfoRange: number,\n    pkInfoDomain: number,\n    pkProperty: number,\n  ) => void;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): InfStatementActionFactory {\n    Object.assign(this, this.createInfActions(infRoot, 'statement'))\n\n    this.findByParams = (\n      ofProject: boolean,\n      pkProject: number,\n      pkEntity: number,\n      pkInfoRange: number,\n      pkInfoDomain: number,\n      pkProperty: number,\n    ) => {\n      const action: FluxStandardAction<Payload, FindStatementByParams> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfStatementActionFactory.BY_PARAMS,\n        meta: {\n          addPending: U.uuid(),\n          pk: pkProject,\n          ofProject,\n          pkEntity,\n          pkInfoRange,\n          pkInfoDomain,\n          pkProperty,\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n    }\n\n\n    this.loadIngoingAlternatives = (pkEntity: number, pkProperty: number, pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadIngoingAlternativeStatements> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfStatementActionFactory.ALTERNATIVES_INGOING,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkEntity,\n          pkProperty,\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<InfStatement>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    this.loadPaginatedList = (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadPaginatedStatementListMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfStatementActionFactory.PAGINATED_LIST,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkSourceEntity,\n          fkTargetClass,\n          pkProperty,\n          isOutgoing,\n          limit,\n          offset,\n          alternatives: false\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<PaginatedStatementList>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    /**\n    * Get an nested object with everything needed to display the\n    * links made from an entity towards sources and digitals.\n    */\n    this.sourcesAndDigitalsOfEntity = (ofProject: boolean, pkProject: number, pkEntity: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, SourcesAndDigitalsOfEntity> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfStatementActionFactory.SOURCES_AND_DIGITALS_OF_ENTITY,\n        meta: {\n          addPending,\n          ofProject,\n          pk: pkProject,\n          pkEntity\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<SourcesAndDigitalsOfEntityResult>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\nexport interface LoadAlternativeTextProperties extends LoadActionMeta { fkEntity: number, fkClassField: number };\n\nexport class InfTextPropertyActionFactory extends InfActionFactory<Payload, InfTextProperty> {\n\n  // Suffixes of load action types\n  static readonly ALTERNATIVES = 'ALTERNATIVES';\n\n  loadAlternatives: (fkEntity, fkClassField, fkProject) => ActionResultObservable<InfTextProperty>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): InfTextPropertyActionFactory {\n    Object.assign(this, this.createInfActions(infRoot, 'text_property'))\n\n    this.loadAlternatives = (fkEntity: number, fkClassField: number, pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadAlternativeTextProperties> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfTextPropertyActionFactory.ALTERNATIVES,\n        meta: {\n          addPending,\n          pk: pkProject,\n          fkEntity,\n          fkClassField,\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<InfTextProperty>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\n\n@Injectable()\nexport class InfActions {\n\n  persistent_item = new InfPersistentItemActionFactory(this.ngRedux).createActions();\n  temporal_entity = new InfTemporalEntityActionFactory(this.ngRedux).createActions()\n  statement = new InfStatementActionFactory(this.ngRedux).createActions()\n\n  // TODO: pimp those up to real Inf Actions!\n  language = new SchemaActionsFactory<Payload, InfLanguage>(this.ngRedux).createCrudActions(infRoot, 'language')\n  appellation = new SchemaActionsFactory<Payload, InfAppellation>(this.ngRedux).createCrudActions(infRoot, 'appellation')\n  lang_string = new SchemaActionsFactory<Payload, InfLangString>(this.ngRedux).createCrudActions(infRoot, 'lang_string')\n  dimension = new SchemaActionsFactory<InfDimensionSlice, InfDimension>(this.ngRedux).createCrudActions(infRoot, 'dimension')\n  place = new SchemaActionsFactory<Payload, InfPlace>(this.ngRedux).createCrudActions(infRoot, 'place')\n  time_primitive = new SchemaActionsFactory<Payload, InfTimePrimitive>(this.ngRedux).createCrudActions(infRoot, 'time_primitive')\n  text_property = new InfTextPropertyActionFactory(this.ngRedux).createActions()\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","\nimport { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { ProClassFieldConfig, ProDfhClassProjRel, ProDfhProfileProjRel, ProInfoProjRel, ProProject, ProTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { ProAnalysis } from '@kleiolab/lib-sdk-lb4';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { filter } from 'rxjs/operators';\nimport { IAppState } from '../../root/models';\nimport { ProAnalysisSlice, ProInfoProjRelSlice } from '../models';\nimport { proRoot } from '../reducer-configs';\nimport { ActionResultObservable, LoadActionMeta, SchemaActionsFactory, SucceedActionMeta, LoadByPkAndVersionActionMeta } from '../_helpers/schema-actions-factory';\n\n\ntype Payload = ProInfoProjRelSlice;\n\nexport class ProProjectActionFactory extends SchemaActionsFactory<Payload, ProProject> {\n\n  // Suffixes of load action types\n  static readonly OF_ACCOUNT = 'OF_ACCOUNT';\n  static readonly LOAD_BASICS = 'LOAD_BASICS';\n\n  loadOfAccount: (pkProject) => ActionResultObservable<ProProject>;\n\n  /**\n   * loads the ProProject and the default InfLanguage\n   */\n  loadBasics: (pkProject) => ActionResultObservable<ProProject>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProProjectActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'project'))\n\n    this.loadOfAccount = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProProjectActionFactory.OF_ACCOUNT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProProject>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    this.loadBasics = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProProjectActionFactory.LOAD_BASICS,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProProject>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    return this;\n  }\n}\n\nexport interface MarkStatementAsFavoriteActionMeta {\n  addPending: string,\n  pk: number\n  pkStatement: number\n  isOutgoing: boolean\n}\nexport class ProInfoProjRelActionFactory extends SchemaActionsFactory<Payload, ProInfoProjRel> {\n\n  // Suffixes of load action types\n  static readonly MARK_ROLE_AS_FAVORITE = 'MARK_ROLE_AS_FAVORITE';\n\n  markStatementAsFavorite: (pkProject: number, pkStatement: number, isOutgoing: boolean) => ActionResultObservable<ProInfoProjRel>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProInfoProjRelActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'info_proj_rel'))\n\n    this.markStatementAsFavorite = (pkProject: number, pkStatement: number, isOutgoing: boolean) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, MarkStatementAsFavoriteActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProInfoProjRelActionFactory.MARK_ROLE_AS_FAVORITE,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkStatement: pkStatement,\n          isOutgoing\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProInfoProjRel>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\nexport class ProDfhClassProjRelActionFactory extends SchemaActionsFactory<Payload, ProDfhClassProjRel> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<ProDfhClassProjRel>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProDfhClassProjRelActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'dfh_class_proj_rel'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProDfhClassProjRelActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProDfhClassProjRel>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\nexport class ProDfhProfileProjRelActionFactory extends SchemaActionsFactory<Payload, ProDfhProfileProjRel> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<ProDfhProfileProjRel>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProDfhProfileProjRelActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'dfh_profile_proj_rel'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProDfhProfileProjRelActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProDfhProfileProjRel>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\nexport class ProClassFieldConfigActionFactory extends SchemaActionsFactory<Payload, ProClassFieldConfig> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<ProClassFieldConfig>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProClassFieldConfigActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'class_field_config'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProClassFieldConfigActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProClassFieldConfig>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\nexport class ProTextPropertyActionFactory extends SchemaActionsFactory<Payload, ProTextProperty> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<ProTextProperty>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProTextPropertyActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'text_property'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProTextPropertyActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProTextProperty>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\nexport class ProAnalysisActionFactory extends SchemaActionsFactory<ProAnalysisSlice, ProAnalysis> {\n\n  // Suffixes of load action types\n  static readonly BY_PK_AND_VERSION = 'BY_PK_AND_VERSION';\n\n  loadByIdAndVersion: (pkProject: number, pkEntity: number, version: number) => ActionResultObservable<ProAnalysis>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProAnalysisActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'analysis'))\n\n    this.loadByIdAndVersion = (pkProject: number, pkEntity: number, version: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadByPkAndVersionActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProAnalysisActionFactory.BY_PK_AND_VERSION,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkEntity,\n          version\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProAnalysis>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\n\n@Injectable()\nexport class ProActions {\n  project = new ProProjectActionFactory(this.ngRedux).createActions()\n  info_proj_rel = new ProInfoProjRelActionFactory(this.ngRedux).createActions()\n  text_property = new ProTextPropertyActionFactory(this.ngRedux).createActions()\n  dfh_class_proj_rel = new ProDfhClassProjRelActionFactory(this.ngRedux).createActions()\n  dfh_profile_proj_rel = new ProDfhProfileProjRelActionFactory(this.ngRedux).createActions()\n  class_field_config = new ProClassFieldConfigActionFactory(this.ngRedux).createActions()\n  analysis = new ProAnalysisActionFactory(this.ngRedux).createActions()\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { SysSystemRelevantClass } from '@kleiolab/lib-sdk-lb3';\nimport { SysConfigValue } from '@kleiolab/lib-sdk-lb4';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { IAppState } from '../../root/models';\nimport { Sys } from '../models';\nimport { sysRoot } from '../reducer-configs';\nimport { SchemaActionsFactory } from '../_helpers/schema-actions-factory';\n\ntype Payload = Sys;\ninterface MetaData {\n  systemRelevantClasses?: SysSystemRelevantClass[]\n};\nexport type SysAction = FluxStandardAction<Payload, MetaData>;\n\n@Injectable()\nexport class SysActions {\n\n  system_relevant_class = new SchemaActionsFactory<Payload, SysSystemRelevantClass>\n    (this.ngRedux).createCrudActions(sysRoot, 'system_relevant_class');\n\n  // analysis_type = new StandardActionsFactory<Payload, SysAnalysisType>\n  //   (this.ngRedux).createCrudActions(sysRoot, 'analysis_type');\n\n\n  config = new SchemaActionsFactory<Payload, SysConfigValue>\n    (this.ngRedux).createCrudActions(sysRoot, 'config');\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { TabCell } from '@kleiolab/lib-sdk-lb4';\nimport { IAppState } from '../../root/models';\nimport { TabCellSlice } from '../models';\nimport { SchemaActionsFactory } from '../_helpers/schema-actions-factory';\nimport { tabRoot } from '../reducer-configs';\n\n\n@Injectable()\nexport class TabActions {\n\n  cell = new SchemaActionsFactory<TabCellSlice, TabCell>(this.ngRedux).createCrudActions(tabRoot, 'cell')\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","\nimport { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { WarEntityPreview } from '@kleiolab/lib-sdk-lb4';\nimport { IAppState } from '../../root/models';\nimport { WarEntityPreviewSlice } from '../models';\nimport { warRoot } from '../reducer-configs';\nimport { SchemaActionsFactory } from '../_helpers/schema-actions-factory';\n\n@Injectable()\nexport class WarActions {\n  entity_preview = new SchemaActionsFactory<WarEntityPreviewSlice, WarEntityPreview>(this.ngRedux).createCrudActions(warRoot, 'entity_preview')\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n}\n","import { DatColumn, DatNamespace, DatTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { DatClassColumnMapping, DatDigital } from '@kleiolab/lib-sdk-lb4';\nimport { ByPk } from '../../root/models';\n\n\n\n\nexport class DigitalSlice {\n  by_pk_entity__entity_version?: ByPk<DatDigital>;\n  by_pk_entity?: ByPk<ByPk<DatDigital>>;\n  by_pk_text?: ByPk<ByPk<DatDigital>>;\n  loading?: boolean\n}\nexport class ChunkSlice {\n  by_pk_entity?: ByPk<DatDigital>;\n  by_fk_text?: ByPk<ByPk<DatDigital>>;\n  loading?: boolean\n}\n\nexport class ColumnSlice {\n  by_pk_entity?: ByPk<DatColumn>;\n  by_fk_digital?: ByPk<ByPk<DatColumn>>;\n}\n\nexport class ClassColumnMappingSlice {\n  by_pk_entity?: ByPk<DatClassColumnMapping>;\n  by_fk_column?: ByPk<ByPk<DatClassColumnMapping>>;\n}\n\nexport class TextPropertySlice {\n  by_pk_entity?: ByPk<DatTextProperty>;\n  by_fk_digital?: ByPk<ByPk<DatTextProperty>>;\n}\n\nexport class NamespaceSlice {\n  by_pk_entity?: ByPk<DatNamespace>;\n  by_fk_project?: ByPk<ByPk<DatNamespace>>;\n  loading?: boolean\n}\n\nexport interface Dat {\n  digital?: DigitalSlice;\n  chunk?: ChunkSlice;\n  column?: ColumnSlice;\n  text_property?: TextPropertySlice;\n}\n\n\n\n\n","import { DfhLabel, DfhProfile } from '@kleiolab/lib-sdk-lb3';\nimport { DfhClass, DfhProperty } from '@kleiolab/lib-sdk-lb4';\nimport { ByPk } from '../../root/models';\n\n\nexport class DfhProfileSlice {\n  by_pk_profile?: ByPk<DfhProfile>;\n\n  loading?: boolean; // todo remove in reducer factory then here\n}\n\nexport class DfhClassSlice {\n  by_pk_class?: ByPk<DfhClass>;\n  by_basic_type?: ByPk<ByPk<DfhClass>>;\n  loading?: boolean; // todo remove in reducer factory then here\n}\n\nexport class DfhPropertySlice {\n  by_pk_property?: ByPk<ByPk<DfhProperty>>;\n  by_has_domain__fk_property?: ByPk<ByPk<DfhProperty>>;\n  by_has_range__fk_property?: ByPk<ByPk<DfhProperty>>;\n  by_has_domain?: ByPk<ByPk<DfhProperty>>;\n  by_has_range?: ByPk<ByPk<DfhProperty>>;\n  by_pk_property__has_domain__has_range?: ByPk<DfhProperty>;\n  by_is_has_type_subproperty?: ByPk<ByPk<DfhProperty>>;\n\n  loading?: boolean; // todo remove in reducer factory then here\n}\n\nexport class DfhLabelSlice {\n  by_fks?: ByPk<DfhLabel>;\n  by_fk_class__type?: ByPk<ByPk<DfhLabel>>;\n  by_fk_property__type?: ByPk<ByPk<DfhLabel>>;\n  by_fk_profile__type?: ByPk<ByPk<DfhLabel>>;\n\n  loading?: boolean; // todo remove in reducer factory then here\n}\n\nexport interface Dfh {\n  profile?: DfhProfileSlice;\n  klass?: DfhClassSlice;\n  property?: DfhPropertySlice;\n  label?: DfhLabelSlice;\n\n  pkEntityModelMap: ByPk<{ modelName: string }>\n}\n","import { InfAppellation, InfDimension, InfLangString, InfLanguage, InfPersistentItem, InfPlace, InfTemporalEntity, InfTextProperty, InfTimePrimitive } from '@kleiolab/lib-sdk-lb3';\nimport { InfStatement } from '@kleiolab/lib-sdk-lb4';\nimport { ByPk } from '../../root/models';\n\ninterface PaginationInfo {\n  loading: {\n    [key: string]: boolean\n  },\n  count: number,\n  rows: {\n    [key: string]: number\n  }\n}\nexport class InfPersistentItemSlice {\n  by_pk_entity?: ByPk<InfPersistentItem>;\n  by_fk_class?: ByPk<ByPk<InfPersistentItem>>;\n  loading?: boolean\n}\n\nexport class InfTemporalEntitySlice {\n  by_pk_entity?: ByPk<InfTemporalEntity>;\n  by_fk_class?: ByPk<ByPk<InfPersistentItem>>;\n  loading?: boolean\n}\n\nexport class InfStatementSlice {\n  by_pk_entity?: ByPk<InfStatement>;\n  by_subject?: ByPk<ByPk<InfStatement>>;\n  by_object?: ByPk<ByPk<InfStatement>>;\n  'by_subject+property'?: ByPk<ByPk<InfStatement>>;\n  'by_object+property'?: ByPk<ByPk<InfStatement>>;\n  by_fk_subject_data?: ByPk<ByPk<InfStatement>>;\n  pag_by_fk_property__fk_target_class__fk_object_info__ofProject?: ByPk<PaginationInfo>\n  pag_by_fk_property__fk_target_class__fk_subject_info__ofProject?: ByPk<PaginationInfo>\n  loading?: boolean\n}\n\nexport class InfPlaceSlice {\n  by_pk_entity?: ByPk<InfPlace>;\n  loading?: boolean\n}\n\nexport class InfTimePrimitiveSlice {\n  by_pk_entity?: ByPk<InfTimePrimitive>;\n  loading?: boolean\n}\n\nexport class InfLanguageSlice {\n  by_pk_entity?: ByPk<InfLanguage>;\n  loading?: boolean\n}\n\nexport class InfAppellationSlice {\n  by_pk_entity?: ByPk<InfAppellation>;\n  loading?: boolean\n}\n\n\nexport class InfLangStringSlice {\n  by_pk_entity?: ByPk<InfLangString>;\n  loading?: boolean\n}\n\n\nexport class InfDimensionSlice {\n  by_pk_entity?: ByPk<InfDimension>;\n  loading?: boolean\n}\n\nexport class InfTextPropertySlice {\n  by_pk_entity?: ByPk<InfTextProperty>;\n  by_fk_concerned_entity__fk_class_field?: ByPk<ByPk<InfTextProperty>>;\n  by_fk_concerned_entity?: ByPk<ByPk<InfTextProperty>>;\n  loading?: boolean\n}\n\n\nexport interface Inf {\n  persistent_item?: InfPersistentItemSlice;\n  temporal_entity?: InfTemporalEntitySlice;\n  statement?: InfStatementSlice;\n  place?: InfPlaceSlice;\n  time_primitive?: InfTimePrimitiveSlice;\n  language?: InfLanguageSlice;\n  appellation?: InfAppellationSlice;\n  lang_string?: InfLangStringSlice;\n  dimension?: InfDimensionSlice;\n  text_property?: InfTextPropertySlice;\n\n  pkEntityModelMap?: ByPk<{ modelName: string }>\n}\n\n\n\n\n","import { ByPk } from '../../root/models';\nimport { TabCell } from '@kleiolab/lib-sdk-lb4';\n\nexport class TabCellSlice {\n  by_pk_cell?: ByPk<TabCell>;\n  by_fk_column_fk_row?: ByPk<ByPk<TabCell>>;\n}\n\nexport interface Tab {\n  cell?: TabCellSlice;\n}\n\n\n\n\n","import { Injectable } from '@angular/core';\nimport { PubAccount } from '@kleiolab/lib-sdk-lb4';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { AccountRole, IAccount } from '../models';\n\nexport interface AccountActionMeta {\n  accountId?: number;\n  accountRoles?: AccountRole[];\n  account?: PubAccount;\n};\nexport type AccountAction = FluxStandardAction<IAccount, AccountActionMeta>;\n\n\n@Injectable()\nexport class AccountActions {\n  static LOGIN = 'Account::LOGIN';\n  static LOGIN_SUCCEEDED = 'Account::LOGIN_SUCCEEDED';\n  static LOGIN_FAILED = 'Account::LOGIN_FAILED';\n\n  static LOAD_ROLES = 'Account::LOAD_ROLES';\n  static LOAD_ROLES_SUCCEEDED = 'Account::LOAD_ROLES_SUCCEEDED';\n  static LOAD_ROLES_FAILED = 'Account::LOAD_ROLES_FAILED';\n\n  static ACCOUNT_UPDATED = 'Account::ACCOUNT_UPDATED';\n\n\n  login(): AccountAction {\n    return {\n      type: AccountActions.LOGIN,\n      payload: null,\n      meta: null\n    };\n  }\n\n  loginSucceeded(account: PubAccount): AccountAction {\n    return {\n      type: AccountActions.LOGIN_SUCCEEDED,\n      payload: null,\n      meta: { account }\n    };\n  }\n\n  loginFailed(error): AccountAction {\n    return {\n      type: AccountActions.LOGIN_FAILED,\n      payload: null,\n      meta: null,\n      error\n    };\n  }\n\n  accountUpdated(account: PubAccount): AccountAction {\n    return {\n      type: AccountActions.ACCOUNT_UPDATED,\n      payload: null,\n      meta: { account }\n    };\n  }\n\n  // Roles of the account, used to check permissions\n  loadRoles(accountId: number): AccountAction {\n    return {\n      type: AccountActions.LOAD_ROLES,\n      payload: null,\n      meta: { accountId }\n    };\n  }\n\n  loadRolesSucceeded(accountRoles: AccountRole[]): AccountAction {\n    return {\n      type: AccountActions.LOAD_ROLES_SUCCEEDED,\n      payload: null,\n      meta: { accountRoles }\n    };\n  }\n\n  loadRolesFailed(accountRoles: AccountRole[]): AccountAction {\n    return {\n      type: AccountActions.LOAD_ROLES_FAILED,\n      payload: null,\n      meta: null\n    };\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { DatChunk, InfPersistentItem, InfTemporalEntity, ProDfhClassProjRel, ProInfoProjRel } from '@kleiolab/lib-sdk-lb3';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { ListType, Panel, ProjectDetail, ProjectPreview, PanelTab, TypePeIt } from '../models';\n\nexport interface ActiveProjectMeta {\n\n  projectPreview?: ProjectPreview;\n\n  pk_project?: number;\n  pk_entity?: number;\n  pk_entities?: number[];\n  pk_classes?: number[]\n  pk_ui_context?: number;\n  entity_version?: number;\n\n\n  chunk?: DatChunk\n  teEnGraphs?: InfTemporalEntity[]\n  peItGraphs?: InfPersistentItem[]\n  types?: TypePeIt[]\n\n  // CRM and Config\n  projRel?: ProDfhClassProjRel;\n  dfh_pk_class?: number;\n  // hasTypeProperties?: HasTypePropertyReadable[]\n\n  // Information\n  infProjRel?: ProInfoProjRel;\n\n  // layout\n  panels?: Panel[];\n  list?: ListType;\n  panelIndex?: number;\n  panelSerial?: number;\n  tabIndex?: number;\n  uiIdSerial?: number;\n  focusedPanel?: number;\n  previousPanelIndex?: number\n  currentPanelIndex?: number\n  previousTabIndex?: number\n  currentTabIndex?: number\n  tab?: PanelTab<any>;\n\n  // Layout Modals\n  // createOrAddEntity?: CreateOrAddEntity; // Check if this really belongt in state\n};\ntype Payload = ProjectDetail;\nexport type ActiveProjectAction = FluxStandardAction<Payload, ActiveProjectMeta>;\n\n\n@Injectable()\nexport class ActiveProjectActions {\n\n  /* tslint:disable:member-ordering */\n\n  /************************************************************************************\n   * CRM and Config (metadata, crm)\n  ************************************************************************************/\n  static LOAD_PROJECT_BASICS = 'ActiveProject::LOAD_PROJECT_BASICS';\n  static LOAD_PROJECT_BASICS_FAILED = 'ActiveProject::LOAD_PROJECT_BASICS_FAILED';\n  static LOAD_PROJECT_BASICS_SUCCEEDED = 'ActiveProject::LOAD_PROJECT_BASICS_SUCCEEDED';\n  static LOAD_PROJECT_CONFIG = 'ActiveProject::LOAD_PROJECT_CONFIG';\n  static LOAD_PROJECT_CONFIG_SUCCEEDED = 'ActiveProject::LOAD_PROJECT_CONFIG_SUCCEEDED';\n\n\n  loadProjectBasics(pk_project: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.LOAD_PROJECT_BASICS,\n      payload: null,\n      meta: {\n        pk_project\n      }\n    }\n  }\n\n  loadProjectBasiscsSucceded(projectPreview: ProjectPreview): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.LOAD_PROJECT_BASICS_SUCCEEDED,\n      payload: null,\n      meta: { projectPreview },\n    }\n  }\n\n  loadProjectConfig(pk_project: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.LOAD_PROJECT_CONFIG,\n      payload: null,\n      meta: {\n        pk_project\n      },\n    }\n  }\n\n  loadProjectConfigSucceeded(): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.LOAD_PROJECT_CONFIG_SUCCEEDED,\n      payload: {\n        // crm\n      },\n      meta: null,\n    }\n  }\n\n  /************************************************************************************\n   * Layout -- Tabs\n  ************************************************************************************/\n  static SET_LIST_TYPE = 'ActiveProject::SET_LIST_TYPE';\n\n  setListType(list: ListType): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_LIST_TYPE,\n      payload: null,\n      meta: {\n        list\n      }\n    }\n  }\n\n  static SET_PANELS = 'ActiveProject::SET_PANELS';\n\n  setPanels(panels: Panel[], uiIdSerial: number, panelSerial: number, focusedPanel: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_PANELS,\n      payload: null,\n      meta: { panels, uiIdSerial, panelSerial, focusedPanel }\n    }\n  }\n\n  static ACTIVATE_TAB = 'ActiveProject::ACTIVATE_TAB';\n\n  activateTab(panelIndex: number, tabIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.ACTIVATE_TAB,\n      payload: null,\n      meta: {\n        panelIndex, tabIndex\n      }\n    }\n  }\n  static MOVE_TAB = 'ActiveProject::MOVE_TAB';\n  moveTab(previousPanelIndex: number, currentPanelIndex: number, previousTabIndex: number, currentTabIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.MOVE_TAB,\n      payload: null,\n      meta: {\n        previousPanelIndex, currentPanelIndex, previousTabIndex, currentTabIndex\n      }\n    }\n  }\n\n  static CLOSE_TAB = 'ActiveProject::CLOSE_TAB';\n  closeTab(panelIndex: number, tabIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.CLOSE_TAB,\n      payload: null,\n      meta: {\n        panelIndex, tabIndex\n      }\n    }\n  }\n\n  static ADD_TAB = 'ActiveProject::ADD_TAB';\n  addTab<TabData>(tab: PanelTab<TabData>): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.ADD_TAB,\n      payload: null,\n      meta: { tab }\n    }\n  }\n\n  static SPLIT_PANEL = 'ActiveProject::SPLIT_PANEL';\n  splitPanel(previousPanelIndex: number, tabIndex: number, currentPanelIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SPLIT_PANEL,\n      payload: null,\n      meta: { previousPanelIndex, tabIndex, currentPanelIndex }\n    }\n  }\n\n  static CLOSE_PANEL = 'ActiveProject::CLOSE_PANEL';\n  closePanel(panelIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.CLOSE_PANEL,\n      payload: null,\n      meta: { panelIndex }\n    }\n  }\n\n\n  static FOCUS_PANEL = 'ActiveProject::FOCUS_PANEL';\n  focusPanel(panelIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.FOCUS_PANEL,\n      payload: null,\n      meta: { panelIndex }\n    }\n  }\n\n\n  // /************************************************************************************\n  //  * Layout -- Modals\n  // ************************************************************************************/\n  // // create or add entity modal\n  // static readonly OPEN_ADD_FORM = 'ActiveProject::OPEN_ADD_FORM';\n  // static readonly CLOSE_ADD_FORM = 'ActiveProject::CLOSE_ADD_FORM';\n\n  // openAddForm = (createOrAddEntity: CreateOrAddEntity): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.OPEN_ADD_FORM,\n  //   meta: { createOrAddEntity },\n  //   payload: null\n  // })\n\n  // closeAddForm = (): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.CLOSE_ADD_FORM,\n  //   meta: null,\n  //   payload: null\n  // })\n\n\n  /************************************************************************************\n  * Information cache\n  ************************************************************************************/\n\n  // EntityPreviews\n  // static LOAD_ENTITY_PREVIEW = 'ActiveProject::LOAD_ENTITY_PREVIEW';\n  // static LOAD_ENTITY_PREVIEW_SUCCEEDED = 'ActiveProject::LOAD_ENTITY_PREVIEW_SUCCEEDED';\n  // static LOAD_ENTITY_PREVIEW_FAILED = 'ActiveProject::LOAD_ENTITY_PREVIEW_FAILED';\n\n\n  // loadEntityPreview(pk_project: number, pk_entity: number, pk_ui_context: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_ENTITY_PREVIEW,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entity, pk_ui_context\n  //     }\n  //   }\n  // }\n\n  // loadEntityPreviewSucceeded(entityPreview: EntityPreview): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_ENTITY_PREVIEW_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       entityPreview\n  //     },\n  //   }\n  // }\n\n  // loadEntityPreviewFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_ENTITY_PREVIEW_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n  // // EntityPreviews\n  // static LOAD_TYPES = 'ActiveProject::LOAD_TYPES';\n  // static LOAD_TYPES_SUCCEEDED = 'ActiveProject::LOAD_TYPES_SUCCEEDED';\n  // static LOAD_TYPES_FAILED = 'ActiveProject::LOAD_TYPES_FAILED';\n  // loadTypes(pk_project: number, pk_classes: number[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TYPES,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_classes\n  //     }\n  //   }\n  // }\n\n  // loadTypesSucceeded(types: TypePeIt[], pk_classes: number[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TYPES_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       types, pk_classes\n  //     },\n  //   }\n  // }\n\n  // loadTypesFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TYPES_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n\n  // // Entities Details for display in Modals\n  // static LOAD_ENTITY_DETAIL_FOR_MODAL = 'ActiveProject::LOAD_ENTITY_DETAIL_FOR_MODAL';\n  // static LOAD_PE_IT_DETAIL_FOR_MODAL_SUCCEEDED = 'ActiveProject::LOAD_PE_IT_DETAIL_FOR_MODAL_SUCCEEDED';\n  // static LOAD_TE_EN_DETAIL_FOR_MODAL_SUCCEEDED = 'ActiveProject::LOAD_TE_EN_DETAIL_FOR_MODAL_SUCCEEDED'; // TODO: Implement action/reducer\n  // static LOAD_ENTITY_DETAIL_FOR_MODAL_FAILED = 'ActiveProject::LOAD_ENTITY_DETAIL_FOR_MODAL_FAILED';\n\n  // loadEntityDetailForModal(pk_project: number, pk_entity: number, pk_ui_context: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_ENTITY_DETAIL_FOR_MODAL,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entity, pk_ui_context\n  //     }\n  //   }\n  // }\n\n  // loadPeItDetailsForModalSucceeded(peItDetail: EntityDetail): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_PE_IT_DETAIL_FOR_MODAL_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       peItDetail\n  //     },\n  //   }\n  // }\n\n  // loaEntitytDetailsForModalFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_ENTITY_DETAIL_FOR_MODAL_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n  // // Chunks\n  // static LOAD_CHUNK = 'ActiveProject::LOAD_CHUNK';\n  // static LOAD_CHUNK_SUCCEEDED = 'ActiveProject::LOAD_CHUNK_SUCCEEDED';\n  // static LOAD_CHUNK_FAILED = 'ActiveProject::LOAD_CHUNK_FAILED';\n\n  // loadChunk(pk_project: number, pk_entity: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_CHUNK,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entity\n  //     }\n  //   }\n  // }\n\n  // loadChunkSucceeded(chunk: DatChunk): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_CHUNK_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       chunk\n  //     },\n  //   }\n  // }\n\n  // loadChunkFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_CHUNK_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n  // // PeIt Graphs\n  // static LOAD_PEIT_GRAPHS = 'ActiveProject::LOAD_PEIT_GRAPHS';\n  // static LOAD_PEIT_GRAPHS_SUCCEEDED = 'ActiveProject::LOAD_PEIT_GRAPHS_SUCCEEDED';\n  // static LOAD_PEIT_GRAPHS_FAILED = 'ActiveProject::LOAD_PEIT_GRAPHS_FAILED';\n\n\n  // loadPeItGraphs(pk_project: number, pk_entities: number[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_PEIT_GRAPHS,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entities\n  //     }\n  //   }\n  // }\n\n  // loadPeItGraphsSucceeded(peItGraphs: InfPersistentItem[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_PEIT_GRAPHS_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       peItGraphs\n  //     },\n  //   }\n  // }\n\n  // loadPeItGraphsFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_PEIT_GRAPHS_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n  // // TeEn Graphs\n  // static LOAD_TEEN_GRAPHS = 'ActiveProject::LOAD_TEEN_GRAPHS';\n  // static LOAD_TEEN_GRAPHS_SUCCEEDED = 'ActiveProject::LOAD_TEEN_GRAPHS_SUCCEEDED';\n  // static LOAD_TEEN_GRAPHS_FAILED = 'ActiveProject::LOAD_TEEN_GRAPHS_FAILED';\n\n  // loadTeEnGraphs(pk_project: number, pk_entities: number[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TEEN_GRAPHS,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entities\n  //     }\n  //   }\n  // }\n\n  // loadTeEnGraphsSucceeded(teEnGraphs: InfTemporalEntity[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TEEN_GRAPHS_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       teEnGraphs\n  //     },\n  //   }\n  // }\n\n  // loadTeEnGraphsFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TEEN_GRAPHS_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n  // // Queries\n  // static LOAD_QUERIES = 'ActiveProject::LOAD_QUERIES';\n  // static LOAD_QUERIES_SUCCEEDED = 'ActiveProject::LOAD_QUERIES_SUCCEEDED';\n  // static LOAD_QUERIES_FAILED = 'ActiveProject::LOAD_QUERIES_FAILED';\n\n  // loadQueries(pk_project: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERIES,\n  //     payload: null,\n  //     meta: {\n  //       pk_project\n  //     }\n  //   }\n  // }\n\n  // loadQueriesSucceeded(comQueryArray: ComQueryV[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERIES_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       comQueryArray\n  //     },\n  //   }\n  // }\n\n  // loadQueriesFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERIES_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n  // // Query Version\n  // static LOAD_QUERY_VERSION = 'ActiveProject::LOAD_QUERY_VERSION';\n  // static LOAD_QUERY_VERSION_SUCCEEDED = 'ActiveProject::LOAD_QUERY_VERSION_SUCCEEDED';\n  // static LOAD_QUERY_VERSION_FAILED = 'ActiveProject::LOAD_QUERY_VERSION_FAILED';\n\n  // loadQueryVersion(pk_project: number, pk_entity: number, entity_version: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERY_VERSION,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entity, entity_version\n  //     }\n  //   }\n  // }\n\n  // loadQueryVersionSucceeded(comQuery: ProQuery): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERY_VERSION_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       comQuery\n  //     },\n  //   }\n  // }\n\n  // loadQueryVersionFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERY_VERSION_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n\n  // // Visuals\n  // static LOAD_VISUALS = 'ActiveProject::LOAD_VISUALS';\n  // static LOAD_VISUALS_SUCCEEDED = 'ActiveProject::LOAD_VISUALS_SUCCEEDED';\n  // static LOAD_VISUALS_FAILED = 'ActiveProject::LOAD_VISUALS_FAILED';\n\n  // loadVisuals(pk_project: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUALS,\n  //     payload: null,\n  //     meta: {\n  //       pk_project\n  //     }\n  //   }\n  // }\n\n  // loadVisualsSucceeded(comVisualArray: ComVisualV[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUALS_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       comVisualArray\n  //     },\n  //   }\n  // }\n\n  // loadVisualsFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUALS_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n  // // Visual Version\n  // static LOAD_VISUAL_VERSION = 'ActiveProject::LOAD_VISUAL_VERSION';\n  // static LOAD_VISUAL_VERSION_SUCCEEDED = 'ActiveProject::LOAD_VISUAL_VERSION_SUCCEEDED';\n  // static LOAD_VISUAL_VERSION_FAILED = 'ActiveProject::LOAD_VISUAL_VERSION_FAILED';\n\n  // loadVisualVersion(pk_project: number, pk_entity: number, entity_version?: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUAL_VERSION,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entity, entity_version\n  //     }\n  //   }\n  // }\n\n  // loadVisualVersionSucceeded(comVisualArray: ComVisualV[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUAL_VERSION_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       comVisualArray\n  //     },\n  //   }\n  // }\n\n  // loadVisualVersionFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUAL_VERSION_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n\n\n  /************************************************************************************\n   *  Things for Mentionings / Annotations\n  ************************************************************************************/\n  static UPDATE_SELECTED_CHUNK = 'ActiveProject::UPDATE_SELECTED_CHUNK';\n  static SET_REFINING_CHUNK = 'ActiveProject::SET_REFINING_CHUNK';\n  static SET_CREATING_MENTIONING = 'ActiveProject::SET_CREATING_MENTIONING';\n\n\n  // updateSelectedChunk(selectedChunk: DatChunk): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.UPDATE_SELECTED_CHUNK,\n  //     payload: { selectedChunk },\n  //     meta: null\n  //   }\n  // }\n\n  setRefiningChunk(refiningChunk: boolean): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_REFINING_CHUNK,\n      payload: { refiningChunk },\n      meta: null\n    }\n  }\n\n  setCreatingMentioning(creatingMentioning: boolean): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_CREATING_MENTIONING,\n      payload: { creatingMentioning },\n      meta: null\n    }\n  }\n\n  /************************************************************************************\n  * Highlighting of mentionings in the gui\n  ************************************************************************************/\n  static SET_MENTIONINGS_FOCUSED_IN_TEXT = 'ActiveProject::SET_MENTIONINGS_FOCUSED_IN_TEXT';\n  static SET_MENTIONINGS_FOCUSED_IN_TABLE = 'ActiveProject::SET_MENTIONINGS_FOCUSED_IN_TABLE';\n\n  setMentioningsFocusedInText(mentioningsFocusedInText: number[]): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_MENTIONINGS_FOCUSED_IN_TEXT,\n      payload: { mentioningsFocusedInText },\n      meta: null\n    }\n  }\n\n  setMentioningsFocusedInTable(mentioningsFocusedInTable: number[]): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_MENTIONINGS_FOCUSED_IN_TABLE,\n      payload: { mentioningsFocusedInTable },\n      meta: null\n    }\n  }\n\n\n  // /*********************************************************************\n  //  *  Methods to manage enabling and disabling a class for the project\n  //  *********************************************************************/\n  // static readonly UPSERT_CLASS_PROJ_REL = 'ActiveProject::UPSERT_CLASS_PROJ_REL';\n  // static readonly UPSERT_CLASS_PROJ_REL_SUCCEEDED = 'ActiveProject::UPSERT_CLASS_PROJ_REL_SUCCEEDED';\n  // static readonly UPSERT_CLASS_PROJ_REL_FAILED = 'ActiveProject::UPSERT_CLASS_PROJ_REL_FAILED';\n\n  // upsertClassProjRel = (projRel: ProDfhClassProjRel, dfh_pk_class: number): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_CLASS_PROJ_REL,\n  //   meta: { projRel, dfh_pk_class },\n  //   payload: null,\n  // });\n\n  // upsertClassProjRelSucceeded = (projRel: ProDfhClassProjRel, dfh_pk_class: number): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_CLASS_PROJ_REL_SUCCEEDED,\n  //   meta: { projRel, dfh_pk_class },\n  //   payload: null\n  // })\n\n  // upsertClassProjRelFailed = (error, dfh_pk_class: number): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_CLASS_PROJ_REL_FAILED,\n  //   meta: { dfh_pk_class },\n  //   payload: null,\n  //   error,\n  // })\n\n\n  // /*********************************************************************\n  //  *  Methods to manage enabling and disabling an entity for the project\n  //  *********************************************************************/\n  // static readonly UPSERT_ENTITY_PROJ_REL = 'ActiveProject::UPSERT_ENTITY_PROJ_REL';\n  // static readonly UPSERT_ENTITY_PROJ_REL_SUCCEEDED = 'ActiveProject::UPSERT_ENTITY_PROJ_REL_SUCCEEDED';\n  // static readonly UPSERT_ENTITY_PROJ_REL_FAILED = 'ActiveProject::UPSERT_ENTITY_PROJ_REL_FAILED';\n\n  // upsertEntityProjRel = (infProjRel: ProInfoProjRel): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_ENTITY_PROJ_REL,\n  //   meta: { infProjRel },\n  //   payload: null,\n  // });\n\n  // upsertEntityProjRelSucceeded = (infProjRel: ProInfoProjRel): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_ENTITY_PROJ_REL_SUCCEEDED,\n  //   meta: { infProjRel },\n  //   payload: null\n  // })\n\n  // upsertEntityProjRelFailed = (error): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_ENTITY_PROJ_REL_FAILED,\n  //   meta: null,\n  //   payload: null,\n  //   error,\n  // })\n\n\n  /************************************************************************************\n   * Destroy the active project state (on closing a project)\n  ************************************************************************************/\n  static DESTROY = 'ActiveProject::DESTROY';\n  destroy(): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.DESTROY,\n      payload: null,\n      meta: null,\n    }\n  }\n}\n","import { dispatch } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { Information } from '../models';\n\ntype Payload = Information;\nexport type InformationAPIAction = FluxStandardAction<Payload, {}>;\n\n@Injectable()\nexport class InformationAPIActions {\n\n\n\n  static readonly DESTROY = 'Information::DESTROY';\n\n\n  /*********************************************************************\n  *  Method to distroy the slice of store\n  *********************************************************************/\n  @dispatch() destroy = (): InformationAPIAction => ({\n    type: InformationAPIActions.DESTROY,\n    meta: null,\n    payload: null\n  })\n}\n","import { Injectable } from '@angular/core';\nimport { dispatch } from '@angular-redux/store';\nimport { FluxStandardAction } from 'flux-standard-action';\n\n// Flux-standard-action gives us stronger typing of our actions.\ntype Payload = any;\ninterface MetaData { null };\nexport type LoadingBarAction = FluxStandardAction<Payload, undefined>;\n\n\n/**\n* This actions start, stop and complete the global loading bar\n* using a SlimLoadingBarService instantiated within the loading-bar\n* module.\n*\n* In order to show a loading bar in GUI, use the LoadingBarComponent\n* exported by this module.\n*/\n@Injectable()\nexport class LoadingBarActions {\n  static readonly START = 'LOADING_BAR_START';\n  static readonly STOP = 'LOADING_BAR_STOP';\n  static readonly COPMLETE = 'LOADING_BAR_COPMLETE';\n  @dispatch() startLoading = (): LoadingBarAction => ({\n    type: LoadingBarActions.START,\n    meta: null,\n    payload: null,\n  })\n\n  @dispatch() stopLoading = (): LoadingBarAction => ({\n    type: LoadingBarActions.STOP,\n    meta: null,\n    payload: null\n  })\n\n  @dispatch() completeLoading = (): LoadingBarAction => ({\n    type: LoadingBarActions.COPMLETE,\n    meta: null,\n    payload: null,\n  })\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { NotificationsI } from '../models';\n\ntype Payload = NotificationsI;\ninterface MetaData {\n  itemsArray?: any[]\n};\nexport type NotificationsAPIAction = FluxStandardAction<Payload, MetaData>;\n\n@Injectable()\nexport class NotificationsAPIActions {\n  static readonly ADD_TOAST = 'Notifications::ADD_TOAST';\n\n  addToast = (payload: Payload): NotificationsAPIAction => ({\n    type: NotificationsAPIActions.ADD_TOAST,\n    meta: null,\n    payload\n  });\n\n}\n","import { Injectable } from '@angular/core';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { ProjectPreview } from '../models';\nexport type ProjectsAction = FluxStandardAction<ProjectPreview[], {}>;\n\n\n@Injectable()\nexport class ProjectsActions {\n  static LOAD_PROJECTS_SUCCEEDED = 'LOAD_PROJECTS_SUCCEEDED';\n\n  loadProjectsSucceeded(payload: ProjectPreview[]): ProjectsAction {\n    return {\n      type: ProjectsActions.LOAD_PROJECTS_SUCCEEDED,\n      payload,\n      meta: null\n    };\n  }\n\n}\n","import { dispatch } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { SourceList } from '../models';\n\ntype Payload = SourceList;\ninterface MetaData {\n  // pkEntity?: number;\n  // pkSource?: number;\n  // pkProject?: number;\n  // crm?: ProjectCrm;\n\n  // sourceDetail?: PeItDetail;\n  // sectionDetail?: PeItDetail;\n\n  // classAndTypePk?: ClassAndTypePk;\n  // pkUiContext?: number;\n  pkAllowedClasses?: number[];\n};\nexport type SourceListAPIAction = FluxStandardAction<Payload, MetaData>;\n\n@Injectable()\nexport class SourceListAPIActions {\n\n  static readonly INITIALIZE_LIST = 'SourceList::INITIALIZE_LIST';\n\n  static readonly DESTROY = 'SourceList::DESTROY';\n\n\n  /*********************************************************************\n  *  Actions to manage the list\n  *********************************************************************/\n\n  @dispatch() initializeList = (pkAllowedClasses: number[]): SourceListAPIAction => ({\n    type: SourceListAPIActions.INITIALIZE_LIST,\n    meta: { pkAllowedClasses },\n    payload: null\n  })\n\n\n\n\n  /*********************************************************************\n  *  Method to distroy the slice of store\n  *********************************************************************/\n  @dispatch()\n  destroy = (): SourceListAPIAction => ({\n    type: SourceListAPIActions.DESTROY,\n    meta: null,\n    payload: null\n  })\n\n}\n","import { Injectable } from '@angular/core';\nimport { PubAccountApi } from '@kleiolab/lib-sdk-lb3';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { Action } from 'redux';\nimport { combineEpics, Epic, ofType } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { AccountAction, AccountActions, LoadingBarActions, NotificationsAPIActions } from '../actions';\nimport { AccountRole } from '../models/account.model';\n\n\n\n\n@Injectable()\nexport class AccountEpics {\n  constructor(\n    private actions: AccountActions,\n    private loadingBarActions: LoadingBarActions,\n    private accountApi: PubAccountApi,\n    private notificationActions: NotificationsAPIActions,\n  ) { }\n\n  public createEpics(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return combineEpics(\n      this.loadRoles()\n    );\n  }\n\n  private loadRoles(): Epic {\n    return (action$, store) => action$.pipe(\n      ofType(AccountActions.LOAD_ROLES),\n      mergeMap((action: AccountAction) => new Observable<Action>((globalStore) => {\n\n        globalStore.next(this.loadingBarActions.startLoading());\n        this.accountApi.getRoles(action.meta.accountId)\n          .subscribe((data: AccountRole[]) => {\n            globalStore.next(this.loadingBarActions.completeLoading());\n            globalStore.next(this.actions.loadRolesSucceeded(data));\n          }, error => {\n            globalStore.next(this.notificationActions.addToast({\n              type: 'error',\n              options: { title: error }\n            }))\n          })\n      }))\n\n    )\n  }\n\n\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { SysConfig } from '@kleiolab/lib-config';\nimport { ProProject, ProProjectApi } from '@kleiolab/lib-sdk-lb3';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { Action } from 'redux';\nimport { combineEpics, Epic, ofType } from 'redux-observable-es6-compat';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, mapTo, mergeMap, switchMap } from 'rxjs/operators';\nimport { IAppState } from '../../root/models';\nimport { DatActions, DfhActions, InfActions, ProActions, SysActions } from '../../state-schema/actions';\nimport { ActiveProjectAction, ActiveProjectActions, LoadingBarActions, NotificationsAPIActions } from '../actions';\nimport { ProjectPreview } from '../models';\n\n/**\n * Transform ProProject to ProjectPreview\n */\nfunction proProjectToProjectPreview(project: ProProject): ProjectPreview {\n  return {\n    label: this.firstProTextPropStringOfType(project.text_properties, SysConfig.PK_SYSTEM_TYPE__TEXT_PROPERTY__LABEL),\n    description: this.firstProTextPropStringOfType(project.text_properties, SysConfig.PK_SYSTEM_TYPE__TEXT_PROPERTY__DESCRIPTION),\n    default_language: project.default_language,\n    pk_project: project.pk_entity\n  }\n}\n\n\n@Injectable()\nexport class ActiveProjectEpics {\n  constructor(\n    private sys: SysActions,\n    private dat: DatActions,\n    private dfh: DfhActions,\n    private pro: ProActions,\n    private inf: InfActions,\n    private projectApi: ProProjectApi,\n    private actions: ActiveProjectActions,\n    private notificationActions: NotificationsAPIActions,\n    private loadingBarActions: LoadingBarActions,\n    private ngRedux: NgRedux<IAppState>,\n  ) { }\n\n  public createEpics(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return combineEpics(\n      this.createLoadProjectBasicsEpic(),\n      this.createLoadProjectConfigEpic(),\n      this.createLoadProjectUpdatedEpic(),\n      this.createClosePanelEpic(),\n      this.createActivateTabFocusPanelEpic(),\n      this.createMoveTabFocusPanelEpic(),\n      this.createClosePanelFocusPanelEpic(),\n      this.createSplitPanelActivateTabEpic(),\n      this.createAddTabCloseListEpic(),\n    );\n  }\n\n  /**\n   * This epic listenes to an action that wants to load tha active project (by id)\n   * It loads the project info and\n   * - on loaded dispaches an action that reduces the project into the store\n   * - on fail dispaches an action that shows an error notification\n   */\n  private createLoadProjectBasicsEpic(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return (action$, store) => action$.pipe(\n\n      ofType(ActiveProjectActions.LOAD_PROJECT_BASICS),\n      switchMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n        /**\n       * Emit the global action that activates the loading bar\n       */\n        globalStore.next(this.loadingBarActions.startLoading());\n\n        this.projectApi.getBasics(action.meta.pk_project)\n          .subscribe(\n            (data: ProProject[]) => {\n              globalStore.next(this.actions.loadProjectBasiscsSucceded(proProjectToProjectPreview(data[0])))\n            },\n            error => {\n              globalStore.next(this.notificationActions.addToast({\n                type: 'error',\n                options: { title: error.message }\n              }))\n            })\n      }))\n\n    )\n  }\n\n  /**\n  * This epic listenes to an action that is dispached when loading projcect succeeded\n  *\n  * It dispaches an action that completes the loading bar\n  */\n  private createLoadProjectUpdatedEpic(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return (action$, store) => action$.pipe(\n      ofType(ActiveProjectActions.LOAD_PROJECT_BASICS_SUCCEEDED),\n      mapTo(this.loadingBarActions.completeLoading())\n    )\n  }\n\n  private createLoadProjectConfigEpic(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return (action$, store) => action$.pipe(\n\n      ofType(ActiveProjectActions.LOAD_PROJECT_CONFIG),\n      switchMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n        globalStore.next(this.loadingBarActions.startLoading());\n\n        combineLatest(\n          this.dfh.profile.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n\n          this.dfh.klass.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n          this.dfh.property.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n          this.dfh.label.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n\n          this.sys.system_relevant_class.load().resolved$.pipe(filter(x => !!x)),\n          this.sys.config.load().resolved$.pipe(filter(x => !!x)),\n          this.dat.namespace.load('', action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n\n          this.pro.text_property.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n          this.pro.dfh_class_proj_rel.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n          this.pro.dfh_profile_proj_rel.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n          this.pro.class_field_config.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n\n          this.inf.persistent_item.typesOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x))\n        )\n          .pipe(filter((res: any[]) => !res.includes(undefined)))\n          .subscribe((res) => {\n\n            globalStore.next(this.actions.loadProjectConfigSucceeded());\n            globalStore.next(this.loadingBarActions.completeLoading());\n\n          }, error => {\n            // subStore.dispatch(this.actions.loadFailed({ status: '' + error.status }))\n          });\n\n      }))\n\n    )\n  }\n\n\n  /**\n   * LAYOUT\n   */\n  private createClosePanelEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.CLOSE_TAB, ActiveProjectActions.MOVE_TAB, ActiveProjectActions.SPLIT_PANEL),\n        mergeMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n          this.ngRedux.getState().activeProject.panels.forEach((panel, panelIndex) => {\n            if (panel.tabs.length === 0) globalStore.next(this.actions.closePanel(panelIndex));\n          })\n        }))\n      )\n    }\n  }\n  private createSplitPanelActivateTabEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.SPLIT_PANEL),\n        map((action: ActiveProjectAction) => {\n          const p = this.ngRedux.getState().activeProject;\n          const c = action.meta.currentPanelIndex;\n          const panelIndex = p.panels.length < (c + 1) ? c - 1 : c;\n          return this.actions.activateTab(panelIndex, 0)\n        })\n      )\n    }\n  }\n  private createActivateTabFocusPanelEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.ACTIVATE_TAB),\n        mergeMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n          if (this.ngRedux.getState().activeProject.focusedPanel !== action.meta.panelIndex) {\n            globalStore.next(this.actions.focusPanel(action.meta.panelIndex));\n          }\n        }))\n      )\n    }\n  }\n  private createMoveTabFocusPanelEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.MOVE_TAB),\n        mergeMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n          if (this.ngRedux.getState().activeProject.focusedPanel !== action.meta.currentPanelIndex) {\n            globalStore.next(this.actions.focusPanel(action.meta.currentPanelIndex));\n          }\n        }))\n      )\n    }\n  }\n  private createClosePanelFocusPanelEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.CLOSE_PANEL),\n        mergeMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n          if (this.ngRedux.getState().activeProject.focusedPanel > (this.ngRedux.getState().activeProject.panels.length - 1)) {\n            globalStore.next(this.actions.focusPanel(0));\n          }\n        }))\n      )\n    }\n  }\n  private createAddTabCloseListEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.ADD_TAB),\n        mapTo(this.actions.setListType(''))\n      )\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { SlimLoadingBarService } from '@cime/ngx-slim-loading-bar';\nimport { combineEpics, Epic, ofType } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { LoadingBarActions } from '../actions';\n\n\n\n\n@Injectable()\nexport class LoadingBarEpics {\n  constructor(\n    private service: SlimLoadingBarService,\n    private actions: LoadingBarActions,\n  ) { }\n\n  public createEpics(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return combineEpics(\n      this.createStartLoadingBarEpic(),\n      this.createCompleteLoadingBarEpic()\n    );\n  }\n\n  private createCompleteLoadingBarEpic(): Epic {\n    return (action$, store) => action$.pipe(\n      ofType(LoadingBarActions.COPMLETE),\n      switchMap(() => {\n        return Observable.create(observer => {\n          this.service.complete()\n          // observer.next(this.actions.stopLoading())\n        })\n      })\n    )\n  }\n\n  private createStartLoadingBarEpic(): Epic {\n    return (action$, store) => action$.pipe(\n      ofType(LoadingBarActions.START),\n      switchMap(() => {\n        return Observable.create(observer => {\n          this.service.start();\n        })\n      })\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ToastyConfig, ToastyService } from '@cime/ngx-toasty';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { combineEpics, Epic, ofType } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { filter, switchMap, takeUntil } from 'rxjs/operators';\nimport { NotificationsAPIAction, NotificationsAPIActions } from '../actions';\n\n@Injectable()\nexport class NotificationsAPIEpics {\n  constructor(\n    private toastyService: ToastyService,\n    private toastyConfig: ToastyConfig\n  ) {\n    // Assign the selected theme name to the `theme` property of the instance of ToastyConfig.\n    // Possible values: default, bootstrap, material\n    this.toastyConfig.theme = 'bootstrap';\n  }\n\n  public createEpics(): Epic {\n    return combineEpics(this.createAddToastEpic());\n  }\n\n  private createAddToastEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        /**\n         * Filter the actions that triggers this epic\n         */\n        filter((a) => {\n          return a;\n        }),\n        ofType(NotificationsAPIActions.ADD_TOAST),\n        switchMap((action) => new Observable<FluxStandardAction<any>>((observer) => {\n          /**\n           * Add Toast\n           */\n          const a = action as NotificationsAPIAction;\n          if (!a.payload.options.title && !a.payload.options.msg) {\n            if (a.payload.type === 'error') {\n              a.payload.options.title = 'Oops, something went wrong!'\n            }\n          }\n          this.toastyService[a.payload.type](a.payload.options);\n\n        })),\n      )\n    }\n  }\n}\n","import { List } from './list';\n\nexport class Information {\n\n  // search results\n  items?: List;\n\n  loading?: boolean;\n\n  constructor(data?: Information) {\n    Object.assign(this, data);\n  }\n}\n","import { EntitySearchHit } from '@kleiolab/lib-sdk-lb4';\n// Class of this slice of store\nexport class List {\n    searchString?: string;\n    // Array of dfh_pk_class of those classes that may appear in the list\n    pkAllowedClasses?: number[];\n    collectionSize?: number;\n    items?: EntitySearchHit[];\n    loading?: boolean;\n    error?: any;\n    constructor(data?: List) {\n        Object.assign(this, data);\n        if (true) {\n        }\n        else {\n        }\n    }\n}\n","import { ToastOptions } from '@cime/ngx-toasty';\n\n// Interface of this slice of store\nexport interface NotificationsI {\n    type: 'info' | Â 'success' | Â 'wait' | 'error' | 'warning';\n    options: ToastOptions;\n}\n\n// Class of this slice of store\nexport class Notifications implements NotificationsI {\n    type: 'info' | Â 'success' | Â 'wait' | 'error' | 'warning';\n    options: ToastOptions;\n\n    constructor(data?: NotificationsI) {\n        Object.assign(this, data);\n    }\n}\n","import { List } from './list';\n\n// Class of this slice of store\nexport class SourceList {\n\n  // the list of sources (search result)\n  list?: List;\n\n  // // class and type selector\n  // classAndTypeSelector?: ClassAndTypeSelector;\n\n  loading?: boolean;\n\n  constructor(data?: SourceList) {\n    Object.assign(this, data);\n  }\n}\n","export type RightPanelTab = 'linked-sources' | 'linked-digitals' | 'content-tree';\n\nexport interface PeItDetailList { [pk_entity: number]: EntityDetail };\n\n\nexport class EntityDetail {\n\n\n  // _fields?: FieldList;\n\n  pkEntity?: number;\n\n  /** Left Panel Visibility */\n\n  // the properties with information about the peIt\n  showProperties?= false;\n\n  // the right area\n  showRightArea?= true;\n\n  /** Right panel */\n  rightPanelTabs?: RightPanelTab[] = []\n  rightPanelActiveTab?= 0; // index of the active tab\n\n  // the bar to above the properties\n  // showPropertiesHeader?= true;\n\n  // the header with name of peIt\n  showHeader?= true;\n\n\n  constructor(data?: EntityDetail) {\n    Object.assign(this, data);\n  }\n\n\n}\n","import { ClassConfig } from '../active-project.models';\n\nexport type EntityType = 'teEnt' | 'peIt' | 'other';\n\n\n// Class of this slice of store\nexport class ProjectSettingsData {\n  items?: ClassConfig[];\n  // profiles?: DfhClassProfileView[];\n  tabTitle?: string;\n  loading?: boolean;\n  error?: any;\n\n  constructor(data?: ProjectSettingsData) {\n    Object.assign(this, data);\n  }\n}\n","export type TabLayoutMode = 'left-only' | 'right-only' | 'both';\n\n// Class of this slice of store\nexport class TabBase {\n\n  pkEntity?: number;\n\n  tabTitle?: string;\n\n  tabTooltip?: string;\n\n  loading?: boolean;\n\n  layoutMode?: TabLayoutMode;\n\n  constructor(data?: TabBase) {\n    Object.assign(this, data);\n  }\n}\n","\n\n// Class of this slice of store\nexport class Types {\n  items?: {};\n  edit?: boolean;\n  loading?: boolean;\n  error?: any;\n\n  // title in the tab\n  tabTitle?: string;\n\n  constructor(data?: Types) {\n    Object.assign(this, data);\n  }\n}\n","import { AccountAction, AccountActions } from '../actions';\nimport { IAccount } from '../models';\n\nconst INITIAL_STATE: IAccount = {\n  account: undefined,\n  roles: undefined\n};\n\nexport const accountRootReducer = (lastState: IAccount = INITIAL_STATE, action: AccountAction): IAccount => {\n  switch (action.type) {\n    case AccountActions.LOGIN_SUCCEEDED:\n      lastState = {\n        ...lastState,\n        account: action.meta.account\n      };\n      break;\n\n\n    case AccountActions.ACCOUNT_UPDATED:\n      lastState = {\n        ...lastState,\n        account: action.meta.account\n      };\n      break;\n\n    case AccountActions.LOAD_ROLES_SUCCEEDED:\n      lastState = {\n        ...lastState,\n        roles: action.meta.accountRoles\n      };\n      break;\n\n    case AccountActions.LOAD_ROLES_FAILED:\n      lastState = {\n        ...lastState,\n        roles: []\n      };\n      break;\n\n\n\n  }\n  return lastState;\n}\n\n","import { moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { omit } from 'ramda';\nimport { ActiveProjectAction, ActiveProjectActions } from '../actions';\nimport { ProjectDetail } from '../models';\n\nconst INITIAL_STATE: ProjectDetail = {\n  label: '',\n  list: '',\n  uiIdSerial: 0,\n  panelSerial: 0,\n  focusedPanel: 0,\n  panels: []\n};\nexport const activeProjectReducer = (state: ProjectDetail = INITIAL_STATE, action: ActiveProjectAction): ProjectDetail => {\n  let pi, ti, ppi, cpi, pti, cti;\n  switch (action.type) {\n    /************************************************************************************\n     * Load project data (metadata, crm)\n    ************************************************************************************/\n    case ActiveProjectActions.LOAD_PROJECT_BASICS_SUCCEEDED:\n      state = {\n        ...state,\n        ...action.meta.projectPreview\n      };\n      break;\n    case ActiveProjectActions.LOAD_PROJECT_CONFIG:\n      state = {\n        ...state,\n        loadingConfigData: true\n      }\n      break;\n    case ActiveProjectActions.LOAD_PROJECT_CONFIG_SUCCEEDED:\n      state = {\n        ...state,\n        // crm: action.payload.crm,\n        configDataInitialized: true,\n        loadingConfigData: false\n      }\n      break;\n\n    /************************************************************************************\n     * Layout -- Tabs\n    ************************************************************************************/\n    case ActiveProjectActions.SET_PANELS:\n      state = {\n        ...state,\n        panels: action.meta.panels,\n        uiIdSerial: action.meta.uiIdSerial,\n        panelSerial: action.meta.panelSerial,\n        focusedPanel: action.meta.focusedPanel\n      }\n      break;\n    case ActiveProjectActions.SET_LIST_TYPE:\n      state = {\n        ...state,\n        list: action.meta.list\n      }\n      break;\n    case ActiveProjectActions.ACTIVATE_TAB:\n      pi = action.meta.panelIndex;\n      ti = action.meta.tabIndex;\n      state = {\n        ...state,\n        panels: Object.assign([...state.panels], {\n          [pi]: {\n            ...state.panels[pi],\n            tabs: [...state.panels[pi].tabs].map((tab, index) => {\n              tab.active = (index === ti);\n              return tab;\n            })\n          }\n        })\n      }\n      break;\n    case ActiveProjectActions.MOVE_TAB:\n      ppi = action.meta.previousPanelIndex;\n      cpi = action.meta.currentPanelIndex;\n      pti = action.meta.previousTabIndex;\n      cti = action.meta.currentTabIndex;\n\n      if (ppi === cpi) {\n        const tabs = [...state.panels[cpi].tabs];\n        moveItemInArray(tabs, pti, cti);\n        state = {\n          ...state,\n          panels: Object.assign([...state.panels], {\n            [cpi]: {\n              ...state.panels[cpi],\n              tabs\n            }\n          })\n        }\n      } else {\n        const pTabs = [...state.panels[ppi].tabs];\n        const cTabs = [...state.panels[cpi].tabs];\n        transferArrayItem(pTabs, cTabs, pti, cti);\n        state = {\n          ...state,\n          panels: Object.assign([...state.panels], {\n            [ppi]: {\n              ...state.panels[ppi],\n              tabs: pTabs.map((tab, index) => {\n                tab.active = (index === (pti < pTabs.length ? pti : (pti - 1)));\n                return tab;\n              })\n            },\n            [cpi]: {\n              ...state.panels[cpi],\n              tabs: cTabs.map((tab, index) => {\n                tab.active = (index === cti);\n                return tab;\n              })\n            }\n          })\n        }\n      }\n\n      break;\n    case ActiveProjectActions.ADD_TAB:\n      if (state.panels.length === 0) {\n        state = {\n          ...state,\n          panels: [\n            {\n              id: state.panelSerial,\n              tabs: []\n            }\n          ],\n          focusedPanel: 0,\n          panelSerial: state.panelSerial + 1\n        }\n      }\n      pi = state.focusedPanel;\n      state = {\n        ...state,\n        panels: Object.assign([...state.panels], {\n          [pi]: {\n            ...state.panels[pi],\n            tabs: [\n              ...state.panels[pi].tabs.map(t => {\n                t.active = false;\n                return t;\n              }),\n              {\n                ...omit(['pathSegment'], action.meta.tab),\n                // panelIndex: pi,\n                path: ['activeProject', action.meta.tab.pathSegment, state.uiIdSerial.toString()]\n              }\n            ]\n          }\n        }),\n        uiIdSerial: (state.uiIdSerial + 1)\n      }\n      break;\n    case ActiveProjectActions.CLOSE_TAB:\n      pi = action.meta.panelIndex;\n      ti = action.meta.tabIndex;\n      // remove the closing tab\n      state = {\n        ...state,\n        panels: Object.assign([...state.panels], {\n          [pi]: {\n            ...state.panels[pi],\n            tabs: [...state.panels[pi].tabs]\n              .filter((tab, index) => index !== ti)\n\n          }\n        })\n      }\n      // activate a sibling tab, if needed and possible\n      if (!state.panels[pi].tabs.find(t => t.active)) {\n        state = {\n          ...state,\n          panels: Object.assign([...state.panels], {\n            [pi]: {\n              ...state.panels[pi],\n              tabs: [...state.panels[pi].tabs]\n                .map((tab, index) => {\n                  tab.active = (index === (ti < state.panels[pi].tabs.length ? ti : (ti - 1)));\n                  return tab;\n                })\n            }\n          })\n\n        }\n      }\n      break;\n    case ActiveProjectActions.CLOSE_PANEL:\n      pi = action.meta.panelIndex;\n      const panels = [...state.panels];\n      panels.splice(pi, 1);\n      state = {\n        ...state,\n        panels\n      }\n      break;\n\n    case ActiveProjectActions.FOCUS_PANEL:\n      state = {\n        ...state,\n        focusedPanel: action.meta.panelIndex\n      }\n      break;\n    case ActiveProjectActions.SPLIT_PANEL:\n      ppi = action.meta.previousPanelIndex;\n      ti = action.meta.tabIndex;\n      cpi = action.meta.currentPanelIndex;\n      const moveTab = state.panels[ppi].tabs[ti];\n      // removes tab from old panel\n      state = {\n        ...state,\n        panels: Object.assign([...state.panels], {\n          [ppi]: {\n            ...state.panels[ppi],\n            tabs: [...state.panels[ppi].tabs]\n              .filter((tab, index) => index !== ti)\n              .map((tab, index) => {\n                if (index === 0) tab.active = true;\n                return tab;\n              })\n          }\n        })\n      }\n      // insert a new panel at position of cpi\n      const newPanels = [...state.panels];\n      newPanels.splice(cpi, 0, {\n        id: state.panelSerial,\n        tabs: [moveTab]\n      })\n      state = {\n        ...state,\n        panels: newPanels,\n        // increase panel id sequence\n        panelSerial: state.panelSerial + 1\n      }\n\n      break;\n\n\n    case ActiveProjectActions.SET_REFINING_CHUNK:\n      state = {\n        ...state,\n        refiningChunk: action.payload.refiningChunk\n      };\n      break;\n    case ActiveProjectActions.SET_CREATING_MENTIONING:\n      state = {\n        ...state,\n        creatingMentioning: action.payload.creatingMentioning\n      };\n      break;\n\n    /************************************************************************************\n    * Highlighting of mentionings in the gui\n    ************************************************************************************/\n    case ActiveProjectActions.SET_MENTIONINGS_FOCUSED_IN_TEXT:\n      state = {\n        ...state,\n        mentioningsFocusedInText: action.payload.mentioningsFocusedInText\n      };\n      break;\n\n    case ActiveProjectActions.SET_MENTIONINGS_FOCUSED_IN_TABLE:\n      state = {\n        ...state,\n        mentioningsFocusedInTable: action.payload.mentioningsFocusedInTable\n      };\n      break;\n\n\n    /************************************************************************************\n     * Destroy the active project state (on closing a project)\n    ************************************************************************************/\n    case ActiveProjectActions.DESTROY:\n      state = INITIAL_STATE;\n      break;\n  }\n\n  return state;\n}\n","import { Action } from 'redux';\nimport { InformationAPIAction, InformationAPIActions } from '../actions';\nimport { Information } from '../models';\n\nconst INITIAL_STATE = new Information();\n\nexport function informationReducer(state: Information = INITIAL_STATE, a: Action): Information {\n\n  const action = a as InformationAPIAction;\n\n  switch (action.type) {\n\n\n    /*****************************************************\n    * Reducers called on destroy of component\n    *****************************************************/\n    case InformationAPIActions.DESTROY:\n      state = {};\n      break;\n\n  }\n\n  return state;\n};\n\n","import { Action } from 'redux';\nimport { LoadingBarAction, LoadingBarActions } from '../actions';\nimport { LoadingBar } from '../models';\n\nconst INITIAL_STATE: LoadingBar = {\n  loading: false,\n  progress: 0,\n};\n\n\nexport function loadingBarReducer(state: LoadingBar = INITIAL_STATE, a: Action): LoadingBar {\n\n  const action = a as LoadingBarAction;\n\n\n  switch (action.type) {\n\n    case LoadingBarActions.START:\n      return {\n        ...state,\n        loading: true\n      };\n\n    case LoadingBarActions.STOP:\n      return {\n        ...state,\n        loading: false,\n      };\n\n    case LoadingBarActions.COPMLETE:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n\n  return state;\n};\n\n","import { Action } from 'redux';\nimport { NotificationsAPIAction } from '../actions';\nimport { Notifications } from '../models';\n\nconst INITIAL_STATE = new Notifications();\n\nexport function notificationsReducer(state: Notifications = INITIAL_STATE, a: Action): Notifications {\n\n  const action = a as NotificationsAPIAction;\n\n  switch (action.type) { }\n\n  return state;\n};\n\n","import { ProjectsAction, ProjectsActions } from '../actions';\nimport { IProjectList, ProjectPreview } from '../models';\n\nconst INITIAL_STATE: IProjectList = {\n  records: []\n};\n\nconst projectListReducer = (lastState: IProjectList = INITIAL_STATE, action: ProjectsAction): IProjectList => {\n  switch (action.type) {\n    case ProjectsActions.LOAD_PROJECTS_SUCCEEDED: return {\n      ...lastState, records: action.payload.map((record: ProjectPreview) => ({ record: record }))\n    };\n  }\n\n  return lastState;\n}\n\nexport const createProjectsReducer = () => {\n  return projectListReducer;\n}\n","import { Action } from 'redux';\nimport { SourceListAPIAction, SourceListAPIActions } from '../actions';\nimport { SourceList } from '../models';\n\nconst INITIAL_STATE = new SourceList();\n\nexport function sourceListReducer(state: SourceList = INITIAL_STATE, a: Action): SourceList {\n\n  const action = a as SourceListAPIAction;\n\n  switch (action.type) {\n\n    case SourceListAPIActions.INITIALIZE_LIST:\n      state = {\n        ...state,\n        list: {\n          pkAllowedClasses: action.meta.pkAllowedClasses\n        }\n      }\n      break;\n\n\n    /*****************************************************\n    * Reducers called on destroy of component\n    *****************************************************/\n    case SourceListAPIActions.DESTROY:\n      state = {};\n      break;\n\n  }\n\n  return state;\n};\n\n"]}