{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/actions/account.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/actions/active-project.action.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/actions/entity-list.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/actions/loading-bar.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/actions/notifications.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/actions/projects.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/actions/source-list.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/epics/account.epics.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducer-configs/dat.config.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducer-configs/dfh.config.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducer-configs/inf.config.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducer-configs/pro.config.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducer-configs/sys.config.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducer-configs/tab.config.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducer-configs/war.config.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/_helpers/schema-actions-factory.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/actions/dat.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/actions/dfh.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/_helpers/inf-action-factory.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/actions/inf.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/actions/pro.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/actions/sys.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/actions/tab.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/actions/war.actions.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/epics/active-project.epics.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/epics/loading-bar.epics.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/epics/notifications.epics.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/epics/action-resolver.epics.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/_helpers/flattener.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/_helpers/schema-epics-factory.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/_helpers/inf-epic-factory.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/_helpers/reducer-factory.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/services/schema-object.service.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/epics/dat.epics.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/epics/dfh.epics.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/epics/inf.epics.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/epics/pro.epics.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/epics/sys.epics.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/epics/tab.epics.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/epics/war.epics.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/root/root-epics.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/reducers/account.reducers.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/reducers/active-project.reducer.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/models/entity-list.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/models/list.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/models/notifications.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/models/source-list.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/reducers/entity-list.reducer.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/reducers/loading-bar.reducer.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/reducers/notifications.reducer.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/reducers/projects.reducers.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/reducers/source-list.reducer.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/root/root-reducer.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducers/sys.reducer.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducers/dfh.reducer.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducers/inf.reducer.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducers/dat.reducer.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducers/pro.reducer.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducers/war.reducer.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/reducers/tab.reducer.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/module/redux-store.module.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/models/active-project/entity-detail.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/models/active-project/project-settings-data.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/models/active-project/tab-layout.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-gui/models/active-project/types.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/models/dat.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/models/dfh.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/models/inf.models.ts","ng://@kleiolab/lib-redux/src/lib/redux-store/state-schema/models/tab.models.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__read","o","m","Symbol","iterator","e","ar","next","done","push","value","error","__spread","concat","AccountActions","login","type","LOGIN","payload","meta","loginSucceeded","account","LOGIN_SUCCEEDED","loginFailed","LOGIN_FAILED","accountUpdated","ACCOUNT_UPDATED","loadRoles","accountId","LOAD_ROLES","loadRolesSucceeded","accountRoles","LOAD_ROLES_SUCCEEDED","loadRolesFailed","LOAD_ROLES_FAILED","Injectable","ActiveProjectActions","loadProjectBasics","pk_project","LOAD_PROJECT_BASICS","loadProjectBasiscsSucceded","projectPreview","LOAD_PROJECT_BASICS_SUCCEEDED","loadProjectConfig","LOAD_PROJECT_CONFIG","loadProjectConfigSucceeded","LOAD_PROJECT_CONFIG_SUCCEEDED","setListType","list","SET_LIST_TYPE","setPanels","panels","uiIdSerial","panelSerial","focusedPanel","SET_PANELS","activateTab","panelIndex","tabIndex","ACTIVATE_TAB","moveTab","previousPanelIndex","currentPanelIndex","previousTabIndex","currentTabIndex","MOVE_TAB","closeTab","CLOSE_TAB","addTab","tab","ADD_TAB","splitPanel","SPLIT_PANEL","closePanel","CLOSE_PANEL","focusPanel","FOCUS_PANEL","setRefiningChunk","refiningChunk","SET_REFINING_CHUNK","setCreatingMentioning","creatingMentioning","SET_CREATING_MENTIONING","setMentioningsFocusedInText","mentioningsFocusedInText","SET_MENTIONINGS_FOCUSED_IN_TEXT","setMentioningsFocusedInTable","mentioningsFocusedInTable","SET_MENTIONINGS_FOCUSED_IN_TABLE","destroy","DESTROY","LOAD_PROJECT_BASICS_FAILED","UPDATE_SELECTED_CHUNK","InformationAPIActions","tslib_1.__decorate","dispatch","LoadingBarActions","startLoading","START","stopLoading","STOP","completeLoading","COPMLETE","NotificationsAPIActions","addToast","ADD_TOAST","ProjectsActions","loadProjectsSucceeded","LOAD_PROJECTS_SUCCEEDED","SourceListAPIActions","initializeList","pkAllowedClasses","INITIALIZE_LIST","AccountEpics","actions","loadingBarActions","accountApi","notificationActions","createEpics","combineEpics","_this","action$","store","pipe","ofType","mergeMap","action","Observable","globalStore","getRoles","subscribe","data","options","title","PubAccountApi","datRoot","datDefinitions","digital","equals","newItem","oldItem","quill_doc","pk_entity","entity_version","indexBy","keyInStore","indexByFn","item","toString","groupBy","groupByFn","pk_text","chunk","fk_text","column","fk_digital","class_column_mapping","fk_column","text_property","fk_entity","fk_system_type","namespace","fk_project","dfhLabelByFksKey","language","fk_class","fk_profile","fk_property","dfhDefinitions","profile","pk_profile","klass","pk_class","basic_type","property","pk_property","has_domain","has_range","is_has_type_subproperty","undefined","label","infRoot","infDefinitions","persistent_item","temporal_entity","statement","indexStatementBySubject","indexStatementBySubjectProperty","indexStatementByObject","indexStatementByObjectProperty","U","toStr0undef","fk_subject_data","fk_concerned_entity","fk_class_field","lang_string","appellation","time_primitive","place","dimension","fks","fk_subject_info","fk_object_info","fk_object_data","fk_object_tables_row","fk_object_tables_cell","fk_property_of_property","proRoot","textPropertyByFksKey","fk_language","fk_dfh_class","fk_dfh_property","fk_dfh_property_domain","fk_dfh_property_range","textPropertyByFksWithoutLang","proClassFieldConfgByProjectAndClassKey","fk_range_class","fk_domain_class","fk_class_for_class_field","proDefinitions","project","info_proj_rel","class_field_config","dfh_class_proj_rel","enabled_in_entities","dfh_profile_proj_rel","enabled","analysis","sysRoot","sysDefinitions","system_relevant_class","required_by_sources","required_by_entities","required_by_basics","config","tabRoot","tabDefinitions","cell","pk_cell","fk_row","warRoot","warDefinitions","entity_preview","SchemaActionsFactory","ngRedux","createCrudActions","actionPrefix","modelName","load","suffix","pk","addPending","uuid","pending$","select","resolved$","loadSucceeded","items","removePending","upsert","upsertSucceeded","succeeded","delete","filter","x","deleteSucceeded","failed","loadPage","paginateBy","limit","offset","loadPageSucceeded","pks","count","loadPageFailed","DigitalActionsFactory","_super","tslib_1.__extends","createActions","loadVersion","pkEntity","entityVersion","LOAD_VERSION","ChunkActionsFactory","loadChunksOfDigital","pkDigital","CHUNKS_OF_DIGITAL","ColumnActionsFactory","loadColumnsOfTable","COLUMNS_OF_TABLE","DatActions","NgRedux","DfhProfileActionFactory","loadOfProject","pkProject","OF_PROJECT","DfhClassActionFactory","DfhPropertyActionFactory","DfhLabelActionFactory","DfhActions","InfActionFactory","createInfActions","remove","removeSucceeded","InfPersistentItemActionFactory","loadMinimal","MINIMAL_BY_PK","typesOfProject","TYPES_OF_PROJECT","TYPE_OF_PROJECT","InfTemporalEntityActionFactory","loadNestedObject","OWN_PROPERTIES","loadPaginatedList","pkSourceEntity","pkProperty","fkTargetClass","isOutgoing","PAGINATED_LIST","alternatives","loadPaginatedAlternativeList","PAGINATED_ALTERNATIVE_LIST","InfStatementActionFactory","findByParams","ofProject","pkInfoRange","pkInfoDomain","BY_PARAMS","loadIngoingAlternatives","ALTERNATIVES_INGOING","sourcesAndDigitalsOfEntity","SOURCES_AND_DIGITALS_OF_ENTITY","CONTENT_TREE","InfTextPropertyActionFactory","loadAlternatives","fkEntity","fkClassField","ALTERNATIVES","InfActions","ProProjectActionFactory","loadOfAccount","OF_ACCOUNT","loadBasics","LOAD_BASICS","ProInfoProjRelActionFactory","markStatementAsFavorite","pkStatement","MARK_ROLE_AS_FAVORITE","ProDfhClassProjRelActionFactory","ProDfhProfileProjRelActionFactory","ProClassFieldConfigActionFactory","ProTextPropertyActionFactory","ProAnalysisActionFactory","loadByIdAndVersion","version","BY_PK_AND_VERSION","ProActions","SysActions","TabActions","WarActions","ActiveProjectEpics","sys","dat","dfh","pro","inf","projectApi","createLoadProjectBasicsEpic","createLoadProjectConfigEpic","createLoadProjectUpdatedEpic","createClosePanelEpic","createActivateTabFocusPanelEpic","createMoveTabFocusPanelEpic","createClosePanelFocusPanelEpic","createSplitPanelActivateTabEpic","createAddTabCloseListEpic","switchMap","getBasics","firstProTextPropStringOfType","text_properties","SysConfig","PK_SYSTEM_TYPE__TEXT_PROPERTY__LABEL","description","PK_SYSTEM_TYPE__TEXT_PROPERTY__DESCRIPTION","default_language","proProjectToProjectPreview","message","mapTo","combineLatest","res","includes","getState","activeProject","forEach","panel","tabs","map","ProProjectApi","LoadingBarEpics","service","createStartLoadingBarEpic","createCompleteLoadingBarEpic","observer","complete","start","SlimLoadingBarService","NotificationsAPIEpics","toastyService","toastyConfig","theme","createAddToastEpic","a","msg","ToastyService","ToastyConfig","ActionResolverEpics","createResolveEpic","of","args","providedIn","ModelFlattener","modelDefinition","flattenCb","flatten","keysToOmit_1","keys","relations","omit","Flattener","infActions","datActions","proActions","ProInfoProjRel","getModelDefinition","pro_dfh_class_proj_rel","ProDfhClassProjRel","pro_dfh_profile_proj_rel","ProDfhProfileProjRel","InfPersistentItem","incoming_statements","outgoing_statements","entity_version_project_rels","InfTemporalEntity","InfStatement","subject_temporal_entity","subject_statement","object_persistent_item","object_appellation","object_place","object_time_primitive","object_language","subject_chunk","object_lang_string","object_dimension","InfAppellation","InfPlace","InfTimePrimitive","InfLanguage","InfLangString","InfDimension","InfTextProperty","DatDigital","DatChunk","pro_project","ProProject","pro_text_property","ProTextProperty","pro_class_field_config","ProClassFieldConfig","getFlattened","storeFlattened","flattened","values","model","SchemaEpicsFactory","notifications","createLoadEpic","apiFn","actionSuffix","onSuccessHook","globalActions","pendingKey","onError","createUpsertEpic","createDeleteEpic","operation","status","InfEpicsFactory","infoProjRelApi","pathOr","is_in_project","createRemoveEpic","bulkUpdateEprAttributes","infoProjRels","createCustomUpsertEpic","by","name","paginateName","pagBy","join","pag","paginatedBy","paginateKey","getFromTo","getStart","getEnd","ReducerFactory","configs","updatingBy","deletingBy","removingBy","createReducers","reducers","obj2KeyValueArr","createModelReducers","entityModelMapReducers","createEntityModelMapReducers","composeReducers","combineReducers","state","facette","innerState","loading","mergeItemsInState","_a","indexKeyObject","deletingKey_1","deleteItemsFromState","removingKey_1","paginateBy_1","key_1","fromTo_1","_b","_c","paginateBy_2","key_2","fromTo_2","meta_1","paginateBy_3","key_3","start_1","fromTo_3","rows_1","rows","modelPath","idx","fkClass","pkEntities","cb","outerState","deFacette","enFacette","isFacetteByPk","facetteByPk","Error","groups","groupByKey","mainIndexKey","removedItem","itemKey","g","groupKey","getGroupKeyOfItem","itemToSet","equalsFn","oldGroupKey","newGroupKey","_d","_e","indexKey","SchemaObjectService","api","warActions","tabActions","dfhActions","sysActions","apiCall$","s$","Subject","result","storeSchemaObject","storeGv","storeSchemaObjectGv","object","schema","console","warn","SchemaObjectApi","DatEpics","notification","digitalApi","chunkApi","columnApi","namespaceApi","schemaObjectService","digitalEpicsFactory","chunkEpicsFactory","namespaceEpicsFactory","columnEpicsFactory","getVersion","bulkUpsert","bulkDelete","ofDigital","results","flattener","byProject","schemaObject","DatDigitalApi","DatChunkApi","DatColumnApi","DatNamespaceApi","DfhEpics","profileApi","classApi","propertyApi","labelApi","dfhProfileEpicsFactory","dfhClassEpicsFactory","dfhLabelEpicsFactory","dfhPropertyEpicsFactory","dfhPropertyControllerOfProject","dfhClassControllerOfProject","DfhProfileApi","DfhClassControllerService","DfhPropertyControllerService","DfhLabelApi","InfEpics","peItApi","teEnApi","statementApi","textPropertyApi","infPersistentItemEpicsFactory","infTemporalEntityEpicsFactory","infStatementEpicsFactory","infTextPropertyEpicsFactory","ownProperties","schemas","findOrCreateInfPersistentItems","apiCal$","temporalEntityList","handleTemporalEntityListAction","alternativeTemporalEntityList","findOrCreateInfTemporalEntities","alternativesNotInProjectByEntityPk","findOrCreateInfStatements","paginatedListTargetingEntityPreviews","queryByParams","statements","flattener2","digitals","findAlternativeTextProperties","findOrCreateInfTextProperties","epicsFactory","fk_target_class","paginatedStatements","InfPersistentItemApi","InfTemporalEntityApi","InfStatementApi","InfTextPropertyApi","ProInfoProjRelApi","ProEpics","classProjRelApi","profileProjRelApi","classFieldConfApi","analysisApi","proProjectEpicsFactory","proInfoProjRelEpicsFactory","proDfhClassProjRelEpicsFactory","proDfhProfileProjRelEpicsFactory","proClassFieldConfigEpicsFactory","proTextPropertyEpicsFactory","proAnalysisEpicsFactory","ofAccount","analysisControllerBulkDelete","ProDfhClassProjRelApi","ProDfhProfileProjRelApi","ProClassFieldConfigApi","ProTextPropertyApi","AnalysisService","SysEpics","sysRelevantClassApi","sysConfigApi","systemRelevantClassEpicsFactory","configEpicsFactory","find","bulkReplaceOrCreate","sysConfigControllerGetSystemConfig","SysSystemRelevantClassApi","SystemConfigurationService","TabEpics","WarEpics","RootEpics","loadingBarEpics","notificationEpics","activeProjectEpics","accountEpics","systemEpics","dfhEpics","infEpics","datEpics","proEpics","actionResolver","rootEpicStream$","BehaviorSubject","rootEpic","state$","dependencies","epic","getRootEpic","addEpic","INITIAL_STATE","roles","accountRootReducer","lastState","activeProjectReducer","pi","ti","ppi","cpi","pti","cti","INITIAL_STATE$1","loadingConfigData","configDataInitialized","tslib_1.__spread","index","active","moveItemInArray","pTabs_1","cTabs","transferArrayItem","id","path","pathSegment","_f","splice","_g","newPanels","Information","informationReducer","INITIAL_STATE$2","progress","loadingBarReducer","INITIAL_STATE$3","Notifications","records","projectListReducer","INITIAL_STATE$5","record","createProjectsReducer","SourceList","sourceListReducer","INITIAL_STATE$6","rootReducer","defaultFormReducer","loadingBar","routes","routerReducer","information","sources","sandboxState","projects","war","pending","resolved","APP_INITIAL_STATE","InjectionToken","ReduxStoreModule","devTools","rootEpics","initialState","epicMiddleware","createEpicMiddleware","configureStore","dynamicMiddlewares","isEnabled","enhancer","run","NgModule","imports","NgReduxModule","providers","provide","useValue","ɵ0$8","DevToolsExtension","Inject","EntityDetail","showProperties","showRightArea","rightPanelTabs","rightPanelActiveTab","showHeader","DigitalSlice","ChunkSlice","ColumnSlice","ClassColumnMappingSlice","TextPropertySlice","NamespaceSlice","DfhProfileSlice","DfhClassSlice","DfhPropertySlice","DfhLabelSlice","InfPersistentItemSlice","InfTemporalEntitySlice","InfStatementSlice","InfPlaceSlice","InfTimePrimitiveSlice","InfLanguageSlice","InfAppellationSlice","InfLangStringSlice","InfDimensionSlice","InfTextPropertySlice","TabCellSlice","INITIAL_STATE$4"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { PubAccount } from '@kleiolab/lib-sdk-lb4';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { AccountRole, IAccount } from '../models';\n\nexport interface AccountActionMeta {\n  accountId?: number;\n  accountRoles?: AccountRole[];\n  account?: PubAccount;\n};\nexport type AccountAction = FluxStandardAction<IAccount, AccountActionMeta>;\n\n\n@Injectable()\nexport class AccountActions {\n  static LOGIN = 'Account::LOGIN';\n  static LOGIN_SUCCEEDED = 'Account::LOGIN_SUCCEEDED';\n  static LOGIN_FAILED = 'Account::LOGIN_FAILED';\n\n  static LOAD_ROLES = 'Account::LOAD_ROLES';\n  static LOAD_ROLES_SUCCEEDED = 'Account::LOAD_ROLES_SUCCEEDED';\n  static LOAD_ROLES_FAILED = 'Account::LOAD_ROLES_FAILED';\n\n  static ACCOUNT_UPDATED = 'Account::ACCOUNT_UPDATED';\n\n\n  login(): AccountAction {\n    return {\n      type: AccountActions.LOGIN,\n      payload: null,\n      meta: null\n    };\n  }\n\n  loginSucceeded(account: PubAccount): AccountAction {\n    return {\n      type: AccountActions.LOGIN_SUCCEEDED,\n      payload: null,\n      meta: { account }\n    };\n  }\n\n  loginFailed(error): AccountAction {\n    return {\n      type: AccountActions.LOGIN_FAILED,\n      payload: null,\n      meta: null,\n      error\n    };\n  }\n\n  accountUpdated(account: PubAccount): AccountAction {\n    return {\n      type: AccountActions.ACCOUNT_UPDATED,\n      payload: null,\n      meta: { account }\n    };\n  }\n\n  // Roles of the account, used to check permissions\n  loadRoles(accountId: number): AccountAction {\n    return {\n      type: AccountActions.LOAD_ROLES,\n      payload: null,\n      meta: { accountId }\n    };\n  }\n\n  loadRolesSucceeded(accountRoles: AccountRole[]): AccountAction {\n    return {\n      type: AccountActions.LOAD_ROLES_SUCCEEDED,\n      payload: null,\n      meta: { accountRoles }\n    };\n  }\n\n  loadRolesFailed(accountRoles: AccountRole[]): AccountAction {\n    return {\n      type: AccountActions.LOAD_ROLES_FAILED,\n      payload: null,\n      meta: null\n    };\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { DatChunk, InfPersistentItem, InfTemporalEntity, ProDfhClassProjRel, ProInfoProjRel } from '@kleiolab/lib-sdk-lb3';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { ListType, Panel, ProjectDetail, ProjectPreview, PanelTab, TypePeIt } from '../models';\n\nexport interface ActiveProjectMeta {\n\n  projectPreview?: ProjectPreview;\n\n  pk_project?: number;\n  pk_entity?: number;\n  pk_entities?: number[];\n  pk_classes?: number[]\n  pk_ui_context?: number;\n  entity_version?: number;\n\n\n  chunk?: DatChunk\n  teEnGraphs?: InfTemporalEntity[]\n  peItGraphs?: InfPersistentItem[]\n  types?: TypePeIt[]\n\n  // CRM and Config\n  projRel?: ProDfhClassProjRel;\n  dfh_pk_class?: number;\n  // hasTypeProperties?: HasTypePropertyReadable[]\n\n  // Information\n  infProjRel?: ProInfoProjRel;\n\n  // layout\n  panels?: Panel[];\n  list?: ListType;\n  panelIndex?: number;\n  panelSerial?: number;\n  tabIndex?: number;\n  uiIdSerial?: number;\n  focusedPanel?: number;\n  previousPanelIndex?: number\n  currentPanelIndex?: number\n  previousTabIndex?: number\n  currentTabIndex?: number\n  tab?: PanelTab<any>;\n\n  // Layout Modals\n  // createOrAddEntity?: CreateOrAddEntity; // Check if this really belongt in state\n};\ntype Payload = ProjectDetail;\nexport type ActiveProjectAction = FluxStandardAction<Payload, ActiveProjectMeta>;\n\n\n@Injectable()\nexport class ActiveProjectActions {\n\n  /* tslint:disable:member-ordering */\n\n  /************************************************************************************\n   * CRM and Config (metadata, crm)\n  ************************************************************************************/\n  static LOAD_PROJECT_BASICS = 'ActiveProject::LOAD_PROJECT_BASICS';\n  static LOAD_PROJECT_BASICS_FAILED = 'ActiveProject::LOAD_PROJECT_BASICS_FAILED';\n  static LOAD_PROJECT_BASICS_SUCCEEDED = 'ActiveProject::LOAD_PROJECT_BASICS_SUCCEEDED';\n  static LOAD_PROJECT_CONFIG = 'ActiveProject::LOAD_PROJECT_CONFIG';\n  static LOAD_PROJECT_CONFIG_SUCCEEDED = 'ActiveProject::LOAD_PROJECT_CONFIG_SUCCEEDED';\n\n\n  loadProjectBasics(pk_project: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.LOAD_PROJECT_BASICS,\n      payload: null,\n      meta: {\n        pk_project\n      }\n    }\n  }\n\n  loadProjectBasiscsSucceded(projectPreview: ProjectPreview): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.LOAD_PROJECT_BASICS_SUCCEEDED,\n      payload: null,\n      meta: { projectPreview },\n    }\n  }\n\n  loadProjectConfig(pk_project: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.LOAD_PROJECT_CONFIG,\n      payload: null,\n      meta: {\n        pk_project\n      },\n    }\n  }\n\n  loadProjectConfigSucceeded(): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.LOAD_PROJECT_CONFIG_SUCCEEDED,\n      payload: {\n        // crm\n      },\n      meta: null,\n    }\n  }\n\n  /************************************************************************************\n   * Layout -- Tabs\n  ************************************************************************************/\n  static SET_LIST_TYPE = 'ActiveProject::SET_LIST_TYPE';\n\n  setListType(list: ListType): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_LIST_TYPE,\n      payload: null,\n      meta: {\n        list\n      }\n    }\n  }\n\n  static SET_PANELS = 'ActiveProject::SET_PANELS';\n\n  setPanels(panels: Panel[], uiIdSerial: number, panelSerial: number, focusedPanel: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_PANELS,\n      payload: null,\n      meta: { panels, uiIdSerial, panelSerial, focusedPanel }\n    }\n  }\n\n  static ACTIVATE_TAB = 'ActiveProject::ACTIVATE_TAB';\n\n  activateTab(panelIndex: number, tabIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.ACTIVATE_TAB,\n      payload: null,\n      meta: {\n        panelIndex, tabIndex\n      }\n    }\n  }\n  static MOVE_TAB = 'ActiveProject::MOVE_TAB';\n  moveTab(previousPanelIndex: number, currentPanelIndex: number, previousTabIndex: number, currentTabIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.MOVE_TAB,\n      payload: null,\n      meta: {\n        previousPanelIndex, currentPanelIndex, previousTabIndex, currentTabIndex\n      }\n    }\n  }\n\n  static CLOSE_TAB = 'ActiveProject::CLOSE_TAB';\n  closeTab(panelIndex: number, tabIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.CLOSE_TAB,\n      payload: null,\n      meta: {\n        panelIndex, tabIndex\n      }\n    }\n  }\n\n  static ADD_TAB = 'ActiveProject::ADD_TAB';\n  addTab<TabData>(tab: PanelTab<TabData>): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.ADD_TAB,\n      payload: null,\n      meta: { tab }\n    }\n  }\n\n  static SPLIT_PANEL = 'ActiveProject::SPLIT_PANEL';\n  splitPanel(previousPanelIndex: number, tabIndex: number, currentPanelIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SPLIT_PANEL,\n      payload: null,\n      meta: { previousPanelIndex, tabIndex, currentPanelIndex }\n    }\n  }\n\n  static CLOSE_PANEL = 'ActiveProject::CLOSE_PANEL';\n  closePanel(panelIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.CLOSE_PANEL,\n      payload: null,\n      meta: { panelIndex }\n    }\n  }\n\n\n  static FOCUS_PANEL = 'ActiveProject::FOCUS_PANEL';\n  focusPanel(panelIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.FOCUS_PANEL,\n      payload: null,\n      meta: { panelIndex }\n    }\n  }\n\n\n  // /************************************************************************************\n  //  * Layout -- Modals\n  // ************************************************************************************/\n  // // create or add entity modal\n  // static readonly OPEN_ADD_FORM = 'ActiveProject::OPEN_ADD_FORM';\n  // static readonly CLOSE_ADD_FORM = 'ActiveProject::CLOSE_ADD_FORM';\n\n  // openAddForm = (createOrAddEntity: CreateOrAddEntity): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.OPEN_ADD_FORM,\n  //   meta: { createOrAddEntity },\n  //   payload: null\n  // })\n\n  // closeAddForm = (): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.CLOSE_ADD_FORM,\n  //   meta: null,\n  //   payload: null\n  // })\n\n\n  /************************************************************************************\n  * Information cache\n  ************************************************************************************/\n\n  // EntityPreviews\n  // static LOAD_ENTITY_PREVIEW = 'ActiveProject::LOAD_ENTITY_PREVIEW';\n  // static LOAD_ENTITY_PREVIEW_SUCCEEDED = 'ActiveProject::LOAD_ENTITY_PREVIEW_SUCCEEDED';\n  // static LOAD_ENTITY_PREVIEW_FAILED = 'ActiveProject::LOAD_ENTITY_PREVIEW_FAILED';\n\n\n  // loadEntityPreview(pk_project: number, pk_entity: number, pk_ui_context: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_ENTITY_PREVIEW,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entity, pk_ui_context\n  //     }\n  //   }\n  // }\n\n  // loadEntityPreviewSucceeded(entityPreview: EntityPreview): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_ENTITY_PREVIEW_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       entityPreview\n  //     },\n  //   }\n  // }\n\n  // loadEntityPreviewFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_ENTITY_PREVIEW_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n  // // EntityPreviews\n  // static LOAD_TYPES = 'ActiveProject::LOAD_TYPES';\n  // static LOAD_TYPES_SUCCEEDED = 'ActiveProject::LOAD_TYPES_SUCCEEDED';\n  // static LOAD_TYPES_FAILED = 'ActiveProject::LOAD_TYPES_FAILED';\n  // loadTypes(pk_project: number, pk_classes: number[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TYPES,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_classes\n  //     }\n  //   }\n  // }\n\n  // loadTypesSucceeded(types: TypePeIt[], pk_classes: number[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TYPES_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       types, pk_classes\n  //     },\n  //   }\n  // }\n\n  // loadTypesFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TYPES_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n\n  // // Entities Details for display in Modals\n  // static LOAD_ENTITY_DETAIL_FOR_MODAL = 'ActiveProject::LOAD_ENTITY_DETAIL_FOR_MODAL';\n  // static LOAD_PE_IT_DETAIL_FOR_MODAL_SUCCEEDED = 'ActiveProject::LOAD_PE_IT_DETAIL_FOR_MODAL_SUCCEEDED';\n  // static LOAD_TE_EN_DETAIL_FOR_MODAL_SUCCEEDED = 'ActiveProject::LOAD_TE_EN_DETAIL_FOR_MODAL_SUCCEEDED'; // TODO: Implement action/reducer\n  // static LOAD_ENTITY_DETAIL_FOR_MODAL_FAILED = 'ActiveProject::LOAD_ENTITY_DETAIL_FOR_MODAL_FAILED';\n\n  // loadEntityDetailForModal(pk_project: number, pk_entity: number, pk_ui_context: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_ENTITY_DETAIL_FOR_MODAL,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entity, pk_ui_context\n  //     }\n  //   }\n  // }\n\n  // loadPeItDetailsForModalSucceeded(peItDetail: EntityDetail): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_PE_IT_DETAIL_FOR_MODAL_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       peItDetail\n  //     },\n  //   }\n  // }\n\n  // loaEntitytDetailsForModalFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_ENTITY_DETAIL_FOR_MODAL_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n  // // Chunks\n  // static LOAD_CHUNK = 'ActiveProject::LOAD_CHUNK';\n  // static LOAD_CHUNK_SUCCEEDED = 'ActiveProject::LOAD_CHUNK_SUCCEEDED';\n  // static LOAD_CHUNK_FAILED = 'ActiveProject::LOAD_CHUNK_FAILED';\n\n  // loadChunk(pk_project: number, pk_entity: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_CHUNK,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entity\n  //     }\n  //   }\n  // }\n\n  // loadChunkSucceeded(chunk: DatChunk): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_CHUNK_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       chunk\n  //     },\n  //   }\n  // }\n\n  // loadChunkFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_CHUNK_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n  // // PeIt Graphs\n  // static LOAD_PEIT_GRAPHS = 'ActiveProject::LOAD_PEIT_GRAPHS';\n  // static LOAD_PEIT_GRAPHS_SUCCEEDED = 'ActiveProject::LOAD_PEIT_GRAPHS_SUCCEEDED';\n  // static LOAD_PEIT_GRAPHS_FAILED = 'ActiveProject::LOAD_PEIT_GRAPHS_FAILED';\n\n\n  // loadPeItGraphs(pk_project: number, pk_entities: number[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_PEIT_GRAPHS,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entities\n  //     }\n  //   }\n  // }\n\n  // loadPeItGraphsSucceeded(peItGraphs: InfPersistentItem[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_PEIT_GRAPHS_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       peItGraphs\n  //     },\n  //   }\n  // }\n\n  // loadPeItGraphsFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_PEIT_GRAPHS_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n  // // TeEn Graphs\n  // static LOAD_TEEN_GRAPHS = 'ActiveProject::LOAD_TEEN_GRAPHS';\n  // static LOAD_TEEN_GRAPHS_SUCCEEDED = 'ActiveProject::LOAD_TEEN_GRAPHS_SUCCEEDED';\n  // static LOAD_TEEN_GRAPHS_FAILED = 'ActiveProject::LOAD_TEEN_GRAPHS_FAILED';\n\n  // loadTeEnGraphs(pk_project: number, pk_entities: number[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TEEN_GRAPHS,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entities\n  //     }\n  //   }\n  // }\n\n  // loadTeEnGraphsSucceeded(teEnGraphs: InfTemporalEntity[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TEEN_GRAPHS_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       teEnGraphs\n  //     },\n  //   }\n  // }\n\n  // loadTeEnGraphsFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TEEN_GRAPHS_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n  // // Queries\n  // static LOAD_QUERIES = 'ActiveProject::LOAD_QUERIES';\n  // static LOAD_QUERIES_SUCCEEDED = 'ActiveProject::LOAD_QUERIES_SUCCEEDED';\n  // static LOAD_QUERIES_FAILED = 'ActiveProject::LOAD_QUERIES_FAILED';\n\n  // loadQueries(pk_project: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERIES,\n  //     payload: null,\n  //     meta: {\n  //       pk_project\n  //     }\n  //   }\n  // }\n\n  // loadQueriesSucceeded(comQueryArray: ComQueryV[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERIES_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       comQueryArray\n  //     },\n  //   }\n  // }\n\n  // loadQueriesFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERIES_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n  // // Query Version\n  // static LOAD_QUERY_VERSION = 'ActiveProject::LOAD_QUERY_VERSION';\n  // static LOAD_QUERY_VERSION_SUCCEEDED = 'ActiveProject::LOAD_QUERY_VERSION_SUCCEEDED';\n  // static LOAD_QUERY_VERSION_FAILED = 'ActiveProject::LOAD_QUERY_VERSION_FAILED';\n\n  // loadQueryVersion(pk_project: number, pk_entity: number, entity_version: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERY_VERSION,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entity, entity_version\n  //     }\n  //   }\n  // }\n\n  // loadQueryVersionSucceeded(comQuery: ProQuery): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERY_VERSION_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       comQuery\n  //     },\n  //   }\n  // }\n\n  // loadQueryVersionFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERY_VERSION_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n\n  // // Visuals\n  // static LOAD_VISUALS = 'ActiveProject::LOAD_VISUALS';\n  // static LOAD_VISUALS_SUCCEEDED = 'ActiveProject::LOAD_VISUALS_SUCCEEDED';\n  // static LOAD_VISUALS_FAILED = 'ActiveProject::LOAD_VISUALS_FAILED';\n\n  // loadVisuals(pk_project: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUALS,\n  //     payload: null,\n  //     meta: {\n  //       pk_project\n  //     }\n  //   }\n  // }\n\n  // loadVisualsSucceeded(comVisualArray: ComVisualV[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUALS_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       comVisualArray\n  //     },\n  //   }\n  // }\n\n  // loadVisualsFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUALS_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n  // // Visual Version\n  // static LOAD_VISUAL_VERSION = 'ActiveProject::LOAD_VISUAL_VERSION';\n  // static LOAD_VISUAL_VERSION_SUCCEEDED = 'ActiveProject::LOAD_VISUAL_VERSION_SUCCEEDED';\n  // static LOAD_VISUAL_VERSION_FAILED = 'ActiveProject::LOAD_VISUAL_VERSION_FAILED';\n\n  // loadVisualVersion(pk_project: number, pk_entity: number, entity_version?: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUAL_VERSION,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entity, entity_version\n  //     }\n  //   }\n  // }\n\n  // loadVisualVersionSucceeded(comVisualArray: ComVisualV[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUAL_VERSION_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       comVisualArray\n  //     },\n  //   }\n  // }\n\n  // loadVisualVersionFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUAL_VERSION_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n\n\n  /************************************************************************************\n   *  Things for Mentionings / Annotations\n  ************************************************************************************/\n  static UPDATE_SELECTED_CHUNK = 'ActiveProject::UPDATE_SELECTED_CHUNK';\n  static SET_REFINING_CHUNK = 'ActiveProject::SET_REFINING_CHUNK';\n  static SET_CREATING_MENTIONING = 'ActiveProject::SET_CREATING_MENTIONING';\n\n\n  // updateSelectedChunk(selectedChunk: DatChunk): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.UPDATE_SELECTED_CHUNK,\n  //     payload: { selectedChunk },\n  //     meta: null\n  //   }\n  // }\n\n  setRefiningChunk(refiningChunk: boolean): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_REFINING_CHUNK,\n      payload: { refiningChunk },\n      meta: null\n    }\n  }\n\n  setCreatingMentioning(creatingMentioning: boolean): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_CREATING_MENTIONING,\n      payload: { creatingMentioning },\n      meta: null\n    }\n  }\n\n  /************************************************************************************\n  * Highlighting of mentionings in the gui\n  ************************************************************************************/\n  static SET_MENTIONINGS_FOCUSED_IN_TEXT = 'ActiveProject::SET_MENTIONINGS_FOCUSED_IN_TEXT';\n  static SET_MENTIONINGS_FOCUSED_IN_TABLE = 'ActiveProject::SET_MENTIONINGS_FOCUSED_IN_TABLE';\n\n  setMentioningsFocusedInText(mentioningsFocusedInText: number[]): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_MENTIONINGS_FOCUSED_IN_TEXT,\n      payload: { mentioningsFocusedInText },\n      meta: null\n    }\n  }\n\n  setMentioningsFocusedInTable(mentioningsFocusedInTable: number[]): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_MENTIONINGS_FOCUSED_IN_TABLE,\n      payload: { mentioningsFocusedInTable },\n      meta: null\n    }\n  }\n\n\n  // /*********************************************************************\n  //  *  Methods to manage enabling and disabling a class for the project\n  //  *********************************************************************/\n  // static readonly UPSERT_CLASS_PROJ_REL = 'ActiveProject::UPSERT_CLASS_PROJ_REL';\n  // static readonly UPSERT_CLASS_PROJ_REL_SUCCEEDED = 'ActiveProject::UPSERT_CLASS_PROJ_REL_SUCCEEDED';\n  // static readonly UPSERT_CLASS_PROJ_REL_FAILED = 'ActiveProject::UPSERT_CLASS_PROJ_REL_FAILED';\n\n  // upsertClassProjRel = (projRel: ProDfhClassProjRel, dfh_pk_class: number): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_CLASS_PROJ_REL,\n  //   meta: { projRel, dfh_pk_class },\n  //   payload: null,\n  // });\n\n  // upsertClassProjRelSucceeded = (projRel: ProDfhClassProjRel, dfh_pk_class: number): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_CLASS_PROJ_REL_SUCCEEDED,\n  //   meta: { projRel, dfh_pk_class },\n  //   payload: null\n  // })\n\n  // upsertClassProjRelFailed = (error, dfh_pk_class: number): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_CLASS_PROJ_REL_FAILED,\n  //   meta: { dfh_pk_class },\n  //   payload: null,\n  //   error,\n  // })\n\n\n  // /*********************************************************************\n  //  *  Methods to manage enabling and disabling an entity for the project\n  //  *********************************************************************/\n  // static readonly UPSERT_ENTITY_PROJ_REL = 'ActiveProject::UPSERT_ENTITY_PROJ_REL';\n  // static readonly UPSERT_ENTITY_PROJ_REL_SUCCEEDED = 'ActiveProject::UPSERT_ENTITY_PROJ_REL_SUCCEEDED';\n  // static readonly UPSERT_ENTITY_PROJ_REL_FAILED = 'ActiveProject::UPSERT_ENTITY_PROJ_REL_FAILED';\n\n  // upsertEntityProjRel = (infProjRel: ProInfoProjRel): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_ENTITY_PROJ_REL,\n  //   meta: { infProjRel },\n  //   payload: null,\n  // });\n\n  // upsertEntityProjRelSucceeded = (infProjRel: ProInfoProjRel): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_ENTITY_PROJ_REL_SUCCEEDED,\n  //   meta: { infProjRel },\n  //   payload: null\n  // })\n\n  // upsertEntityProjRelFailed = (error): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_ENTITY_PROJ_REL_FAILED,\n  //   meta: null,\n  //   payload: null,\n  //   error,\n  // })\n\n\n  /************************************************************************************\n   * Destroy the active project state (on closing a project)\n  ************************************************************************************/\n  static DESTROY = 'ActiveProject::DESTROY';\n  destroy(): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.DESTROY,\n      payload: null,\n      meta: null,\n    }\n  }\n}\n","import { dispatch } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { Information } from '../models';\n\ntype Payload = Information;\nexport type InformationAPIAction = FluxStandardAction<Payload, {}>;\n\n@Injectable()\nexport class InformationAPIActions {\n\n\n\n  static readonly DESTROY = 'Information::DESTROY';\n\n\n  /*********************************************************************\n  *  Method to distroy the slice of store\n  *********************************************************************/\n  @dispatch() destroy = (): InformationAPIAction => ({\n    type: InformationAPIActions.DESTROY,\n    meta: null,\n    payload: null\n  })\n}\n","import { Injectable } from '@angular/core';\nimport { dispatch } from '@angular-redux/store';\nimport { FluxStandardAction } from 'flux-standard-action';\n\n// Flux-standard-action gives us stronger typing of our actions.\ntype Payload = any;\ninterface MetaData { null };\nexport type LoadingBarAction = FluxStandardAction<Payload, undefined>;\n\n\n/**\n* This actions start, stop and complete the global loading bar\n* using a SlimLoadingBarService instantiated within the loading-bar\n* module.\n*\n* In order to show a loading bar in GUI, use the LoadingBarComponent\n* exported by this module.\n*/\n@Injectable()\nexport class LoadingBarActions {\n  static readonly START = 'LOADING_BAR_START';\n  static readonly STOP = 'LOADING_BAR_STOP';\n  static readonly COPMLETE = 'LOADING_BAR_COPMLETE';\n  @dispatch() startLoading = (): LoadingBarAction => ({\n    type: LoadingBarActions.START,\n    meta: null,\n    payload: null,\n  })\n\n  @dispatch() stopLoading = (): LoadingBarAction => ({\n    type: LoadingBarActions.STOP,\n    meta: null,\n    payload: null\n  })\n\n  @dispatch() completeLoading = (): LoadingBarAction => ({\n    type: LoadingBarActions.COPMLETE,\n    meta: null,\n    payload: null,\n  })\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { NotificationsI } from '../models';\n\ntype Payload = NotificationsI;\ninterface MetaData {\n  itemsArray?: any[]\n};\nexport type NotificationsAPIAction = FluxStandardAction<Payload, MetaData>;\n\n@Injectable()\nexport class NotificationsAPIActions {\n  static readonly ADD_TOAST = 'Notifications::ADD_TOAST';\n\n  addToast = (payload: Payload): NotificationsAPIAction => ({\n    type: NotificationsAPIActions.ADD_TOAST,\n    meta: null,\n    payload\n  });\n\n}\n","import { Injectable } from '@angular/core';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { ProjectPreview } from '../models';\nexport type ProjectsAction = FluxStandardAction<ProjectPreview[], {}>;\n\n\n@Injectable()\nexport class ProjectsActions {\n  static LOAD_PROJECTS_SUCCEEDED = 'LOAD_PROJECTS_SUCCEEDED';\n\n  loadProjectsSucceeded(payload: ProjectPreview[]): ProjectsAction {\n    return {\n      type: ProjectsActions.LOAD_PROJECTS_SUCCEEDED,\n      payload,\n      meta: null\n    };\n  }\n\n}\n","import { dispatch } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { SourceList } from '../models';\n\ntype Payload = SourceList;\ninterface MetaData {\n  // pkEntity?: number;\n  // pkSource?: number;\n  // pkProject?: number;\n  // crm?: ProjectCrm;\n\n  // sourceDetail?: PeItDetail;\n  // sectionDetail?: PeItDetail;\n\n  // classAndTypePk?: ClassAndTypePk;\n  // pkUiContext?: number;\n  pkAllowedClasses?: number[];\n};\nexport type SourceListAPIAction = FluxStandardAction<Payload, MetaData>;\n\n@Injectable()\nexport class SourceListAPIActions {\n\n  static readonly INITIALIZE_LIST = 'SourceList::INITIALIZE_LIST';\n\n  static readonly DESTROY = 'SourceList::DESTROY';\n\n\n  /*********************************************************************\n  *  Actions to manage the list\n  *********************************************************************/\n\n  @dispatch() initializeList = (pkAllowedClasses: number[]): SourceListAPIAction => ({\n    type: SourceListAPIActions.INITIALIZE_LIST,\n    meta: { pkAllowedClasses },\n    payload: null\n  })\n\n\n\n\n  /*********************************************************************\n  *  Method to distroy the slice of store\n  *********************************************************************/\n  @dispatch()\n  destroy = (): SourceListAPIAction => ({\n    type: SourceListAPIActions.DESTROY,\n    meta: null,\n    payload: null\n  })\n\n}\n","import { Injectable } from '@angular/core';\nimport { PubAccountApi } from '@kleiolab/lib-sdk-lb3';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { Action } from 'redux';\nimport { combineEpics, Epic, ofType } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { AccountAction, AccountActions, LoadingBarActions, NotificationsAPIActions } from '../actions';\nimport { AccountRole } from '../models/account.model';\n\n\n\n\n@Injectable()\nexport class AccountEpics {\n  constructor(\n    private actions: AccountActions,\n    private loadingBarActions: LoadingBarActions,\n    private accountApi: PubAccountApi,\n    private notificationActions: NotificationsAPIActions,\n  ) { }\n\n  public createEpics(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return combineEpics(\n      this.loadRoles()\n    );\n  }\n\n  private loadRoles(): Epic {\n    return (action$, store) => action$.pipe(\n      ofType(AccountActions.LOAD_ROLES),\n      mergeMap((action: AccountAction) => new Observable<Action>((globalStore) => {\n\n        globalStore.next(this.loadingBarActions.startLoading());\n        this.accountApi.getRoles(action.meta.accountId)\n          .subscribe((data: AccountRole[]) => {\n            globalStore.next(this.loadingBarActions.completeLoading());\n            globalStore.next(this.actions.loadRolesSucceeded(data));\n          }, error => {\n            globalStore.next(this.notificationActions.addToast({\n              type: 'error',\n              options: { title: error }\n            }))\n          })\n      }))\n\n    )\n  }\n\n\n}\n","import { DatDigital, DatTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { ReducerConfigCollection } from '../_helpers';\nimport { DatClassColumnMapping } from '@kleiolab/lib-sdk-lb4';\n\nexport const datRoot = 'dat';\nexport const facetteByPk = 'by_namespace';\n\nexport const datDefinitions: ReducerConfigCollection = {\n  digital: {\n    equals: (newItem: DatDigital, oldItem: DatDigital) => {\n      if (!oldItem.quill_doc && newItem.quill_doc) return false;\n      return (\n        newItem.pk_entity === oldItem.pk_entity &&\n        newItem.entity_version === oldItem.entity_version\n      )\n    },\n    indexBy: {\n      keyInStore: 'pk_entity__entity_version',\n      indexByFn: (item) => item.pk_entity.toString() + '_' + item.entity_version.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'pk_entity',\n        groupByFn: (item): string => item.pk_entity.toString()\n      },\n      {\n        keyInStore: 'pk_text',\n        groupByFn: (item): string => item.pk_text.toString()\n      }\n    ]\n  },\n  chunk: {\n    // facetteByPk,\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_text',\n        groupByFn: (item): string => item.fk_text.toString()\n      }\n    ]\n  },\n  column: {\n    // facetteByPk,\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_digital',\n        groupByFn: (item): string => item.fk_digital.toString()\n      }\n    ]\n  },\n  class_column_mapping: {\n    // facetteByPk,\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_column',\n        groupByFn: (item: DatClassColumnMapping): string => item.fk_column.toString()\n      }\n    ]\n  },\n  text_property: {\n    // facetteByPk,\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_entity__fk_system_type',\n        groupByFn: (item: DatTextProperty): string => item.fk_entity + '_' + item.fk_system_type\n      }\n    ]\n  },\n  namespace: {\n    // facetteByPk,\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_project',\n        groupByFn: (item): string => item.fk_project.toString()\n      }\n    ]\n  }\n}\n","import { ReducerConfigCollection } from '../_helpers';\nimport { DfhLabel, DfhProfile } from '@kleiolab/lib-sdk-lb3';\nimport { DfhProperty } from '@kleiolab/lib-sdk-lb4';\n\nimport { DfhClass } from '@kleiolab/lib-sdk-lb4';\n\nexport const dfhRoot = 'dfh';\n\nexport const dfhLabelByFksKey = (item: Partial<DfhLabel>) => `${item.type || null}_${item.language || null}_${item.fk_class || null}_${item.fk_profile || null}_${item.fk_property || null}_${item.fk_project || null}`;\n\nexport const dfhDefinitions: ReducerConfigCollection = {\n  profile: {\n    indexBy: {\n      keyInStore: 'pk_profile',\n      indexByFn: (item: DfhProfile) => item.pk_profile.toString()\n    }\n  },\n  klass: {\n    indexBy: {\n      keyInStore: 'pk_class',\n      indexByFn: (item: DfhClass) => item.pk_class.toString(),\n    },\n    groupBy: [\n      {\n        keyInStore: 'basic_type',\n        groupByFn: (d: DfhClass): string => d.basic_type.toString()\n      },\n    ]\n  },\n  property: {\n    indexBy: {\n      keyInStore: 'pk_property__has_domain__has_range',\n      indexByFn: (item: DfhProperty) => item.pk_property + '_' + item.has_domain + '_' + item.has_range\n    },\n    groupBy: [\n      {\n        keyInStore: 'pk_property',\n        groupByFn: (d: DfhProperty): string => d.pk_property.toString()\n      },\n      {\n        keyInStore: 'has_domain',\n        groupByFn: (d: DfhProperty): string => d.has_domain.toString()\n      },\n      {\n        keyInStore: 'has_range',\n        groupByFn: (d: DfhProperty): string => d.has_range.toString()\n      },\n      {\n        keyInStore: 'has_domain__fk_property',\n        groupByFn: (d: DfhProperty): string => d.has_domain + '_' + d.pk_property\n      },\n      {\n        keyInStore: 'has_range__fk_property',\n        groupByFn: (d: DfhProperty): string => d.has_range + '_' + d.pk_property\n      },\n      {\n        keyInStore: 'is_has_type_subproperty',\n        groupByFn: (d: DfhProperty): string => d.is_has_type_subproperty ? d.is_has_type_subproperty.toString() : undefined\n      }\n    ]\n  },\n  label: {\n    indexBy: {\n      keyInStore: 'fks',\n      indexByFn: dfhLabelByFksKey\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_class__type',\n        groupByFn: (d: DfhLabel): string => !d.fk_class ? undefined : `${d.fk_class}_${d.type}`\n      },\n      {\n        keyInStore: 'fk_property__type',\n        groupByFn: (d: DfhLabel): string => !d.fk_property ? undefined : `${d.fk_property}_${d.type}`\n      },\n      {\n        keyInStore: 'fk_profile__type',\n        groupByFn: (d: DfhLabel): string => !d.fk_profile ? undefined : `${d.fk_profile}_${d.type}`\n      }\n    ]\n  },\n};\n","import { ReducerConfigCollection } from '../_helpers';\nimport { InfStatement, InfTextProperty, InfDimension } from '@kleiolab/lib-sdk-lb3';\nimport { U } from '@kleiolab/lib-utils';\n\nexport const infRoot = 'inf';\n\nexport const infDefinitions: ReducerConfigCollection = {\n  persistent_item: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_class',\n        groupByFn: (d): string => d.fk_class.toString()\n      }\n    ]\n  },\n  temporal_entity: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_class',\n        groupByFn: (d): string => d.fk_class.toString()\n      }\n    ]\n  },\n  statement: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item: InfStatement) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: [\n      {\n        keyInStore: 'subject',\n        groupByFn: (d: InfStatement): string => indexStatementBySubject(d)\n      },\n      {\n        keyInStore: 'subject+property',\n        groupByFn: (d: InfStatement): string => indexStatementBySubjectProperty(d)\n      },\n      {\n        keyInStore: 'object',\n        groupByFn: (d: InfStatement): string => indexStatementByObject(d)\n      },\n      {\n        keyInStore: 'object+property',\n        groupByFn: (d: InfStatement): string => indexStatementByObjectProperty(d)\n      },\n\n      {\n        keyInStore: 'fk_subject_data',\n        groupByFn: (d: InfStatement): string => U.toStr0undef(d.fk_subject_data)\n      },\n    ]\n  },\n\n  text_property: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_concerned_entity__fk_class_field',\n        groupByFn: (d: InfTextProperty): string => d.fk_concerned_entity + '_' + d.fk_class_field\n      },\n      {\n        keyInStore: 'fk_concerned_entity',\n        groupByFn: (d: InfTextProperty): string => d.fk_concerned_entity.toString()\n      },\n    ]\n  },\n  lang_string: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n  appellation: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n  time_primitive: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n  place: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n  language: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n  dimension: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item: InfDimension) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n}\n\n\n\n\n\n/**\n * This function creates a key for the given statement by\n * - subject (all subject foreign keys)\n *\n * The key is created on the basis of the given foreign keys.\n * Keys are separated by dash '-', undefined keys are replaced by a zero '0'\n *\n * Use this function to index groups of statements with the same subject\n * or to retrieve statements from such a group index\n */\nexport function indexStatementBySubject(fks: IndexStatementBySubject = {}): string {\n  return `${fks.fk_subject_info || '0'}-${fks.fk_subject_data || '0'}-${(fks.fk_subject_tables_row) || '0'}-${(fks.fk_subject_tables_cell) || '0'}`\n}\nexport interface IndexStatementBySubject {\n  fk_subject_info?: number;\n  fk_subject_data?: number;\n  fk_subject_tables_row?: number;\n  fk_subject_tables_cell?: number;\n};\n\n\n/**\n * This function creates a key for the given statement by\n * - object (all object foreign keys)\n *\n * The key is created on the basis of the given foreign keys.\n * Keys are separated by dash '-', undefined keys are replaced by a zero '0'\n *\n * Use this function to index groups of statements with the same object\n * or to retrieve statements from such a group index\n */\nexport function indexStatementByObject(fks: IndexStatementByObject = {}): string {\n  return `${fks.fk_object_info || '0'}-${fks.fk_object_data || '0'}-${fks.fk_object_tables_row || '0'}-${fks.fk_object_tables_cell || '0'}`\n}\nexport interface IndexStatementByObject {\n  fk_object_info?: number;\n  fk_object_data?: number;\n  fk_object_tables_row?: number;\n  fk_object_tables_cell?: number;\n};\n\n\n/**\n * This function creates a key for the given statement by\n * - subject (all subject foreign keys)\n * - property (all property foreign keys)\n *\n * The key is created on the basis of the given foreign keys.\n * Keys are separated by dash '-', undefined keys are replaced by a zero '0'\n *\n * Use this function to index groups of statements with the same subject + property\n * or to retrieve statements from such a group index\n */\nexport function indexStatementBySubjectProperty(fks: IndexStatementBySubjectProperty = {}): string {\n  return `${fks.fk_subject_info || '0'}-${fks.fk_subject_data || '0'}-${(fks.fk_subject_tables_row) || '0'}-${(fks.fk_subject_tables_cell) || '0'}-${fks.fk_property || '0'}-${fks.fk_property_of_property || '0'}`\n}\nexport interface IndexStatementBySubjectProperty {\n  fk_subject_info?: number;\n  fk_subject_data?: number;\n  fk_subject_tables_row?: number;\n  fk_subject_tables_cell?: number;\n  fk_property?: number;\n  fk_property_of_property?: number;\n}\n\n\n/**\n * This function creates a key for the given statement by\n * - object (all object foreign keys)\n * - property (all property foreign keys)\n *\n * The key is created on the basis of the given foreign keys.\n * Keys are separated by dash '-', undefined keys are replaced by a zero '0'\n *\n * Use this function to index groups of statements with the same object + property\n * or to retrieve statements from such a group index\n */\nexport function indexStatementByObjectProperty(fks: IndexStatementByObjectProperty = {}): string {\n  return `${fks.fk_object_info || '0'}-${fks.fk_object_data || '0'}-${fks.fk_object_tables_row || '0'}-${fks.fk_object_tables_cell || '0'}-${fks.fk_property || '0'}-${fks.fk_property_of_property || '0'}`\n}\nexport interface IndexStatementByObjectProperty {\n  fk_object_info?: number;\n  fk_object_data?: number;\n  fk_object_tables_row?: number;\n  fk_object_tables_cell?: number;\n  fk_property?: number;\n  fk_property_of_property?: number;\n}\n\n","import { ReducerConfigCollection } from '../_helpers';\nimport { ProClassFieldConfig, ProDfhClassProjRel, ProTextProperty, ProDfhProfileProjRel } from '@kleiolab/lib-sdk-lb3';\nimport { ProAnalysis } from '@kleiolab/lib-sdk-lb4';\n\nexport const proRoot = 'pro';\n\n\nexport const textPropertyByFksKey = (d: Partial<ProTextProperty>) => `${d.fk_project || null}_${d.fk_system_type || null}_${d.fk_language || null}_${d.fk_dfh_class || null}_${d.fk_dfh_property || null}_${d.fk_dfh_property_domain || null}_${d.fk_dfh_property_range || null}`\nexport const textPropertyByFksWithoutLang = (d: Partial<ProTextProperty>): string => `${d.fk_project || null}_${d.fk_system_type || null}_${d.fk_dfh_class || null}_${d.fk_dfh_property || null}_${d.fk_dfh_property_domain || null}_${d.fk_dfh_property_range || null}`;\nexport const proClassFieldConfgByProjectAndClassKey = (d: Partial<ProClassFieldConfig>): string => {\n  const fk_class = d.fk_range_class || d.fk_domain_class || d.fk_class_for_class_field;\n  return `${d.fk_project || null}_${fk_class || null}`;\n};\n\nexport const proDefinitions: ReducerConfigCollection = {\n  project: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    }\n  },\n  info_proj_rel: {\n    indexBy: {\n      keyInStore: 'fk_project__fk_entity',\n      indexByFn: (item) => item.fk_project.toString() + '_' + item.fk_entity.toString()\n    }\n  },\n  class_field_config: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_project__fk_class',\n        groupByFn: proClassFieldConfgByProjectAndClassKey\n      }\n    ]\n  },\n  dfh_class_proj_rel: {\n    indexBy: {\n      keyInStore: 'fk_project__fk_class',\n      indexByFn: (item: ProDfhClassProjRel) => item.fk_project + '_' + item.fk_class\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_project__enabled_in_entities',\n        groupByFn: (d: ProDfhClassProjRel): string => d.fk_project + '_' + d.enabled_in_entities\n      },\n      {\n        keyInStore: 'fk_project',\n        groupByFn: (d: ProDfhClassProjRel): string => d.fk_project.toString()\n      }\n    ],\n  },\n  dfh_profile_proj_rel: {\n    indexBy: {\n      keyInStore: 'fk_project__fk_profile',\n      indexByFn: (item: ProDfhProfileProjRel) => item.fk_project + '_' + item.fk_profile\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_project__enabled',\n        groupByFn: (d: ProDfhProfileProjRel): string => d.fk_project + '_' + d.enabled\n      },\n      {\n        keyInStore: 'fk_project',\n        groupByFn: (d: ProDfhProfileProjRel): string => d.fk_project.toString()\n      }\n    ],\n  },\n  text_property: {\n    indexBy: {\n      keyInStore: 'fks',\n      indexByFn: textPropertyByFksKey\n    },\n    groupBy: [\n      {\n        keyInStore: 'fks_without_lang',\n        groupByFn: textPropertyByFksWithoutLang\n      }\n    ]\n  },\n  analysis: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item: ProAnalysis) => item.pk_entity.toString()\n    }\n  }\n}\n","import { ReducerConfigCollection } from '../_helpers';\nimport { SysSystemRelevantClass } from '@kleiolab/lib-sdk-lb3';\n\nexport const sysRoot = 'sys';\n\nexport const sysDefinitions: ReducerConfigCollection = {\n  system_relevant_class: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_class',\n        groupByFn: (d: SysSystemRelevantClass): string => d.fk_class.toString()\n      },\n      {\n        keyInStore: 'required_by_sources',\n        groupByFn: (d: SysSystemRelevantClass): string => d.required_by_sources.toString()\n      },\n      {\n        keyInStore: 'required',\n        groupByFn: (d: SysSystemRelevantClass): string => (d.required_by_sources || d.required_by_entities || d.required_by_basics) ? 'true' : 'false'\n      }\n    ]\n  },\n  config: {\n    indexBy: {\n      keyInStore: 'main',\n      indexByFn: () => 'main'\n    }\n  }\n}\n","import { ReducerConfigCollection } from '../_helpers';\nimport { TabCell } from '@kleiolab/lib-sdk-lb4';\n\nexport const tabRoot = 'tab';\n\nexport const tabDefinitions: ReducerConfigCollection = {\n  cell: {\n    indexBy: {\n      keyInStore: 'pk_cell',\n      indexByFn: (item: TabCell) => item.pk_cell.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_column_fk_row',\n        groupByFn: (item: TabCell): string => item.fk_column + '_' + item.fk_row\n      }\n    ]\n  }\n}\n","import { ReducerConfigCollection } from '../_helpers';\nimport { WarEntityPreview } from '@kleiolab/lib-sdk-lb4';\n\nexport const warRoot = 'war';\n\nexport const warDefinitions: ReducerConfigCollection = {\n  entity_preview: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item: WarEntityPreview) => item.pk_entity.toString()\n    }\n  }\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { ActionsObservable } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { IAppState } from '../../root/models/model';\n\nexport interface LoadActionMeta { addPending: string, pk?: number }\nexport interface LoadVersionAction extends LoadActionMeta { pkEntity: number, entityVersion: number };\nexport interface LoadByPkAndVersionActionMeta { addPending: string, pk?: number, pkEntity: number, version: number }\n\nexport interface ModifyActionMeta<Model> { items: Model[], addPending: string, pk?: number }\nexport interface SucceedActionMeta<Model> { items: Model[], removePending: string, pk?: number }\nexport interface FailActionMeta { removePending: string, pk?: number }\n\nexport interface PaginateByParam { [key: string]: number | boolean }\nexport interface LoadPageMeta { paginateBy: PaginateByParam[], limit: number, offset: number, pk?: number }\nexport interface LoadPageSucceededMeta { pks: number[], count: number, paginateBy: PaginateByParam[], limit: number, offset: number, pk?: number }\n\n\n\nexport interface ActionResultObservable<Model> { pending$: Observable<boolean>, resolved$: Observable<SucceedActionMeta<Model>>, key: string }\n\nexport type FluxActionObservable<Payload, Meta> = ActionsObservable<FluxStandardAction<Payload, Meta>>\n\n\n\n/**\n * A: Schema Action Type (e.g. DfhAction)\n * M: Model for whitch the Actions are produced\n */\nexport class SchemaActionsFactory<Payload, Model> {\n\n  load: (suffix?: string, pk?: number) => ActionResultObservable<Model>;\n\n  /**\n   * @param pk is used for facetting\n   */\n  loadSucceeded: (items: Model[], removePending: string, pk?: number) => void;\n\n  /**\n   * @param pk is used for facetting\n   */\n  upsert: (items: Partial<Model>[], pk?: number) => ActionResultObservable<Model>;\n\n  /**\n   * @param pk is used for facetting\n   */\n  upsertSucceeded: (items: Model[], removePending: string, pk?: number) => void;\n\n  /**\n   * @param pk is used for facetting\n   */\n  delete: (items: Model[], pk?: number) => ActionResultObservable<Model>;\n\n  /**\n   * @param pk is used for facetting\n   */\n  deleteSucceeded: (items: Model[], removePending: string, pk?: number) => void;\n\n  /**\n   * @param pk is used for facetting\n   */\n  failed: (error, removePending: string, pk?: number) => void;\n\n\n  /**\n   * @param pk is used for facetting\n   */\n  loadPage: (paginateBy: PaginateByParam[], limit: number, offset: number, pk?: number) => void;\n\n  /**\n * @param pk is used for facetting\n */\n  loadPageSucceeded: (pks: number[], count: number, paginateBy: PaginateByParam[], limit: number, offset: number, pk?: number) => void;\n  loadPageFailed: (paginateBy: PaginateByParam[], limit: number, offset: number, pk?: number) => void;\n\n  /**\n   * this action is not model specific but pendingKey specific.\n   * Reducer will add whole meta part to the resolved key.\n   */\n  succeeded: (items: Model[], removePending: string, pk?: number) => void;\n\n  actionPrefix: string;\n  modelName: string;\n\n  constructor(public ngRedux: NgRedux<IAppState>) {\n  }\n\n\n  createCrudActions(actionPrefix: string, modelName: string): SchemaActionsFactory<Payload, Model> {\n    this.actionPrefix = actionPrefix;\n    this.modelName = modelName;\n\n    this.load = (suffix: string = '', pk?: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + (suffix ? '::' + suffix : ''),\n        meta: { addPending, pk },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<Model>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n\n    this.loadSucceeded = (items: Model[], removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, SucceedActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD_SUCCEEDED',\n        meta: { items, removePending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    /**\n     * Call the Redux Action to upsert model instances.\n     */\n    this.upsert = (items: Model[], pk?: number) => {\n      const addPending = U.uuid();\n      const action: FluxStandardAction<Payload, ModifyActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::UPSERT',\n        meta: { items, addPending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<Model>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n\n    this.upsertSucceeded = (items: Model[], removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, SucceedActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::UPSERT_SUCCEEDED',\n        meta: { items, removePending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    /**\n     * this action is not model specific but pendingKey specific.\n     * Reducer will add whole meta part to the resolved key\n     */\n    this.succeeded = (items: Model[], removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, SucceedActionMeta<Model>> = ({\n        type: 'general::UPSERT_SUCCEEDED',\n        meta: { items, removePending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n\n    /**\n    * Call the Redux Action to delete model instances.\n    */\n    this.delete = (items: Model[], pk?: number) => {\n      const addPending = U.uuid();\n      const action: FluxStandardAction<Payload, ModifyActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::DELETE',\n        meta: { items, addPending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<Model>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    this.deleteSucceeded = (items: Model[], removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, SucceedActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::DELETE_SUCCEEDED',\n        meta: { items, removePending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n\n\n    this.failed = (error, removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, FailActionMeta> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::FAILED',\n        meta: { removePending, pk },\n        payload: null,\n        error,\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n\n    this.loadPage = (paginateBy: PaginateByParam[], limit: number, offset: number, pk?: number) => {\n      const action: FluxStandardAction<Payload, LoadPageMeta> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD_PAGE',\n        meta: { paginateBy, limit, offset, pk },\n        payload: null,\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    this.loadPageSucceeded = (pks: number[], count: number, paginateBy: PaginateByParam[], limit: number, offset: number, pk?: number) => {\n      const action: FluxStandardAction<Payload, LoadPageSucceededMeta> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD_PAGE_SUCCEEDED',\n        meta: { pks, paginateBy, count, limit, offset, pk },\n        payload: null,\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    this.loadPageFailed = (paginateBy: PaginateByParam[], limit: number, offset: number, pk?: number) => {\n      const action: FluxStandardAction<Payload, LoadPageMeta> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD_PAGE_FAILED',\n        meta: { paginateBy, limit, offset, pk },\n        payload: null,\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    return this;\n  }\n\n}\n\nexport interface SchemaObjectLoadActionMeta { removePending: string, pk?: number }\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { DatChunk, DatColumn, DatDigital, DatNamespace, DatTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { DatClassColumnMapping } from '@kleiolab/lib-sdk-lb4';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { IAppState } from '../../root/models';\nimport { ChunkSlice, ClassColumnMappingSlice, ColumnSlice, DigitalSlice, NamespaceSlice, TextPropertySlice } from '../models';\nimport { datRoot } from '../reducer-configs';\nimport { ActionResultObservable, LoadActionMeta, SchemaActionsFactory, SucceedActionMeta, LoadVersionAction } from '../_helpers/schema-actions-factory';\n\n\nexport class DigitalActionsFactory extends SchemaActionsFactory<DigitalSlice, DatDigital> {\n\n  // Suffixes of load action types\n  static readonly LOAD_VERSION = 'LOAD_VERSION';\n\n  /**\n   * Load a version. if entityVersion omitted, latest version is returned.\n   */\n  loadVersion: (pkEntity: number, entityVersion?: number) => ActionResultObservable<DatDigital>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): DigitalActionsFactory {\n    Object.assign(this, this.createCrudActions(datRoot, 'digital'))\n\n    this.loadVersion = (pkEntity: number, entityVersion?: number) => {\n      const addPending = U.uuid()\n\n      const action: FluxStandardAction<DigitalSlice, LoadVersionAction> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + DigitalActionsFactory.LOAD_VERSION,\n        meta: { addPending, pkEntity, entityVersion },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DatDigital>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n    return this;\n  }\n}\n\nexport interface LoadChunksOfDigitalAction extends LoadActionMeta { pkDigital: number }\n\nexport class ChunkActionsFactory extends SchemaActionsFactory<ChunkSlice, DatChunk> {\n\n  // Suffixes of load action types\n  static readonly CHUNKS_OF_DIGITAL = 'CHUNKS_OF_DIGITAL';\n\n  /**\n   * Load a version. if entityVersion omitted, latest version is returned.\n   */\n  loadChunksOfDigital: (pkDigital: number, pk: number) => ActionResultObservable<DatChunk>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ChunkActionsFactory {\n    Object.assign(this, this.createCrudActions(datRoot, 'chunk'))\n\n    this.loadChunksOfDigital = (pkDigital: number, pk: number) => {\n      const addPending = U.uuid()\n\n      const action: FluxStandardAction<ChunkSlice, LoadChunksOfDigitalAction> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ChunkActionsFactory.CHUNKS_OF_DIGITAL,\n        meta: { addPending, pkDigital, pk },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DatChunk>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n    return this;\n  }\n}\n\nexport interface LoadColumnsOfTableAction extends LoadActionMeta { pkDigital: number }\n\nexport class ColumnActionsFactory extends SchemaActionsFactory<ColumnSlice, DatColumn> {\n\n  // Suffixes of load action types\n  static readonly COLUMNS_OF_TABLE = 'COLUMNS_OF_TABLE';\n\n  /**\n   * Load a version. if entityVersion omitted, latest version is returned.\n   */\n  loadColumnsOfTable: (pkDigital: number, pk: number) => ActionResultObservable<DatColumn>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ColumnActionsFactory {\n    Object.assign(this, this.createCrudActions(datRoot, 'column'))\n\n    this.loadColumnsOfTable = (pkDigital: number, pk: number) => {\n      const addPending = U.uuid()\n\n      const action: FluxStandardAction<ColumnSlice, LoadColumnsOfTableAction> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ColumnActionsFactory.COLUMNS_OF_TABLE,\n        meta: { addPending, pkDigital, pk },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DatColumn>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n    return this;\n  }\n}\n\n@Injectable()\nexport class DatActions {\n\n  digital = new DigitalActionsFactory(this.ngRedux).createActions();\n\n  chunk = new ChunkActionsFactory(this.ngRedux).createActions()\n\n  column = new ColumnActionsFactory(this.ngRedux).createActions()\n\n  class_column_mapping = new SchemaActionsFactory<ClassColumnMappingSlice, DatClassColumnMapping>(this.ngRedux).createCrudActions(datRoot, 'class_column_mapping')\n\n  namespace = new SchemaActionsFactory<NamespaceSlice, DatNamespace>(this.ngRedux).createCrudActions(datRoot, 'namespace')\n\n  text_property = new SchemaActionsFactory<TextPropertySlice, DatTextProperty>(this.ngRedux).createCrudActions(datRoot, 'text_property')\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","\nimport { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { DfhLabel, DfhProfile } from '@kleiolab/lib-sdk-lb3';\nimport { DfhClass, DfhProperty } from '@kleiolab/lib-sdk-lb4';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { ActionResultObservable, LoadActionMeta, SchemaActionsFactory, SucceedActionMeta } from '../_helpers/schema-actions-factory';\nimport { filter } from 'rxjs/operators';\nimport { IAppState } from '../../root/models';\nimport { DfhClassSlice } from '../models';\nimport { dfhRoot } from '../reducer-configs';\n\n\nexport class DfhProfileActionFactory extends SchemaActionsFactory<Payload, DfhProfile> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<DfhProfile>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): DfhProfileActionFactory {\n    Object.assign(this, this.createCrudActions(dfhRoot, 'profile'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + DfhProfileActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DfhProfile>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\nexport class DfhClassActionFactory extends SchemaActionsFactory<Payload, DfhClass> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<DfhClass>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): DfhClassActionFactory {\n    Object.assign(this, this.createCrudActions(dfhRoot, 'klass'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + DfhClassActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DfhClass>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\nexport class DfhPropertyActionFactory extends SchemaActionsFactory<Payload, DfhProperty> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<DfhProperty>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): DfhPropertyActionFactory {\n    Object.assign(this, this.createCrudActions(dfhRoot, 'property'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + DfhPropertyActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DfhProperty>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\nexport class DfhLabelActionFactory extends SchemaActionsFactory<Payload, DfhLabel> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<DfhLabel>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): DfhLabelActionFactory {\n    Object.assign(this, this.createCrudActions(dfhRoot, 'label'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + DfhLabelActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DfhLabel>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    return this;\n  }\n}\n\n\ntype Payload = DfhClassSlice;\n\n@Injectable()\nexport class DfhActions {\n\n\n  profile = new DfhProfileActionFactory(this.ngRedux).createActions();\n  klass = new DfhClassActionFactory(this.ngRedux).createActions();\n  property = new DfhPropertyActionFactory(this.ngRedux).createActions();\n  label = new DfhLabelActionFactory(this.ngRedux).createActions();\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { IAppState } from '../../root/models';\nimport { ActionResultObservable, ModifyActionMeta, SchemaActionsFactory, SucceedActionMeta } from './schema-actions-factory';\n\n@Injectable()\nexport class InfActionFactory<Payload, Model> extends SchemaActionsFactory<Payload, Model> {\n\n\n  /**\n   * @param pk is used for facetting\n   */\n  remove: (items: Model[], pk?: number) => ActionResultObservable<Model>;\n\n  /**\n   * @param pk is used for facetting\n   */\n  removeSucceeded: (items: Model[], removePending: string, pk?: number) => void;\n\n  constructor(public ngRedux: NgRedux<IAppState>) {\n    super(ngRedux);\n  }\n\n  createInfActions(actionPrefix: string, modelName: string): InfActionFactory<Payload, Model> {\n    this.createCrudActions(actionPrefix, modelName)\n\n    /**\n     * Call the Redux Action to remove model instances from project.\n     */\n    this.remove = (items: Model[], pk?: number) => {\n      const addPending = U.uuid();\n      const action: FluxStandardAction<Payload, ModifyActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::REMOVE',\n        meta: { items, addPending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<Model>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n\n    this.removeSucceeded = (items: Model[], removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, SucceedActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::REMOVE_SUCCEEDED',\n        meta: { items, removePending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    return this;\n  }\n\n}\n","\nimport { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { DatDigital, InfAppellation, InfDimension, InfLangString, InfLanguage, InfPersistentItem, InfPlace, InfStatement, InfTemporalEntity, InfTextProperty, InfTimePrimitive } from '@kleiolab/lib-sdk-lb3';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { filter } from 'rxjs/operators';\nimport { IAppState, SchemaObject } from '../../root/models';\nimport { InfDimensionSlice, InfPersistentItemSlice } from '../models';\nimport { infRoot } from '../reducer-configs';\nimport { InfActionFactory } from '../_helpers/inf-action-factory';\nimport { ActionResultObservable, LoadActionMeta, SchemaActionsFactory, SucceedActionMeta } from '../_helpers/schema-actions-factory';\n\n\n\ntype Payload = InfPersistentItemSlice;\n\nexport interface LoadByPkMeta extends LoadActionMeta { pkEntity: number };\nexport type LoadTypesOfProjectAction = LoadActionMeta;\nexport interface LoadTypeOfProjectAction extends LoadActionMeta { pkEntity: number };\ntype LoadNestetedPeItResult = InfPersistentItem[]\n\nexport class InfPersistentItemActionFactory extends InfActionFactory<Payload, InfPersistentItem> {\n\n  // Suffixes of load action types\n  // static readonly NESTED_BY_PK = 'NESTED_BY_PK';\n  static readonly MINIMAL_BY_PK = 'MINIMAL_BY_PK';\n  static readonly TYPES_OF_PROJECT = 'TYPES_OF_PROJECT';\n  static readonly TYPE_OF_PROJECT = 'TYPE_OF_PROJECT';\n\n  loadMinimal: (pkProject: number, pkEntity: number) => ActionResultObservable<SchemaObject>;\n  loadNestedObject: (pkProject: number, pkEntity: number) => ActionResultObservable<LoadNestetedPeItResult>;\n\n  typesOfProject: (pkProject: number) => ActionResultObservable<LoadActionMeta>;\n  // typeOfProject: (pkProject: number, pkEntity: number) => ActionResultObservable<LoadNestetedPeItResult>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): InfPersistentItemActionFactory {\n    Object.assign(this, this.createInfActions(infRoot, 'persistent_item'))\n\n    // this.loadNestedObject = (pkProject: number, pkEntity: number) => {\n    //   const addPending = U.uuid();\n    //   const action: FluxStandardAction<Payload, LoadByPkMeta> = {\n    //     type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfPersistentItemActionFactory.NESTED_BY_PK,\n    //     meta: { addPending, pk: pkProject, pkEntity },\n    //     payload: null,\n    //   };\n    //   this.ngRedux.dispatch(action)\n    //   return {\n    //     pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n    //     resolved$: this.ngRedux.select<SucceedActionMeta<LoadNestetedPeItResult>>(['resolved', addPending]).pipe(filter(x => !!x)),\n    //     key: addPending\n    //   };\n    // }\n    this.loadMinimal = (pkProject: number, pkEntity: number) => {\n      const addPending = U.uuid();\n      const action: FluxStandardAction<Payload, LoadByPkMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfPersistentItemActionFactory.MINIMAL_BY_PK,\n        meta: { addPending, pk: pkProject, pkEntity },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<SchemaObject>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    this.typesOfProject = (pkProject: number) => {\n      const addPending = U.uuid();\n\n      const action: FluxStandardAction<Payload, LoadTypesOfProjectAction> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfPersistentItemActionFactory.TYPES_OF_PROJECT,\n        meta: { addPending, pk: pkProject },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<LoadActionMeta>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    // this.typeOfProject = (pkProject: number, pkEntity: number) => {\n    //   const addPending = U.uuid();\n\n    //   const action: FluxStandardAction<Payload, LoadTypeOfProjectAction> = {\n    //     type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfPersistentItemActionFactory.TYPE_OF_PROJECT,\n    //     meta: { addPending, pk: pkProject, pkEntity },\n    //     payload: null,\n    //   };\n    //   this.ngRedux.dispatch(action)\n    //   return {\n    //     pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n    //     resolved$: this.ngRedux.select<SucceedActionMeta<LoadNestetedPeItResult>>(['resolved', addPending]).pipe(filter(x => !!x)),\n    //     key: addPending\n    //   };\n    // }\n\n    return this;\n  }\n\n}\nexport type PaginatedStatements = number[]\nexport interface PaginatedStatementList {\n  count: number,\n  schemas: SchemaObject,\n  paginatedStatements: PaginatedStatements\n}\nexport interface LoadPaginatedStatementListMeta extends LoadActionMeta {\n  pkSourceEntity: number // Pk of the source entity.\n  pkProperty: number // Pk of the property.\n  fkTargetClass: number // Pk of the target class.\n  isOutgoing: boolean // If true, the source entity is domain, else range.\n  limit: number // number of items per page.\n  offset: number // offset.\n  alternatives: boolean\n}\nexport class InfTemporalEntityActionFactory extends InfActionFactory<Payload, InfTemporalEntity> {\n\n  // Suffixes of load action types\n  static readonly OWN_PROPERTIES = 'OWN_PROPERTIES';\n  static readonly PAGINATED_LIST = 'PAGINATED_LIST';\n  static readonly PAGINATED_ALTERNATIVE_LIST = 'PAGINATED_ALTERNATIVE_LIST';\n\n  loadNestedObject: (pkProject: number, pkEntity: number) => ActionResultObservable<InfTemporalEntity[]>;\n  loadPaginatedList: (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => ActionResultObservable<PaginatedStatementList>;\n  loadPaginatedAlternativeList: (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => ActionResultObservable<PaginatedStatementList>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): InfTemporalEntityActionFactory {\n    Object.assign(this, this.createInfActions(infRoot, 'temporal_entity'))\n\n    this.loadNestedObject = (pkProject: number, pkEntity: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadByPkMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfTemporalEntityActionFactory.OWN_PROPERTIES,\n        meta: { addPending, pk: pkProject, pkEntity },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<InfTemporalEntity[]>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    this.loadPaginatedList = (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadPaginatedStatementListMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfTemporalEntityActionFactory.PAGINATED_LIST,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkSourceEntity,\n          fkTargetClass,\n          pkProperty,\n          isOutgoing,\n          limit,\n          offset,\n          alternatives: false\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<PaginatedStatementList>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n    this.loadPaginatedAlternativeList = (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadPaginatedStatementListMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfTemporalEntityActionFactory.PAGINATED_ALTERNATIVE_LIST,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkSourceEntity,\n          pkProperty,\n          fkTargetClass,\n          isOutgoing,\n          limit,\n          offset,\n          alternatives: true\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<PaginatedStatementList>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n    return this;\n  }\n}\nexport interface FindStatementByParams extends LoadActionMeta {\n  ofProject: boolean,\n  pkEntity: number,\n  pkInfoRange: number,\n  pkInfoDomain: number,\n  pkProperty: number,\n}\nexport interface ContentTreeMeta extends LoadActionMeta {\n  pkExpressionEntity: number,\n}\nexport interface SourcesAndDigitalsOfEntity extends LoadActionMeta {\n  ofProject: boolean,\n  pkEntity: number,\n}\nexport interface SourcesAndDigitalsOfEntityResult {\n  statements: InfStatement[],\n  digitals: DatDigital[],\n}\n\n\nexport interface LoadOutgoingAlternativeStatements extends LoadActionMeta { pkTemporalEntity: number, pkProperty: number };\nexport interface LoadIngoingAlternativeStatements extends LoadActionMeta { pkEntity: number, pkProperty: number };\nexport interface AddToProjectWithTeEntActionMeta { pkStatements: number[], pk: number, addPending: string };\n\nexport class InfStatementActionFactory extends InfActionFactory<Payload, InfStatement> {\n\n  // Suffixes of load action types\n  // static readonly ALTERNATIVES_OUTGOING = 'ALTERNATIVES_OUTGOING';\n  static readonly ALTERNATIVES_INGOING = 'ALTERNATIVES_INGOING';\n  // static readonly ADD_TO_PROJECT_WITH_TE_EN = 'ADD_TO_PROJECT_WITH_TE_EN';\n  static readonly PAGINATED_LIST = 'PAGINATED_LIST';\n  static readonly CONTENT_TREE = 'CONTENT_TREE';\n  static readonly SOURCES_AND_DIGITALS_OF_ENTITY = 'SOURCES_AND_DIGITALS_OF_ENTITY';\n  static readonly BY_PARAMS = 'BY_PARAMS';\n\n  loadIngoingAlternatives: (pkEntity, pkProperty, pkProjec) => ActionResultObservable<InfStatement>;\n  loadPaginatedList: (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => ActionResultObservable<PaginatedStatementList>;\n\n  // contentTree: (pkProject: number, pkExpressionEntity: number) => void;\n  sourcesAndDigitalsOfEntity: (ofProject: boolean, pkProject: number, pkEntity: number) => ActionResultObservable<SourcesAndDigitalsOfEntityResult>;\n  findByParams: (\n    ofProject: boolean,\n    pkProject: number,\n    pkEntity: number,\n    pkInfoRange: number,\n    pkInfoDomain: number,\n    pkProperty: number,\n  ) => void;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): InfStatementActionFactory {\n    Object.assign(this, this.createInfActions(infRoot, 'statement'))\n\n    this.findByParams = (\n      ofProject: boolean,\n      pkProject: number,\n      pkEntity: number,\n      pkInfoRange: number,\n      pkInfoDomain: number,\n      pkProperty: number,\n    ) => {\n      const action: FluxStandardAction<Payload, FindStatementByParams> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfStatementActionFactory.BY_PARAMS,\n        meta: {\n          addPending: U.uuid(),\n          pk: pkProject,\n          ofProject,\n          pkEntity,\n          pkInfoRange,\n          pkInfoDomain,\n          pkProperty,\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n    }\n\n\n    this.loadIngoingAlternatives = (pkEntity: number, pkProperty: number, pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadIngoingAlternativeStatements> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfStatementActionFactory.ALTERNATIVES_INGOING,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkEntity,\n          pkProperty,\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<InfStatement>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    this.loadPaginatedList = (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadPaginatedStatementListMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfStatementActionFactory.PAGINATED_LIST,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkSourceEntity,\n          fkTargetClass,\n          pkProperty,\n          isOutgoing,\n          limit,\n          offset,\n          alternatives: false\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<PaginatedStatementList>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    /**\n    * Get an nested object with everything needed to display the\n    * links made from an entity towards sources and digitals.\n    */\n    this.sourcesAndDigitalsOfEntity = (ofProject: boolean, pkProject: number, pkEntity: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, SourcesAndDigitalsOfEntity> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfStatementActionFactory.SOURCES_AND_DIGITALS_OF_ENTITY,\n        meta: {\n          addPending,\n          ofProject,\n          pk: pkProject,\n          pkEntity\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<SourcesAndDigitalsOfEntityResult>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\nexport interface LoadAlternativeTextProperties extends LoadActionMeta { fkEntity: number, fkClassField: number };\n\nexport class InfTextPropertyActionFactory extends InfActionFactory<Payload, InfTextProperty> {\n\n  // Suffixes of load action types\n  static readonly ALTERNATIVES = 'ALTERNATIVES';\n\n  loadAlternatives: (fkEntity, fkClassField, fkProject) => ActionResultObservable<InfTextProperty>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): InfTextPropertyActionFactory {\n    Object.assign(this, this.createInfActions(infRoot, 'text_property'))\n\n    this.loadAlternatives = (fkEntity: number, fkClassField: number, pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadAlternativeTextProperties> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfTextPropertyActionFactory.ALTERNATIVES,\n        meta: {\n          addPending,\n          pk: pkProject,\n          fkEntity,\n          fkClassField,\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<InfTextProperty>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\n\n@Injectable()\nexport class InfActions {\n\n  persistent_item = new InfPersistentItemActionFactory(this.ngRedux).createActions();\n  temporal_entity = new InfTemporalEntityActionFactory(this.ngRedux).createActions()\n  statement = new InfStatementActionFactory(this.ngRedux).createActions()\n\n  // TODO: pimp those up to real Inf Actions!\n  language = new SchemaActionsFactory<Payload, InfLanguage>(this.ngRedux).createCrudActions(infRoot, 'language')\n  appellation = new SchemaActionsFactory<Payload, InfAppellation>(this.ngRedux).createCrudActions(infRoot, 'appellation')\n  lang_string = new SchemaActionsFactory<Payload, InfLangString>(this.ngRedux).createCrudActions(infRoot, 'lang_string')\n  dimension = new SchemaActionsFactory<InfDimensionSlice, InfDimension>(this.ngRedux).createCrudActions(infRoot, 'dimension')\n  place = new SchemaActionsFactory<Payload, InfPlace>(this.ngRedux).createCrudActions(infRoot, 'place')\n  time_primitive = new SchemaActionsFactory<Payload, InfTimePrimitive>(this.ngRedux).createCrudActions(infRoot, 'time_primitive')\n  text_property = new InfTextPropertyActionFactory(this.ngRedux).createActions()\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","\nimport { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { ProClassFieldConfig, ProDfhClassProjRel, ProDfhProfileProjRel, ProInfoProjRel, ProProject, ProTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { ProAnalysis } from '@kleiolab/lib-sdk-lb4';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { filter } from 'rxjs/operators';\nimport { IAppState } from '../../root/models';\nimport { ProAnalysisSlice, ProInfoProjRelSlice } from '../models';\nimport { proRoot } from '../reducer-configs';\nimport { ActionResultObservable, LoadActionMeta, SchemaActionsFactory, SucceedActionMeta, LoadByPkAndVersionActionMeta } from '../_helpers/schema-actions-factory';\n\n\ntype Payload = ProInfoProjRelSlice;\n\nexport class ProProjectActionFactory extends SchemaActionsFactory<Payload, ProProject> {\n\n  // Suffixes of load action types\n  static readonly OF_ACCOUNT = 'OF_ACCOUNT';\n  static readonly LOAD_BASICS = 'LOAD_BASICS';\n\n  loadOfAccount: (pkProject) => ActionResultObservable<ProProject>;\n\n  /**\n   * loads the ProProject and the default InfLanguage\n   */\n  loadBasics: (pkProject) => ActionResultObservable<ProProject>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProProjectActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'project'))\n\n    this.loadOfAccount = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProProjectActionFactory.OF_ACCOUNT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProProject>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    this.loadBasics = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProProjectActionFactory.LOAD_BASICS,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProProject>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    return this;\n  }\n}\n\nexport interface MarkStatementAsFavoriteActionMeta {\n  addPending: string,\n  pk: number\n  pkStatement: number\n  isOutgoing: boolean\n}\nexport class ProInfoProjRelActionFactory extends SchemaActionsFactory<Payload, ProInfoProjRel> {\n\n  // Suffixes of load action types\n  static readonly MARK_ROLE_AS_FAVORITE = 'MARK_ROLE_AS_FAVORITE';\n\n  markStatementAsFavorite: (pkProject: number, pkStatement: number, isOutgoing: boolean) => ActionResultObservable<ProInfoProjRel>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProInfoProjRelActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'info_proj_rel'))\n\n    this.markStatementAsFavorite = (pkProject: number, pkStatement: number, isOutgoing: boolean) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, MarkStatementAsFavoriteActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProInfoProjRelActionFactory.MARK_ROLE_AS_FAVORITE,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkStatement: pkStatement,\n          isOutgoing\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProInfoProjRel>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\nexport class ProDfhClassProjRelActionFactory extends SchemaActionsFactory<Payload, ProDfhClassProjRel> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<ProDfhClassProjRel>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProDfhClassProjRelActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'dfh_class_proj_rel'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProDfhClassProjRelActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProDfhClassProjRel>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\nexport class ProDfhProfileProjRelActionFactory extends SchemaActionsFactory<Payload, ProDfhProfileProjRel> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<ProDfhProfileProjRel>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProDfhProfileProjRelActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'dfh_profile_proj_rel'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProDfhProfileProjRelActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProDfhProfileProjRel>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\nexport class ProClassFieldConfigActionFactory extends SchemaActionsFactory<Payload, ProClassFieldConfig> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<ProClassFieldConfig>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProClassFieldConfigActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'class_field_config'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProClassFieldConfigActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProClassFieldConfig>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\nexport class ProTextPropertyActionFactory extends SchemaActionsFactory<Payload, ProTextProperty> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<ProTextProperty>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProTextPropertyActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'text_property'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProTextPropertyActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProTextProperty>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\nexport class ProAnalysisActionFactory extends SchemaActionsFactory<ProAnalysisSlice, ProAnalysis> {\n\n  // Suffixes of load action types\n  static readonly BY_PK_AND_VERSION = 'BY_PK_AND_VERSION';\n\n  loadByIdAndVersion: (pkProject: number, pkEntity: number, version: number) => ActionResultObservable<ProAnalysis>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProAnalysisActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'analysis'))\n\n    this.loadByIdAndVersion = (pkProject: number, pkEntity: number, version: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadByPkAndVersionActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProAnalysisActionFactory.BY_PK_AND_VERSION,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkEntity,\n          version\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProAnalysis>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\n\n@Injectable()\nexport class ProActions {\n  project = new ProProjectActionFactory(this.ngRedux).createActions()\n  info_proj_rel = new ProInfoProjRelActionFactory(this.ngRedux).createActions()\n  text_property = new ProTextPropertyActionFactory(this.ngRedux).createActions()\n  dfh_class_proj_rel = new ProDfhClassProjRelActionFactory(this.ngRedux).createActions()\n  dfh_profile_proj_rel = new ProDfhProfileProjRelActionFactory(this.ngRedux).createActions()\n  class_field_config = new ProClassFieldConfigActionFactory(this.ngRedux).createActions()\n  analysis = new ProAnalysisActionFactory(this.ngRedux).createActions()\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { SysSystemRelevantClass } from '@kleiolab/lib-sdk-lb3';\nimport { SysConfigValue } from '@kleiolab/lib-sdk-lb4';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { IAppState } from '../../root/models';\nimport { Sys } from '../models';\nimport { sysRoot } from '../reducer-configs';\nimport { SchemaActionsFactory } from '../_helpers/schema-actions-factory';\n\ntype Payload = Sys;\ninterface MetaData {\n  systemRelevantClasses?: SysSystemRelevantClass[]\n};\nexport type SysAction = FluxStandardAction<Payload, MetaData>;\n\n@Injectable()\nexport class SysActions {\n\n  system_relevant_class = new SchemaActionsFactory<Payload, SysSystemRelevantClass>\n    (this.ngRedux).createCrudActions(sysRoot, 'system_relevant_class');\n\n  // analysis_type = new StandardActionsFactory<Payload, SysAnalysisType>\n  //   (this.ngRedux).createCrudActions(sysRoot, 'analysis_type');\n\n\n  config = new SchemaActionsFactory<Payload, SysConfigValue>\n    (this.ngRedux).createCrudActions(sysRoot, 'config');\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { TabCell } from '@kleiolab/lib-sdk-lb4';\nimport { IAppState } from '../../root/models';\nimport { TabCellSlice } from '../models';\nimport { SchemaActionsFactory } from '../_helpers/schema-actions-factory';\nimport { tabRoot } from '../reducer-configs';\n\n\n@Injectable()\nexport class TabActions {\n\n  cell = new SchemaActionsFactory<TabCellSlice, TabCell>(this.ngRedux).createCrudActions(tabRoot, 'cell')\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","\nimport { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { WarEntityPreview } from '@kleiolab/lib-sdk-lb4';\nimport { IAppState } from '../../root/models';\nimport { WarEntityPreviewSlice } from '../models';\nimport { warRoot } from '../reducer-configs';\nimport { SchemaActionsFactory } from '../_helpers/schema-actions-factory';\n\n@Injectable()\nexport class WarActions {\n  entity_preview = new SchemaActionsFactory<WarEntityPreviewSlice, WarEntityPreview>(this.ngRedux).createCrudActions(warRoot, 'entity_preview')\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { SysConfig } from '@kleiolab/lib-config';\nimport { ProProject, ProProjectApi } from '@kleiolab/lib-sdk-lb3';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { Action } from 'redux';\nimport { combineEpics, Epic, ofType } from 'redux-observable-es6-compat';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, mapTo, mergeMap, switchMap } from 'rxjs/operators';\nimport { IAppState } from '../../root/models';\nimport { DatActions, DfhActions, InfActions, ProActions, SysActions } from '../../state-schema/actions';\nimport { ActiveProjectAction, ActiveProjectActions, LoadingBarActions, NotificationsAPIActions } from '../actions';\nimport { ProjectPreview } from '../models';\n\n/**\n * Transform ProProject to ProjectPreview\n */\nfunction proProjectToProjectPreview(project: ProProject): ProjectPreview {\n  return {\n    label: this.firstProTextPropStringOfType(project.text_properties, SysConfig.PK_SYSTEM_TYPE__TEXT_PROPERTY__LABEL),\n    description: this.firstProTextPropStringOfType(project.text_properties, SysConfig.PK_SYSTEM_TYPE__TEXT_PROPERTY__DESCRIPTION),\n    default_language: project.default_language,\n    pk_project: project.pk_entity\n  }\n}\n\n\n@Injectable()\nexport class ActiveProjectEpics {\n  constructor(\n    private sys: SysActions,\n    private dat: DatActions,\n    private dfh: DfhActions,\n    private pro: ProActions,\n    private inf: InfActions,\n    private projectApi: ProProjectApi,\n    private actions: ActiveProjectActions,\n    private notificationActions: NotificationsAPIActions,\n    private loadingBarActions: LoadingBarActions,\n    private ngRedux: NgRedux<IAppState>,\n  ) { }\n\n  public createEpics(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return combineEpics(\n      this.createLoadProjectBasicsEpic(),\n      this.createLoadProjectConfigEpic(),\n      this.createLoadProjectUpdatedEpic(),\n      this.createClosePanelEpic(),\n      this.createActivateTabFocusPanelEpic(),\n      this.createMoveTabFocusPanelEpic(),\n      this.createClosePanelFocusPanelEpic(),\n      this.createSplitPanelActivateTabEpic(),\n      this.createAddTabCloseListEpic(),\n    );\n  }\n\n  /**\n   * This epic listenes to an action that wants to load tha active project (by id)\n   * It loads the project info and\n   * - on loaded dispaches an action that reduces the project into the store\n   * - on fail dispaches an action that shows an error notification\n   */\n  private createLoadProjectBasicsEpic(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return (action$, store) => action$.pipe(\n\n      ofType(ActiveProjectActions.LOAD_PROJECT_BASICS),\n      switchMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n        /**\n       * Emit the global action that activates the loading bar\n       */\n        globalStore.next(this.loadingBarActions.startLoading());\n\n        this.projectApi.getBasics(action.meta.pk_project)\n          .subscribe(\n            (data: ProProject[]) => {\n              globalStore.next(this.actions.loadProjectBasiscsSucceded(proProjectToProjectPreview(data[0])))\n            },\n            error => {\n              globalStore.next(this.notificationActions.addToast({\n                type: 'error',\n                options: { title: error.message }\n              }))\n            })\n      }))\n\n    )\n  }\n\n  /**\n  * This epic listenes to an action that is dispached when loading projcect succeeded\n  *\n  * It dispaches an action that completes the loading bar\n  */\n  private createLoadProjectUpdatedEpic(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return (action$, store) => action$.pipe(\n      ofType(ActiveProjectActions.LOAD_PROJECT_BASICS_SUCCEEDED),\n      mapTo(this.loadingBarActions.completeLoading())\n    )\n  }\n\n  private createLoadProjectConfigEpic(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return (action$, store) => action$.pipe(\n\n      ofType(ActiveProjectActions.LOAD_PROJECT_CONFIG),\n      switchMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n        globalStore.next(this.loadingBarActions.startLoading());\n\n        combineLatest(\n          this.dfh.profile.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n\n          this.dfh.klass.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n          this.dfh.property.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n          this.dfh.label.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n\n          this.sys.system_relevant_class.load().resolved$.pipe(filter(x => !!x)),\n          this.sys.config.load().resolved$.pipe(filter(x => !!x)),\n          this.dat.namespace.load('', action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n\n          this.pro.text_property.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n          this.pro.dfh_class_proj_rel.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n          this.pro.dfh_profile_proj_rel.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n          this.pro.class_field_config.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n\n          this.inf.persistent_item.typesOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x))\n        )\n          .pipe(filter((res: any[]) => !res.includes(undefined)))\n          .subscribe((res) => {\n\n            globalStore.next(this.actions.loadProjectConfigSucceeded());\n            globalStore.next(this.loadingBarActions.completeLoading());\n\n          }, error => {\n            // subStore.dispatch(this.actions.loadFailed({ status: '' + error.status }))\n          });\n\n      }))\n\n    )\n  }\n\n\n  /**\n   * LAYOUT\n   */\n  private createClosePanelEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.CLOSE_TAB, ActiveProjectActions.MOVE_TAB, ActiveProjectActions.SPLIT_PANEL),\n        mergeMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n          this.ngRedux.getState().activeProject.panels.forEach((panel, panelIndex) => {\n            if (panel.tabs.length === 0) globalStore.next(this.actions.closePanel(panelIndex));\n          })\n        }))\n      )\n    }\n  }\n  private createSplitPanelActivateTabEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.SPLIT_PANEL),\n        map((action: ActiveProjectAction) => {\n          const p = this.ngRedux.getState().activeProject;\n          const c = action.meta.currentPanelIndex;\n          const panelIndex = p.panels.length < (c + 1) ? c - 1 : c;\n          return this.actions.activateTab(panelIndex, 0)\n        })\n      )\n    }\n  }\n  private createActivateTabFocusPanelEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.ACTIVATE_TAB),\n        mergeMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n          if (this.ngRedux.getState().activeProject.focusedPanel !== action.meta.panelIndex) {\n            globalStore.next(this.actions.focusPanel(action.meta.panelIndex));\n          }\n        }))\n      )\n    }\n  }\n  private createMoveTabFocusPanelEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.MOVE_TAB),\n        mergeMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n          if (this.ngRedux.getState().activeProject.focusedPanel !== action.meta.currentPanelIndex) {\n            globalStore.next(this.actions.focusPanel(action.meta.currentPanelIndex));\n          }\n        }))\n      )\n    }\n  }\n  private createClosePanelFocusPanelEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.CLOSE_PANEL),\n        mergeMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n          if (this.ngRedux.getState().activeProject.focusedPanel > (this.ngRedux.getState().activeProject.panels.length - 1)) {\n            globalStore.next(this.actions.focusPanel(0));\n          }\n        }))\n      )\n    }\n  }\n  private createAddTabCloseListEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.ADD_TAB),\n        mapTo(this.actions.setListType(''))\n      )\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { SlimLoadingBarService } from '@cime/ngx-slim-loading-bar';\nimport { combineEpics, Epic, ofType } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { LoadingBarActions } from '../actions';\n\n\n\n\n@Injectable()\nexport class LoadingBarEpics {\n  constructor(\n    private service: SlimLoadingBarService,\n    private actions: LoadingBarActions,\n  ) { }\n\n  public createEpics(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return combineEpics(\n      this.createStartLoadingBarEpic(),\n      this.createCompleteLoadingBarEpic()\n    );\n  }\n\n  private createCompleteLoadingBarEpic(): Epic {\n    return (action$, store) => action$.pipe(\n      ofType(LoadingBarActions.COPMLETE),\n      switchMap(() => {\n        return Observable.create(observer => {\n          this.service.complete()\n          // observer.next(this.actions.stopLoading())\n        })\n      })\n    )\n  }\n\n  private createStartLoadingBarEpic(): Epic {\n    return (action$, store) => action$.pipe(\n      ofType(LoadingBarActions.START),\n      switchMap(() => {\n        return Observable.create(observer => {\n          this.service.start();\n        })\n      })\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ToastyConfig, ToastyService } from '@cime/ngx-toasty';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { combineEpics, Epic, ofType } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { filter, switchMap, takeUntil } from 'rxjs/operators';\nimport { NotificationsAPIAction, NotificationsAPIActions } from '../actions';\n\n@Injectable()\nexport class NotificationsAPIEpics {\n  constructor(\n    private toastyService: ToastyService,\n    private toastyConfig: ToastyConfig\n  ) {\n    // Assign the selected theme name to the `theme` property of the instance of ToastyConfig.\n    // Possible values: default, bootstrap, material\n    this.toastyConfig.theme = 'bootstrap';\n  }\n\n  public createEpics(): Epic {\n    return combineEpics(this.createAddToastEpic());\n  }\n\n  private createAddToastEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        /**\n         * Filter the actions that triggers this epic\n         */\n        filter((a) => {\n          return a;\n        }),\n        ofType(NotificationsAPIActions.ADD_TOAST),\n        switchMap((action) => new Observable<FluxStandardAction<any>>((observer) => {\n          /**\n           * Add Toast\n           */\n          const a = action as NotificationsAPIAction;\n          if (!a.payload.options.title && !a.payload.options.msg) {\n            if (a.payload.type === 'error') {\n              a.payload.options.title = 'Oops, something went wrong!'\n            }\n          }\n          this.toastyService[a.payload.type](a.payload.options);\n\n        })),\n      )\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActionsObservable, combineEpics, Epic } from 'redux-observable-es6-compat';\nimport { of } from 'rxjs';\nimport { filter, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionResolverEpics {\n\n  // requestMap: { [uuid: string]: ActionResultObservable<any> } = {};\n\n  constructor() { }\n\n  createEpics = () => combineEpics(this.createResolveEpic());\n  private createResolveEpic(): Epic {\n    return (action$: ActionsObservable<any>, store) => action$.pipe(\n      filter(action => !!action && !!action.meta && !!action.meta.removePending),\n\n      switchMap(action => (of({ type: 'CLEAN_UP_RESOLVED', meta: { uuid: action.meta.removePending } }))),\n    )\n  }\n\n\n\n}\n","import { DatChunk, DatDigital, InfAppellation, InfDimension, InfLangString, InfLanguage, InfPersistentItem, InfPlace, InfStatement, InfTemporalEntity, InfTextProperty, InfTimePrimitive, ProClassFieldConfig, ProDfhClassProjRel, ProDfhProfileProjRel, ProInfoProjRel, ProProject, ProTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { ProAnalysis } from '@kleiolab/lib-sdk-lb4';\nimport { keys, omit, values } from 'ramda';\nimport { DatActions, InfActions, ProActions } from '../actions';\nimport { ChunkSlice, DigitalSlice, InfAppellationSlice, InfDimensionSlice, InfLangStringSlice, InfLanguageSlice, InfPersistentItemSlice, InfPlaceSlice, InfTextPropertySlice, InfTimePrimitiveSlice, ProAnalysisSlice, ProClassFieldConfigSlice, ProDfhClassProjRelSlice, ProDfhProfileProjRelSlice, ProInfoProjRelSlice, ProProjectSlice, ProTextPropertySlice } from '../models';\nimport { SchemaActionsFactory } from './schema-actions-factory';\n\nclass ModelFlattener<Payload, Model> {\n  items: Model[]\n  constructor(\n    public actions: SchemaActionsFactory<Payload, Model>,\n    public modelDefinition: any,\n    public flattenCb: (items: Model[]) => void,\n  ) { }\n\n  flatten(items: Model[]) {\n    if (items && items.length > 0) {\n\n      this.flattenCb(items);\n      // todo remove properties of those objects, using getModelDefinition()\n      const keysToOmit = keys(this.modelDefinition.relations).map(item => item.toString())\n      this.items = [\n        ...(this.items || []),\n        ...items.filter(item => !!item && Object.keys(item).length > 0)\n          .map(item => omit(keysToOmit, item)) as Model[]\n      ]\n    }\n    return true;\n  }\n\n}\n\ninterface FlattenerInterface {\n  [key: string]: ModelFlattener<any, any>\n}\n\n/**\n * Flattener is the class used to flatten nested objects.\n * Use storeFlattened() to call all actions to put the\n * flattened items into the store.\n */\nexport class Flattener {\n\n\n\n  info_proj_rel = new ModelFlattener<ProInfoProjRelSlice, ProInfoProjRel>(\n    this.proActions.info_proj_rel,\n    ProInfoProjRel.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new ProInfoProjRel(item);\n      })\n    })\n\n  pro_dfh_class_proj_rel = new ModelFlattener<ProDfhClassProjRelSlice, ProDfhClassProjRel>(\n    this.proActions.dfh_class_proj_rel,\n    ProDfhClassProjRel.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new ProDfhClassProjRel(item);\n      })\n    })\n\n  pro_dfh_profile_proj_rel = new ModelFlattener<ProDfhProfileProjRelSlice, ProDfhProfileProjRel>(\n    this.proActions.dfh_profile_proj_rel,\n    ProDfhProfileProjRel.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new ProDfhProfileProjRel(item);\n      })\n    })\n\n\n  persistent_item = new ModelFlattener<InfPersistentItemSlice, InfPersistentItem>(\n    this.infActions.persistent_item,\n    InfPersistentItem.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfPersistentItem(item);\n        this.statement.flatten(item.incoming_statements)\n        this.statement.flatten(item.outgoing_statements)\n        this.text_property.flatten(item.text_properties)\n        this.info_proj_rel.flatten(item.entity_version_project_rels)\n      })\n    })\n\n  temporal_entity = new ModelFlattener<InfPersistentItemSlice, InfTemporalEntity>(\n    this.infActions.temporal_entity,\n    InfTemporalEntity.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfTemporalEntity(item);\n        this.statement.flatten(item.outgoing_statements)\n        this.statement.flatten(item.incoming_statements)\n        this.text_property.flatten(item.text_properties)\n        this.info_proj_rel.flatten(item.entity_version_project_rels)\n      })\n    })\n\n\n  statement = new ModelFlattener<InfPersistentItemSlice, InfStatement>(\n    this.infActions.statement,\n    InfStatement.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfStatement(item);\n        this.info_proj_rel.flatten(item.entity_version_project_rels)\n\n        // Subject\n        if (item.subject_temporal_entity) this.temporal_entity.flatten([item.subject_temporal_entity])\n        else if (item.subject_statement) this.statement.flatten([item.subject_statement])\n\n        // Object\n        if (item.object_persistent_item) this.persistent_item.flatten([item.object_persistent_item])\n        else if (item.object_appellation) this.appellation.flatten([item.object_appellation])\n        else if (item.object_place) this.place.flatten([item.object_place])\n        else if (item.object_time_primitive) this.time_primitive.flatten([item.object_time_primitive])\n        else if (item.object_language) this.language.flatten([item.object_language])\n        else if (item.subject_chunk) this.chunk.flatten([item.subject_chunk])\n        else if (item.object_lang_string) this.lang_string.flatten([item.object_lang_string])\n        else if (item.object_dimension) this.dimension.flatten([item.object_dimension])\n      })\n    })\n\n  appellation = new ModelFlattener<InfAppellationSlice, InfAppellation>(\n    this.infActions.appellation,\n    InfAppellation.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfAppellation(item);\n      })\n    })\n\n\n  place = new ModelFlattener<InfPlaceSlice, InfPlace>(\n    this.infActions.place,\n    InfPlace.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfPlace(item);\n      })\n    })\n\n  time_primitive = new ModelFlattener<InfTimePrimitiveSlice, InfTimePrimitive>(\n    this.infActions.time_primitive,\n    InfTimePrimitive.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfTimePrimitive(item);\n      })\n    })\n\n  language = new ModelFlattener<InfLanguageSlice, InfLanguage>(\n    this.infActions.language,\n    InfLanguage.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfLanguage(item);\n      })\n    })\n\n  lang_string = new ModelFlattener<InfLangStringSlice, InfLangString>(\n    this.infActions.lang_string,\n    InfLangString.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfLangString(item);\n        this.language.flatten([item.language])\n        this.info_proj_rel.flatten(item.entity_version_project_rels)\n      })\n    })\n\n  dimension = new ModelFlattener<InfDimensionSlice, InfDimension>(\n    this.infActions.dimension,\n    InfDimension.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfDimension(item);\n        this.info_proj_rel.flatten(item.entity_version_project_rels)\n      })\n    })\n\n  text_property = new ModelFlattener<InfTextPropertySlice, InfTextProperty>(\n    this.infActions.text_property,\n    InfTextProperty.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfTextProperty(item);\n        this.language.flatten([item.language])\n        this.info_proj_rel.flatten(item.entity_version_project_rels)\n      })\n    })\n\n  digital = new ModelFlattener<DigitalSlice, DatDigital>(\n    this.datActions.digital,\n    DatDigital.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new DatDigital(item);\n      })\n    })\n\n  chunk = new ModelFlattener<ChunkSlice, DatChunk>(\n    this.datActions.chunk,\n    DatChunk.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new DatChunk(item);\n        this.statement.flatten(item.outgoing_statements)\n      })\n    })\n\n  pro_project = new ModelFlattener<ProProjectSlice, ProProject>(\n    this.proActions.project,\n    ProProject.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new ProProject(item);\n        this.language.flatten([item.default_language])\n      })\n    })\n\n  pro_text_property = new ModelFlattener<ProTextPropertySlice, ProTextProperty>(\n    this.proActions.text_property,\n    ProTextProperty.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new ProTextProperty(item);\n        this.language.flatten([item.language])\n      })\n    })\n\n\n  pro_class_field_config = new ModelFlattener<ProClassFieldConfigSlice, ProClassFieldConfig>(\n    this.proActions.class_field_config,\n    ProClassFieldConfig.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new ProClassFieldConfig(item);\n      })\n    })\n\n\n  analysis = new ModelFlattener<ProAnalysisSlice, ProAnalysis>(\n    this.proActions.analysis,\n    { relations: [] },\n    (items) => {\n      items.forEach(item => { })\n    })\n  constructor(\n    public infActions: InfActions,\n    public datActions: DatActions,\n    public proActions: ProActions\n  ) { }\n  getFlattened(): FlattenerInterface {\n    return {\n      pro_project: this.pro_project,\n      pro_text_property: this.pro_text_property,\n      pro_class_field_config: this.pro_class_field_config,\n      pro_dfh_profile_proj_rel: this.pro_dfh_profile_proj_rel,\n      pro_dfh_class_proj_rel: this.pro_dfh_class_proj_rel,\n\n      info_proj_rel: this.info_proj_rel,\n      analysis: this.analysis,\n\n      persistent_item: this.persistent_item,\n      temporal_entity: this.temporal_entity,\n      statement: this.statement,\n      appellation: this.appellation,\n      place: this.place,\n      time_primitive: this.time_primitive,\n      language: this.language,\n      text_property: this.text_property,\n      lang_string: this.lang_string,\n      dimension: this.dimension,\n\n      digital: this.digital,\n      chunk: this.chunk,\n    }\n  }\n}\n\nexport const storeFlattened = (flattened: FlattenerInterface, pk?, type?: 'LOAD' | 'UPSERT') => {\n  values(flattened).forEach(model => {\n    if (model.items) {\n      if (type === 'UPSERT') {\n        model.actions.upsertSucceeded(model.items, undefined, pk)\n      } else {\n        model.actions.loadSucceeded(model.items, undefined, pk)\n      }\n    }\n  })\n}\n","import { FluxStandardAction } from 'flux-standard-action';\nimport { Action } from 'redux';\nimport { ofType } from 'redux-observable-es6-compat';\nimport { Observable, Subscriber } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { NotificationsAPIActions } from '../../state-gui/actions';\nimport { FluxActionObservable, LoadActionMeta, ModifyActionMeta, SchemaActionsFactory } from './schema-actions-factory';\n\nexport class SchemaEpicsFactory<Payload, Model> {\n  constructor(\n    public actionPrefix: string,\n    public modelName: string,\n    public actions: SchemaActionsFactory<Payload, Model>,\n    public notifications: NotificationsAPIActions) { }\n\n\n  createLoadEpic<T>(apiFn: (meta: T) => Observable<Model[]>, actionSuffix: string, onSuccessHook?: (data: Model[], pk?, initialMeta?: T) => void) {\n    return (action$: FluxActionObservable<Payload, LoadActionMeta>, store) => {\n      return action$.pipe(\n        ofType(this.type('LOAD', actionSuffix)),\n        mergeMap((action) => new Observable<Action>((globalActions) => {\n          const pendingKey = action.meta.addPending;\n          const meta = action.meta as any as T;\n          apiFn(meta).subscribe((data: Model[]) => {\n            if (onSuccessHook) {\n              onSuccessHook(data, action.meta.pk, meta);\n              this.actions.succeeded(data, pendingKey, action.meta.pk);\n            }\n            else {\n              this.actions.loadSucceeded(data, pendingKey, action.meta.pk);\n            }\n          }, error => {\n            this.onError(globalActions, error, pendingKey, action.meta.pk)\n          });\n        })));\n    };\n  }\n  createUpsertEpic<T>(apiFn: (meta: T) => Observable<Model[]>, onSuccessHook?: (data: Model[], pk?) => void) {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(this.actionPrefix + '.' + this.modelName + '::UPSERT'),\n        mergeMap((action: FluxStandardAction<Payload, ModifyActionMeta<Model>>) => new Observable<Action>((globalActions) => {\n          const pendingKey = action.meta.addPending;\n          const meta = action.meta as any as T;\n          apiFn(meta).subscribe((data: Model[]) => {\n            if (onSuccessHook) {\n              onSuccessHook(data, action.meta.pk);\n              this.actions.succeeded(data, pendingKey, action.meta.pk);\n            }\n            else {\n              this.actions.upsertSucceeded(data, pendingKey, action.meta.pk);\n            }\n          }, error => {\n            this.onError(globalActions, error, pendingKey, action.meta.pk)\n          });\n        })));\n    };\n  }\n  createDeleteEpic(apiFn: (meta: ModifyActionMeta<Model>) => Observable<Model[]>) {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(this.actionPrefix + '.' + this.modelName + '::DELETE'),\n        mergeMap((action: FluxStandardAction<Payload, ModifyActionMeta<Model>>) => new Observable<Action>((globalActions) => {\n          const pendingKey = action.meta.addPending;\n          apiFn(action.meta).subscribe((data: Model[]) => {\n            this.actions.deleteSucceeded(action.meta.items, pendingKey, action.meta.pk);\n          }, error => {\n            this.onError(globalActions, error, pendingKey, action.meta.pk)\n          });\n        })));\n    };\n  }\n\n  /**\n   * Create the string used as action.type\n   */\n  type(operation: 'LOAD' | 'UPSERT' | 'Â DELETE', actionSuffix: string): string {\n    return this.actionPrefix + '.' + this.modelName + '::' + operation + (actionSuffix ? '::' + actionSuffix : '')\n  }\n\n  /**\n  * Create the onError logic for standard actions\n  * @param globalActions pass in the subscriber to the action$ stream\n  */\n  onError(globalActions: Subscriber<Action>, error, pendingKey, pkProject) {\n    globalActions.next(this.notifications.addToast({\n      type: 'error',\n      options: { title: error.message }\n    }));\n    this.actions.failed({ status: '' + error.status }, pendingKey, pkProject);\n  }\n}\n","import { ProInfoProjRel, ProInfoProjRelApi } from '@kleiolab/lib-sdk-lb3';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { pathOr } from 'ramda';\nimport { Action } from 'redux';\nimport { ofType } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { ProActions } from '../actions';\nimport { NotificationsAPIActions } from '../../state-gui/actions';\nimport { InfActionFactory } from './inf-action-factory';\nimport { ModifyActionMeta } from './schema-actions-factory';\nimport { SchemaEpicsFactory } from './schema-epics-factory';\n\nexport class InfEpicsFactory<Payload, Model> extends SchemaEpicsFactory<Payload, Model> {\n  constructor(\n    public actionPrefix: string,\n    public modelName: string,\n    public actions: InfActionFactory<Payload, Model>,\n    public notifications: NotificationsAPIActions,\n    public infoProjRelApi: ProInfoProjRelApi,\n    public proActions: ProActions\n  ) {\n    super(actionPrefix, modelName, actions, notifications)\n  }\n\n  /**\n   * This upsert epic overrides the standard upsert.\n   * In addition to the standard, it extends the items to upsert, so that\n   * they are added to the project.\n   */\n  createUpsertEpic<T>(apiFn: (meta: T) => Observable<Model[]>, onSuccessHook?: (data: Model[], pk?) => void) {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(this.actionPrefix + '.' + this.modelName + '::UPSERT'),\n        mergeMap((action: FluxStandardAction<Payload, ModifyActionMeta<Model>>) => new Observable<Action>((globalActions) => {\n          const pendingKey = action.meta.addPending;\n\n          const meta = action.meta as any;\n          // add is_in_project true\n\n          meta.items = meta.items.map(i => ({\n            ...i, entity_version_project_rels: [{\n              ...pathOr({}, ['entity_version_project_rels', 0], i),\n              is_in_project: true,\n            }]\n          }))\n\n          apiFn(meta).subscribe((data: Model[]) => {\n            if (onSuccessHook) {\n              onSuccessHook(data, action.meta.pk);\n              this.actions.succeeded(data, pendingKey, action.meta.pk);\n            }\n            else {\n              this.actions.upsertSucceeded(data, pendingKey, action.meta.pk);\n            }\n          }, error => {\n            globalActions.next(this.notifications.addToast({\n              type: 'error',\n              options: { title: error.message }\n            }));\n            this.actions.failed({ status: '' + error.status }, pendingKey, action.meta.pk);\n          });\n        })));\n    };\n  }\n\n  /**\n   * This epic maps the items to remove in minimalisic instances of\n   * InfoProjRel, containing only the fk_entity and is_in_project=false.\n   * The pk of the project, that removes the items, is transported in meta.pk.\n   */\n  createRemoveEpic() {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(this.actionPrefix + '.' + this.modelName + '::REMOVE'),\n        mergeMap((action: FluxStandardAction<Payload, ModifyActionMeta<Model>>) => new Observable<Action>((globalActions) => {\n          const pendingKey = action.meta.addPending;\n\n          this.infoProjRelApi.bulkUpdateEprAttributes(\n            action.meta.pk,\n            action.meta.items.map((item: any) => ({\n              fk_entity: item.pk_entity,\n              is_in_project: false\n            }))\n          )\n            .subscribe((infoProjRels: ProInfoProjRel[]) => {\n              if (infoProjRels.length) {\n                this.proActions.info_proj_rel.upsertSucceeded(infoProjRels, undefined, action.meta.pk)\n              }\n              this.actions.removeSucceeded(action.meta.items, pendingKey, action.meta.pk)\n            }, error => {\n              globalActions.next(this.notifications.addToast({\n                type: 'error',\n                options: { title: error.message }\n              }));\n              this.actions.failed({ status: '' + error.status }, pendingKey, action.meta.pk)\n            })\n        }))\n\n      )\n    }\n  }\n\n\n\n  /**\n   * This upsert epic overrides the standard upsert.\n   * In addition to the standard, it extends the items to upsert, so that\n   * they are added to the project.\n   */\n  createCustomUpsertEpic<T>(apiFn: (meta: T) => Observable<Model[]>, actionSuffix: string, onSuccessHook?: (data: Model[], pk?) => void) {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(this.actionPrefix + '.' + this.modelName + '::UPSERT' + (actionSuffix ? '::' + actionSuffix : '')),\n        mergeMap((action: FluxStandardAction<Payload, ModifyActionMeta<Model>>) => new Observable<Action>((globalActions) => {\n          const pendingKey = action.meta.addPending;\n          const meta = action.meta as any;\n          apiFn(meta).subscribe((data: Model[]) => {\n            if (onSuccessHook) {\n              onSuccessHook(data, action.meta.pk);\n              this.actions.upsertSucceeded([], pendingKey, action.meta.pk);\n            }\n            else {\n              this.actions.upsertSucceeded(data, pendingKey, action.meta.pk);\n            }\n          }, error => {\n            globalActions.next(this.notifications.addToast({\n              type: 'error',\n              options: { title: error.message }\n            }));\n            this.actions.failed({ status: '' + error.status }, pendingKey, action.meta.pk);\n          });\n        })));\n    };\n  }\n\n}\n","import { composeReducers } from '@angular-redux/form';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { equals, indexBy, keys, omit, values } from 'ramda';\nimport { combineReducers, Reducer } from 'redux';\nimport { LoadPageMeta, LoadPageSucceededMeta, PaginateByParam } from './schema-actions-factory';\n\nexport const PR_ENTITY_MODEL_MAP = 'pkEntityModelMap'\nexport interface EntityModelAndClass<ModelName> {\n  modelName: ModelName,\n  fkClass: number\n}\n\nexport interface ReducerConfigCollection {\n  [key: string]: ReducerConfig\n}\n\nexport interface ReducerConfig {\n  // wraps everything in facette named by facetteByPk and grouped by action.meta.pk\n  facetteByPk?: string,\n  indexBy?: {\n    keyInStore: string;\n    indexByFn: (item) => string;\n  },\n  groupBy?: {\n    keyInStore: string;\n    groupByFn: (item) => string;\n  }[],\n  equals?: (itemA, itemB) => boolean\n}\n\nexport interface Meta<Model> { items: Model[], pk?: number }\n\n\nexport const by = (name: string) => 'by_' + name;\nexport const paginateName = (pagBy: PaginateByParam[]) => pagBy.map(p => Object.keys(p)[0]).join('__');\n\nexport const pag = (name: string) => 'pag_' + name;\nexport const paginatedBy = (name: string) => pag(by(name));\n\nexport const paginateKey = (pagBy: PaginateByParam[]) => pagBy.map(p => values(p)[0]).join('_');\n\nexport function getFromTo(limit: number, offset: number) {\n  return getStart(limit, offset) + '_' + getEnd(limit, offset);\n}\n\nexport function getEnd(limit: number, offset: number) {\n  return getStart(limit, offset) + limit;\n}\n\nexport function getStart(limit: number, offset: number) {\n  return offset;\n}\n\n/**\n * Creates standard reducers for the given model.\n *\n * Adds indexes according to config.\n *\n * S: Interface of the state (slice of store)\n */\nexport class ReducerFactory<Payload, Model> {\n\n  constructor(public actionPrefix: string, public configs: ReducerConfigCollection) { }\n\n  public createReducers() {\n\n    const reducers = {}\n    U.obj2KeyValueArr(this.configs).forEach(x => {\n      reducers[x.key] = this.createModelReducers(x.key, x.value);\n    });\n\n    const entityModelMapReducers = keys(this.configs).map(modelName => this.createEntityModelMapReducers(modelName))\n    reducers[PR_ENTITY_MODEL_MAP] = composeReducers(...entityModelMapReducers)\n\n    return combineReducers(reducers)\n  }\n\n  private createModelReducers(modelName, config: ReducerConfig) {\n    const actionPrefix = this.actionPrefix;\n    const reducer = (state = {}, action: FluxStandardAction<Payload, Meta<Model>>) => {\n\n      const facette = this.facette(modelName, config)\n\n      if (action.type === actionPrefix + '.' + modelName + '::LOAD') {\n\n        state = facette(action, state, (innerState) => ({\n          // TODO refactor this for partial lodings\n          ...omit([by(config.indexBy.keyInStore)], innerState),\n          loading: true\n        }));\n\n      }\n\n\n      else if (action.type === actionPrefix + '.' + modelName + '::LOAD_SUCCEEDED') {\n        // If action state differs from\n        state = facette(action, state, (innerState) => (\n          {\n            ...this.mergeItemsInState(config, innerState, action),\n            loading: false\n          }))\n      }\n\n\n      else if (action.type === actionPrefix + '.' + modelName + '::UPSERT') {\n        state = facette(action, state, (innerState) => ({\n          ...innerState,\n          [this.updatingBy(config.indexBy.keyInStore)]: this.indexKeyObject(action, config)\n        }))\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::UPSERT_SUCCEEDED') {\n        state = facette(action, state, (innerState) => ({\n          ... this.mergeItemsInState(config, innerState, action\n            // , true\n          ),\n          [this.updatingBy(config.indexBy.keyInStore)]:\n            omit(values(this.indexKeyObject(action, config)), innerState[this.updatingBy(config.indexBy.keyInStore)])\n        }))\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::DELETE') {\n        state = facette(action, state, (innerState) => ({\n          ...innerState,\n          [this.deletingBy(config.indexBy.keyInStore)]: this.indexKeyObject(action, config)\n        }));\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::DELETE_SUCCEEDED') {\n\n        const deletingKey = this.deletingBy(config.indexBy.keyInStore)\n        state = facette(action, state, (innerState) => {\n          innerState = {\n            ...this.deleteItemsFromState(config, action, innerState),\n            [deletingKey]: omit(values(this.indexKeyObject(action, config)), innerState[this.deletingBy(config.indexBy.keyInStore)])\n          }\n          if (!Object.keys(innerState[deletingKey]).length) innerState = omit([deletingKey], innerState);\n          return innerState;\n        })\n\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::REMOVE') {\n        state = facette(action, state, (innerState) => ({\n          ...innerState,\n          [this.removingBy(config.indexBy.keyInStore)]: this.indexKeyObject(action, config)\n        }));\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::REMOVE_SUCCEEDED') {\n\n        const removingKey = this.removingBy(config.indexBy.keyInStore)\n        state = facette(action, state, (innerState) => {\n          innerState = {\n            ...this.deleteItemsFromState(config, action, innerState),\n            [removingKey]: omit(values(this.indexKeyObject(action, config)), innerState[this.removingBy(config.indexBy.keyInStore)])\n          }\n          if (!Object.keys(innerState[removingKey]).length) innerState = omit([removingKey], innerState);\n          return innerState;\n        })\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::FAILED') {\n\n        state = facette(action, state, (innerState) => ({\n          ...innerState,\n          ...omit([by(config.indexBy.keyInStore)], innerState),\n          loading: false\n        }));\n\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::LOAD_PAGE') {\n        const meta = action.meta as any as LoadPageMeta;\n        const paginateBy = paginatedBy(paginateName(meta.paginateBy))\n        const key = meta.paginateBy.map(p => values(p)[0]).join('_')\n        const fromTo = getFromTo(meta.limit, meta.offset);\n\n        state = facette(action, state, (innerState) => ({\n          ...innerState,\n          [paginateBy]: {\n            ...innerState[paginateBy],\n            [key]: {\n              ...(innerState[paginateBy] || {})[key],\n              loading: {\n                ...((innerState[paginateBy] || {})[key] || {}).loading,\n                [fromTo]: true\n              }\n            }\n          }\n        }));\n      }\n      else if (action.type === actionPrefix + '.' + modelName + '::LOAD_PAGE_FAILED') {\n        const meta = action.meta as any as LoadPageMeta;\n        const paginateBy = paginatedBy(paginateName(meta.paginateBy))\n        const key = paginateKey(meta.paginateBy)\n        const fromTo = getFromTo(meta.limit, meta.offset);\n\n        state = facette(action, state, (innerState) => ({\n          ...innerState,\n          [paginateBy]: {\n            ...innerState[paginateBy],\n            [key]: {\n              ...(innerState[paginateBy] || {})[key],\n              loading: {\n                ...((innerState[paginateBy] || {})[key] || {}).loading,\n                [fromTo]: false\n              }\n            }\n          }\n        }));\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::LOAD_PAGE_SUCCEEDED') {\n        const meta = action.meta as any as LoadPageSucceededMeta;\n        const paginateBy = paginatedBy(paginateName(meta.paginateBy))\n        const key = paginateKey(meta.paginateBy)\n        const start = getStart(meta.limit, meta.offset);\n        const fromTo = getFromTo(meta.limit, meta.offset);\n        const rows = {}\n        if (meta.pks) {\n          meta.pks.forEach((pk, i) => {\n            rows[start + i] = pk;\n          })\n        }\n        state = facette(action, state, (innerState) => ({\n          ...innerState,\n          [paginateBy]: {\n            ...innerState[paginateBy],\n            [key]: {\n              ...(innerState[paginateBy] || {})[key],\n              count: meta.count || 0,\n              rows: {\n                ...((innerState[paginateBy] || {})[key] || {}).rows,\n                ...rows\n              },\n              loading: {\n                ...((innerState[paginateBy] || {})[key] || {}).loading,\n                [fromTo]: false\n              }\n            }\n          }\n        }));\n\n      }\n\n      return state;\n    };\n\n\n    return reducer;\n  }\n\n  /**\n   * Creates an map for pk_entity -> modelName on the level of the schema:\n   * example:\n   */\n  private createEntityModelMapReducers(modelName): Reducer<unknown, FluxStandardAction<Payload, Meta<Model>>> {\n    const actionPrefix = this.actionPrefix;\n    const reducer = (state = {}, action: FluxStandardAction<Payload, Meta<Model>>) => {\n      const modelPath = actionPrefix + '.' + modelName;\n\n      if (!action || !action.meta || !action.meta.items || !action.meta.items.length) return state;\n      const items = action.meta.items;\n\n      switch (action.type) {\n        case modelPath + '::LOAD_SUCCEEDED':\n        case modelPath + '::UPSERT_SUCCEEDED':\n          const idx = {}\n          for (let i = 0; i < items.length; i++) {\n            const item = items[i] as any;\n            if (item.pk_entity) {\n              idx[item.pk_entity] = {\n                modelName,\n                fkClass: item.fkClass\n              }\n            }\n          }\n          state = {\n            ...state,\n            ...idx\n          }\n          break;\n\n        case modelPath + '::DELETE_SUCCEEDED':\n        case modelPath + '::REMOVE_SUCCEEDED':\n          const pkEntities = []\n          for (let i = 0; i < items.length; i++) {\n            const item = items[i] as any;\n            if (item.pk_entity) {\n              pkEntities.push(item.pk_entity);\n            }\n          }\n          state = omit(pkEntities, state)\n          break;\n\n        default:\n          break;\n      }\n      return state;\n    };\n    return reducer;\n  }\n\n\n  updatingBy = (name: string) => 'updating_' + by(name);\n  deletingBy = (name: string) => 'deleting_' + by(name);\n  removingBy = (name: string) => 'removing_' + by(name);\n\n\n\n  private facette(modelName: any, config: ReducerConfig) {\n    return (action, state, cb: (innerState) => any) => {\n      let outerState;\n      ({ outerState, state } = this.deFacette(modelName, config, action, outerState, state));\n      const innerState = cb(state);\n      return this.enFacette(modelName, config, action, innerState, outerState);\n    };\n  }\n\n  private deFacette(modelName: string, config: ReducerConfig, action: FluxStandardAction<Payload, { items: Model[]; pk?: number; }>, outerState: any, state: {}) {\n    if (this.isFacetteByPk(config, action)) {\n      // outerState = clone(state);\n      const pk = action.meta.pk || 'repo'\n      // state = !state[config.facetteByPk] ? {} : state[config.facetteByPk][pk] || {};\n      const innerState = !state[config.facetteByPk] ? {} : state[config.facetteByPk][pk] || {};\n      return {\n        outerState: state,\n        state: innerState\n      }\n    }\n    return { outerState, state };\n  }\n\n  private enFacette(modelName: string, config: ReducerConfig, action: FluxStandardAction<Payload, { items: Model[]; pk?: number; }>, state: {}, outerState: any) {\n    if (this.isFacetteByPk(config, action)) {\n      const pk = action.meta.pk || 'repo'\n      state = {\n        ...outerState,\n        [config.facetteByPk]: {\n          ...outerState[config.facetteByPk],\n          [pk]: state\n        }\n      };\n    }\n    return state;\n  }\n\n\n  private isFacetteByPk(config: ReducerConfig, action: FluxStandardAction<Payload, { items: Model[]; pk?: number; }>) {\n    if (config.facetteByPk) {\n      if (!action.meta || action.meta.pk === undefined) throw Error('Facette actionÂ must provide pk for facette');\n      else return true;\n    }\n    else return false;\n  }\n\n\n\n  deleteItemsFromState(config: ReducerConfig, action: FluxStandardAction<Payload, { items: Model[]; }>, state) {\n    const items = action.meta.items;\n    // let state = {}\n    const groupBys = !(config.groupBy && config.groupBy.length) ? [] : config.groupBy;\n    const groups = groupBys.map(i => ({\n      groupByKey: by(i.keyInStore),\n      groupByFn: i.groupByFn,\n    }))\n    const mainIndexKey = by(config.indexBy.keyInStore); // first segment e.g. 'by_pk_entity'\n\n    items.forEach((removedItem) => {\n      // get path segments of new item\n      const itemKey = config.indexBy.indexByFn(removedItem); // second segment e.g. '807060'\n\n      // get old item, if exists\n      const oldItem = state[mainIndexKey] ? state[mainIndexKey][itemKey] : undefined;\n\n      // Q: Does the item exists?\n      if (oldItem) {\n        // A: Yes. use old item does exist\n\n        // remove the removedItem at path in main index\n        state = {\n          ...state,\n          [mainIndexKey]: {\n            ...omit([itemKey], state[mainIndexKey]),\n          }\n        }\n\n        // delete the removedItem at path in the group index\n        groups.forEach(g => {\n          const groupKey = this.getGroupKeyOfItem(g.groupByFn, removedItem)\n          state = {\n            ...state,\n            [g.groupByKey]: {\n              ...state[g.groupByKey],\n              [groupKey]: {\n                ...omit([itemKey], (state[g.groupByKey] || {})[groupKey])\n              }\n            }\n          }\n          // // cleanup paginations\n          // state = this.resetPaginationsByGroup(g.groupByKey, state, groupKey);\n\n        })\n      }\n\n\n    })\n\n    // cleanup main index\n    if (Object.keys(state[mainIndexKey]).length < 1) {\n      state = { ...omit([mainIndexKey], state) }\n    }\n    // cleanup group indices\n    groups.forEach(g => {\n\n      // cleanup groups in group index\n      Object.keys(state[g.groupByKey]).forEach(groupKey => {\n\n        if (Object.keys(state[g.groupByKey][groupKey]).length < 1) {\n          state = {\n            ...state,\n            [g.groupByKey]: omit([groupKey], state[g.groupByKey])\n          }\n        }\n      })\n\n      // cleanup group index\n      if (Object.keys(state[g.groupByKey]).length < 1) {\n        state = { ...omit([g.groupByKey], state) }\n      }\n    })\n\n\n    return state;\n  }\n\n  mergeItemsInState(config: ReducerConfig, state, action: FluxStandardAction<Payload, { items: Model[]; }>\n    // , resetPaginations = false\n  ) {\n    const items = action.meta.items;\n    const groupBys = !(config.groupBy && config.groupBy.length) ? [] : config.groupBy;\n    const groups = groupBys.map(i => ({\n      groupByKey: by(i.keyInStore),\n      groupByFn: i.groupByFn,\n    }))\n\n    const mainIndexKey = by(config.indexBy.keyInStore); // first segment e.g. 'by_pk_entity'\n\n    items.forEach((newItem) => {\n      // get path segments of new item\n      const itemKey = config.indexBy.indexByFn(newItem); // second segment e.g. '807060'\n\n      // get old item, if exists\n      const oldItem = state[mainIndexKey] ? state[mainIndexKey][itemKey] : undefined;\n\n      let itemToSet;\n\n      // Q: Does the item exists, and is it deeply-equal to the new item?\n      const equalsFn = config.equals || equals\n      if (oldItem && equalsFn(newItem, oldItem)) {\n        // A: Yes. use old item as itemToSet\n        itemToSet = oldItem;\n      }\n      else {\n        // A: No. use new item as itemToSet\n        itemToSet = newItem;\n\n        // put the itemToSet at path in main index\n        state = {\n          ...state,\n          [mainIndexKey]: {\n            ...state[mainIndexKey],\n            [itemKey]: itemToSet\n          }\n        }\n\n        // iterate over the group indexes\n        groups.forEach(g => {\n          // remove the oldItem from all group indexes\n          const oldGroupKey = this.getGroupKeyOfItem(g.groupByFn, oldItem)\n          state = {\n            ...state,\n            [g.groupByKey]: {\n              ...state[g.groupByKey],\n              [oldGroupKey]: {\n                ...omit([itemKey], (state[g.groupByKey] || {})[oldGroupKey])\n              }\n            }\n          }\n\n          // add the itemToSet to all group indexes, if not undefined\n          const newGroupKey = this.getGroupKeyOfItem(g.groupByFn, itemToSet)\n          if (newGroupKey !== undefined) {\n            state = {\n              ...state,\n              [g.groupByKey]: {\n                ...state[g.groupByKey],\n                [newGroupKey]: {\n                  ...(state[g.groupByKey] || {})[newGroupKey],\n                  [itemKey]: itemToSet\n                }\n              }\n            }\n          }\n\n        })\n      }\n    })\n\n\n    return state;\n  }\n\n\n  // /**\n  //  * resets pagination within a group, e.g. 'pag_by_fk_property'\n  //  * TODO: check if can be deleted\n  //  */\n  // private resetPaginationsByGroup(groupByKey: string, state: any, groupKey: any, isUpsert = false) {\n  //   const paginateBy = pag(groupByKey);\n  //   if (state[paginateBy] && state[paginateBy][groupKey] && state[paginateBy][groupKey].count !== undefined) {\n  //     state = {\n  //       ...state,\n  //       [paginateBy]: {\n  //         ...state[paginateBy],\n  //         [groupKey]: {\n  //           ...state[paginateBy][groupKey],\n  //           ...(!isUpsert ? {} : { count: state[paginateBy][groupKey].count + 1 }),\n  //           rows: {},\n  //           loading: {}\n  //         }\n  //       }\n  //     };\n  //   }\n  //   return state;\n  // }\n\n  /**\n   * Creates object where the key returned by the configured indexByFn\n   */\n  private indexKeyObject(action: FluxStandardAction<Payload, { items: Model[]; }>, config: ReducerConfig) {\n    return indexBy((i) => (i), action.meta.items\n      // filter items that are not (yet) indexable. This is normally the case, when creating new items that have no pk yet.\n      .filter(item => {\n        try {\n          config.indexBy.indexByFn(item);\n          return true;\n        } catch (error) {\n          return false;\n        }\n      })\n      .map(item => config.indexBy.indexByFn(item)));\n  }\n\n  groupBy(items: any[], groupByFn: (item) => string, indexByFn: (item) => string) {\n    const groups = {}\n    items.forEach(item => {\n      // if the group by key is not possible to create, the item won't be added to the index\n      const groupKey = this.getGroupKeyOfItem(groupByFn, item);\n\n      if (groupKey) {\n        const indexKey = indexByFn(item);\n        groups[groupKey] = { ...groups[groupKey], ...{ [indexKey]: item } }\n      }\n    })\n    return groups;\n  }\n\n\n\n\n  private getGroupKeyOfItem(groupByFn: (item: any) => string, item: any): string {\n    let groupKey\n    try {\n      groupKey = groupByFn(item);\n    } catch (error) {\n\n    }\n    return groupKey;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaObjectApi } from '@kleiolab/lib-sdk-lb3';\nimport { GvSchemaObject } from '@kleiolab/lib-sdk-lb4';\nimport { Observable, Subject } from 'rxjs';\nimport { SchemaObject } from '../../root/models/model';\nimport { NotificationsAPIActions } from '../../state-gui/actions';\nimport { DatActions, DfhActions, InfActions, ProActions, SysActions, TabActions, WarActions } from '../actions';\n\n\n@Injectable()\n/**\n * Class to put schema objects into store\n */\nexport class SchemaObjectService {\n\n  constructor(\n    public api: SchemaObjectApi,\n    public infActions: InfActions,\n    public proActions: ProActions,\n    public datActions: DatActions,\n    public warActions: WarActions,\n    public tabActions: TabActions,\n    public dfhActions: DfhActions,\n    public sysActions: SysActions,\n    public notifications: NotificationsAPIActions,\n  ) { }\n\n\n  /**\n   * watches an Observable<SchemaObject>\n   * on success stores the parts of the object at right place of store\n   * on error emits error message\n   *\n   * @param apiCall$\n   * @param pkProject primary key of project or 'ofRepo', if repo versions\n   */\n  store(apiCall$: Observable<SchemaObject>, pkProject: number | 'ofRepo'): Observable<SchemaObject> {\n\n\n    const s$ = new Subject<SchemaObject>()\n    apiCall$.subscribe(\n      result => {\n        this.storeSchemaObject(result, pkProject === 'ofRepo' ? null : pkProject)\n        s$.next(result)\n      },\n      error => {\n        this.notifications.addToast({\n          type: 'error',\n          options: { title: error.message }\n        })\n        s$.error(error)\n      }\n    )\n    return s$\n  }\n\n  /**\n   * watches an Observable<SchemaObject>\n   * on success stores the parts of the object at right place of store\n   * on error emits error message\n   *\n   * @param apiCall$\n   * @param pkProject primary key of project or 'ofRepo', if repo versions\n   */\n  storeGv(apiCall$: Observable<GvSchemaObject>, pkProject: number | 'ofRepo'): Observable<GvSchemaObject> {\n\n    const s$ = new Subject<GvSchemaObject>()\n    apiCall$.subscribe(\n      result => {\n        this.storeSchemaObjectGv(result, pkProject === 'ofRepo' ? null : pkProject)\n        s$.next(result)\n      },\n      error => {\n        this.notifications.addToast({\n          type: 'error',\n          options: { title: error.message }\n        })\n        s$.error(error)\n      }\n    )\n    return s$\n  }\n\n  /**\n   *\n   * @param object\n   * @param pkProject primary key of project or null, if repo versions\n   */\n  storeSchemaObject(object: SchemaObject, pkProject: number | null) {\n    if (object && Object.keys(object).length > 0) {\n      Object.keys(object).forEach(schema => {\n        let actions;\n        if (schema === 'inf') actions = this.infActions;\n        else if (schema === 'pro') actions = this.proActions;\n        else if (schema === 'dat') actions = this.datActions;\n        else if (schema === 'war') actions = this.warActions;\n        if (actions) {\n          Object.keys(object[schema]).forEach(model => {\n            actions[model].loadSucceeded(object[schema][model], undefined, pkProject);\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   *\n   * @param object\n   * @param pkProject primary key of project or null, if repo versions\n   */\n  storeSchemaObjectGv(object: GvSchemaObject, pkProject: number | null) {\n    if (object && Object.keys(object).length > 0) {\n      Object.keys(object).forEach(schema => {\n        let actions;\n        if (schema === 'inf') actions = this.infActions;\n        else if (schema === 'pro') actions = this.proActions;\n        else if (schema === 'dat') actions = this.datActions;\n        else if (schema === 'war') actions = this.warActions;\n        else if (schema === 'tab') actions = this.tabActions;\n        else if (schema === 'dfh') actions = this.dfhActions;\n        else if (schema === 'sys') actions = this.sysActions;\n        if (actions) {\n          Object.keys(object[schema]).forEach(model => {\n            actions[model].loadSucceeded(object[schema][model], undefined, pkProject);\n          });\n        }\n      });\n      // this.extendEntityPreviewStream(object, pkProject);\n      console.warn('!!!!!!!! Need to call this.extendEntityPreviewStream(object, pkProject);')\n    }\n  }\n\n  // /**\n  //  * Adds the entity previews to the streamed entity previews (for ws communication)\n  //  * @param object\n  //  * @param pkProject\n  //  */\n  // private extendEntityPreviewStream(object: GvSchemaObject, pkProject: number) {\n  //   if (object && object.war && object.war.entity_preview && object.war.entity_preview.length) {\n  //     this.entityPreviewSocket.emit('extendStream', {\n  //       pkProject,\n  //       pks: object.war.entity_preview.map(p => p.pk_entity)\n  //     });\n  //   }\n  // }\n}\n","import { Injectable } from '@angular/core';\nimport { DatChunk, DatChunkApi, DatColumn, DatColumnApi, DatDigital, DatDigitalApi, DatNamespace, DatNamespaceApi } from '@kleiolab/lib-sdk-lb3';\nimport { combineEpics, Epic } from 'redux-observable-es6-compat';\nimport { SchemaObject } from '../../root/models';\nimport { ChunkActionsFactory, ColumnActionsFactory, DatActions, DigitalActionsFactory, InfActions, LoadChunksOfDigitalAction, LoadColumnsOfTableAction, ProActions } from '../actions';\nimport { ChunkSlice, ColumnSlice, DigitalSlice, NamespaceSlice } from '../models';\nimport { NotificationsAPIActions } from '../../state-gui/actions';\nimport { datRoot } from '../reducer-configs';\nimport { Flattener, LoadActionMeta, ModifyActionMeta, SchemaEpicsFactory, SchemaObjectService, storeFlattened, LoadVersionAction } from '../_helpers';\n\n\n@Injectable()\nexport class DatEpics {\n  constructor(\n    public notification: NotificationsAPIActions,\n    public datActions: DatActions,\n    public infActions: InfActions,\n    public proActions: ProActions,\n    public digitalApi: DatDigitalApi,\n    public chunkApi: DatChunkApi,\n    public columnApi: DatColumnApi,\n    public namespaceApi: DatNamespaceApi,\n    private schemaObjectService: SchemaObjectService\n  ) { }\n\n  public createEpics(): Epic {\n    const digitalEpicsFactory = new SchemaEpicsFactory<DigitalSlice, DatDigital>\n      (datRoot, 'digital', this.datActions.digital, this.notification);\n\n    const chunkEpicsFactory = new SchemaEpicsFactory<ChunkSlice, DatChunk>\n      (datRoot, 'chunk', this.datActions.chunk, this.notification);\n\n    const namespaceEpicsFactory = new SchemaEpicsFactory<NamespaceSlice, DatNamespace>\n      (datRoot, 'namespace', this.datActions.namespace, this.notification);\n\n    const columnEpicsFactory = new SchemaEpicsFactory<ColumnSlice, DatColumn>\n      (datRoot, 'column', this.datActions.column, this.notification);\n\n    return combineEpics(\n\n      // Digital\n      digitalEpicsFactory.createLoadEpic<LoadVersionAction>(\n        (meta) => this.digitalApi.getVersion(meta.pkEntity, meta.entityVersion ? meta.entityVersion : null),\n        DigitalActionsFactory.LOAD_VERSION\n      ),\n      digitalEpicsFactory.createUpsertEpic<ModifyActionMeta<DatDigital>>(\n        (meta) => this.digitalApi.bulkUpsert(meta.pk, meta.items)\n      ),\n      digitalEpicsFactory.createDeleteEpic(\n        (meta) => this.digitalApi.bulkDelete(meta.items.map(item => item.pk_entity))\n      ),\n\n      // Chunk\n      chunkEpicsFactory.createLoadEpic<LoadChunksOfDigitalAction>(\n        (meta) => this.chunkApi.ofDigital(meta.pk, meta.pkDigital),\n        ChunkActionsFactory.CHUNKS_OF_DIGITAL,\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.chunk.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk);\n        }\n      ),\n\n      // Namespace\n      namespaceEpicsFactory.createLoadEpic<LoadActionMeta>(\n        (meta) => this.namespaceApi.byProject(meta.pk), ''\n      ),\n\n      columnEpicsFactory.createLoadEpic<LoadColumnsOfTableAction>(\n        (meta) => this.columnApi.ofDigital(meta.pk, meta.pkDigital),\n        ColumnActionsFactory.COLUMNS_OF_TABLE,\n        (results, pk) => {\n          const schemaObject = results as SchemaObject;\n\n          this.schemaObjectService.storeSchemaObject(schemaObject, pk)\n        }\n      ),\n\n    )\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { DfhLabel, DfhLabelApi, DfhProfile, DfhProfileApi } from '@kleiolab/lib-sdk-lb3';\nimport { DfhClass, DfhClassControllerService, DfhProperty, DfhPropertyControllerService } from '@kleiolab/lib-sdk-lb4/public-api';\nimport { combineEpics, Epic } from 'redux-observable-es6-compat';\nimport { DfhActions, DfhClassActionFactory, DfhLabelActionFactory, DfhProfileActionFactory, DfhPropertyActionFactory } from '../actions';\nimport { DfhClassSlice, DfhLabelSlice, DfhProfileSlice, DfhPropertySlice } from '../models';\nimport { NotificationsAPIActions } from '../../state-gui/actions';\nimport { LoadActionMeta, SchemaEpicsFactory } from '../_helpers';\n\n\n@Injectable()\nexport class DfhEpics {\n  constructor(\n    private actions: DfhActions,\n    private notification: NotificationsAPIActions,\n    private profileApi: DfhProfileApi,\n    private classApi: DfhClassControllerService,\n    private propertyApi: DfhPropertyControllerService,\n    private labelApi: DfhLabelApi,\n  ) { }\n\n  public createEpics(): Epic {\n    const dfhProfileEpicsFactory = new SchemaEpicsFactory<DfhProfileSlice, DfhProfile>('dfh', 'profile', this.actions.profile, this.notification);\n    const dfhClassEpicsFactory = new SchemaEpicsFactory<DfhClassSlice, DfhClass>('dfh', 'klass', this.actions.klass, this.notification);\n    const dfhLabelEpicsFactory = new SchemaEpicsFactory<DfhLabelSlice, DfhLabel>('dfh', 'label', this.actions.label, this.notification);\n    const dfhPropertyEpicsFactory = new SchemaEpicsFactory<DfhPropertySlice, DfhProperty>('dfh', 'property', this.actions.property, this.notification);\n\n    return combineEpics(\n      // Profile Loaders\n      dfhProfileEpicsFactory.createLoadEpic<LoadActionMeta>((meta) => this.profileApi.ofProject(meta.pk),\n        DfhProfileActionFactory.OF_PROJECT\n      ),\n      // Property Loaders\n      dfhPropertyEpicsFactory.createLoadEpic<LoadActionMeta>((meta) => this.propertyApi.dfhPropertyControllerOfProject(meta.pk),\n        DfhPropertyActionFactory.OF_PROJECT\n      ),\n      // Class Loaders\n      dfhClassEpicsFactory.createLoadEpic<LoadActionMeta>((meta) => this.classApi.dfhClassControllerOfProject(meta.pk),\n        DfhClassActionFactory.OF_PROJECT\n      ),\n      // Label Loaders\n      dfhLabelEpicsFactory.createLoadEpic<LoadActionMeta>((meta) => this.labelApi.ofProject(meta.pk),\n        DfhLabelActionFactory.OF_PROJECT\n      )\n    )\n\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfPersistentItem, InfPersistentItemApi, InfStatement, InfStatementApi, InfTemporalEntity, InfTemporalEntityApi, InfTextProperty, InfTextPropertyApi, ProInfoProjRelApi } from '@kleiolab/lib-sdk-lb3';\nimport { combineEpics, Epic, ofType } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { SchemaObject } from '../../root/models';\nimport { DatActions, FindStatementByParams, InfActions, InfPersistentItemActionFactory, InfStatementActionFactory, InfTemporalEntityActionFactory, InfTextPropertyActionFactory, LoadAlternativeTextProperties, LoadByPkMeta, LoadIngoingAlternativeStatements, LoadPaginatedStatementListMeta, PaginatedStatementList, ProActions, SourcesAndDigitalsOfEntity, SourcesAndDigitalsOfEntityResult } from '../actions';\nimport { InfPersistentItemSlice, InfStatementSlice, InfTemporalEntitySlice, InfTextPropertySlice } from '../models';\nimport { NotificationsAPIActions } from '../../state-gui/actions';\nimport { infRoot } from '../reducer-configs';\nimport { Flattener, FluxActionObservable, InfEpicsFactory, ModifyActionMeta, PaginateByParam, SchemaObjectService, storeFlattened } from '../_helpers';\nimport { Action } from 'redux';\n\n@Injectable()\nexport class InfEpics {\n  constructor(\n    public notification: NotificationsAPIActions,\n    public peItApi: InfPersistentItemApi,\n    public teEnApi: InfTemporalEntityApi,\n    public statementApi: InfStatementApi,\n    public textPropertyApi: InfTextPropertyApi,\n    public infActions: InfActions,\n    public proActions: ProActions,\n    public datActions: DatActions,\n    public infoProjRelApi: ProInfoProjRelApi,\n    private schemaObjectService: SchemaObjectService\n  ) { }\n\n  public createEpics(): Epic {\n    const infPersistentItemEpicsFactory = new InfEpicsFactory<InfPersistentItemSlice, InfPersistentItem>\n      (infRoot, 'persistent_item', this.infActions.persistent_item, this.notification, this.infoProjRelApi, this.proActions);\n\n    const infTemporalEntityEpicsFactory = new InfEpicsFactory<InfTemporalEntitySlice, InfTemporalEntity>\n      (infRoot, 'temporal_entity', this.infActions.temporal_entity, this.notification, this.infoProjRelApi, this.proActions);\n\n    const infStatementEpicsFactory = new InfEpicsFactory<InfStatementSlice, InfStatement>\n      (infRoot, 'statement', this.infActions.statement, this.notification, this.infoProjRelApi, this.proActions);\n\n    const infTextPropertyEpicsFactory = new InfEpicsFactory<InfTextPropertySlice, InfTextProperty>\n      (infRoot, 'text_property', this.infActions.text_property, this.notification, this.infoProjRelApi, this.proActions);\n\n    return combineEpics(\n      /**\n       * Perstistent Item\n       *\n       */\n      infPersistentItemEpicsFactory.createLoadEpic<LoadByPkMeta>(\n        (meta) => this.peItApi.ownProperties(meta.pk, meta.pkEntity),\n        InfPersistentItemActionFactory.MINIMAL_BY_PK,\n        (results, pk) => {\n          const schemas = results as any as SchemaObject;\n          // call action to store records\n          Object.keys(schemas).forEach(schema => {\n            let actions;\n            if (schema === 'inf') actions = this.infActions;\n            else if (schema === 'pro') actions = this.proActions;\n            if (actions) {\n              Object.keys(schemas[schema]).forEach(model => {\n                actions[model].loadSucceeded(schemas[schema][model], undefined, pk)\n              })\n            }\n          })\n        }\n      ),\n      infPersistentItemEpicsFactory.createLoadEpic<LoadByPkMeta>(\n        (meta) => this.peItApi.typesOfProject(meta.pk),\n        InfPersistentItemActionFactory.TYPES_OF_PROJECT,\n        (results, pk) => {\n          const schemaObject = results as SchemaObject;\n          this.schemaObjectService.storeSchemaObject(schemaObject, pk)\n        }\n      ),\n      // infPersistentItemEpicsFactory.createLoadEpic<LoadTypeOfProjectAction>(\n      //   (meta) => this.peItApi.typeOfProject(meta.pk, meta.pkEntity),\n      //   InfPersistentItemActionFactory.TYPE_OF_PROJECT,\n      //   (results, pk) => {\n      //     const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n      //     flattener.persistent_item.flatten(results);\n      //     storeFlattened(flattener.getFlattened(), pk);\n      //   }\n      // ),\n      infPersistentItemEpicsFactory.createUpsertEpic<ModifyActionMeta<InfPersistentItem>>((meta) => this.peItApi\n        .findOrCreateInfPersistentItems(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.persistent_item.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n      infPersistentItemEpicsFactory.createRemoveEpic(),\n\n\n      /**\n       * Temporal Entity\n       *\n       */\n      infTemporalEntityEpicsFactory.createLoadEpic<LoadByPkMeta>(\n        (meta) => this.teEnApi.ownProperties(meta.pk, meta.pkEntity),\n        InfTemporalEntityActionFactory.OWN_PROPERTIES,\n        (results, pk) => {\n          const schemaObject = results as SchemaObject;\n          this.schemaObjectService.storeSchemaObject(schemaObject, pk)\n        }\n      ),\n      /**\n       * Epic to load paginated Temporal Entity List\n       */\n      (action$: FluxActionObservable<any, LoadPaginatedStatementListMeta>, store) => action$.pipe(\n        ofType(infTemporalEntityEpicsFactory.type('LOAD', InfTemporalEntityActionFactory.PAGINATED_LIST)),\n        mergeMap(action => new Observable<Action>((globalActions) => {\n          const meta = action.meta;\n          const apiCal$ = this.teEnApi.temporalEntityList(\n            meta.pk, meta.pkSourceEntity, meta.pkProperty, meta.fkTargetClass, meta.isOutgoing, meta.limit, meta.offset\n          )\n          const pkProject = meta.pk;\n          this.handleTemporalEntityListAction(action, infTemporalEntityEpicsFactory, globalActions, apiCal$, pkProject);\n        }))\n      ),\n      /**\n       * Epic to load paginated Alternative Temporal Entity List\n       */\n      (action$: FluxActionObservable<any, LoadPaginatedStatementListMeta>, store) => action$.pipe(\n        ofType(infTemporalEntityEpicsFactory.type('LOAD', InfTemporalEntityActionFactory.PAGINATED_ALTERNATIVE_LIST)),\n        mergeMap(action => new Observable<Action>((globalActions) => {\n          const meta = action.meta;\n          const apiCal$ = this.teEnApi.alternativeTemporalEntityList(\n            meta.pk, meta.pkSourceEntity, meta.pkProperty, meta.fkTargetClass, meta.isOutgoing, meta.limit, meta.offset\n          )\n          const pkProject = null;\n          this.handleTemporalEntityListAction(action, infTemporalEntityEpicsFactory, globalActions, apiCal$, pkProject);\n        }))\n      ),\n      infTemporalEntityEpicsFactory.createUpsertEpic<ModifyActionMeta<InfTemporalEntity>>((meta) => this.teEnApi\n        .findOrCreateInfTemporalEntities(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.temporal_entity.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n      infTemporalEntityEpicsFactory.createRemoveEpic(),\n\n\n      /**\n       * Statement\n       *\n       */\n      infStatementEpicsFactory.createLoadEpic<LoadIngoingAlternativeStatements>(\n        (meta) => this.statementApi.alternativesNotInProjectByEntityPk(meta.pkEntity, meta.pkProperty, meta.pk),\n        InfStatementActionFactory.ALTERNATIVES_INGOING,\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.statement.flatten(results);\n          storeFlattened(flattener.getFlattened(), null);\n        }\n      ),\n      infStatementEpicsFactory.createUpsertEpic<ModifyActionMeta<InfStatement>>((meta) => this.statementApi\n        .findOrCreateInfStatements(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.statement.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n\n      (action$: FluxActionObservable<any, LoadPaginatedStatementListMeta>, store) => action$.pipe(\n        ofType(infStatementEpicsFactory.type('LOAD', InfTemporalEntityActionFactory.PAGINATED_LIST)),\n        mergeMap(action => new Observable<Action>((globalActions) => {\n          const meta = action.meta;\n          const apiCal$ = this.statementApi.paginatedListTargetingEntityPreviews(\n            meta.pk, meta.pkSourceEntity, meta.pkProperty, meta.fkTargetClass, meta.isOutgoing, meta.limit, meta.offset\n          )\n          const pkProject = meta.pk;\n          this.handleTemporalEntityListAction(action, infStatementEpicsFactory, globalActions, apiCal$, pkProject);\n        }))\n      ),\n\n      infStatementEpicsFactory.createRemoveEpic(),\n\n\n      infStatementEpicsFactory.createLoadEpic<FindStatementByParams>(\n        (meta) => this.statementApi.queryByParams(meta.ofProject, meta.pk, meta.pkEntity, meta.pkInfoRange, meta.pkInfoDomain, meta.pkProperty),\n        InfStatementActionFactory.BY_PARAMS,\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.statement.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'LOAD');\n        }\n      ),\n\n      infStatementEpicsFactory.createLoadEpic<SourcesAndDigitalsOfEntity>(\n        (meta) => this.statementApi.sourcesAndDigitalsOfEntity(meta.ofProject, meta.pk, meta.pkEntity),\n        InfStatementActionFactory.SOURCES_AND_DIGITALS_OF_ENTITY,\n        (results, pk) => {\n          const res = results as any as SourcesAndDigitalsOfEntityResult;\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.statement.flatten(res.statements);\n          storeFlattened(flattener.getFlattened(), pk);\n\n          const flattener2 = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener2.digital.flatten(res.digitals);\n          storeFlattened(flattener2.getFlattened(), pk);\n\n        }\n      ),\n\n\n\n      /**\n       * Text Property\n       *\n       */\n      infTextPropertyEpicsFactory.createLoadEpic<LoadAlternativeTextProperties>((meta) => this.textPropertyApi\n        .findAlternativeTextProperties(meta.pk, meta.fkEntity, meta.fkClassField),\n        InfTextPropertyActionFactory.ALTERNATIVES,\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.text_property.flatten(results);\n          storeFlattened(flattener.getFlattened(), null);\n        }\n      ),\n\n      infTextPropertyEpicsFactory.createUpsertEpic<ModifyActionMeta<InfTextProperty>>((meta) => this.textPropertyApi\n        .findOrCreateInfTextProperties(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.text_property.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk);\n        }\n      ),\n      infTextPropertyEpicsFactory.createRemoveEpic(),\n\n    );\n  }\n\n\n  /**\n   * handles the update of store for paginated temporal entity lists.\n   * @param pkProject if null, list is handled as 'repo' list\n   */\n  private handleTemporalEntityListAction<M>(\n    action,\n    epicsFactory: InfEpicsFactory<InfTemporalEntitySlice, InfTemporalEntity> | InfEpicsFactory<InfStatementSlice, InfStatement>,\n    globalActions,\n    apiCall$: Observable<any>,\n    pkProject) {\n    const meta: LoadPaginatedStatementListMeta = action.meta;\n    const pendingKey = meta.addPending;\n    const paginateBy: PaginateByParam[] = [\n      { fk_property: meta.pkProperty },\n      { fk_target_class: meta.fkTargetClass },\n      { [meta.isOutgoing ? 'fk_subject_info' : 'fk_object_info']: meta.pkSourceEntity },\n      { [meta.alternatives ? 'alternatives' : 'ofProject']: meta.alternatives }\n    ];\n    // call action to set pagination loading on true\n    this.infActions.statement.loadPage(paginateBy, meta.limit, meta.offset, pkProject);\n    // call api to load data\n    apiCall$.subscribe((data: PaginatedStatementList) => {\n      // call action to store records\n      this.schemaObjectService.storeSchemaObject(data.schemas, pkProject);\n      // call action to store pagination\n      this.infActions.statement.loadPageSucceeded(data.paginatedStatements, data.count, paginateBy, meta.limit, meta.offset, pkProject);\n      // call action to conclude the pending request\n      epicsFactory.actions.loadSucceeded([], pendingKey, pkProject);\n    }, error => {\n      // call action to handle error\n      epicsFactory.onError(globalActions, error, pendingKey, pkProject);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ProClassFieldConfig, ProClassFieldConfigApi, ProDfhClassProjRel, ProDfhClassProjRelApi, ProDfhProfileProjRel, ProDfhProfileProjRelApi, ProInfoProjRel, ProInfoProjRelApi, ProProject, ProProjectApi, ProTextProperty, ProTextPropertyApi } from '@kleiolab/lib-sdk-lb3';\nimport { AnalysisService, ProAnalysis } from '@kleiolab/lib-sdk-lb4/public-api';\nimport { combineEpics, Epic } from 'redux-observable-es6-compat';\nimport { SchemaObject } from '../../root/models';\nimport { DatActions, InfActions, MarkStatementAsFavoriteActionMeta, ProActions, ProClassFieldConfigActionFactory, ProDfhClassProjRelActionFactory, ProDfhProfileProjRelActionFactory, ProInfoProjRelActionFactory, ProProjectActionFactory, ProTextPropertyActionFactory } from '../actions';\nimport { ProAnalysisSlice, ProClassFieldConfigSlice, ProDfhClassProjRelSlice, ProDfhProfileProjRelSlice, ProInfoProjRelSlice, ProProjectSlice, ProTextPropertySlice } from '../models';\nimport { NotificationsAPIActions } from '../../state-gui/actions';\nimport { proRoot } from '../reducer-configs';\nimport { Flattener, LoadActionMeta, ModifyActionMeta, SchemaEpicsFactory, SchemaObjectService, storeFlattened } from '../_helpers';\n\n\n\n@Injectable()\nexport class ProEpics {\n  constructor(\n    public notification: NotificationsAPIActions,\n    public infActions: InfActions,\n    public proActions: ProActions,\n    public datActions: DatActions,\n    public projectApi: ProProjectApi,\n    public infoProjRelApi: ProInfoProjRelApi,\n    public classProjRelApi: ProDfhClassProjRelApi,\n    public profileProjRelApi: ProDfhProfileProjRelApi,\n    public classFieldConfApi: ProClassFieldConfigApi,\n    public textPropertyApi: ProTextPropertyApi,\n    public analysisApi: AnalysisService,\n    private schemaObjectService: SchemaObjectService\n  ) { }\n\n  public createEpics(): Epic {\n    const proProjectEpicsFactory = new SchemaEpicsFactory<ProProjectSlice, ProProject>\n      (proRoot, 'project', this.proActions.project, this.notification);\n\n    const proInfoProjRelEpicsFactory = new SchemaEpicsFactory<ProInfoProjRelSlice, ProInfoProjRel>\n      (proRoot, 'info_proj_rel', this.proActions.info_proj_rel, this.notification);\n\n    const proDfhClassProjRelEpicsFactory = new SchemaEpicsFactory<ProDfhClassProjRelSlice, ProDfhClassProjRel>\n      (proRoot, 'dfh_class_proj_rel', this.proActions.dfh_class_proj_rel, this.notification);\n\n    const proDfhProfileProjRelEpicsFactory = new SchemaEpicsFactory<ProDfhProfileProjRelSlice, ProDfhProfileProjRel>\n      (proRoot, 'dfh_profile_proj_rel', this.proActions.dfh_profile_proj_rel, this.notification);\n\n    const proClassFieldConfigEpicsFactory = new SchemaEpicsFactory<ProClassFieldConfigSlice, ProClassFieldConfig>\n      (proRoot, 'class_field_config', this.proActions.class_field_config, this.notification);\n\n    const proTextPropertyEpicsFactory = new SchemaEpicsFactory<ProTextPropertySlice, ProTextProperty>\n      (proRoot, 'text_property', this.proActions.text_property, this.notification);\n\n    const proAnalysisEpicsFactory = new SchemaEpicsFactory<ProAnalysisSlice, ProAnalysis>\n      (proRoot, 'analysis', this.proActions.analysis, this.notification);\n\n\n\n    return combineEpics(\n      /**\n      * ProProject\n      */\n      proProjectEpicsFactory.createLoadEpic<LoadActionMeta>((meta) => this.projectApi\n        .ofAccount(meta.pk),\n        ProProjectActionFactory.OF_ACCOUNT,\n        (results) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_project.flatten(results);\n          storeFlattened(flattener.getFlattened());\n        }\n      ),\n      proProjectEpicsFactory.createLoadEpic<LoadActionMeta>((meta) => this.projectApi\n        .getBasics(meta.pk),\n        ProProjectActionFactory.LOAD_BASICS,\n        (results) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_project.flatten(results);\n          storeFlattened(flattener.getFlattened());\n        }\n      ),\n      /**\n       * ProInfoProjRel\n       */\n      proInfoProjRelEpicsFactory.createUpsertEpic<ModifyActionMeta<ProInfoProjRel>>((meta) => this.infoProjRelApi\n        .bulkUpdateEprAttributes(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.info_proj_rel.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n      proInfoProjRelEpicsFactory.createLoadEpic<MarkStatementAsFavoriteActionMeta>((meta) => this.infoProjRelApi\n        .markStatementAsFavorite(meta.pk, meta.pkStatement, meta.isOutgoing),\n        ProInfoProjRelActionFactory.MARK_ROLE_AS_FAVORITE,\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.info_proj_rel.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n      /**\n       * ProClassFieldConfig\n       */\n      proClassFieldConfigEpicsFactory.createLoadEpic<LoadActionMeta>(\n        (meta) => this.classFieldConfApi.ofProject(meta.pk),\n        ProClassFieldConfigActionFactory.OF_PROJECT,\n        (results) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_class_field_config.flatten(results);\n          storeFlattened(flattener.getFlattened());\n        }\n      ),\n      proClassFieldConfigEpicsFactory.createUpsertEpic<ModifyActionMeta<ProClassFieldConfig>>((meta) => this.classFieldConfApi\n        .bulkUpsert(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_class_field_config.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n      /**\n       * ProProDfhClassProjRel\n       */\n      proDfhClassProjRelEpicsFactory.createLoadEpic<LoadActionMeta>(\n        (meta) => this.classProjRelApi.ofProject(meta.pk),\n        ProDfhClassProjRelActionFactory.OF_PROJECT,\n        (results) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_dfh_class_proj_rel.flatten(results);\n          storeFlattened(flattener.getFlattened());\n        }\n      ),\n      proDfhClassProjRelEpicsFactory.createUpsertEpic<ModifyActionMeta<ProDfhClassProjRel>>((meta) => this.classProjRelApi\n        .bulkUpsert(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_dfh_class_proj_rel.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n      /**\n      * ProDfhProfileProjRel\n      */\n      proDfhProfileProjRelEpicsFactory.createLoadEpic<LoadActionMeta>(\n        (meta) => this.profileProjRelApi.ofProject(meta.pk),\n        ProDfhProfileProjRelActionFactory.OF_PROJECT,\n        (results) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_dfh_profile_proj_rel.flatten(results);\n          storeFlattened(flattener.getFlattened());\n        }\n      ),\n      proDfhProfileProjRelEpicsFactory.createUpsertEpic<ModifyActionMeta<ProDfhProfileProjRel>>((meta) => this.profileProjRelApi\n        .bulkUpsert(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_dfh_profile_proj_rel.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n      /**\n      * ProTextProperty\n      */\n      proTextPropertyEpicsFactory.createLoadEpic<LoadActionMeta>(\n        (meta) => this.textPropertyApi.ofProject(meta.pk),\n        ProTextPropertyActionFactory.OF_PROJECT,\n        (results, pk) => {\n          const schemas = results as any as SchemaObject;\n          this.schemaObjectService.storeSchemaObject(schemas, pk)\n        }\n      ),\n      proTextPropertyEpicsFactory.createUpsertEpic<ModifyActionMeta<ProTextProperty>>((meta) => this.textPropertyApi\n        .bulkUpsert(meta.pk, meta.items),\n        (results, pk) => {\n          const schemas = results as any as SchemaObject;\n          this.schemaObjectService.storeSchemaObject(schemas, pk)\n        }\n      ),\n      proTextPropertyEpicsFactory.createDeleteEpic((meta) => this.textPropertyApi.bulkDelete(meta.pk, meta.items)),\n      /**\n      * ProAnalysis\n      */\n      // proAnalysisEpicsFactory.createLoadEpic<LoadByPkANsVersionActionMeta>(\n      //   (meta) => this.analysisApi.analysisControllerGetVersion(meta.pk, meta.pkEntity, meta.version).pipe(map(x => [x])),\n      //   ProAnalysisActionFactory.BY_PK_AND_VERSION,\n      //   (results) => {\n      //     const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n      //     flattener.analysis.flatten(results);\n      //     storeFlattened(flattener.getFlattened());\n      //   }\n      // ),\n      // proAnalysisEpicsFactory.createUpsertEpic<ModifyActionMeta<ProAnalysis>>(\n      //   (meta) => this.analysisApi.analysisControllerBulkUpsert(meta.pk, meta.items),\n      //   (results, pk) => {\n      //     const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n      //     flattener.analysis.flatten(results);\n      //     storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n      //   }\n      // ),\n      proAnalysisEpicsFactory.createDeleteEpic(\n        (meta) => this.analysisApi.analysisControllerBulkDelete(meta.pk, meta.items.map(item => item.pk_entity)),\n      ),\n    )\n  }\n  // private storeSchemaObject(schemas: SchemaObject, pkProject) {\n  //   if (schemas && Object.keys(schemas).length > 0) {\n  //     Object.keys(schemas).forEach(schema => {\n  //       let actions;\n  //       if (schema === 'inf') actions = this.infActions;\n  //       else if (schema === 'pro') actions = this.proActions;\n  //       if (actions) {\n  //         Object.keys(schemas[schema]).forEach(model => {\n  //           actions[model].loadSucceeded(schemas[schema][model], undefined, pkProject);\n  //         });\n  //       }\n  //     });\n  //   }\n  // }\n\n}\n","import { Injectable } from '@angular/core';\nimport { SysSystemRelevantClass, SysSystemRelevantClassApi } from '@kleiolab/lib-sdk-lb3';\nimport { SysConfigValue, SystemConfigurationService } from '@kleiolab/lib-sdk-lb4/public-api';\nimport { combineEpics, Epic } from 'redux-observable-es6-compat';\nimport { map } from 'rxjs/operators';\nimport { SysActions } from '../actions';\nimport { SysConfigSlice, SysRelevantClassSlice } from '../models';\nimport { NotificationsAPIActions } from '../../state-gui/actions';\nimport { sysRoot } from '../reducer-configs';\nimport { ModifyActionMeta, SchemaEpicsFactory } from '../_helpers';\n\n\n@Injectable()\nexport class SysEpics {\n  constructor(\n    private actions: SysActions,\n    private notification: NotificationsAPIActions,\n    private sysRelevantClassApi: SysSystemRelevantClassApi,\n    // private sysAnalysisTypeApi: SysAnalysisTypeApi,\n    private sysConfigApi: SystemConfigurationService\n  ) { }\n\n  public createEpics(): Epic {\n    const systemRelevantClassEpicsFactory = new SchemaEpicsFactory<SysRelevantClassSlice, SysSystemRelevantClass>\n      (sysRoot, 'system_relevant_class', this.actions.system_relevant_class, this.notification);\n\n    // const analysisTypeEpicsFactory = new StandardEpicsFactory<SysRelevantClassSlice, SysAnalysisType>\n    //   (sysRoot, 'analysis_type', this.actions.analysis_type, this.notification);\n\n    const configEpicsFactory = new SchemaEpicsFactory<SysConfigSlice, SysConfigValue>\n      (sysRoot, 'config', this.actions.config, this.notification);\n\n\n\n    return combineEpics(\n\n      // SystemRelevantClass Epics\n      systemRelevantClassEpicsFactory.createLoadEpic((action) => this.sysRelevantClassApi.find(), ''),\n      systemRelevantClassEpicsFactory.createUpsertEpic<ModifyActionMeta<SysSystemRelevantClass>>((meta) => this.sysRelevantClassApi.bulkReplaceOrCreate(meta.items)),\n\n      // analysisTypeEpicsFactory.createLoadEpic(() => this.sysAnalysisTypeApi.find(), ''),\n\n      configEpicsFactory.createLoadEpic(\n        () => this.sysConfigApi.sysConfigControllerGetSystemConfig().pipe(map(x => [x])),\n        '')\n    );\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { combineEpics, Epic } from 'redux-observable-es6-compat';\n\n\n\n@Injectable()\nexport class TabEpics {\n  constructor() { }\n  public createEpics(): Epic {\n    return combineEpics()\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { combineEpics, Epic } from 'redux-observable-es6-compat';\n\n\n\n@Injectable()\nexport class WarEpics {\n  constructor() { }\n\n  public createEpics(): Epic {\n    return combineEpics()\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Action } from 'redux';\nimport { ActionsObservable, combineEpics, Epic, StateObservable } from 'redux-observable-es6-compat';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { AccountEpics, ActiveProjectEpics, LoadingBarEpics, NotificationsAPIEpics } from '../state-gui/epics';\nimport { DatEpics, DfhEpics, InfEpics, ProEpics, SysEpics } from '../state-schema/epics';\nimport { ActionResolverEpics } from '../state-schema/_helpers';\nimport { IAppState } from './models';\n\n@Injectable()\nexport class RootEpics {\n\n  private rootEpicStream$;\n  private rootEpic;\n\n  constructor(\n    private loadingBarEpics: LoadingBarEpics,\n    private notificationEpics: NotificationsAPIEpics,\n    private activeProjectEpics: ActiveProjectEpics,\n    private accountEpics: AccountEpics,\n    private systemEpics: SysEpics,\n    private dfhEpics: DfhEpics,\n    private infEpics: InfEpics,\n    private datEpics: DatEpics,\n    private proEpics: ProEpics,\n    private actionResolver: ActionResolverEpics\n  ) {\n\n    this.rootEpicStream$ = new BehaviorSubject(combineEpics(\n      this.loadingBarEpics.createEpics(),\n      this.notificationEpics.createEpics(),\n      this.systemEpics.createEpics(),\n      this.activeProjectEpics.createEpics(),\n      this.accountEpics.createEpics(),\n      this.dfhEpics.createEpics(),\n      this.infEpics.createEpics(),\n      this.datEpics.createEpics(),\n      this.proEpics.createEpics(),\n      // important: this needs to be the last epic in\n      this.actionResolver.createEpics()\n    ));\n\n    this.rootEpic = (\n      action$: ActionsObservable<Action>,\n      state$: StateObservable<IAppState>,\n      dependencies = undefined\n    ): Observable<Action> => {\n      return this.rootEpicStream$.pipe(\n        mergeMap((epic: Epic) => epic(action$, state$, dependencies))\n      );\n    }\n  }\n\n  public getRootEpic(): Epic<Action<any>, Action<any>, void, any> {\n    return this.rootEpic;\n  }\n\n  /**\n   * Adds an epic to the RootEpic middleware\n   * @param epic that will be added to the RootEpics\n   */\n  public addEpic(epic: Epic<Action<any>, Action<any>, void, any>) {\n    this.rootEpicStream$.next(epic);\n  }\n}\n","import { AccountAction, AccountActions } from '../actions';\nimport { IAccount } from '../models';\n\nconst INITIAL_STATE: IAccount = {\n  account: undefined,\n  roles: undefined\n};\n\nexport const accountRootReducer = (lastState: IAccount = INITIAL_STATE, action: AccountAction): IAccount => {\n  switch (action.type) {\n    case AccountActions.LOGIN_SUCCEEDED:\n      lastState = {\n        ...lastState,\n        account: action.meta.account\n      };\n      break;\n\n\n    case AccountActions.ACCOUNT_UPDATED:\n      lastState = {\n        ...lastState,\n        account: action.meta.account\n      };\n      break;\n\n    case AccountActions.LOAD_ROLES_SUCCEEDED:\n      lastState = {\n        ...lastState,\n        roles: action.meta.accountRoles\n      };\n      break;\n\n    case AccountActions.LOAD_ROLES_FAILED:\n      lastState = {\n        ...lastState,\n        roles: []\n      };\n      break;\n\n\n\n  }\n  return lastState;\n}\n\n","import { moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { omit } from 'ramda';\nimport { ActiveProjectAction, ActiveProjectActions } from '../actions';\nimport { ProjectDetail } from '../models';\n\nconst INITIAL_STATE: ProjectDetail = {\n  label: '',\n  list: '',\n  uiIdSerial: 0,\n  panelSerial: 0,\n  focusedPanel: 0,\n  panels: []\n};\nexport const activeProjectReducer = (state: ProjectDetail = INITIAL_STATE, action: ActiveProjectAction): ProjectDetail => {\n  let pi, ti, ppi, cpi, pti, cti;\n  switch (action.type) {\n    /************************************************************************************\n     * Load project data (metadata, crm)\n    ************************************************************************************/\n    case ActiveProjectActions.LOAD_PROJECT_BASICS_SUCCEEDED:\n      state = {\n        ...state,\n        ...action.meta.projectPreview\n      };\n      break;\n    case ActiveProjectActions.LOAD_PROJECT_CONFIG:\n      state = {\n        ...state,\n        loadingConfigData: true\n      }\n      break;\n    case ActiveProjectActions.LOAD_PROJECT_CONFIG_SUCCEEDED:\n      state = {\n        ...state,\n        // crm: action.payload.crm,\n        configDataInitialized: true,\n        loadingConfigData: false\n      }\n      break;\n\n    /************************************************************************************\n     * Layout -- Tabs\n    ************************************************************************************/\n    case ActiveProjectActions.SET_PANELS:\n      state = {\n        ...state,\n        panels: action.meta.panels,\n        uiIdSerial: action.meta.uiIdSerial,\n        panelSerial: action.meta.panelSerial,\n        focusedPanel: action.meta.focusedPanel\n      }\n      break;\n    case ActiveProjectActions.SET_LIST_TYPE:\n      state = {\n        ...state,\n        list: action.meta.list\n      }\n      break;\n    case ActiveProjectActions.ACTIVATE_TAB:\n      pi = action.meta.panelIndex;\n      ti = action.meta.tabIndex;\n      state = {\n        ...state,\n        panels: Object.assign([...state.panels], {\n          [pi]: {\n            ...state.panels[pi],\n            tabs: [...state.panels[pi].tabs].map((tab, index) => {\n              tab.active = (index === ti);\n              return tab;\n            })\n          }\n        })\n      }\n      break;\n    case ActiveProjectActions.MOVE_TAB:\n      ppi = action.meta.previousPanelIndex;\n      cpi = action.meta.currentPanelIndex;\n      pti = action.meta.previousTabIndex;\n      cti = action.meta.currentTabIndex;\n\n      if (ppi === cpi) {\n        const tabs = [...state.panels[cpi].tabs];\n        moveItemInArray(tabs, pti, cti);\n        state = {\n          ...state,\n          panels: Object.assign([...state.panels], {\n            [cpi]: {\n              ...state.panels[cpi],\n              tabs\n            }\n          })\n        }\n      } else {\n        const pTabs = [...state.panels[ppi].tabs];\n        const cTabs = [...state.panels[cpi].tabs];\n        transferArrayItem(pTabs, cTabs, pti, cti);\n        state = {\n          ...state,\n          panels: Object.assign([...state.panels], {\n            [ppi]: {\n              ...state.panels[ppi],\n              tabs: pTabs.map((tab, index) => {\n                tab.active = (index === (pti < pTabs.length ? pti : (pti - 1)));\n                return tab;\n              })\n            },\n            [cpi]: {\n              ...state.panels[cpi],\n              tabs: cTabs.map((tab, index) => {\n                tab.active = (index === cti);\n                return tab;\n              })\n            }\n          })\n        }\n      }\n\n      break;\n    case ActiveProjectActions.ADD_TAB:\n      if (state.panels.length === 0) {\n        state = {\n          ...state,\n          panels: [\n            {\n              id: state.panelSerial,\n              tabs: []\n            }\n          ],\n          focusedPanel: 0,\n          panelSerial: state.panelSerial + 1\n        }\n      }\n      pi = state.focusedPanel;\n      state = {\n        ...state,\n        panels: Object.assign([...state.panels], {\n          [pi]: {\n            ...state.panels[pi],\n            tabs: [\n              ...state.panels[pi].tabs.map(t => {\n                t.active = false;\n                return t;\n              }),\n              {\n                ...omit(['pathSegment'], action.meta.tab),\n                // panelIndex: pi,\n                path: ['activeProject', action.meta.tab.pathSegment, state.uiIdSerial.toString()]\n              }\n            ]\n          }\n        }),\n        uiIdSerial: (state.uiIdSerial + 1)\n      }\n      break;\n    case ActiveProjectActions.CLOSE_TAB:\n      pi = action.meta.panelIndex;\n      ti = action.meta.tabIndex;\n      // remove the closing tab\n      state = {\n        ...state,\n        panels: Object.assign([...state.panels], {\n          [pi]: {\n            ...state.panels[pi],\n            tabs: [...state.panels[pi].tabs]\n              .filter((tab, index) => index !== ti)\n\n          }\n        })\n      }\n      // activate a sibling tab, if needed and possible\n      if (!state.panels[pi].tabs.find(t => t.active)) {\n        state = {\n          ...state,\n          panels: Object.assign([...state.panels], {\n            [pi]: {\n              ...state.panels[pi],\n              tabs: [...state.panels[pi].tabs]\n                .map((tab, index) => {\n                  tab.active = (index === (ti < state.panels[pi].tabs.length ? ti : (ti - 1)));\n                  return tab;\n                })\n            }\n          })\n\n        }\n      }\n      break;\n    case ActiveProjectActions.CLOSE_PANEL:\n      pi = action.meta.panelIndex;\n      const panels = [...state.panels];\n      panels.splice(pi, 1);\n      state = {\n        ...state,\n        panels\n      }\n      break;\n\n    case ActiveProjectActions.FOCUS_PANEL:\n      state = {\n        ...state,\n        focusedPanel: action.meta.panelIndex\n      }\n      break;\n    case ActiveProjectActions.SPLIT_PANEL:\n      ppi = action.meta.previousPanelIndex;\n      ti = action.meta.tabIndex;\n      cpi = action.meta.currentPanelIndex;\n      const moveTab = state.panels[ppi].tabs[ti];\n      // removes tab from old panel\n      state = {\n        ...state,\n        panels: Object.assign([...state.panels], {\n          [ppi]: {\n            ...state.panels[ppi],\n            tabs: [...state.panels[ppi].tabs]\n              .filter((tab, index) => index !== ti)\n              .map((tab, index) => {\n                if (index === 0) tab.active = true;\n                return tab;\n              })\n          }\n        })\n      }\n      // insert a new panel at position of cpi\n      const newPanels = [...state.panels];\n      newPanels.splice(cpi, 0, {\n        id: state.panelSerial,\n        tabs: [moveTab]\n      })\n      state = {\n        ...state,\n        panels: newPanels,\n        // increase panel id sequence\n        panelSerial: state.panelSerial + 1\n      }\n\n      break;\n\n\n    case ActiveProjectActions.SET_REFINING_CHUNK:\n      state = {\n        ...state,\n        refiningChunk: action.payload.refiningChunk\n      };\n      break;\n    case ActiveProjectActions.SET_CREATING_MENTIONING:\n      state = {\n        ...state,\n        creatingMentioning: action.payload.creatingMentioning\n      };\n      break;\n\n    /************************************************************************************\n    * Highlighting of mentionings in the gui\n    ************************************************************************************/\n    case ActiveProjectActions.SET_MENTIONINGS_FOCUSED_IN_TEXT:\n      state = {\n        ...state,\n        mentioningsFocusedInText: action.payload.mentioningsFocusedInText\n      };\n      break;\n\n    case ActiveProjectActions.SET_MENTIONINGS_FOCUSED_IN_TABLE:\n      state = {\n        ...state,\n        mentioningsFocusedInTable: action.payload.mentioningsFocusedInTable\n      };\n      break;\n\n\n    /************************************************************************************\n     * Destroy the active project state (on closing a project)\n    ************************************************************************************/\n    case ActiveProjectActions.DESTROY:\n      state = INITIAL_STATE;\n      break;\n  }\n\n  return state;\n}\n","import { List } from './list';\n\nexport class Information {\n\n  // search results\n  items?: List;\n\n  loading?: boolean;\n\n  constructor(data?: Information) {\n    Object.assign(this, data);\n  }\n}\n","import { EntitySearchHit } from '@kleiolab/lib-sdk-lb4';\n// Class of this slice of store\nexport class List {\n    searchString?: string;\n    // Array of dfh_pk_class of those classes that may appear in the list\n    pkAllowedClasses?: number[];\n    collectionSize?: number;\n    items?: EntitySearchHit[];\n    loading?: boolean;\n    error?: any;\n    constructor(data?: List) {\n        Object.assign(this, data);\n        if (true) {\n        }\n        else {\n        }\n    }\n}\n","import { ToastOptions } from '@cime/ngx-toasty';\n\n// Interface of this slice of store\nexport interface NotificationsI {\n    type: 'info' | Â 'success' | Â 'wait' | 'error' | 'warning';\n    options: ToastOptions;\n}\n\n// Class of this slice of store\nexport class Notifications implements NotificationsI {\n    type: 'info' | Â 'success' | Â 'wait' | 'error' | 'warning';\n    options: ToastOptions;\n\n    constructor(data?: NotificationsI) {\n        Object.assign(this, data);\n    }\n}\n","import { List } from './list';\n\n// Class of this slice of store\nexport class SourceList {\n\n  // the list of sources (search result)\n  list?: List;\n\n  // // class and type selector\n  // classAndTypeSelector?: ClassAndTypeSelector;\n\n  loading?: boolean;\n\n  constructor(data?: SourceList) {\n    Object.assign(this, data);\n  }\n}\n","import { Action } from 'redux';\nimport { InformationAPIAction, InformationAPIActions } from '../actions';\nimport { Information } from '../models';\n\nconst INITIAL_STATE = new Information();\n\nexport function informationReducer(state: Information = INITIAL_STATE, a: Action): Information {\n\n  const action = a as InformationAPIAction;\n\n  switch (action.type) {\n\n\n    /*****************************************************\n    * Reducers called on destroy of component\n    *****************************************************/\n    case InformationAPIActions.DESTROY:\n      state = {};\n      break;\n\n  }\n\n  return state;\n};\n\n","import { Action } from 'redux';\nimport { LoadingBarAction, LoadingBarActions } from '../actions';\nimport { LoadingBar } from '../models';\n\nconst INITIAL_STATE: LoadingBar = {\n  loading: false,\n  progress: 0,\n};\n\n\nexport function loadingBarReducer(state: LoadingBar = INITIAL_STATE, a: Action): LoadingBar {\n\n  const action = a as LoadingBarAction;\n\n\n  switch (action.type) {\n\n    case LoadingBarActions.START:\n      return {\n        ...state,\n        loading: true\n      };\n\n    case LoadingBarActions.STOP:\n      return {\n        ...state,\n        loading: false,\n      };\n\n    case LoadingBarActions.COPMLETE:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n\n  return state;\n};\n\n","import { Action } from 'redux';\nimport { NotificationsAPIAction } from '../actions';\nimport { Notifications } from '../models';\n\nconst INITIAL_STATE = new Notifications();\n\nexport function notificationsReducer(state: Notifications = INITIAL_STATE, a: Action): Notifications {\n\n  const action = a as NotificationsAPIAction;\n\n  switch (action.type) { }\n\n  return state;\n};\n\n","import { ProjectsAction, ProjectsActions } from '../actions';\nimport { IProjectList, ProjectPreview } from '../models';\n\nconst INITIAL_STATE: IProjectList = {\n  records: []\n};\n\nconst projectListReducer = (lastState: IProjectList = INITIAL_STATE, action: ProjectsAction): IProjectList => {\n  switch (action.type) {\n    case ProjectsActions.LOAD_PROJECTS_SUCCEEDED: return {\n      ...lastState, records: action.payload.map((record: ProjectPreview) => ({ record: record }))\n    };\n  }\n\n  return lastState;\n}\n\nexport const createProjectsReducer = () => {\n  return projectListReducer;\n}\n","import { Action } from 'redux';\nimport { SourceListAPIAction, SourceListAPIActions } from '../actions';\nimport { SourceList } from '../models';\n\nconst INITIAL_STATE = new SourceList();\n\nexport function sourceListReducer(state: SourceList = INITIAL_STATE, a: Action): SourceList {\n\n  const action = a as SourceListAPIAction;\n\n  switch (action.type) {\n\n    case SourceListAPIActions.INITIALIZE_LIST:\n      state = {\n        ...state,\n        list: {\n          pkAllowedClasses: action.meta.pkAllowedClasses\n        }\n      }\n      break;\n\n\n    /*****************************************************\n    * Reducers called on destroy of component\n    *****************************************************/\n    case SourceListAPIActions.DESTROY:\n      state = {};\n      break;\n\n  }\n\n  return state;\n};\n\n","import { composeReducers, defaultFormReducer } from '@angular-redux/form';\nimport { routerReducer } from '@angular-redux/router';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { omit } from 'ramda';\nimport { combineReducers } from 'redux';\nimport { accountRootReducer, activeProjectReducer, createProjectsReducer, informationReducer, loadingBarReducer, sourceListReducer } from '../state-gui/reducers';\nimport { createDatReducer, createDfhReducer, createInfReducer, createProReducer, createSysReducer, createTabReducer, createWarReducer } from '../state-schema/reducers';\n\n\nexport const INIT_SANDBOX_STATE = 'INIT_SANDBOX_STATE';\nexport const sandboxStateReducer = (lastState = {}, action: FluxStandardAction<any>) => {\n  if (action.type === INIT_SANDBOX_STATE) {\n    lastState = {\n      ...lastState,\n      ...action.payload\n    };\n  }\n  return lastState;\n};\n\n\nexport const pendingRequestReducer = (state = {}, action) => {\n\n  if (action && action.meta && action.meta.addPending) {\n    const uuid = action.meta.addPending;\n    state = {\n      ...state,\n      [uuid]: true\n    }\n    // console.log('add ' + uuid + ' ' + Date.now())\n  }\n\n  if (action && action.meta && action.meta.removePending) {\n    const uuid = action.meta.removePending;\n    state = {\n      ...omit([uuid], state)\n    }\n  }\n  return state;\n}\n\n\nexport const resolvedRequestReducer = (state = {}, action) => {\n\n  if (action && action.meta && action.meta.removePending) {\n    const uuid = action.meta.removePending;\n    state = {\n      ...state,\n      [uuid]: action.meta\n    }\n  }\n  return state;\n}\n\nexport const cleanupResolved = (state = {}, action) => {\n\n  if (action && action.type === 'CLEAN_UP_RESOLVED') {\n    const uuid = action.meta.uuid;\n    state = {\n      ...omit([uuid], state)\n    }\n    // console.log('resolve ' + uuid + ' ' + Date.now().toString())\n  }\n  return state;\n}\nexport const SET_APP_STATE = 'SET_APP_STATE';\nexport const setAppState = (state = {}, action) => {\n  if (action && action.type === SET_APP_STATE) {\n    state = action.payload\n  }\n  return state;\n}\n\nexport const rootReducer = composeReducers(\n  defaultFormReducer(),\n  combineReducers({\n    account: accountRootReducer,\n    loadingBar: loadingBarReducer,\n    activeProject: activeProjectReducer,\n    routes: routerReducer,\n    information: informationReducer,\n    sources: sourceListReducer,\n    sandboxState: sandboxStateReducer,\n    projects: createProjectsReducer(),\n    sys: createSysReducer(),\n    dfh: createDfhReducer(),\n    inf: createInfReducer(),\n    dat: createDatReducer(),\n    pro: createProReducer(),\n    war: createWarReducer(),\n    tab: createTabReducer(),\n    pending: pendingRequestReducer,\n    resolved: composeReducers(resolvedRequestReducer, cleanupResolved),\n  }),\n  setAppState\n)\n","import { sysDefinitions, sysRoot } from '../reducer-configs';\nimport { ReducerFactory } from '../_helpers';\nexport function createSysReducer() {\n  return new ReducerFactory(sysRoot, sysDefinitions).createReducers()\n}\n","\nimport { ReducerFactory } from '../_helpers';\nimport { dfhDefinitions } from '../reducer-configs';\n\nexport function createDfhReducer() {\n  return new ReducerFactory('dfh', dfhDefinitions).createReducers()\n}\n","import { ReducerFactory } from '../_helpers';\nimport { infDefinitions, infRoot } from '../reducer-configs';\n\n\n\nexport function createInfReducer() {\n  return new ReducerFactory(infRoot, infDefinitions).createReducers()\n}\n\n\n","import { ReducerFactory } from '../_helpers';\nimport { datDefinitions, datRoot } from '../reducer-configs/dat.config';\n\nexport function createDatReducer() {\n  return new ReducerFactory(datRoot, datDefinitions).createReducers()\n}\n","import { ReducerFactory } from '../_helpers';\nimport { proDefinitions, proRoot } from '../reducer-configs';\n\n\n\n\nexport function createProReducer() {\n  return new ReducerFactory(proRoot, proDefinitions).createReducers()\n}\n\n\n","import { warDefinitions, warRoot } from '../reducer-configs';\nimport { ReducerFactory } from '../_helpers';\n\nexport function createWarReducer() {\n  return new ReducerFactory(warRoot, warDefinitions).createReducers()\n}\n\n\n","import { tabDefinitions, tabRoot } from '../reducer-configs';\nimport { ReducerFactory } from '../_helpers';\n\nexport function createTabReducer() {\n  return new ReducerFactory(tabRoot, tabDefinitions).createReducers()\n}\n","// Angular-redux ecosystem stuff.\n// @angular-redux/form and @angular-redux/router are optional\n// extensions that sync form and route location state between\n// our store and Angular.\nimport { DevToolsExtension, NgRedux, NgReduxModule } from '@angular-redux/store';\nimport { Inject, InjectionToken, NgModule } from '@angular/core';\nimport { equals } from 'ramda';\nimport dynamicMiddlewares from 'redux-dynamic-middlewares';\nimport { createEpicMiddleware } from 'redux-observable-es6-compat';\nimport { IAppState } from '../root/models';\nimport { RootEpics } from '../root/root-epics';\nimport { rootReducer } from '../root/root-reducer';\nimport { AccountActions, ActiveProjectActions, LoadingBarActions, NotificationsAPIActions } from '../state-gui/actions';\nimport { AccountEpics, ActiveProjectEpics, LoadingBarEpics, NotificationsAPIEpics } from '../state-gui/epics';\nimport { DatActions, DfhActions, InfActions, ProActions, SysActions, TabActions, WarActions } from '../state-schema/actions';\nimport { DatEpics, DfhEpics, InfEpics, ProEpics, SysEpics, TabEpics, WarEpics } from '../state-schema/epics';\nimport { SchemaActionsFactory, SchemaObjectService } from '../state-schema/_helpers';\n\n\n\n\n/**\n * Function to use in combination with rxjs/operator .filter()\n * in order to get only actions dispached with a fractalkey\n * equal to the provided path.\n *\n * example:\n * pipe(\n *    filter(action => ofSubstore(c.basePath)(action)),\n *    ofType('Foo')\n * )\n * @param path\n */\nexport const ofSubstore = (path: string[]) => (action): boolean => {\n  if (!('@angular-redux::fractalkey' in action)) return false;\n\n  const actionPath = JSON.parse(action['@angular-redux::fractalkey']);\n  const bool = equals(actionPath, path);\n  return bool;\n}\n\nexport const APP_INITIAL_STATE = new InjectionToken<IAppState>('app.INITIAL_STATE');\n\n@NgModule({\n  imports: [\n    NgReduxModule,\n  ],\n  providers: [\n\n    AccountActions,\n    ActiveProjectActions,\n    LoadingBarActions,\n    NotificationsAPIActions,\n\n    AccountEpics,\n    ActiveProjectEpics,\n    LoadingBarEpics,\n    NotificationsAPIEpics,\n\n\n    DatActions,\n    DfhActions,\n    InfActions,\n    ProActions,\n    SysActions,\n    TabActions,\n    WarActions,\n\n    DatEpics,\n    DfhEpics,\n    InfEpics,\n    ProEpics,\n    SysEpics,\n    TabEpics,\n    WarEpics,\n\n    RootEpics,\n    SchemaActionsFactory,\n    SchemaObjectService,\n    { provide: APP_INITIAL_STATE, useValue: {} }\n  ]\n})\nexport class ReduxStoreModule {\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    devTools: DevToolsExtension,\n    // ngReduxRouter: NgReduxRouter,\n    rootEpics: RootEpics,\n    @Inject(APP_INITIAL_STATE) initialState: IAppState\n  ) {\n\n    const epicMiddleware = createEpicMiddleware();\n\n    // Tell Redux about our reducers and epics. If the Redux DevTools\n    // chrome extension is available in the browser, tell Redux about\n    // it too.\n    ngRedux.configureStore(\n      // RootReducer\n      rootReducer,\n\n      // Initial state\n      initialState,\n\n      // Middleware\n      [\n        // createLogger(),\n        epicMiddleware,\n        dynamicMiddlewares,\n      ],\n      // Enhancers\n      devTools.isEnabled() ? [devTools.enhancer()] : []\n    );\n\n    // Apply rootEpic\n    epicMiddleware.run(rootEpics.getRootEpic());\n\n\n    // // Enable syncing of Angular router state with our Redux store.\n    // if (ngReduxRouter) {\n    //     ngReduxRouter.initialize();\n    // }\n\n    // Enable syncing of Angular form state with our Redux store.\n    // provideReduxForms(ngRedux);\n  }\n}\n","export type RightPanelTab = 'linked-sources' | 'linked-digitals' | 'content-tree';\n\nexport interface PeItDetailList { [pk_entity: number]: EntityDetail };\n\n\nexport class EntityDetail {\n\n\n  // _fields?: FieldList;\n\n  pkEntity?: number;\n\n  /** Left Panel Visibility */\n\n  // the properties with information about the peIt\n  showProperties?= false;\n\n  // the right area\n  showRightArea?= true;\n\n  /** Right panel */\n  rightPanelTabs?: RightPanelTab[] = []\n  rightPanelActiveTab?= 0; // index of the active tab\n\n  // the bar to above the properties\n  // showPropertiesHeader?= true;\n\n  // the header with name of peIt\n  showHeader?= true;\n\n\n  constructor(data?: EntityDetail) {\n    Object.assign(this, data);\n  }\n\n\n}\n","import { ClassConfig } from '../active-project.models';\n\nexport type EntityType = 'teEnt' | 'peIt' | 'other';\n\n\n// Class of this slice of store\nexport class ProjectSettingsData {\n  items?: ClassConfig[];\n  // profiles?: DfhClassProfileView[];\n  tabTitle?: string;\n  loading?: boolean;\n  error?: any;\n\n  constructor(data?: ProjectSettingsData) {\n    Object.assign(this, data);\n  }\n}\n","export type TabLayoutMode = 'left-only' | 'right-only' | 'both';\n\n// Class of this slice of store\nexport class TabBase {\n\n  pkEntity?: number;\n\n  tabTitle?: string;\n\n  tabTooltip?: string;\n\n  loading?: boolean;\n\n  layoutMode?: TabLayoutMode;\n\n  constructor(data?: TabBase) {\n    Object.assign(this, data);\n  }\n}\n","\n\n// Class of this slice of store\nexport class Types {\n  items?: {};\n  edit?: boolean;\n  loading?: boolean;\n  error?: any;\n\n  // title in the tab\n  tabTitle?: string;\n\n  constructor(data?: Types) {\n    Object.assign(this, data);\n  }\n}\n","import { DatColumn, DatNamespace, DatTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { DatClassColumnMapping, DatDigital } from '@kleiolab/lib-sdk-lb4';\nimport { ByPk } from '../../root/models';\n\n\n\n\nexport class DigitalSlice {\n  by_pk_entity__entity_version?: ByPk<DatDigital>;\n  by_pk_entity?: ByPk<ByPk<DatDigital>>;\n  by_pk_text?: ByPk<ByPk<DatDigital>>;\n  loading?: boolean\n}\nexport class ChunkSlice {\n  by_pk_entity?: ByPk<DatDigital>;\n  by_fk_text?: ByPk<ByPk<DatDigital>>;\n  loading?: boolean\n}\n\nexport class ColumnSlice {\n  by_pk_entity?: ByPk<DatColumn>;\n  by_fk_digital?: ByPk<ByPk<DatColumn>>;\n}\n\nexport class ClassColumnMappingSlice {\n  by_pk_entity?: ByPk<DatClassColumnMapping>;\n  by_fk_column?: ByPk<ByPk<DatClassColumnMapping>>;\n}\n\nexport class TextPropertySlice {\n  by_pk_entity?: ByPk<DatTextProperty>;\n  by_fk_digital?: ByPk<ByPk<DatTextProperty>>;\n}\n\nexport class NamespaceSlice {\n  by_pk_entity?: ByPk<DatNamespace>;\n  by_fk_project?: ByPk<ByPk<DatNamespace>>;\n  loading?: boolean\n}\n\nexport interface Dat {\n  digital?: DigitalSlice;\n  chunk?: ChunkSlice;\n  column?: ColumnSlice;\n  text_property?: TextPropertySlice;\n}\n\n\n\n\n","import { DfhLabel, DfhProfile } from '@kleiolab/lib-sdk-lb3';\nimport { DfhClass, DfhProperty } from '@kleiolab/lib-sdk-lb4';\nimport { ByPk } from '../../root/models';\n\n\nexport class DfhProfileSlice {\n  by_pk_profile?: ByPk<DfhProfile>;\n\n  loading?: boolean; // todo remove in reducer factory then here\n}\n\nexport class DfhClassSlice {\n  by_pk_class?: ByPk<DfhClass>;\n  by_basic_type?: ByPk<ByPk<DfhClass>>;\n  loading?: boolean; // todo remove in reducer factory then here\n}\n\nexport class DfhPropertySlice {\n  by_pk_property?: ByPk<ByPk<DfhProperty>>;\n  by_has_domain__fk_property?: ByPk<ByPk<DfhProperty>>;\n  by_has_range__fk_property?: ByPk<ByPk<DfhProperty>>;\n  by_has_domain?: ByPk<ByPk<DfhProperty>>;\n  by_has_range?: ByPk<ByPk<DfhProperty>>;\n  by_pk_property__has_domain__has_range?: ByPk<DfhProperty>;\n  by_is_has_type_subproperty?: ByPk<ByPk<DfhProperty>>;\n\n  loading?: boolean; // todo remove in reducer factory then here\n}\n\nexport class DfhLabelSlice {\n  by_fks?: ByPk<DfhLabel>;\n  by_fk_class__type?: ByPk<ByPk<DfhLabel>>;\n  by_fk_property__type?: ByPk<ByPk<DfhLabel>>;\n  by_fk_profile__type?: ByPk<ByPk<DfhLabel>>;\n\n  loading?: boolean; // todo remove in reducer factory then here\n}\n\nexport interface Dfh {\n  profile?: DfhProfileSlice;\n  klass?: DfhClassSlice;\n  property?: DfhPropertySlice;\n  label?: DfhLabelSlice;\n\n  pkEntityModelMap: ByPk<{ modelName: string }>\n}\n","import { InfAppellation, InfDimension, InfLangString, InfLanguage, InfPersistentItem, InfPlace, InfTemporalEntity, InfTextProperty, InfTimePrimitive } from '@kleiolab/lib-sdk-lb3';\nimport { InfStatement } from '@kleiolab/lib-sdk-lb4';\nimport { ByPk } from '../../root/models';\n\ninterface PaginationInfo {\n  loading: {\n    [key: string]: boolean\n  },\n  count: number,\n  rows: {\n    [key: string]: number\n  }\n}\nexport class InfPersistentItemSlice {\n  by_pk_entity?: ByPk<InfPersistentItem>;\n  by_fk_class?: ByPk<ByPk<InfPersistentItem>>;\n  loading?: boolean\n}\n\nexport class InfTemporalEntitySlice {\n  by_pk_entity?: ByPk<InfTemporalEntity>;\n  by_fk_class?: ByPk<ByPk<InfPersistentItem>>;\n  loading?: boolean\n}\n\nexport class InfStatementSlice {\n  by_pk_entity?: ByPk<InfStatement>;\n  by_subject?: ByPk<ByPk<InfStatement>>;\n  by_object?: ByPk<ByPk<InfStatement>>;\n  'by_subject+property'?: ByPk<ByPk<InfStatement>>;\n  'by_object+property'?: ByPk<ByPk<InfStatement>>;\n  by_fk_subject_data?: ByPk<ByPk<InfStatement>>;\n  pag_by_fk_property__fk_target_class__fk_object_info__ofProject?: ByPk<PaginationInfo>\n  pag_by_fk_property__fk_target_class__fk_subject_info__ofProject?: ByPk<PaginationInfo>\n  loading?: boolean\n}\n\nexport class InfPlaceSlice {\n  by_pk_entity?: ByPk<InfPlace>;\n  loading?: boolean\n}\n\nexport class InfTimePrimitiveSlice {\n  by_pk_entity?: ByPk<InfTimePrimitive>;\n  loading?: boolean\n}\n\nexport class InfLanguageSlice {\n  by_pk_entity?: ByPk<InfLanguage>;\n  loading?: boolean\n}\n\nexport class InfAppellationSlice {\n  by_pk_entity?: ByPk<InfAppellation>;\n  loading?: boolean\n}\n\n\nexport class InfLangStringSlice {\n  by_pk_entity?: ByPk<InfLangString>;\n  loading?: boolean\n}\n\n\nexport class InfDimensionSlice {\n  by_pk_entity?: ByPk<InfDimension>;\n  loading?: boolean\n}\n\nexport class InfTextPropertySlice {\n  by_pk_entity?: ByPk<InfTextProperty>;\n  by_fk_concerned_entity__fk_class_field?: ByPk<ByPk<InfTextProperty>>;\n  by_fk_concerned_entity?: ByPk<ByPk<InfTextProperty>>;\n  loading?: boolean\n}\n\n\nexport interface Inf {\n  persistent_item?: InfPersistentItemSlice;\n  temporal_entity?: InfTemporalEntitySlice;\n  statement?: InfStatementSlice;\n  place?: InfPlaceSlice;\n  time_primitive?: InfTimePrimitiveSlice;\n  language?: InfLanguageSlice;\n  appellation?: InfAppellationSlice;\n  lang_string?: InfLangStringSlice;\n  dimension?: InfDimensionSlice;\n  text_property?: InfTextPropertySlice;\n\n  pkEntityModelMap?: ByPk<{ modelName: string }>\n}\n\n\n\n\n","import { ByPk } from '../../root/models';\nimport { TabCell } from '@kleiolab/lib-sdk-lb4';\n\nexport class TabCellSlice {\n  by_pk_cell?: ByPk<TabCell>;\n  by_fk_column_fk_row?: ByPk<ByPk<TabCell>>;\n}\n\nexport interface Tab {\n  cell?: TabCellSlice;\n}\n\n\n\n\n"]}