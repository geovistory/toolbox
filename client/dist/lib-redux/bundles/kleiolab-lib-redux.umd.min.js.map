{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/actions/account.actions.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/actions/loading-bar.actions.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/actions/notifications.actions.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/epics/account.epics.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/actions/active-project.action.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/reducer-configs/dat.config.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/_helpers/schema-actions-factory.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/actions/dat.actions.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/reducer-configs/dfh.config.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/actions/dfh.actions.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/reducer-configs/inf.config.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/_helpers/inf-action-factory.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/actions/inf.actions.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/reducer-configs/pro.config.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/actions/pro.actions.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/reducer-configs/sys.config.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/actions/sys.actions.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/reducer-configs/tab.config.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/actions/tab.actions.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/reducer-configs/war.config.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/actions/war.actions.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/services/schema.service.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/epics/active-project.epics.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/epics/loading-bar.epics.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/epics/notifications.epics.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/epics/action-resolver.epics.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/_helpers/flattener.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/_helpers/schema-epics-factory.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/epics/dat.epics.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/epics/dfh.epics.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/_helpers/inf-epic-factory.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/epics/inf.epics.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/epics/pro.epics.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/actions/schema.actions.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/epics/schema.epics.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/epics/sys.epics.ts","ng://@kleiolab/lib-redux/lib/redux-store/root/root-epics.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/reducers/account.reducers.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/reducers/loading-bar.reducer.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/reducers/active-project.reducer.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/models/entity-list.models.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/actions/entity-list.actions.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/reducers/entity-list.reducer.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/actions/source-list.actions.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/models/source-list.models.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/reducers/source-list.reducer.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/actions/projects.actions.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/reducers/projects.reducers.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/_helpers/subfieldIdToString.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/_helpers/reducer-factory.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/reducers/sys.reducer.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/reducers/dfh.reducer.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/reducers/inf.reducer.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/reducers/dat.reducer.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/reducers/pro.reducer.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/reducers/war.reducer.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/reducers/tab.reducer.ts","ng://@kleiolab/lib-redux/lib/redux-store/root/root-reducer.ts","ng://@kleiolab/lib-redux/lib/redux-store/module/redux-store.module.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/models/active-project/entity-detail.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/models/active-project/project-settings-data.models.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/models/active-project/tab-layout.models.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/models/active-project/types.models.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/models/list.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/models/notifications.models.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/models/dat.models.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/models/dfh.models.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/models/inf.models.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/models/tab.models.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","AccountActions","login","type","LOGIN","payload","meta","loginSucceeded","account","LOGIN_SUCCEEDED","loginFailed","LOGIN_FAILED","accountUpdated","ACCOUNT_UPDATED","loadRoles","accountId","LOAD_ROLES","loadRolesSucceeded","accountRoles","LOAD_ROLES_SUCCEEDED","loadRolesFailed","LOAD_ROLES_FAILED","Injectable","args","providedIn","LoadingBarActions","startLoading","START","stopLoading","STOP","completeLoading","COPMLETE","tslib_1.__decorate","dispatch","NotificationsAPIActions","addToast","ADD_TOAST","AccountEpics","actions","loadingBarActions","accountApi","notificationActions","createEpics","combineEpics","_this","action$","store","pipe","ofType","mergeMap","action","Observable","globalStore","getRoles","subscribe","data","options","title","PubAccountApi","ActiveProjectActions","loadProjectBasics","pk_project","LOAD_PROJECT_BASICS","loadProjectBasiscsSucceded","projectPreview","LOAD_PROJECT_BASICS_SUCCEEDED","loadProjectConfig","LOAD_PROJECT_CONFIG","loadProjectConfigSucceeded","LOAD_PROJECT_CONFIG_SUCCEEDED","setListType","list","SET_LIST_TYPE","setPanels","panels","uiIdSerial","panelSerial","focusedPanel","SET_PANELS","activateTab","panelIndex","tabIndex","ACTIVATE_TAB","moveTab","previousPanelIndex","currentPanelIndex","previousTabIndex","currentTabIndex","MOVE_TAB","closeTab","CLOSE_TAB","addTab","tab","ADD_TAB","splitPanel","SPLIT_PANEL","closePanel","CLOSE_PANEL","focusPanel","FOCUS_PANEL","setRefiningChunk","refiningChunk","SET_REFINING_CHUNK","setCreatingMentioning","creatingMentioning","SET_CREATING_MENTIONING","setMentioningsFocusedInText","mentioningsFocusedInText","SET_MENTIONINGS_FOCUSED_IN_TEXT","setMentioningsFocusedInTable","mentioningsFocusedInTable","SET_MENTIONINGS_FOCUSED_IN_TABLE","destroy","DESTROY","LOAD_PROJECT_BASICS_FAILED","UPDATE_SELECTED_CHUNK","datRoot","datDefinitions","digital","equals","newItem","oldItem","quill_doc","pk_entity","entity_version","indexBy","keyInStore","indexByFn","item","toString","groupBy","groupByFn","pk_text","chunk","fk_text","column","fk_digital","class_column_mapping","fk_column","text_property","fk_entity","fk_system_type","namespace","fk_project","SchemaActionsFactory","ngRedux","createCrudActions","actionPrefix","modelName","load","suffix","pk","addPending","U","uuid","pending$","select","resolved$","loadSucceeded","items","removePending","upsert","upsertSucceeded","succeeded","delete","filter","x","deleteSucceeded","failed","loadPage","page","loadPageSucceeded","pks","count","loadPageFailed","DigitalActionsFactory","_super","tslib_1.__extends","createActions","loadVersion","pkEntity","entityVersion","LOAD_VERSION","ChunkActionsFactory","loadChunksOfDigital","pkDigital","CHUNKS_OF_DIGITAL","ColumnActionsFactory","loadColumnsOfTable","COLUMNS_OF_TABLE","DatActions","NgRedux","dfhLabelByFksKey","language","fk_class","fk_profile","fk_property","dfhDefinitions","profile","pk_profile","klass","pk_class","basic_type","property","pk_property","has_domain","has_range","is_has_type_subproperty","undefined","label","DfhProfileActionFactory","loadOfProject","pkProject","OF_PROJECT","DfhClassActionFactory","DfhPropertyActionFactory","DfhLabelActionFactory","DfhActions","infRoot","infDefinitions","persistent_item","temporal_entity","statement","indexStatementBySubject","indexStatementBySubjectProperty","indexStatementByObject","indexStatementByObjectProperty","toStr0undef","fk_subject_data","fk_concerned_entity","fk_class_field","lang_string","appellation","time_primitive","place","dimension","fks","fk_subject_info","fk_object_info","fk_object_data","fk_object_tables_row","fk_object_tables_cell","fk_property_of_property","InfActionFactory","createInfActions","remove","removeSucceeded","InfPersistentItemActionFactory","loadMinimal","MINIMAL_BY_PK","typesOfProject","TYPES_OF_PROJECT","TYPE_OF_PROJECT","InfTemporalEntityActionFactory","loadNestedObject","OWN_PROPERTIES","loadPaginatedList","pkSourceEntity","pkProperty","fkTargetClass","isOutgoing","limit","offset","PAGINATED_LIST","alternatives","loadPaginatedAlternativeList","PAGINATED_ALTERNATIVE_LIST","InfStatementActionFactory","findByParams","ofProject","pkInfoRange","pkInfoDomain","BY_PARAMS","loadIngoingAlternatives","ALTERNATIVES_INGOING","sourcesAndDigitalsOfEntity","SOURCES_AND_DIGITALS_OF_ENTITY","CONTENT_TREE","InfTextPropertyActionFactory","loadAlternatives","fkEntity","fkClassField","ALTERNATIVES","InfActions","proRoot","textPropertyByFksKey","fk_language","fk_dfh_class","fk_dfh_property","fk_dfh_property_domain","fk_dfh_property_range","textPropertyByFksWithoutLang","proClassFieldConfgByProjectAndClassKey","fk_range_class","fk_domain_class","fk_class_for_class_field","proDefinitions","project","info_proj_rel","class_field_config","dfh_class_proj_rel","enabled_in_entities","dfh_profile_proj_rel","enabled","analysis","ProProjectActionFactory","loadOfAccount","OF_ACCOUNT","loadBasics","LOAD_BASICS","ProInfoProjRelActionFactory","markStatementAsFavorite","pkStatement","MARK_ROLE_AS_FAVORITE","ProDfhClassProjRelActionFactory","ProDfhProfileProjRelActionFactory","ProClassFieldConfigActionFactory","ProTextPropertyActionFactory","ProAnalysisActionFactory","loadByIdAndVersion","version","BY_PK_AND_VERSION","ProActions","sysRoot","sysDefinitions","system_relevant_class","required_by_sources","required_by_entities","required_by_basics","config","SysActions","tabRoot","tabDefinitions","cell","pk_cell","fk_row","TabActions","warRoot","warDefinitions","entity_preview","WarActions","SchemaService","api","infActions","proActions","datActions","warActions","tabActions","dfhActions","sysActions","notifications","apiCall$","s$","Subject","result","storeSchemaObject","message","storeGv","storeSchemaObjectGv","object","keys","forEach","schema","model","console","warn","SchemaObjectApi","firstProTextPropStringOfType","textProperties","fkSystemType","find","string","ActiveProjectEpics","sys","dat","dfh","pro","inf","projectApi","schemaObj","createLoadProjectBasicsEpic","createLoadProjectConfigEpic","createLoadProjectUpdatedEpic","createClosePanelEpic","createActivateTabFocusPanelEpic","createMoveTabFocusPanelEpic","createClosePanelFocusPanelEpic","createSplitPanelActivateTabEpic","createAddTabCloseListEpic","switchMap","getBasics","text_properties","SysConfig","PK_SYSTEM_TYPE__TEXT_PROPERTY__LABEL","description","PK_SYSTEM_TYPE__TEXT_PROPERTY__DESCRIPTION","default_language","omit","mapTo","combineLatest","res","includes","getState","activeProject","panel","tabs","map","ProProjectApi","LoadingBarEpics","service","createStartLoadingBarEpic","createCompleteLoadingBarEpic","observer","complete","start","SlimLoadingBarService","NotificationsAPIEpics","toastyService","toastyConfig","theme","createAddToastEpic","a","msg","ToastyService","ToastyConfig","ActionResolverEpics","createResolveEpic","of","ModelFlattener","modelDefinition","flattenCb","flatten","keysToOmit_1","relations","Flattener","ProInfoProjRel","getModelDefinition","pro_dfh_class_proj_rel","ProDfhClassProjRel","pro_dfh_profile_proj_rel","ProDfhProfileProjRel","InfPersistentItem","incoming_statements","outgoing_statements","entity_version_project_rels","InfTemporalEntity","InfStatement","subject_temporal_entity","subject_statement","object_persistent_item","object_appellation","object_place","object_time_primitive","object_language","subject_chunk","object_lang_string","object_dimension","InfAppellation","InfPlace","InfTimePrimitive","InfLanguage","InfLangString","InfDimension","InfTextProperty","DatDigital","DatChunk","pro_project","ProProject","pro_text_property","ProTextProperty","pro_class_field_config","ProClassFieldConfig","getFlattened","storeFlattened","flattened","values","SchemaEpicsFactory","createLoadEpic","apiFn","actionSuffix","onSuccessHook","globalActions","pendingKey","onError","createUpsertEpic","createDeleteEpic","operation","status","DatEpics","notification","digitalApi","chunkApi","columnApi","namespaceApi","schemaObjectService","digitalEpicsFactory","chunkEpicsFactory","namespaceEpicsFactory","columnEpicsFactory","getVersion","bulkUpsert","bulkDelete","ofDigital","results","flattener","byProject","schemaObject","DatDigitalApi","DatChunkApi","DatColumnApi","DatNamespaceApi","DfhEpics","profileApi","classApi","propertyApi","labelApi","dfhProfileEpicsFactory","dfhClassEpicsFactory","dfhLabelEpicsFactory","dfhPropertyEpicsFactory","dfhPropertyControllerOfProject","dfhClassControllerOfProject","DfhProfileApi","DfhClassControllerService","DfhPropertyControllerService","DfhLabelApi","InfEpicsFactory","infoProjRelApi","pathOr","is_in_project","createRemoveEpic","bulkUpdateEprAttributes","infoProjRels","createCustomUpsertEpic","InfEpics","peItApi","teEnApi","statementApi","textPropertyApi","infPersistentItemEpicsFactory","infTemporalEntityEpicsFactory","infStatementEpicsFactory","infTextPropertyEpicsFactory","ownProperties","schemas","findOrCreateInfPersistentItems","apiCal$","temporalEntityList","handleTemporalEntityListAction","alternativeTemporalEntityList","findOrCreateInfTemporalEntities","alternativesNotInProjectByEntityPk","findOrCreateInfStatements","paginatedListTargetingEntityPreviews","queryByParams","statements","flattener2","digitals","findAlternativeTextProperties","findOrCreateInfTextProperties","epicsFactory","scope","notInProject","inProject","req","fkSourceEntity","fkProperty","targetClass","paginatedStatements","InfPersistentItemApi","InfTemporalEntityApi","InfStatementApi","InfTextPropertyApi","ProInfoProjRelApi","ProEpics","classProjRelApi","profileProjRelApi","classFieldConfApi","analysisApi","proProjectEpicsFactory","proInfoProjRelEpicsFactory","proDfhClassProjRelEpicsFactory","proDfhProfileProjRelEpicsFactory","proClassFieldConfigEpicsFactory","proTextPropertyEpicsFactory","proAnalysisEpicsFactory","ofAccount","analysisControllerBulkDelete","ProDfhClassProjRelApi","ProDfhProfileProjRelApi","ProClassFieldConfigApi","ProTextPropertyApi","AnalysisService","GvSchemaActions","loadGvSchemaObject","GV_SCHEMA_OBJECT_LOAD","loadGvPaginationObject","GV_PAGINATION_OBJECT_LOAD","SchemaEpics","pag","actionEmitter","subfieldPageControllerLoadSubfieldPage","_b","tslib_1.__values","subfieldPages","_c","subfieldPage","SubfieldPageControllerService","SysEpics","sysRelevantClassApi","sysConfigApi","systemRelevantClassEpicsFactory","configEpicsFactory","bulkReplaceOrCreate","sysConfigControllerGetSystemConfig","SysSystemRelevantClassApi","SystemConfigurationService","RootEpics","loadingBarEpics","notificationEpics","activeProjectEpics","accountEpics","sysEpics","dfhEpics","infEpics","datEpics","proEpics","schemaObjectEpics","actionResolver","rootEpicStream$","BehaviorSubject","rootEpic","state$","dependencies","epic","getRootEpic","addEpic","INITIAL_STATE","roles","accountRootReducer","lastState","loading","progress","loadingBarReducer","state","INITIAL_STATE$1","activeProjectReducer","pi","ti","ppi","cpi","pti","cti","INITIAL_STATE$2","loadingConfigData","configDataInitialized","_a","tslib_1.__spread","index","active","moveItemInArray","pTabs_1","cTabs","transferArrayItem","id","_d","path","pathSegment","_e","_f","splice","_g","newPanels","Information","InformationAPIActions","informationReducer","INITIAL_STATE$3","SourceListAPIActions","initializeList","pkAllowedClasses","INITIALIZE_LIST","SourceList","sourceListReducer","INITIAL_STATE$4","ProjectsActions","loadProjectsSucceeded","LOAD_PROJECTS_SUCCEEDED","records","projectListReducer","INITIAL_STATE$5","record","createProjectsReducer","subfieldIdToString","by","name","paginateBy","getFromTo","getStart","getEnd","ReducerFactory","configs","updatingBy","deletingBy","removingBy","createReducers","reducers","obj2KeyValueArr","createModelReducers","entityModelMapReducers","createEntityModelMapReducers","composeReducers","combineReducers","facette","innerState","mergeItemsInState","indexKeyObject","deletingKey_1","deleteItemsFromState","removingKey_1","key_1","fromTo_1","key_2","fromTo_2","meta_1","key_3","fromTo_3","start_1","rows_1","rows","modelPath","idx","fkClass","pkEntities","cb","outerState","deFacette","enFacette","isFacetteByPk","facetteByPk","Error","groups","groupByKey","mainIndexKey","removedItem","itemKey","g","groupKey","getGroupKeyOfItem","itemToSet","equalsFn","oldGroupKey","newGroupKey","indexKey","createSysReducer","createDfhReducer","createInfReducer","createDatReducer","createProReducer","createWarReducer","createTabReducer","sandboxStateReducer","pendingRequestReducer","resolvedRequestReducer","cleanupResolved","setAppState","rootReducer","defaultFormReducer","loadingBar","routes","routerReducer","information","sources","sandboxState","projects","war","pending","resolved","APP_INITIAL_STATE","InjectionToken","ReduxModule","devTools","rootEpics","parentModule","sdkLb3","sdkLb4","initialState","errors","join","epicMiddleware","createEpicMiddleware","configureStore","dynamicMiddlewares","isEnabled","enhancer","run","forRoot","ngModule","providers","provide","useValue","NgModule","imports","NgReduxModule","SlimLoadingBarModule","ToastyModule","DevToolsExtension","Optional","SkipSelf","SdkLb3Module","SdkLb4Module","Inject","EntityDetail","showProperties","showRightArea","rightPanelTabs","rightPanelActiveTab","showHeader","DigitalSlice","ChunkSlice","ColumnSlice","ClassColumnMappingSlice","TextPropertySlice","NamespaceSlice","DfhProfileSlice","DfhClassSlice","DfhPropertySlice","DfhLabelSlice","InfPersistentItemSlice","InfTemporalEntitySlice","InfStatementSlice","InfPlaceSlice","InfTimePrimitiveSlice","InfLanguageSlice","InfAppellationSlice","InfLangStringSlice","InfDimensionSlice","InfTextPropertySlice","TabCellSlice","Configuration","actionPath","JSON","parse"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { PubAccount } from '@kleiolab/lib-sdk-lb4';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { AccountRole, IAccount } from '../models/account.model';\n\nexport interface AccountActionMeta {\n  accountId?: number;\n  accountRoles?: AccountRole[];\n  account?: PubAccount;\n};\nexport type AccountAction = FluxStandardAction<IAccount, AccountActionMeta>;\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountActions {\n  static LOGIN = 'Account::LOGIN';\n  static LOGIN_SUCCEEDED = 'Account::LOGIN_SUCCEEDED';\n  static LOGIN_FAILED = 'Account::LOGIN_FAILED';\n\n  static LOAD_ROLES = 'Account::LOAD_ROLES';\n  static LOAD_ROLES_SUCCEEDED = 'Account::LOAD_ROLES_SUCCEEDED';\n  static LOAD_ROLES_FAILED = 'Account::LOAD_ROLES_FAILED';\n\n  static ACCOUNT_UPDATED = 'Account::ACCOUNT_UPDATED';\n\n\n  login(): AccountAction {\n    return {\n      type: AccountActions.LOGIN,\n      payload: null,\n      meta: null\n    };\n  }\n\n  loginSucceeded(account: PubAccount): AccountAction {\n    return {\n      type: AccountActions.LOGIN_SUCCEEDED,\n      payload: null,\n      meta: { account }\n    };\n  }\n\n  loginFailed(error): AccountAction {\n    return {\n      type: AccountActions.LOGIN_FAILED,\n      payload: null,\n      meta: null,\n      error\n    };\n  }\n\n  accountUpdated(account: PubAccount): AccountAction {\n    return {\n      type: AccountActions.ACCOUNT_UPDATED,\n      payload: null,\n      meta: { account }\n    };\n  }\n\n  // Roles of the account, used to check permissions\n  loadRoles(accountId: number): AccountAction {\n    return {\n      type: AccountActions.LOAD_ROLES,\n      payload: null,\n      meta: { accountId }\n    };\n  }\n\n  loadRolesSucceeded(accountRoles: AccountRole[]): AccountAction {\n    return {\n      type: AccountActions.LOAD_ROLES_SUCCEEDED,\n      payload: null,\n      meta: { accountRoles }\n    };\n  }\n\n  loadRolesFailed(accountRoles: AccountRole[]): AccountAction {\n    return {\n      type: AccountActions.LOAD_ROLES_FAILED,\n      payload: null,\n      meta: null\n    };\n  }\n\n}\n","import { dispatch } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { FluxStandardAction } from 'flux-standard-action';\n\n// Flux-standard-action gives us stronger typing of our actions.\ntype Payload = any;\ninterface MetaData { null };\nexport type LoadingBarAction = FluxStandardAction<Payload, undefined>;\n\n\n/**\n* This actions start, stop and complete the global loading bar\n* using a SlimLoadingBarService instantiated within the loading-bar\n* module.\n*\n* In order to show a loading bar in GUI, use the LoadingBarComponent\n* exported by this module.\n*/\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingBarActions {\n  static readonly START = 'LOADING_BAR_START';\n  static readonly STOP = 'LOADING_BAR_STOP';\n  static readonly COPMLETE = 'LOADING_BAR_COPMLETE';\n  @dispatch() startLoading = (): LoadingBarAction => ({\n    type: LoadingBarActions.START,\n    meta: null,\n    payload: null,\n  })\n\n  @dispatch() stopLoading = (): LoadingBarAction => ({\n    type: LoadingBarActions.STOP,\n    meta: null,\n    payload: null\n  })\n\n  @dispatch() completeLoading = (): LoadingBarAction => ({\n    type: LoadingBarActions.COPMLETE,\n    meta: null,\n    payload: null,\n  })\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { NotificationsI } from '../models/notifications.models';\n\ntype Payload = NotificationsI;\ninterface MetaData {\n  itemsArray?: any[]\n};\nexport type NotificationsAPIAction = FluxStandardAction<Payload, MetaData>;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsAPIActions {\n  static readonly ADD_TOAST = 'Notifications::ADD_TOAST';\n\n  addToast = (payload: Payload): NotificationsAPIAction => ({\n    type: NotificationsAPIActions.ADD_TOAST,\n    meta: null,\n    payload\n  });\n\n}\n","import { Injectable } from '@angular/core';\nimport { PubAccountApi } from '@kleiolab/lib-sdk-lb3';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { Action } from 'redux';\nimport { combineEpics, Epic, ofType } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { AccountAction, AccountActions } from '../actions/account.actions';\nimport { LoadingBarActions } from '../actions/loading-bar.actions';\nimport { NotificationsAPIActions } from '../actions/notifications.actions';\nimport { AccountRole } from '../models/account.model';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountEpics {\n  constructor(\n    private actions: AccountActions,\n    private loadingBarActions: LoadingBarActions,\n    private accountApi: PubAccountApi,\n    private notificationActions: NotificationsAPIActions,\n  ) { }\n\n  public createEpics(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return combineEpics(\n      this.loadRoles()\n    );\n  }\n\n  private loadRoles(): Epic {\n    return (action$, store) => action$.pipe(\n      ofType(AccountActions.LOAD_ROLES),\n      mergeMap((action: AccountAction) => new Observable<Action>((globalStore) => {\n\n        globalStore.next(this.loadingBarActions.startLoading());\n        this.accountApi.getRoles(action.meta.accountId)\n          .subscribe((data: AccountRole[]) => {\n            globalStore.next(this.loadingBarActions.completeLoading());\n            globalStore.next(this.actions.loadRolesSucceeded(data));\n          }, error => {\n            globalStore.next(this.notificationActions.addToast({\n              type: 'error',\n              options: { title: error }\n            }))\n          })\n      }))\n\n    )\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { DatChunk, InfPersistentItem, InfTemporalEntity, ProDfhClassProjRel, ProInfoProjRel } from '@kleiolab/lib-sdk-lb3';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { ListType, Panel, PanelTab, ProjectDetail, ProjectPreview, TypePeIt } from '../models/active-project.models';\n\nexport interface ActiveProjectMeta {\n\n  projectPreview?: ProjectPreview;\n\n  pk_project?: number;\n  pk_entity?: number;\n  pk_entities?: number[];\n  pk_classes?: number[]\n  pk_ui_context?: number;\n  entity_version?: number;\n\n\n  chunk?: DatChunk\n  teEnGraphs?: InfTemporalEntity[]\n  peItGraphs?: InfPersistentItem[]\n  types?: TypePeIt[]\n\n  // CRM and Config\n  projRel?: ProDfhClassProjRel;\n  dfh_pk_class?: number;\n  // hasTypeProperties?: HasTypePropertyReadable[]\n\n  // Information\n  infProjRel?: ProInfoProjRel;\n\n  // layout\n  panels?: Panel[];\n  list?: ListType;\n  panelIndex?: number;\n  panelSerial?: number;\n  tabIndex?: number;\n  uiIdSerial?: number;\n  focusedPanel?: number;\n  previousPanelIndex?: number\n  currentPanelIndex?: number\n  previousTabIndex?: number\n  currentTabIndex?: number\n  tab?: PanelTab<any>;\n\n  // Layout Modals\n  // createOrAddEntity?: CreateOrAddEntity; // Check if this really belongt in state\n};\ntype Payload = ProjectDetail;\nexport type ActiveProjectAction = FluxStandardAction<Payload, ActiveProjectMeta>;\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActiveProjectActions {\n\n  /* tslint:disable:member-ordering */\n\n  /************************************************************************************\n   * CRM and Config (metadata, crm)\n  ************************************************************************************/\n  static LOAD_PROJECT_BASICS = 'ActiveProject::LOAD_PROJECT_BASICS';\n  static LOAD_PROJECT_BASICS_FAILED = 'ActiveProject::LOAD_PROJECT_BASICS_FAILED';\n  static LOAD_PROJECT_BASICS_SUCCEEDED = 'ActiveProject::LOAD_PROJECT_BASICS_SUCCEEDED';\n  static LOAD_PROJECT_CONFIG = 'ActiveProject::LOAD_PROJECT_CONFIG';\n  static LOAD_PROJECT_CONFIG_SUCCEEDED = 'ActiveProject::LOAD_PROJECT_CONFIG_SUCCEEDED';\n\n\n  loadProjectBasics(pk_project: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.LOAD_PROJECT_BASICS,\n      payload: null,\n      meta: {\n        pk_project\n      }\n    }\n  }\n\n  loadProjectBasiscsSucceded(projectPreview: ProjectPreview): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.LOAD_PROJECT_BASICS_SUCCEEDED,\n      payload: null,\n      meta: { projectPreview },\n    }\n  }\n\n  loadProjectConfig(pk_project: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.LOAD_PROJECT_CONFIG,\n      payload: null,\n      meta: {\n        pk_project\n      },\n    }\n  }\n\n  loadProjectConfigSucceeded(): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.LOAD_PROJECT_CONFIG_SUCCEEDED,\n      payload: {\n        // crm\n      },\n      meta: null,\n    }\n  }\n\n  /************************************************************************************\n   * Layout -- Tabs\n  ************************************************************************************/\n  static SET_LIST_TYPE = 'ActiveProject::SET_LIST_TYPE';\n\n  setListType(list: ListType): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_LIST_TYPE,\n      payload: null,\n      meta: {\n        list\n      }\n    }\n  }\n\n  static SET_PANELS = 'ActiveProject::SET_PANELS';\n\n  setPanels(panels: Panel[], uiIdSerial: number, panelSerial: number, focusedPanel: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_PANELS,\n      payload: null,\n      meta: { panels, uiIdSerial, panelSerial, focusedPanel }\n    }\n  }\n\n  static ACTIVATE_TAB = 'ActiveProject::ACTIVATE_TAB';\n\n  activateTab(panelIndex: number, tabIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.ACTIVATE_TAB,\n      payload: null,\n      meta: {\n        panelIndex, tabIndex\n      }\n    }\n  }\n  static MOVE_TAB = 'ActiveProject::MOVE_TAB';\n  moveTab(previousPanelIndex: number, currentPanelIndex: number, previousTabIndex: number, currentTabIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.MOVE_TAB,\n      payload: null,\n      meta: {\n        previousPanelIndex, currentPanelIndex, previousTabIndex, currentTabIndex\n      }\n    }\n  }\n\n  static CLOSE_TAB = 'ActiveProject::CLOSE_TAB';\n  closeTab(panelIndex: number, tabIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.CLOSE_TAB,\n      payload: null,\n      meta: {\n        panelIndex, tabIndex\n      }\n    }\n  }\n\n  static ADD_TAB = 'ActiveProject::ADD_TAB';\n  addTab<TabData>(tab: PanelTab<TabData>): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.ADD_TAB,\n      payload: null,\n      meta: { tab }\n    }\n  }\n\n  static SPLIT_PANEL = 'ActiveProject::SPLIT_PANEL';\n  splitPanel(previousPanelIndex: number, tabIndex: number, currentPanelIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SPLIT_PANEL,\n      payload: null,\n      meta: { previousPanelIndex, tabIndex, currentPanelIndex }\n    }\n  }\n\n  static CLOSE_PANEL = 'ActiveProject::CLOSE_PANEL';\n  closePanel(panelIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.CLOSE_PANEL,\n      payload: null,\n      meta: { panelIndex }\n    }\n  }\n\n\n  static FOCUS_PANEL = 'ActiveProject::FOCUS_PANEL';\n  focusPanel(panelIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.FOCUS_PANEL,\n      payload: null,\n      meta: { panelIndex }\n    }\n  }\n\n\n  // /************************************************************************************\n  //  * Layout -- Modals\n  // ************************************************************************************/\n  // // create or add entity modal\n  // static readonly OPEN_ADD_FORM = 'ActiveProject::OPEN_ADD_FORM';\n  // static readonly CLOSE_ADD_FORM = 'ActiveProject::CLOSE_ADD_FORM';\n\n  // openAddForm = (createOrAddEntity: CreateOrAddEntity): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.OPEN_ADD_FORM,\n  //   meta: { createOrAddEntity },\n  //   payload: null\n  // })\n\n  // closeAddForm = (): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.CLOSE_ADD_FORM,\n  //   meta: null,\n  //   payload: null\n  // })\n\n\n  /************************************************************************************\n  * Information cache\n  ************************************************************************************/\n\n  // EntityPreviews\n  // static LOAD_ENTITY_PREVIEW = 'ActiveProject::LOAD_ENTITY_PREVIEW';\n  // static LOAD_ENTITY_PREVIEW_SUCCEEDED = 'ActiveProject::LOAD_ENTITY_PREVIEW_SUCCEEDED';\n  // static LOAD_ENTITY_PREVIEW_FAILED = 'ActiveProject::LOAD_ENTITY_PREVIEW_FAILED';\n\n\n  // loadEntityPreview(pk_project: number, pk_entity: number, pk_ui_context: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_ENTITY_PREVIEW,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entity, pk_ui_context\n  //     }\n  //   }\n  // }\n\n  // loadEntityPreviewSucceeded(entityPreview: EntityPreview): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_ENTITY_PREVIEW_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       entityPreview\n  //     },\n  //   }\n  // }\n\n  // loadEntityPreviewFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_ENTITY_PREVIEW_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n  // // EntityPreviews\n  // static LOAD_TYPES = 'ActiveProject::LOAD_TYPES';\n  // static LOAD_TYPES_SUCCEEDED = 'ActiveProject::LOAD_TYPES_SUCCEEDED';\n  // static LOAD_TYPES_FAILED = 'ActiveProject::LOAD_TYPES_FAILED';\n  // loadTypes(pk_project: number, pk_classes: number[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TYPES,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_classes\n  //     }\n  //   }\n  // }\n\n  // loadTypesSucceeded(types: TypePeIt[], pk_classes: number[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TYPES_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       types, pk_classes\n  //     },\n  //   }\n  // }\n\n  // loadTypesFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TYPES_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n\n  // // Entities Details for display in Modals\n  // static LOAD_ENTITY_DETAIL_FOR_MODAL = 'ActiveProject::LOAD_ENTITY_DETAIL_FOR_MODAL';\n  // static LOAD_PE_IT_DETAIL_FOR_MODAL_SUCCEEDED = 'ActiveProject::LOAD_PE_IT_DETAIL_FOR_MODAL_SUCCEEDED';\n  // static LOAD_TE_EN_DETAIL_FOR_MODAL_SUCCEEDED = 'ActiveProject::LOAD_TE_EN_DETAIL_FOR_MODAL_SUCCEEDED'; // TODO: Implement action/reducer\n  // static LOAD_ENTITY_DETAIL_FOR_MODAL_FAILED = 'ActiveProject::LOAD_ENTITY_DETAIL_FOR_MODAL_FAILED';\n\n  // loadEntityDetailForModal(pk_project: number, pk_entity: number, pk_ui_context: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_ENTITY_DETAIL_FOR_MODAL,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entity, pk_ui_context\n  //     }\n  //   }\n  // }\n\n  // loadPeItDetailsForModalSucceeded(peItDetail: EntityDetail): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_PE_IT_DETAIL_FOR_MODAL_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       peItDetail\n  //     },\n  //   }\n  // }\n\n  // loaEntitytDetailsForModalFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_ENTITY_DETAIL_FOR_MODAL_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n  // // Chunks\n  // static LOAD_CHUNK = 'ActiveProject::LOAD_CHUNK';\n  // static LOAD_CHUNK_SUCCEEDED = 'ActiveProject::LOAD_CHUNK_SUCCEEDED';\n  // static LOAD_CHUNK_FAILED = 'ActiveProject::LOAD_CHUNK_FAILED';\n\n  // loadChunk(pk_project: number, pk_entity: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_CHUNK,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entity\n  //     }\n  //   }\n  // }\n\n  // loadChunkSucceeded(chunk: DatChunk): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_CHUNK_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       chunk\n  //     },\n  //   }\n  // }\n\n  // loadChunkFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_CHUNK_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n  // // PeIt Graphs\n  // static LOAD_PEIT_GRAPHS = 'ActiveProject::LOAD_PEIT_GRAPHS';\n  // static LOAD_PEIT_GRAPHS_SUCCEEDED = 'ActiveProject::LOAD_PEIT_GRAPHS_SUCCEEDED';\n  // static LOAD_PEIT_GRAPHS_FAILED = 'ActiveProject::LOAD_PEIT_GRAPHS_FAILED';\n\n\n  // loadPeItGraphs(pk_project: number, pk_entities: number[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_PEIT_GRAPHS,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entities\n  //     }\n  //   }\n  // }\n\n  // loadPeItGraphsSucceeded(peItGraphs: InfPersistentItem[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_PEIT_GRAPHS_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       peItGraphs\n  //     },\n  //   }\n  // }\n\n  // loadPeItGraphsFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_PEIT_GRAPHS_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n  // // TeEn Graphs\n  // static LOAD_TEEN_GRAPHS = 'ActiveProject::LOAD_TEEN_GRAPHS';\n  // static LOAD_TEEN_GRAPHS_SUCCEEDED = 'ActiveProject::LOAD_TEEN_GRAPHS_SUCCEEDED';\n  // static LOAD_TEEN_GRAPHS_FAILED = 'ActiveProject::LOAD_TEEN_GRAPHS_FAILED';\n\n  // loadTeEnGraphs(pk_project: number, pk_entities: number[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TEEN_GRAPHS,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entities\n  //     }\n  //   }\n  // }\n\n  // loadTeEnGraphsSucceeded(teEnGraphs: InfTemporalEntity[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TEEN_GRAPHS_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       teEnGraphs\n  //     },\n  //   }\n  // }\n\n  // loadTeEnGraphsFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TEEN_GRAPHS_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n  // // Queries\n  // static LOAD_QUERIES = 'ActiveProject::LOAD_QUERIES';\n  // static LOAD_QUERIES_SUCCEEDED = 'ActiveProject::LOAD_QUERIES_SUCCEEDED';\n  // static LOAD_QUERIES_FAILED = 'ActiveProject::LOAD_QUERIES_FAILED';\n\n  // loadQueries(pk_project: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERIES,\n  //     payload: null,\n  //     meta: {\n  //       pk_project\n  //     }\n  //   }\n  // }\n\n  // loadQueriesSucceeded(comQueryArray: ComQueryV[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERIES_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       comQueryArray\n  //     },\n  //   }\n  // }\n\n  // loadQueriesFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERIES_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n  // // Query Version\n  // static LOAD_QUERY_VERSION = 'ActiveProject::LOAD_QUERY_VERSION';\n  // static LOAD_QUERY_VERSION_SUCCEEDED = 'ActiveProject::LOAD_QUERY_VERSION_SUCCEEDED';\n  // static LOAD_QUERY_VERSION_FAILED = 'ActiveProject::LOAD_QUERY_VERSION_FAILED';\n\n  // loadQueryVersion(pk_project: number, pk_entity: number, entity_version: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERY_VERSION,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entity, entity_version\n  //     }\n  //   }\n  // }\n\n  // loadQueryVersionSucceeded(comQuery: ProQuery): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERY_VERSION_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       comQuery\n  //     },\n  //   }\n  // }\n\n  // loadQueryVersionFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERY_VERSION_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n\n  // // Visuals\n  // static LOAD_VISUALS = 'ActiveProject::LOAD_VISUALS';\n  // static LOAD_VISUALS_SUCCEEDED = 'ActiveProject::LOAD_VISUALS_SUCCEEDED';\n  // static LOAD_VISUALS_FAILED = 'ActiveProject::LOAD_VISUALS_FAILED';\n\n  // loadVisuals(pk_project: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUALS,\n  //     payload: null,\n  //     meta: {\n  //       pk_project\n  //     }\n  //   }\n  // }\n\n  // loadVisualsSucceeded(comVisualArray: ComVisualV[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUALS_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       comVisualArray\n  //     },\n  //   }\n  // }\n\n  // loadVisualsFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUALS_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n  // // Visual Version\n  // static LOAD_VISUAL_VERSION = 'ActiveProject::LOAD_VISUAL_VERSION';\n  // static LOAD_VISUAL_VERSION_SUCCEEDED = 'ActiveProject::LOAD_VISUAL_VERSION_SUCCEEDED';\n  // static LOAD_VISUAL_VERSION_FAILED = 'ActiveProject::LOAD_VISUAL_VERSION_FAILED';\n\n  // loadVisualVersion(pk_project: number, pk_entity: number, entity_version?: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUAL_VERSION,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entity, entity_version\n  //     }\n  //   }\n  // }\n\n  // loadVisualVersionSucceeded(comVisualArray: ComVisualV[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUAL_VERSION_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       comVisualArray\n  //     },\n  //   }\n  // }\n\n  // loadVisualVersionFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUAL_VERSION_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n\n\n  /************************************************************************************\n   *  Things for Mentionings / Annotations\n  ************************************************************************************/\n  static UPDATE_SELECTED_CHUNK = 'ActiveProject::UPDATE_SELECTED_CHUNK';\n  static SET_REFINING_CHUNK = 'ActiveProject::SET_REFINING_CHUNK';\n  static SET_CREATING_MENTIONING = 'ActiveProject::SET_CREATING_MENTIONING';\n\n\n  // updateSelectedChunk(selectedChunk: DatChunk): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.UPDATE_SELECTED_CHUNK,\n  //     payload: { selectedChunk },\n  //     meta: null\n  //   }\n  // }\n\n  setRefiningChunk(refiningChunk: boolean): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_REFINING_CHUNK,\n      payload: { refiningChunk },\n      meta: null\n    }\n  }\n\n  setCreatingMentioning(creatingMentioning: boolean): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_CREATING_MENTIONING,\n      payload: { creatingMentioning },\n      meta: null\n    }\n  }\n\n  /************************************************************************************\n  * Highlighting of mentionings in the gui\n  ************************************************************************************/\n  static SET_MENTIONINGS_FOCUSED_IN_TEXT = 'ActiveProject::SET_MENTIONINGS_FOCUSED_IN_TEXT';\n  static SET_MENTIONINGS_FOCUSED_IN_TABLE = 'ActiveProject::SET_MENTIONINGS_FOCUSED_IN_TABLE';\n\n  setMentioningsFocusedInText(mentioningsFocusedInText: number[]): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_MENTIONINGS_FOCUSED_IN_TEXT,\n      payload: { mentioningsFocusedInText },\n      meta: null\n    }\n  }\n\n  setMentioningsFocusedInTable(mentioningsFocusedInTable: number[]): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_MENTIONINGS_FOCUSED_IN_TABLE,\n      payload: { mentioningsFocusedInTable },\n      meta: null\n    }\n  }\n\n\n  // /*********************************************************************\n  //  *  Methods to manage enabling and disabling a class for the project\n  //  *********************************************************************/\n  // static readonly UPSERT_CLASS_PROJ_REL = 'ActiveProject::UPSERT_CLASS_PROJ_REL';\n  // static readonly UPSERT_CLASS_PROJ_REL_SUCCEEDED = 'ActiveProject::UPSERT_CLASS_PROJ_REL_SUCCEEDED';\n  // static readonly UPSERT_CLASS_PROJ_REL_FAILED = 'ActiveProject::UPSERT_CLASS_PROJ_REL_FAILED';\n\n  // upsertClassProjRel = (projRel: ProDfhClassProjRel, dfh_pk_class: number): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_CLASS_PROJ_REL,\n  //   meta: { projRel, dfh_pk_class },\n  //   payload: null,\n  // });\n\n  // upsertClassProjRelSucceeded = (projRel: ProDfhClassProjRel, dfh_pk_class: number): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_CLASS_PROJ_REL_SUCCEEDED,\n  //   meta: { projRel, dfh_pk_class },\n  //   payload: null\n  // })\n\n  // upsertClassProjRelFailed = (error, dfh_pk_class: number): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_CLASS_PROJ_REL_FAILED,\n  //   meta: { dfh_pk_class },\n  //   payload: null,\n  //   error,\n  // })\n\n\n  // /*********************************************************************\n  //  *  Methods to manage enabling and disabling an entity for the project\n  //  *********************************************************************/\n  // static readonly UPSERT_ENTITY_PROJ_REL = 'ActiveProject::UPSERT_ENTITY_PROJ_REL';\n  // static readonly UPSERT_ENTITY_PROJ_REL_SUCCEEDED = 'ActiveProject::UPSERT_ENTITY_PROJ_REL_SUCCEEDED';\n  // static readonly UPSERT_ENTITY_PROJ_REL_FAILED = 'ActiveProject::UPSERT_ENTITY_PROJ_REL_FAILED';\n\n  // upsertEntityProjRel = (infProjRel: ProInfoProjRel): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_ENTITY_PROJ_REL,\n  //   meta: { infProjRel },\n  //   payload: null,\n  // });\n\n  // upsertEntityProjRelSucceeded = (infProjRel: ProInfoProjRel): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_ENTITY_PROJ_REL_SUCCEEDED,\n  //   meta: { infProjRel },\n  //   payload: null\n  // })\n\n  // upsertEntityProjRelFailed = (error): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_ENTITY_PROJ_REL_FAILED,\n  //   meta: null,\n  //   payload: null,\n  //   error,\n  // })\n\n\n  /************************************************************************************\n   * Destroy the active project state (on closing a project)\n  ************************************************************************************/\n  static DESTROY = 'ActiveProject::DESTROY';\n  destroy(): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.DESTROY,\n      payload: null,\n      meta: null,\n    }\n  }\n}\n","import { DatDigital, DatTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { ReducerConfigCollection } from '../_helpers/reducer-factory';\nimport { DatClassColumnMapping } from '@kleiolab/lib-sdk-lb4';\n\nexport const datRoot = 'dat';\nexport const facetteByPk = 'by_namespace';\n\nexport const datDefinitions: ReducerConfigCollection = {\n  digital: {\n    equals: (newItem: DatDigital, oldItem: DatDigital) => {\n      if (!oldItem.quill_doc && newItem.quill_doc) return false;\n      return (\n        newItem.pk_entity === oldItem.pk_entity &&\n        newItem.entity_version === oldItem.entity_version\n      )\n    },\n    indexBy: {\n      keyInStore: 'pk_entity__entity_version',\n      indexByFn: (item) => item.pk_entity.toString() + '_' + item.entity_version.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'pk_entity',\n        groupByFn: (item): string => item.pk_entity.toString()\n      },\n      {\n        keyInStore: 'pk_text',\n        groupByFn: (item): string => item.pk_text.toString()\n      }\n    ]\n  },\n  chunk: {\n    // facetteByPk,\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_text',\n        groupByFn: (item): string => item.fk_text.toString()\n      }\n    ]\n  },\n  column: {\n    // facetteByPk,\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_digital',\n        groupByFn: (item): string => item.fk_digital.toString()\n      }\n    ]\n  },\n  class_column_mapping: {\n    // facetteByPk,\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_column',\n        groupByFn: (item: DatClassColumnMapping): string => item.fk_column.toString()\n      }\n    ]\n  },\n  text_property: {\n    // facetteByPk,\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_entity__fk_system_type',\n        groupByFn: (item: DatTextProperty): string => item.fk_entity + '_' + item.fk_system_type\n      }\n    ]\n  },\n  namespace: {\n    // facetteByPk,\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_project',\n        groupByFn: (item): string => item.fk_project.toString()\n      }\n    ]\n  }\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { GvSubfieldPage } from '@kleiolab/lib-sdk-lb4';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { ActionsObservable } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { IAppState } from '../../root/models/model';\n\nexport interface LoadActionMeta { addPending: string, pk?: number }\nexport interface LoadVersionAction extends LoadActionMeta { pkEntity: number, entityVersion: number };\nexport interface LoadByPkAndVersionActionMeta { addPending: string, pk?: number, pkEntity: number, version: number }\n\nexport interface ModifyActionMeta<Model> { items: Model[], addPending: string, pk?: number }\nexport interface SucceedActionMeta<Model> { items: Model[], removePending: string, pk?: number }\nexport interface FailActionMeta { removePending: string, pk?: number }\n\nexport interface PaginateByParam { [key: string]: number | boolean | string }\nexport interface LoadPageMeta { page: GvSubfieldPage, pk?: number }\nexport interface LoadPageSucceededMeta { pks: number[], count: number, page: GvSubfieldPage, pk?: number }\n\n\n\nexport interface ActionResultObservable<Model> { pending$: Observable<boolean>, resolved$: Observable<SucceedActionMeta<Model>>, key: string }\n\nexport type FluxActionObservable<Payload, Meta> = ActionsObservable<FluxStandardAction<Payload, Meta>>\n\n\n\n/**\n * A: Schema Action Type (e.g. DfhAction)\n * M: Model for whitch the Actions are produced\n */\n\nexport class SchemaActionsFactory<Payload, Model> {\n\n  load: (suffix?: string, pk?: number) => ActionResultObservable<Model>;\n\n  /**\n   * @param pk is used for facetting\n   */\n  loadSucceeded: (items: Model[], removePending: string, pk?: number) => void;\n\n  /**\n   * @param pk is used for facetting\n   */\n  upsert: (items: Partial<Model>[], pk?: number) => ActionResultObservable<Model>;\n\n  /**\n   * @param pk is used for facetting\n   */\n  upsertSucceeded: (items: Model[], removePending: string, pk?: number) => void;\n\n  /**\n   * @param pk is used for facetting\n   */\n  delete: (items: Model[], pk?: number) => ActionResultObservable<Model>;\n\n  /**\n   * @param pk is used for facetting\n   */\n  deleteSucceeded: (items: Model[], removePending: string, pk?: number) => void;\n\n  /**\n   * @param pk is used for facetting\n   */\n  failed: (error, removePending: string, pk?: number) => void;\n\n\n  /**\n   * @param pk is used for facetting\n   */\n  loadPage: (page: GvSubfieldPage, pk?: number) => void;\n\n  /**\n * @param pk is used for facetting\n */\n  loadPageSucceeded: (pks: number[], count: number, page: GvSubfieldPage, pk?: number) => void;\n  loadPageFailed: (page: GvSubfieldPage, pk?: number) => void;\n\n  /**\n   * this action is not model specific but pendingKey specific.\n   * Reducer will add whole meta part to the resolved key.\n   */\n  succeeded: (items: Model[], removePending: string, pk?: number) => void;\n\n  actionPrefix: string;\n  modelName: string;\n\n  constructor(public ngRedux: NgRedux<IAppState>) {\n  }\n\n\n  createCrudActions(actionPrefix: string, modelName: string): SchemaActionsFactory<Payload, Model> {\n    this.actionPrefix = actionPrefix;\n    this.modelName = modelName;\n\n    this.load = (suffix: string = '', pk?: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + (suffix ? '::' + suffix : ''),\n        meta: { addPending, pk },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<Model>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n\n    this.loadSucceeded = (items: Model[], removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, SucceedActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD_SUCCEEDED',\n        meta: { items, removePending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    /**\n     * Call the Redux Action to upsert model instances.\n     */\n    this.upsert = (items: Model[], pk?: number) => {\n      const addPending = U.uuid();\n      const action: FluxStandardAction<Payload, ModifyActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::UPSERT',\n        meta: { items, addPending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<Model>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n\n    this.upsertSucceeded = (items: Model[], removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, SucceedActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::UPSERT_SUCCEEDED',\n        meta: { items, removePending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    /**\n     * this action is not model specific but pendingKey specific.\n     * Reducer will add whole meta part to the resolved key\n     */\n    this.succeeded = (items: Model[], removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, SucceedActionMeta<Model>> = ({\n        type: 'general::UPSERT_SUCCEEDED',\n        meta: { items, removePending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n\n    /**\n    * Call the Redux Action to delete model instances.\n    */\n    this.delete = (items: Model[], pk?: number) => {\n      const addPending = U.uuid();\n      const action: FluxStandardAction<Payload, ModifyActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::DELETE',\n        meta: { items, addPending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<Model>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    this.deleteSucceeded = (items: Model[], removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, SucceedActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::DELETE_SUCCEEDED',\n        meta: { items, removePending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n\n\n    this.failed = (error, removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, FailActionMeta> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::FAILED',\n        meta: { removePending, pk },\n        payload: null,\n        error,\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n\n    this.loadPage = (page: GvSubfieldPage, pk?: number) => {\n      const action: FluxStandardAction<Payload, LoadPageMeta> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD_PAGE',\n        meta: { page, pk },\n        payload: null,\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    this.loadPageSucceeded = (pks: number[], count: number, page: GvSubfieldPage, pk?: number) => {\n      const action: FluxStandardAction<Payload, LoadPageSucceededMeta> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD_PAGE_SUCCEEDED',\n        meta: { page, pks, count, pk },\n        payload: null,\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    this.loadPageFailed = (page: GvSubfieldPage, pk?: number) => {\n      const action: FluxStandardAction<Payload, LoadPageMeta> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD_PAGE_FAILED',\n        meta: { page, pk },\n        payload: null,\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    return this;\n  }\n\n}\n\nexport interface SchemaObjectLoadActionMeta { removePending: string, pk?: number }\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { DatChunk, DatColumn, DatDigital, DatNamespace, DatTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { DatClassColumnMapping } from '@kleiolab/lib-sdk-lb4';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { IAppState } from '../../root/models/model';\nimport { ChunkSlice, ClassColumnMappingSlice, ColumnSlice, DigitalSlice, NamespaceSlice, TextPropertySlice } from '../models/dat.models';\nimport { datRoot } from '../reducer-configs/dat.config';\nimport { ActionResultObservable, LoadActionMeta, LoadVersionAction, SchemaActionsFactory, SucceedActionMeta } from '../_helpers/schema-actions-factory';\n\n\nexport class DigitalActionsFactory extends SchemaActionsFactory<DigitalSlice, DatDigital> {\n\n  // Suffixes of load action types\n  static readonly LOAD_VERSION = 'LOAD_VERSION';\n\n  /**\n   * Load a version. if entityVersion omitted, latest version is returned.\n   */\n  loadVersion: (pkEntity: number, entityVersion?: number) => ActionResultObservable<DatDigital>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): DigitalActionsFactory {\n    Object.assign(this, this.createCrudActions(datRoot, 'digital'))\n\n    this.loadVersion = (pkEntity: number, entityVersion?: number) => {\n      const addPending = U.uuid()\n\n      const action: FluxStandardAction<DigitalSlice, LoadVersionAction> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + DigitalActionsFactory.LOAD_VERSION,\n        meta: { addPending, pkEntity, entityVersion },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DatDigital>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n    return this;\n  }\n}\n\nexport interface LoadChunksOfDigitalAction extends LoadActionMeta { pkDigital: number }\n\nexport class ChunkActionsFactory extends SchemaActionsFactory<ChunkSlice, DatChunk> {\n\n  // Suffixes of load action types\n  static readonly CHUNKS_OF_DIGITAL = 'CHUNKS_OF_DIGITAL';\n\n  /**\n   * Load a version. if entityVersion omitted, latest version is returned.\n   */\n  loadChunksOfDigital: (pkDigital: number, pk: number) => ActionResultObservable<DatChunk>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ChunkActionsFactory {\n    Object.assign(this, this.createCrudActions(datRoot, 'chunk'))\n\n    this.loadChunksOfDigital = (pkDigital: number, pk: number) => {\n      const addPending = U.uuid()\n\n      const action: FluxStandardAction<ChunkSlice, LoadChunksOfDigitalAction> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ChunkActionsFactory.CHUNKS_OF_DIGITAL,\n        meta: { addPending, pkDigital, pk },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DatChunk>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n    return this;\n  }\n}\n\nexport interface LoadColumnsOfTableAction extends LoadActionMeta { pkDigital: number }\n\nexport class ColumnActionsFactory extends SchemaActionsFactory<ColumnSlice, DatColumn> {\n\n  // Suffixes of load action types\n  static readonly COLUMNS_OF_TABLE = 'COLUMNS_OF_TABLE';\n\n  /**\n   * Load a version. if entityVersion omitted, latest version is returned.\n   */\n  loadColumnsOfTable: (pkDigital: number, pk: number) => ActionResultObservable<DatColumn>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ColumnActionsFactory {\n    Object.assign(this, this.createCrudActions(datRoot, 'column'))\n\n    this.loadColumnsOfTable = (pkDigital: number, pk: number) => {\n      const addPending = U.uuid()\n\n      const action: FluxStandardAction<ColumnSlice, LoadColumnsOfTableAction> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ColumnActionsFactory.COLUMNS_OF_TABLE,\n        meta: { addPending, pkDigital, pk },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DatColumn>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n    return this;\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatActions {\n\n  digital = new DigitalActionsFactory(this.ngRedux).createActions();\n\n  chunk = new ChunkActionsFactory(this.ngRedux).createActions()\n\n  column = new ColumnActionsFactory(this.ngRedux).createActions()\n\n  class_column_mapping = new SchemaActionsFactory<ClassColumnMappingSlice, DatClassColumnMapping>(this.ngRedux).createCrudActions(datRoot, 'class_column_mapping')\n\n  namespace = new SchemaActionsFactory<NamespaceSlice, DatNamespace>(this.ngRedux).createCrudActions(datRoot, 'namespace')\n\n  text_property = new SchemaActionsFactory<TextPropertySlice, DatTextProperty>(this.ngRedux).createCrudActions(datRoot, 'text_property')\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","import { DfhLabel, DfhProfile } from '@kleiolab/lib-sdk-lb3';\nimport { DfhClass, DfhProperty } from '@kleiolab/lib-sdk-lb4';\nimport { ReducerConfigCollection } from '../_helpers/reducer-factory';\n\n\nexport const dfhRoot = 'dfh';\n\nexport const dfhLabelByFksKey = (item: Partial<DfhLabel>) => `${item.type || null}_${item.language || null}_${item.fk_class || null}_${item.fk_profile || null}_${item.fk_property || null}_${item.fk_project || null}`;\n\nexport const dfhDefinitions: ReducerConfigCollection = {\n  profile: {\n    indexBy: {\n      keyInStore: 'pk_profile',\n      indexByFn: (item: DfhProfile) => item.pk_profile.toString()\n    }\n  },\n  klass: {\n    indexBy: {\n      keyInStore: 'pk_class',\n      indexByFn: (item: DfhClass) => item.pk_class.toString(),\n    },\n    groupBy: [\n      {\n        keyInStore: 'basic_type',\n        groupByFn: (d: DfhClass): string => d.basic_type.toString()\n      },\n    ]\n  },\n  property: {\n    indexBy: {\n      keyInStore: 'pk_property__has_domain__has_range',\n      indexByFn: (item: DfhProperty) => item.pk_property + '_' + item.has_domain + '_' + item.has_range\n    },\n    groupBy: [\n      {\n        keyInStore: 'pk_property',\n        groupByFn: (d: DfhProperty): string => d.pk_property.toString()\n      },\n      {\n        keyInStore: 'has_domain',\n        groupByFn: (d: DfhProperty): string => d.has_domain.toString()\n      },\n      {\n        keyInStore: 'has_range',\n        groupByFn: (d: DfhProperty): string => d.has_range.toString()\n      },\n      // {\n      //   keyInStore: 'has_domain__fk_property',\n      //   groupByFn: (d: DfhProperty): string => d.has_domain + '_' + d.pk_property\n      // },\n      // {\n      //   keyInStore: 'has_range__fk_property',\n      //   groupByFn: (d: DfhProperty): string => d.has_range + '_' + d.pk_property\n      // },\n      {\n        keyInStore: 'is_has_type_subproperty',\n        groupByFn: (d: DfhProperty): string => d.is_has_type_subproperty ? d.is_has_type_subproperty.toString() : undefined\n      }\n    ]\n  },\n  label: {\n    indexBy: {\n      keyInStore: 'fks',\n      indexByFn: dfhLabelByFksKey\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_class__type',\n        groupByFn: (d: DfhLabel): string => !d.fk_class ? undefined : `${d.fk_class}_${d.type}`\n      },\n      {\n        keyInStore: 'fk_property__type',\n        groupByFn: (d: DfhLabel): string => !d.fk_property ? undefined : `${d.fk_property}_${d.type}`\n      },\n      {\n        keyInStore: 'fk_profile__type',\n        groupByFn: (d: DfhLabel): string => !d.fk_profile ? undefined : `${d.fk_profile}_${d.type}`\n      }\n    ]\n  },\n};\n","\nimport { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { DfhLabel, DfhProfile } from '@kleiolab/lib-sdk-lb3';\nimport { DfhClass, DfhProperty } from '@kleiolab/lib-sdk-lb4';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { filter } from 'rxjs/operators';\nimport { IAppState } from '../../root/models/model';\nimport { DfhClassSlice } from '../models/dfh.models';\nimport { dfhRoot } from '../reducer-configs/dfh.config';\nimport { ActionResultObservable, LoadActionMeta, SchemaActionsFactory, SucceedActionMeta } from '../_helpers/schema-actions-factory';\n\n\nexport class DfhProfileActionFactory extends SchemaActionsFactory<Payload, DfhProfile> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<DfhProfile>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): DfhProfileActionFactory {\n    Object.assign(this, this.createCrudActions(dfhRoot, 'profile'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + DfhProfileActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DfhProfile>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\nexport class DfhClassActionFactory extends SchemaActionsFactory<Payload, DfhClass> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<DfhClass>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): DfhClassActionFactory {\n    Object.assign(this, this.createCrudActions(dfhRoot, 'klass'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + DfhClassActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DfhClass>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\nexport class DfhPropertyActionFactory extends SchemaActionsFactory<Payload, DfhProperty> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<DfhProperty>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): DfhPropertyActionFactory {\n    Object.assign(this, this.createCrudActions(dfhRoot, 'property'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + DfhPropertyActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DfhProperty>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\nexport class DfhLabelActionFactory extends SchemaActionsFactory<Payload, DfhLabel> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<DfhLabel>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): DfhLabelActionFactory {\n    Object.assign(this, this.createCrudActions(dfhRoot, 'label'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + DfhLabelActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DfhLabel>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    return this;\n  }\n}\n\n\ntype Payload = DfhClassSlice;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DfhActions {\n\n\n  profile = new DfhProfileActionFactory(this.ngRedux).createActions();\n  klass = new DfhClassActionFactory(this.ngRedux).createActions();\n  property = new DfhPropertyActionFactory(this.ngRedux).createActions();\n  label = new DfhLabelActionFactory(this.ngRedux).createActions();\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","import { ReducerConfigCollection } from '../_helpers/reducer-factory';\n\nimport { InfStatement, InfTextProperty, InfDimension } from '@kleiolab/lib-sdk-lb3';\nimport { U } from '@kleiolab/lib-utils';\n\nexport const infRoot = 'inf';\n\nexport const infDefinitions: ReducerConfigCollection = {\n  persistent_item: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_class',\n        groupByFn: (d): string => d.fk_class.toString()\n      }\n    ]\n  },\n  temporal_entity: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_class',\n        groupByFn: (d): string => d.fk_class.toString()\n      }\n    ]\n  },\n  statement: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item: InfStatement) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: [\n      {\n        keyInStore: 'subject',\n        groupByFn: (d: InfStatement): string => indexStatementBySubject(d)\n      },\n      {\n        keyInStore: 'subject+property',\n        groupByFn: (d: InfStatement): string => indexStatementBySubjectProperty(d)\n      },\n      {\n        keyInStore: 'object',\n        groupByFn: (d: InfStatement): string => indexStatementByObject(d)\n      },\n      {\n        keyInStore: 'object+property',\n        groupByFn: (d: InfStatement): string => indexStatementByObjectProperty(d)\n      },\n\n      {\n        keyInStore: 'fk_subject_data',\n        groupByFn: (d: InfStatement): string => U.toStr0undef(d.fk_subject_data)\n      },\n    ]\n  },\n\n  text_property: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_concerned_entity__fk_class_field',\n        groupByFn: (d: InfTextProperty): string => d.fk_concerned_entity + '_' + d.fk_class_field\n      },\n      {\n        keyInStore: 'fk_concerned_entity',\n        groupByFn: (d: InfTextProperty): string => d.fk_concerned_entity.toString()\n      },\n    ]\n  },\n  lang_string: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n  appellation: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n  time_primitive: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n  place: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n  language: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n  dimension: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item: InfDimension) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n}\n\n\n\n\n\n/**\n * This function creates a key for the given statement by\n * - subject (all subject foreign keys)\n *\n * The key is created on the basis of the given foreign keys.\n * Keys are separated by dash '-', undefined keys are replaced by a zero '0'\n *\n * Use this function to index groups of statements with the same subject\n * or to retrieve statements from such a group index\n */\nexport function indexStatementBySubject(fks: IndexStatementBySubject = {}): string {\n  return `${fks.fk_subject_info || '0'}-${fks.fk_subject_data || '0'}-${(fks.fk_subject_tables_row) || '0'}-${(fks.fk_subject_tables_cell) || '0'}`\n}\nexport interface IndexStatementBySubject {\n  fk_subject_info?: number;\n  fk_subject_data?: number;\n  fk_subject_tables_row?: number;\n  fk_subject_tables_cell?: number;\n};\n\n\n/**\n * This function creates a key for the given statement by\n * - object (all object foreign keys)\n *\n * The key is created on the basis of the given foreign keys.\n * Keys are separated by dash '-', undefined keys are replaced by a zero '0'\n *\n * Use this function to index groups of statements with the same object\n * or to retrieve statements from such a group index\n */\nexport function indexStatementByObject(fks: IndexStatementByObject = {}): string {\n  return `${fks.fk_object_info || '0'}-${fks.fk_object_data || '0'}-${fks.fk_object_tables_row || '0'}-${fks.fk_object_tables_cell || '0'}`\n}\nexport interface IndexStatementByObject {\n  fk_object_info?: number;\n  fk_object_data?: number;\n  fk_object_tables_row?: number;\n  fk_object_tables_cell?: number;\n};\n\n\n/**\n * This function creates a key for the given statement by\n * - subject (all subject foreign keys)\n * - property (all property foreign keys)\n *\n * The key is created on the basis of the given foreign keys.\n * Keys are separated by dash '-', undefined keys are replaced by a zero '0'\n *\n * Use this function to index groups of statements with the same subject + property\n * or to retrieve statements from such a group index\n */\nexport function indexStatementBySubjectProperty(fks: IndexStatementBySubjectProperty = {}): string {\n  return `${fks.fk_subject_info || '0'}-${fks.fk_subject_data || '0'}-${(fks.fk_subject_tables_row) || '0'}-${(fks.fk_subject_tables_cell) || '0'}-${fks.fk_property || '0'}-${fks.fk_property_of_property || '0'}`\n}\nexport interface IndexStatementBySubjectProperty {\n  fk_subject_info?: number;\n  fk_subject_data?: number;\n  fk_subject_tables_row?: number;\n  fk_subject_tables_cell?: number;\n  fk_property?: number;\n  fk_property_of_property?: number;\n}\n\n\n/**\n * This function creates a key for the given statement by\n * - object (all object foreign keys)\n * - property (all property foreign keys)\n *\n * The key is created on the basis of the given foreign keys.\n * Keys are separated by dash '-', undefined keys are replaced by a zero '0'\n *\n * Use this function to index groups of statements with the same object + property\n * or to retrieve statements from such a group index\n */\nexport function indexStatementByObjectProperty(fks: IndexStatementByObjectProperty = {}): string {\n  return `${fks.fk_object_info || '0'}-${fks.fk_object_data || '0'}-${fks.fk_object_tables_row || '0'}-${fks.fk_object_tables_cell || '0'}-${fks.fk_property || '0'}-${fks.fk_property_of_property || '0'}`\n}\nexport interface IndexStatementByObjectProperty {\n  fk_object_info?: number;\n  fk_object_data?: number;\n  fk_object_tables_row?: number;\n  fk_object_tables_cell?: number;\n  fk_property?: number;\n  fk_property_of_property?: number;\n}\n\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { IAppState } from '../../root/models/model';\nimport { ActionResultObservable, ModifyActionMeta, SchemaActionsFactory, SucceedActionMeta } from './schema-actions-factory';\n\n@Injectable()\nexport class InfActionFactory<Payload, Model> extends SchemaActionsFactory<Payload, Model> {\n\n\n  /**\n   * @param pk is used for facetting\n   */\n  remove: (items: Model[], pk?: number) => ActionResultObservable<Model>;\n\n  /**\n   * @param pk is used for facetting\n   */\n  removeSucceeded: (items: Model[], removePending: string, pk?: number) => void;\n\n  constructor(public ngRedux: NgRedux<IAppState>) {\n    super(ngRedux);\n  }\n\n  createInfActions(actionPrefix: string, modelName: string): InfActionFactory<Payload, Model> {\n    this.createCrudActions(actionPrefix, modelName)\n\n    /**\n     * Call the Redux Action to remove model instances from project.\n     */\n    this.remove = (items: Model[], pk?: number) => {\n      const addPending = U.uuid();\n      const action: FluxStandardAction<Payload, ModifyActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::REMOVE',\n        meta: { items, addPending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<Model>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n\n    this.removeSucceeded = (items: Model[], removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, SucceedActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::REMOVE_SUCCEEDED',\n        meta: { items, removePending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    return this;\n  }\n\n}\n","\nimport { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { DatDigital, InfAppellation, InfDimension, InfLangString, InfLanguage, InfPersistentItem, InfPlace, InfStatement, InfTemporalEntity, InfTextProperty, InfTimePrimitive } from '@kleiolab/lib-sdk-lb3';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { filter } from 'rxjs/operators';\nimport { IAppState, SchemaObject } from '../../root/models/model';\nimport { InfDimensionSlice, InfPersistentItemSlice } from '../models/inf.models';\nimport { infRoot } from '../reducer-configs/inf.config';\nimport { InfActionFactory } from '../_helpers/inf-action-factory';\nimport { ActionResultObservable, LoadActionMeta, SchemaActionsFactory, SucceedActionMeta } from '../_helpers/schema-actions-factory';\n\n\n\ntype Payload = InfPersistentItemSlice;\n\nexport interface LoadByPkMeta extends LoadActionMeta { pkEntity: number };\nexport type LoadTypesOfProjectAction = LoadActionMeta;\nexport interface LoadTypeOfProjectAction extends LoadActionMeta { pkEntity: number };\ntype LoadNestetedPeItResult = InfPersistentItem[]\n\nexport class InfPersistentItemActionFactory extends InfActionFactory<Payload, InfPersistentItem> {\n\n  // Suffixes of load action types\n  // static readonly NESTED_BY_PK = 'NESTED_BY_PK';\n  static readonly MINIMAL_BY_PK = 'MINIMAL_BY_PK';\n  static readonly TYPES_OF_PROJECT = 'TYPES_OF_PROJECT';\n  static readonly TYPE_OF_PROJECT = 'TYPE_OF_PROJECT';\n\n  loadMinimal: (pkProject: number, pkEntity: number) => ActionResultObservable<SchemaObject>;\n  loadNestedObject: (pkProject: number, pkEntity: number) => ActionResultObservable<LoadNestetedPeItResult>;\n\n  typesOfProject: (pkProject: number) => ActionResultObservable<LoadActionMeta>;\n  // typeOfProject: (pkProject: number, pkEntity: number) => ActionResultObservable<LoadNestetedPeItResult>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): InfPersistentItemActionFactory {\n    Object.assign(this, this.createInfActions(infRoot, 'persistent_item'))\n\n    // this.loadNestedObject = (pkProject: number, pkEntity: number) => {\n    //   const addPending = U.uuid();\n    //   const action: FluxStandardAction<Payload, LoadByPkMeta> = {\n    //     type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfPersistentItemActionFactory.NESTED_BY_PK,\n    //     meta: { addPending, pk: pkProject, pkEntity },\n    //     payload: null,\n    //   };\n    //   this.ngRedux.dispatch(action)\n    //   return {\n    //     pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n    //     resolved$: this.ngRedux.select<SucceedActionMeta<LoadNestetedPeItResult>>(['resolved', addPending]).pipe(filter(x => !!x)),\n    //     key: addPending\n    //   };\n    // }\n    this.loadMinimal = (pkProject: number, pkEntity: number) => {\n      const addPending = U.uuid();\n      const action: FluxStandardAction<Payload, LoadByPkMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfPersistentItemActionFactory.MINIMAL_BY_PK,\n        meta: { addPending, pk: pkProject, pkEntity },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<SchemaObject>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    this.typesOfProject = (pkProject: number) => {\n      const addPending = U.uuid();\n\n      const action: FluxStandardAction<Payload, LoadTypesOfProjectAction> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfPersistentItemActionFactory.TYPES_OF_PROJECT,\n        meta: { addPending, pk: pkProject },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<LoadActionMeta>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    // this.typeOfProject = (pkProject: number, pkEntity: number) => {\n    //   const addPending = U.uuid();\n\n    //   const action: FluxStandardAction<Payload, LoadTypeOfProjectAction> = {\n    //     type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfPersistentItemActionFactory.TYPE_OF_PROJECT,\n    //     meta: { addPending, pk: pkProject, pkEntity },\n    //     payload: null,\n    //   };\n    //   this.ngRedux.dispatch(action)\n    //   return {\n    //     pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n    //     resolved$: this.ngRedux.select<SucceedActionMeta<LoadNestetedPeItResult>>(['resolved', addPending]).pipe(filter(x => !!x)),\n    //     key: addPending\n    //   };\n    // }\n\n    return this;\n  }\n\n}\nexport type PaginatedStatements = number[]\nexport interface PaginatedStatementList {\n  count: number,\n  schemas: SchemaObject,\n  paginatedStatements: PaginatedStatements\n}\nexport interface LoadPaginatedStatementListMeta extends LoadActionMeta {\n  pkSourceEntity: number // Pk of the source entity.\n  pkProperty: number // Pk of the property.\n  fkTargetClass: number // Pk of the target class.\n  isOutgoing: boolean // If true, the source entity is domain, else range.\n  limit: number // number of items per page.\n  offset: number // offset.\n  alternatives: boolean\n}\nexport class InfTemporalEntityActionFactory extends InfActionFactory<Payload, InfTemporalEntity> {\n\n  // Suffixes of load action types\n  static readonly OWN_PROPERTIES = 'OWN_PROPERTIES';\n  static readonly PAGINATED_LIST = 'PAGINATED_LIST';\n  static readonly PAGINATED_ALTERNATIVE_LIST = 'PAGINATED_ALTERNATIVE_LIST';\n\n  loadNestedObject: (pkProject: number, pkEntity: number) => ActionResultObservable<InfTemporalEntity[]>;\n  loadPaginatedList: (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => ActionResultObservable<PaginatedStatementList>;\n  loadPaginatedAlternativeList: (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => ActionResultObservable<PaginatedStatementList>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): InfTemporalEntityActionFactory {\n    Object.assign(this, this.createInfActions(infRoot, 'temporal_entity'))\n\n    this.loadNestedObject = (pkProject: number, pkEntity: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadByPkMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfTemporalEntityActionFactory.OWN_PROPERTIES,\n        meta: { addPending, pk: pkProject, pkEntity },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<InfTemporalEntity[]>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    this.loadPaginatedList = (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadPaginatedStatementListMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfTemporalEntityActionFactory.PAGINATED_LIST,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkSourceEntity,\n          fkTargetClass,\n          pkProperty,\n          isOutgoing,\n          limit,\n          offset,\n          alternatives: false\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<PaginatedStatementList>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n    this.loadPaginatedAlternativeList = (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadPaginatedStatementListMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfTemporalEntityActionFactory.PAGINATED_ALTERNATIVE_LIST,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkSourceEntity,\n          pkProperty,\n          fkTargetClass,\n          isOutgoing,\n          limit,\n          offset,\n          alternatives: true\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<PaginatedStatementList>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n    return this;\n  }\n}\nexport interface FindStatementByParams extends LoadActionMeta {\n  ofProject: boolean,\n  pkEntity: number,\n  pkInfoRange: number,\n  pkInfoDomain: number,\n  pkProperty: number,\n}\nexport interface ContentTreeMeta extends LoadActionMeta {\n  pkExpressionEntity: number,\n}\nexport interface SourcesAndDigitalsOfEntity extends LoadActionMeta {\n  ofProject: boolean,\n  pkEntity: number,\n}\nexport interface SourcesAndDigitalsOfEntityResult {\n  statements: InfStatement[],\n  digitals: DatDigital[],\n}\n\n\nexport interface LoadOutgoingAlternativeStatements extends LoadActionMeta { pkTemporalEntity: number, pkProperty: number };\nexport interface LoadIngoingAlternativeStatements extends LoadActionMeta { pkEntity: number, pkProperty: number };\nexport interface AddToProjectWithTeEntActionMeta { pkStatements: number[], pk: number, addPending: string };\n\nexport class InfStatementActionFactory extends InfActionFactory<Payload, InfStatement> {\n\n  // Suffixes of load action types\n  // static readonly ALTERNATIVES_OUTGOING = 'ALTERNATIVES_OUTGOING';\n  static readonly ALTERNATIVES_INGOING = 'ALTERNATIVES_INGOING';\n  // static readonly ADD_TO_PROJECT_WITH_TE_EN = 'ADD_TO_PROJECT_WITH_TE_EN';\n  static readonly PAGINATED_LIST = 'PAGINATED_LIST';\n  static readonly CONTENT_TREE = 'CONTENT_TREE';\n  static readonly SOURCES_AND_DIGITALS_OF_ENTITY = 'SOURCES_AND_DIGITALS_OF_ENTITY';\n  static readonly BY_PARAMS = 'BY_PARAMS';\n\n  loadIngoingAlternatives: (pkEntity, pkProperty, pkProjec) => ActionResultObservable<InfStatement>;\n  loadPaginatedList: (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => ActionResultObservable<PaginatedStatementList>;\n\n  // contentTree: (pkProject: number, pkExpressionEntity: number) => void;\n  sourcesAndDigitalsOfEntity: (ofProject: boolean, pkProject: number, pkEntity: number) => ActionResultObservable<SourcesAndDigitalsOfEntityResult>;\n  findByParams: (\n    ofProject: boolean,\n    pkProject: number,\n    pkEntity: number,\n    pkInfoRange: number,\n    pkInfoDomain: number,\n    pkProperty: number,\n  ) => void;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): InfStatementActionFactory {\n    Object.assign(this, this.createInfActions(infRoot, 'statement'))\n\n    this.findByParams = (\n      ofProject: boolean,\n      pkProject: number,\n      pkEntity: number,\n      pkInfoRange: number,\n      pkInfoDomain: number,\n      pkProperty: number,\n    ) => {\n      const action: FluxStandardAction<Payload, FindStatementByParams> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfStatementActionFactory.BY_PARAMS,\n        meta: {\n          addPending: U.uuid(),\n          pk: pkProject,\n          ofProject,\n          pkEntity,\n          pkInfoRange,\n          pkInfoDomain,\n          pkProperty,\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n    }\n\n\n    this.loadIngoingAlternatives = (pkEntity: number, pkProperty: number, pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadIngoingAlternativeStatements> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfStatementActionFactory.ALTERNATIVES_INGOING,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkEntity,\n          pkProperty,\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<InfStatement>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    this.loadPaginatedList = (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadPaginatedStatementListMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfStatementActionFactory.PAGINATED_LIST,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkSourceEntity,\n          fkTargetClass,\n          pkProperty,\n          isOutgoing,\n          limit,\n          offset,\n          alternatives: false\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<PaginatedStatementList>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    /**\n    * Get an nested object with everything needed to display the\n    * links made from an entity towards sources and digitals.\n    */\n    this.sourcesAndDigitalsOfEntity = (ofProject: boolean, pkProject: number, pkEntity: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, SourcesAndDigitalsOfEntity> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfStatementActionFactory.SOURCES_AND_DIGITALS_OF_ENTITY,\n        meta: {\n          addPending,\n          ofProject,\n          pk: pkProject,\n          pkEntity\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<SourcesAndDigitalsOfEntityResult>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\nexport interface LoadAlternativeTextProperties extends LoadActionMeta { fkEntity: number, fkClassField: number };\n\nexport class InfTextPropertyActionFactory extends InfActionFactory<Payload, InfTextProperty> {\n\n  // Suffixes of load action types\n  static readonly ALTERNATIVES = 'ALTERNATIVES';\n\n  loadAlternatives: (fkEntity, fkClassField, fkProject) => ActionResultObservable<InfTextProperty>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): InfTextPropertyActionFactory {\n    Object.assign(this, this.createInfActions(infRoot, 'text_property'))\n\n    this.loadAlternatives = (fkEntity: number, fkClassField: number, pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadAlternativeTextProperties> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfTextPropertyActionFactory.ALTERNATIVES,\n        meta: {\n          addPending,\n          pk: pkProject,\n          fkEntity,\n          fkClassField,\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<InfTextProperty>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InfActions {\n\n  persistent_item = new InfPersistentItemActionFactory(this.ngRedux).createActions();\n  temporal_entity = new InfTemporalEntityActionFactory(this.ngRedux).createActions()\n  statement = new InfStatementActionFactory(this.ngRedux).createActions()\n\n  // TODO: pimp those up to real Inf Actions!\n  language = new SchemaActionsFactory<Payload, InfLanguage>(this.ngRedux).createCrudActions(infRoot, 'language')\n  appellation = new SchemaActionsFactory<Payload, InfAppellation>(this.ngRedux).createCrudActions(infRoot, 'appellation')\n  lang_string = new SchemaActionsFactory<Payload, InfLangString>(this.ngRedux).createCrudActions(infRoot, 'lang_string')\n  dimension = new SchemaActionsFactory<InfDimensionSlice, InfDimension>(this.ngRedux).createCrudActions(infRoot, 'dimension')\n  place = new SchemaActionsFactory<Payload, InfPlace>(this.ngRedux).createCrudActions(infRoot, 'place')\n  time_primitive = new SchemaActionsFactory<Payload, InfTimePrimitive>(this.ngRedux).createCrudActions(infRoot, 'time_primitive')\n  text_property = new InfTextPropertyActionFactory(this.ngRedux).createActions()\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","import { ReducerConfigCollection } from '../_helpers/reducer-factory';\nimport { ProClassFieldConfig, ProDfhClassProjRel, ProTextProperty, ProDfhProfileProjRel } from '@kleiolab/lib-sdk-lb3';\nimport { ProAnalysis } from '@kleiolab/lib-sdk-lb4';\n\nexport const proRoot = 'pro';\n\n\nexport const textPropertyByFksKey = (d: Partial<ProTextProperty>) => `${d.fk_project || null}_${d.fk_system_type || null}_${d.fk_language || null}_${d.fk_dfh_class || null}_${d.fk_dfh_property || null}_${d.fk_dfh_property_domain || null}_${d.fk_dfh_property_range || null}`\nexport const textPropertyByFksWithoutLang = (d: Partial<ProTextProperty>): string => `${d.fk_project || null}_${d.fk_system_type || null}_${d.fk_dfh_class || null}_${d.fk_dfh_property || null}_${d.fk_dfh_property_domain || null}_${d.fk_dfh_property_range || null}`;\nexport const proClassFieldConfgByProjectAndClassKey = (d: Partial<ProClassFieldConfig>): string => {\n  const fk_class = d.fk_range_class || d.fk_domain_class || d.fk_class_for_class_field;\n  return `${d.fk_project || null}_${fk_class || null}`;\n};\n\nexport const proDefinitions: ReducerConfigCollection = {\n  project: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    }\n  },\n  info_proj_rel: {\n    indexBy: {\n      keyInStore: 'fk_project__fk_entity',\n      indexByFn: (item) => item.fk_project.toString() + '_' + item.fk_entity.toString()\n    }\n  },\n  class_field_config: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_project__fk_class',\n        groupByFn: proClassFieldConfgByProjectAndClassKey\n      }\n    ]\n  },\n  dfh_class_proj_rel: {\n    indexBy: {\n      keyInStore: 'fk_project__fk_class',\n      indexByFn: (item: ProDfhClassProjRel) => item.fk_project + '_' + item.fk_class\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_project__enabled_in_entities',\n        groupByFn: (d: ProDfhClassProjRel): string => d.fk_project + '_' + d.enabled_in_entities\n      },\n      {\n        keyInStore: 'fk_project',\n        groupByFn: (d: ProDfhClassProjRel): string => d.fk_project.toString()\n      }\n    ],\n  },\n  dfh_profile_proj_rel: {\n    indexBy: {\n      keyInStore: 'fk_project__fk_profile',\n      indexByFn: (item: ProDfhProfileProjRel) => item.fk_project + '_' + item.fk_profile\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_project__enabled',\n        groupByFn: (d: ProDfhProfileProjRel): string => d.fk_project + '_' + d.enabled\n      },\n      {\n        keyInStore: 'fk_project',\n        groupByFn: (d: ProDfhProfileProjRel): string => d.fk_project.toString()\n      }\n    ],\n  },\n  text_property: {\n    indexBy: {\n      keyInStore: 'fks',\n      indexByFn: textPropertyByFksKey\n    },\n    groupBy: [\n      {\n        keyInStore: 'fks_without_lang',\n        groupByFn: textPropertyByFksWithoutLang\n      }\n    ]\n  },\n  analysis: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item: ProAnalysis) => item.pk_entity.toString()\n    }\n  }\n}\n","\nimport { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { ProClassFieldConfig, ProDfhClassProjRel, ProDfhProfileProjRel, ProInfoProjRel, ProProject, ProTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { ProAnalysis } from '@kleiolab/lib-sdk-lb4';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { filter } from 'rxjs/operators';\nimport { IAppState } from '../../root/models/model';\nimport { ProAnalysisSlice, ProInfoProjRelSlice } from '../models/pro.models';\nimport { proRoot } from '../reducer-configs/pro.config';\nimport { ActionResultObservable, LoadActionMeta, LoadByPkAndVersionActionMeta, SchemaActionsFactory, SucceedActionMeta } from '../_helpers/schema-actions-factory';\n\n\ntype Payload = ProInfoProjRelSlice;\n\nexport class ProProjectActionFactory extends SchemaActionsFactory<Payload, ProProject> {\n\n  // Suffixes of load action types\n  static readonly OF_ACCOUNT = 'OF_ACCOUNT';\n  static readonly LOAD_BASICS = 'LOAD_BASICS';\n\n  loadOfAccount: (pkProject) => ActionResultObservable<ProProject>;\n\n  /**\n   * loads the ProProject and the default InfLanguage\n   */\n  loadBasics: (pkProject) => ActionResultObservable<ProProject>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProProjectActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'project'))\n\n    this.loadOfAccount = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProProjectActionFactory.OF_ACCOUNT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProProject>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    this.loadBasics = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProProjectActionFactory.LOAD_BASICS,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProProject>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    return this;\n  }\n}\n\nexport interface MarkStatementAsFavoriteActionMeta {\n  addPending: string,\n  pk: number\n  pkStatement: number\n  isOutgoing: boolean\n}\nexport class ProInfoProjRelActionFactory extends SchemaActionsFactory<Payload, ProInfoProjRel> {\n\n  // Suffixes of load action types\n  static readonly MARK_ROLE_AS_FAVORITE = 'MARK_ROLE_AS_FAVORITE';\n\n  markStatementAsFavorite: (pkProject: number, pkStatement: number, isOutgoing: boolean) => ActionResultObservable<ProInfoProjRel>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProInfoProjRelActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'info_proj_rel'))\n\n    this.markStatementAsFavorite = (pkProject: number, pkStatement: number, isOutgoing: boolean) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, MarkStatementAsFavoriteActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProInfoProjRelActionFactory.MARK_ROLE_AS_FAVORITE,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkStatement: pkStatement,\n          isOutgoing\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProInfoProjRel>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\nexport class ProDfhClassProjRelActionFactory extends SchemaActionsFactory<Payload, ProDfhClassProjRel> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<ProDfhClassProjRel>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProDfhClassProjRelActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'dfh_class_proj_rel'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProDfhClassProjRelActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProDfhClassProjRel>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\nexport class ProDfhProfileProjRelActionFactory extends SchemaActionsFactory<Payload, ProDfhProfileProjRel> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<ProDfhProfileProjRel>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProDfhProfileProjRelActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'dfh_profile_proj_rel'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProDfhProfileProjRelActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProDfhProfileProjRel>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\nexport class ProClassFieldConfigActionFactory extends SchemaActionsFactory<Payload, ProClassFieldConfig> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<ProClassFieldConfig>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProClassFieldConfigActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'class_field_config'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProClassFieldConfigActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProClassFieldConfig>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\nexport class ProTextPropertyActionFactory extends SchemaActionsFactory<Payload, ProTextProperty> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<ProTextProperty>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProTextPropertyActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'text_property'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProTextPropertyActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProTextProperty>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\nexport class ProAnalysisActionFactory extends SchemaActionsFactory<ProAnalysisSlice, ProAnalysis> {\n\n  // Suffixes of load action types\n  static readonly BY_PK_AND_VERSION = 'BY_PK_AND_VERSION';\n\n  loadByIdAndVersion: (pkProject: number, pkEntity: number, version: number) => ActionResultObservable<ProAnalysis>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProAnalysisActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'analysis'))\n\n    this.loadByIdAndVersion = (pkProject: number, pkEntity: number, version: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadByPkAndVersionActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProAnalysisActionFactory.BY_PK_AND_VERSION,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkEntity,\n          version\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProAnalysis>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProActions {\n  project = new ProProjectActionFactory(this.ngRedux).createActions()\n  info_proj_rel = new ProInfoProjRelActionFactory(this.ngRedux).createActions()\n  text_property = new ProTextPropertyActionFactory(this.ngRedux).createActions()\n  dfh_class_proj_rel = new ProDfhClassProjRelActionFactory(this.ngRedux).createActions()\n  dfh_profile_proj_rel = new ProDfhProfileProjRelActionFactory(this.ngRedux).createActions()\n  class_field_config = new ProClassFieldConfigActionFactory(this.ngRedux).createActions()\n  analysis = new ProAnalysisActionFactory(this.ngRedux).createActions()\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","import { ReducerConfigCollection } from '../_helpers/reducer-factory';\nimport { SysSystemRelevantClass } from '@kleiolab/lib-sdk-lb3';\n\nexport const sysRoot = 'sys';\n\nexport const sysDefinitions: ReducerConfigCollection = {\n  system_relevant_class: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_class',\n        groupByFn: (d: SysSystemRelevantClass): string => d.fk_class.toString()\n      },\n      {\n        keyInStore: 'required_by_sources',\n        groupByFn: (d: SysSystemRelevantClass): string => d.required_by_sources.toString()\n      },\n      {\n        keyInStore: 'required',\n        groupByFn: (d: SysSystemRelevantClass): string => (d.required_by_sources || d.required_by_entities || d.required_by_basics) ? 'true' : 'false'\n      }\n    ]\n  },\n  config: {\n    indexBy: {\n      keyInStore: 'main',\n      indexByFn: () => 'main'\n    }\n  }\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { SysSystemRelevantClass } from '@kleiolab/lib-sdk-lb3';\nimport { SysConfigValue } from '@kleiolab/lib-sdk-lb4';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { IAppState } from '../../root/models/model';\nimport { Sys } from '../models/sys.models';\nimport { sysRoot } from '../reducer-configs/sys.config';\nimport { SchemaActionsFactory } from '../_helpers/schema-actions-factory';\n\ntype Payload = Sys;\ninterface MetaData {\n  systemRelevantClasses?: SysSystemRelevantClass[]\n};\nexport type SysAction = FluxStandardAction<Payload, MetaData>;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SysActions {\n\n  system_relevant_class = new SchemaActionsFactory<Payload, SysSystemRelevantClass>\n    (this.ngRedux).createCrudActions(sysRoot, 'system_relevant_class');\n\n  // analysis_type = new StandardActionsFactory<Payload, SysAnalysisType>\n  //   (this.ngRedux).createCrudActions(sysRoot, 'analysis_type');\n\n\n  config = new SchemaActionsFactory<Payload, SysConfigValue>\n    (this.ngRedux).createCrudActions(sysRoot, 'config');\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","import { ReducerConfigCollection } from '../_helpers/reducer-factory';\nimport { TabCell } from '@kleiolab/lib-sdk-lb4';\n\nexport const tabRoot = 'tab';\n\nexport const tabDefinitions: ReducerConfigCollection = {\n  cell: {\n    indexBy: {\n      keyInStore: 'pk_cell',\n      indexByFn: (item: TabCell) => item.pk_cell.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_column_fk_row',\n        groupByFn: (item: TabCell): string => item.fk_column + '_' + item.fk_row\n      }\n    ]\n  }\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { TabCell } from '@kleiolab/lib-sdk-lb4';\nimport { IAppState } from '../../root/models/model';\nimport { TabCellSlice } from '../models/tab.models';\nimport { tabRoot } from '../reducer-configs/tab.config';\nimport { SchemaActionsFactory } from '../_helpers/schema-actions-factory';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TabActions {\n\n  cell = new SchemaActionsFactory<TabCellSlice, TabCell>(this.ngRedux).createCrudActions(tabRoot, 'cell')\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","import { ReducerConfigCollection } from '../_helpers/reducer-factory';\nimport { WarEntityPreview } from '@kleiolab/lib-sdk-lb4';\n\nexport const warRoot = 'war';\n\nexport const warDefinitions: ReducerConfigCollection = {\n  entity_preview: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item: WarEntityPreview) => item.pk_entity.toString()\n    }\n  }\n}\n","\nimport { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { WarEntityPreview } from '@kleiolab/lib-sdk-lb4';\nimport { IAppState } from '../../root/models/model';\nimport { WarEntityPreviewSlice } from '../models/war.models';\nimport { warRoot } from '../reducer-configs/war.config';\nimport { SchemaActionsFactory } from '../_helpers/schema-actions-factory';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WarActions {\n  entity_preview = new SchemaActionsFactory<WarEntityPreviewSlice, WarEntityPreview>(this.ngRedux).createCrudActions(warRoot, 'entity_preview')\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaObjectApi } from '@kleiolab/lib-sdk-lb3';\nimport { GvSchemaObject } from '@kleiolab/lib-sdk-lb4';\nimport { Observable, Subject } from 'rxjs';\nimport { SchemaObject } from '../../root/models/model';\nimport { NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\nimport { DatActions } from '../actions/dat.actions';\nimport { DfhActions } from '../actions/dfh.actions';\nimport { InfActions } from '../actions/inf.actions';\nimport { ProActions } from '../actions/pro.actions';\nimport { SysActions } from '../actions/sys.actions';\nimport { TabActions } from '../actions/tab.actions';\nimport { WarActions } from '../actions/war.actions';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Class to put schema objects into store\n */\nexport class SchemaService {\n\n  constructor(\n    public api: SchemaObjectApi,\n    public infActions: InfActions,\n    public proActions: ProActions,\n    public datActions: DatActions,\n    public warActions: WarActions,\n    public tabActions: TabActions,\n    public dfhActions: DfhActions,\n    public sysActions: SysActions,\n    public notifications: NotificationsAPIActions,\n  ) { }\n\n\n  /**\n   * watches an Observable<SchemaObject>\n   * on success stores the parts of the object at right place of store\n   * on error emits error message\n   *\n   * @param apiCall$\n   * @param pkProject primary key of project or 'ofRepo', if repo versions\n   */\n  store(apiCall$: Observable<SchemaObject>, pkProject: number | 'ofRepo'): Observable<SchemaObject> {\n\n\n    const s$ = new Subject<SchemaObject>()\n    apiCall$.subscribe(\n      result => {\n        this.storeSchemaObject(result, pkProject === 'ofRepo' ? null : pkProject)\n        s$.next(result)\n      },\n      error => {\n        this.notifications.addToast({\n          type: 'error',\n          options: { title: error.message }\n        })\n        s$.error(error)\n      }\n    )\n    return s$\n  }\n\n  /**\n   * watches an Observable<SchemaObject>\n   * on success stores the parts of the object at right place of store\n   * on error emits error message\n   *\n   * @param apiCall$\n   * @param pkProject primary key of project or 'ofRepo', if repo versions\n   */\n  storeGv(apiCall$: Observable<GvSchemaObject>, pkProject: number | 'ofRepo'): Observable<GvSchemaObject> {\n\n    const s$ = new Subject<GvSchemaObject>()\n    apiCall$.subscribe(\n      result => {\n        this.storeSchemaObjectGv(result, pkProject === 'ofRepo' ? null : pkProject)\n        s$.next(result)\n      },\n      error => {\n        this.notifications.addToast({\n          type: 'error',\n          options: { title: error.message }\n        })\n        s$.error(error)\n      }\n    )\n    return s$\n  }\n\n  /**\n   *\n   * @param object\n   * @param pkProject primary key of project or null, if repo versions\n   */\n  storeSchemaObject(object: SchemaObject, pkProject: number | null) {\n    if (object && Object.keys(object).length > 0) {\n      Object.keys(object).forEach(schema => {\n        let actions;\n        if (schema === 'inf') actions = this.infActions;\n        else if (schema === 'pro') actions = this.proActions;\n        else if (schema === 'dat') actions = this.datActions;\n        else if (schema === 'war') actions = this.warActions;\n        if (actions) {\n          Object.keys(object[schema]).forEach(model => {\n            actions[model].loadSucceeded(object[schema][model], undefined, pkProject);\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   *\n   * @param object\n   * @param pkProject primary key of project or null, if repo versions\n   */\n  storeSchemaObjectGv(object: GvSchemaObject, pkProject: number | null) {\n    if (object && Object.keys(object).length > 0) {\n      Object.keys(object).forEach(schema => {\n        let actions;\n        if (schema === 'inf') actions = this.infActions;\n        else if (schema === 'pro') actions = this.proActions;\n        else if (schema === 'dat') actions = this.datActions;\n        else if (schema === 'war') actions = this.warActions;\n        else if (schema === 'tab') actions = this.tabActions;\n        else if (schema === 'dfh') actions = this.dfhActions;\n        else if (schema === 'sys') actions = this.sysActions;\n        if (actions) {\n          Object.keys(object[schema]).forEach(model => {\n            actions[model].loadSucceeded(object[schema][model], undefined, pkProject);\n          });\n        }\n      });\n      // this.extendEntityPreviewStream(object, pkProject);\n      console.warn('!!!!!!!! Need to call this.extendEntityPreviewStream(object, pkProject);')\n    }\n  }\n\n\n  // /**\n  //  * Adds the entity previews to the streamed entity previews (for ws communication)\n  //  * @param object\n  //  * @param pkProject\n  //  */\n  // private extendEntityPreviewStream(object: GvSchemaObject, pkProject: number) {\n  //   if (object && object.war && object.war.entity_preview && object.war.entity_preview.length) {\n  //     this.entityPreviewSocket.emit('extendStream', {\n  //       pkProject,\n  //       pks: object.war.entity_preview.map(p => p.pk_entity)\n  //     });\n  //   }\n  // }\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { SysConfig } from '@kleiolab/lib-config';\nimport { ProProject, ProProjectApi, ProTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { omit } from 'ramda';\nimport { Action } from 'redux';\nimport { combineEpics, Epic, ofType } from 'redux-observable-es6-compat';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, mapTo, mergeMap, switchMap } from 'rxjs/operators';\nimport { IAppState } from '../../root/models/model';\nimport { ActiveProjectAction, ActiveProjectActions } from '../../state-gui/actions/active-project.action';\nimport { LoadingBarActions } from '../../state-gui/actions/loading-bar.actions';\nimport { NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\nimport { DatActions } from '../../state-schema/actions/dat.actions';\nimport { DfhActions } from '../../state-schema/actions/dfh.actions';\nimport { InfActions } from '../../state-schema/actions/inf.actions';\nimport { ProActions } from '../../state-schema/actions/pro.actions';\nimport { SysActions } from '../../state-schema/actions/sys.actions';\nimport { SchemaService } from '../../state-schema/services/schema.service';\nimport { ProjectPreview } from '../models/active-project.models';\n\nfunction firstProTextPropStringOfType(textProperties: ProTextProperty[], fkSystemType): string {\n  return (textProperties.find(t => t.fk_system_type === fkSystemType) || { string: '' }).string\n}\n/**\n * Transform ProProject to ProjectPreview\n */\nfunction proProjectToProjectPreview(project: ProProject): ProjectPreview {\n  return {\n    label: firstProTextPropStringOfType(project.text_properties, SysConfig.PK_SYSTEM_TYPE__TEXT_PROPERTY__LABEL),\n    description: firstProTextPropStringOfType(project.text_properties, SysConfig.PK_SYSTEM_TYPE__TEXT_PROPERTY__DESCRIPTION),\n    default_language: project.default_language,\n    pk_project: project.pk_entity\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActiveProjectEpics {\n  constructor(\n    private sys: SysActions,\n    private dat: DatActions,\n    private dfh: DfhActions,\n    private pro: ProActions,\n    private inf: InfActions,\n    private projectApi: ProProjectApi,\n    private actions: ActiveProjectActions,\n    private notificationActions: NotificationsAPIActions,\n    private loadingBarActions: LoadingBarActions,\n    private ngRedux: NgRedux<IAppState>,\n    private schemaObj: SchemaService\n  ) { }\n\n  public createEpics(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return combineEpics(\n      this.createLoadProjectBasicsEpic(),\n      this.createLoadProjectConfigEpic(),\n      this.createLoadProjectUpdatedEpic(),\n      this.createClosePanelEpic(),\n      this.createActivateTabFocusPanelEpic(),\n      this.createMoveTabFocusPanelEpic(),\n      this.createClosePanelFocusPanelEpic(),\n      this.createSplitPanelActivateTabEpic(),\n      this.createAddTabCloseListEpic(),\n    );\n  }\n\n  /**\n   * This epic listenes to an action that wants to load tha active project (by id)\n   * It loads the project info and\n   * - on loaded dispaches an action that reduces the project into the store\n   * - on fail dispaches an action that shows an error notification\n   */\n  private createLoadProjectBasicsEpic(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return (action$, store) => action$.pipe(\n\n      ofType(ActiveProjectActions.LOAD_PROJECT_BASICS),\n      switchMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n        /**\n       * Emit the global action that activates the loading bar\n       */\n        globalStore.next(this.loadingBarActions.startLoading());\n\n        this.projectApi.getBasics(action.meta.pk_project)\n          .subscribe(\n            (data: ProProject[]) => {\n              globalStore.next(this.actions.loadProjectBasiscsSucceded(proProjectToProjectPreview(data[0])))\n              this.schemaObj.storeSchemaObject({\n                inf: { language: [data[0].default_language] },\n                pro: { project: [omit(['default_language'], data[0])] }\n              }, action.meta.pk_project)\n            },\n            error => {\n              globalStore.next(this.notificationActions.addToast({\n                type: 'error',\n                options: { title: error.message }\n              }))\n            })\n      }))\n\n    )\n  }\n\n  /**\n  * This epic listenes to an action that is dispached when loading projcect succeeded\n  *\n  * It dispaches an action that completes the loading bar\n  */\n  private createLoadProjectUpdatedEpic(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return (action$, store) => action$.pipe(\n      ofType(ActiveProjectActions.LOAD_PROJECT_BASICS_SUCCEEDED),\n      mapTo(this.loadingBarActions.completeLoading())\n    )\n  }\n\n  private createLoadProjectConfigEpic(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return (action$, store) => action$.pipe(\n\n      ofType(ActiveProjectActions.LOAD_PROJECT_CONFIG),\n      switchMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n        globalStore.next(this.loadingBarActions.startLoading());\n\n        combineLatest(\n          this.dfh.profile.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n\n          this.dfh.klass.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n          this.dfh.property.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n          this.dfh.label.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n\n          this.sys.system_relevant_class.load().resolved$.pipe(filter(x => !!x)),\n          this.sys.config.load().resolved$.pipe(filter(x => !!x)),\n          this.dat.namespace.load('', action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n\n          this.pro.text_property.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n          this.pro.dfh_class_proj_rel.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n          this.pro.dfh_profile_proj_rel.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n          this.pro.class_field_config.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n\n          this.inf.persistent_item.typesOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x))\n        )\n          .pipe(filter((res: any[]) => !res.includes(undefined)))\n          .subscribe((res) => {\n\n            globalStore.next(this.actions.loadProjectConfigSucceeded());\n            globalStore.next(this.loadingBarActions.completeLoading());\n\n          }, error => {\n            // subStore.dispatch(this.actions.loadFailed({ status: '' + error.status }))\n          });\n\n      }))\n\n    )\n  }\n\n\n  /**\n   * LAYOUT\n   */\n  private createClosePanelEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.CLOSE_TAB, ActiveProjectActions.MOVE_TAB, ActiveProjectActions.SPLIT_PANEL),\n        mergeMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n          this.ngRedux.getState().activeProject.panels.forEach((panel, panelIndex) => {\n            if (panel.tabs.length === 0) globalStore.next(this.actions.closePanel(panelIndex));\n          })\n        }))\n      )\n    }\n  }\n  private createSplitPanelActivateTabEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.SPLIT_PANEL),\n        map((action: ActiveProjectAction) => {\n          const p = this.ngRedux.getState().activeProject;\n          const c = action.meta.currentPanelIndex;\n          const panelIndex = p.panels.length < (c + 1) ? c - 1 : c;\n          return this.actions.activateTab(panelIndex, 0)\n        })\n      )\n    }\n  }\n  private createActivateTabFocusPanelEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.ACTIVATE_TAB),\n        mergeMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n          if (this.ngRedux.getState().activeProject.focusedPanel !== action.meta.panelIndex) {\n            globalStore.next(this.actions.focusPanel(action.meta.panelIndex));\n          }\n        }))\n      )\n    }\n  }\n  private createMoveTabFocusPanelEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.MOVE_TAB),\n        mergeMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n          if (this.ngRedux.getState().activeProject.focusedPanel !== action.meta.currentPanelIndex) {\n            globalStore.next(this.actions.focusPanel(action.meta.currentPanelIndex));\n          }\n        }))\n      )\n    }\n  }\n  private createClosePanelFocusPanelEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.CLOSE_PANEL),\n        mergeMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n          if (this.ngRedux.getState().activeProject.focusedPanel > (this.ngRedux.getState().activeProject.panels.length - 1)) {\n            globalStore.next(this.actions.focusPanel(0));\n          }\n        }))\n      )\n    }\n  }\n  private createAddTabCloseListEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.ADD_TAB),\n        mapTo(this.actions.setListType(''))\n      )\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { SlimLoadingBarService } from '@cime/ngx-slim-loading-bar';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { combineEpics, Epic, ofType } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { LoadingBarActions } from '../../state-gui/actions/loading-bar.actions';\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingBarEpics {\n  constructor(\n    private service: SlimLoadingBarService,\n  ) { }\n\n  public createEpics(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return combineEpics(\n      this.createStartLoadingBarEpic(),\n      this.createCompleteLoadingBarEpic()\n    );\n  }\n\n  private createCompleteLoadingBarEpic(): Epic {\n    return (action$, store) => action$.pipe(\n      ofType(LoadingBarActions.COPMLETE),\n      switchMap(() => {\n        return Observable.create(observer => {\n          this.service.complete()\n          // observer.next(this.actions.stopLoading())\n        })\n      })\n    )\n  }\n\n  private createStartLoadingBarEpic(): Epic {\n    return (action$, store) => action$.pipe(\n      ofType(LoadingBarActions.START),\n      switchMap(() => {\n        return Observable.create(observer => {\n          this.service.start();\n        })\n      })\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ToastyConfig, ToastyService } from '@cime/ngx-toasty';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { combineEpics, Epic, ofType } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { filter, switchMap } from 'rxjs/operators';\nimport { NotificationsAPIAction, NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsAPIEpics {\n  constructor(\n    private toastyService: ToastyService,\n    private toastyConfig: ToastyConfig\n  ) {\n    // Assign the selected theme name to the `theme` property of the instance of ToastyConfig.\n    // Possible values: default, bootstrap, material\n    this.toastyConfig.theme = 'bootstrap';\n  }\n\n  public createEpics(): Epic {\n    return combineEpics(this.createAddToastEpic());\n  }\n\n  private createAddToastEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        /**\n         * Filter the actions that triggers this epic\n         */\n        filter((a) => {\n          return a;\n        }),\n        ofType(NotificationsAPIActions.ADD_TOAST),\n        switchMap((action) => new Observable<FluxStandardAction<any>>((observer) => {\n          /**\n           * Add Toast\n           */\n          const a = action as NotificationsAPIAction;\n          if (!a.payload.options.title && !a.payload.options.msg) {\n            if (a.payload.type === 'error') {\n              a.payload.options.title = 'Oops, something went wrong!'\n            }\n          }\n          this.toastyService[a.payload.type](a.payload.options);\n\n        })),\n      )\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActionsObservable, combineEpics, Epic } from 'redux-observable-es6-compat';\nimport { of } from 'rxjs';\nimport { filter, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionResolverEpics {\n\n  // requestMap: { [uuid: string]: ActionResultObservable<any> } = {};\n\n  constructor() { }\n\n  createEpics = () => combineEpics(this.createResolveEpic());\n  private createResolveEpic(): Epic {\n    return (action$: ActionsObservable<any>, store) => action$.pipe(\n      filter(action => !!action && !!action.meta && !!action.meta.removePending),\n\n      switchMap(action => (of({ type: 'CLEAN_UP_RESOLVED', meta: { uuid: action.meta.removePending } }))),\n    )\n  }\n\n\n\n}\n","import { DatChunk, DatDigital, InfAppellation, InfDimension, InfLangString, InfLanguage, InfPersistentItem, InfPlace, InfStatement, InfTemporalEntity, InfTextProperty, InfTimePrimitive, ProClassFieldConfig, ProDfhClassProjRel, ProDfhProfileProjRel, ProInfoProjRel, ProProject, ProTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { ProAnalysis } from '@kleiolab/lib-sdk-lb4';\nimport { keys, omit, values } from 'ramda';\nimport { DatActions } from '../actions/dat.actions';\nimport { InfActions } from '../actions/inf.actions';\nimport { ProActions } from '../actions/pro.actions';\nimport { ChunkSlice, DigitalSlice } from '../models/dat.models';\nimport { InfAppellationSlice, InfDimensionSlice, InfLangStringSlice, InfLanguageSlice, InfPersistentItemSlice, InfPlaceSlice, InfTextPropertySlice, InfTimePrimitiveSlice } from '../models/inf.models';\nimport { ProAnalysisSlice, ProClassFieldConfigSlice, ProDfhClassProjRelSlice, ProDfhProfileProjRelSlice, ProInfoProjRelSlice, ProProjectSlice, ProTextPropertySlice } from '../models/pro.models';\nimport { SchemaActionsFactory } from './schema-actions-factory';\n\nclass ModelFlattener<Payload, Model> {\n  items: Model[]\n  constructor(\n    public actions: SchemaActionsFactory<Payload, Model>,\n    public modelDefinition: any,\n    public flattenCb: (items: Model[]) => void,\n  ) { }\n\n  flatten(items: Model[]) {\n    if (items && items.length > 0) {\n\n      this.flattenCb(items);\n      // todo remove properties of those objects, using getModelDefinition()\n      const keysToOmit = keys(this.modelDefinition.relations).map(item => item.toString())\n      this.items = [\n        ...(this.items || []),\n        ...items.filter(item => !!item && Object.keys(item).length > 0)\n          .map(item => omit(keysToOmit, item)) as Model[]\n      ]\n    }\n    return true;\n  }\n\n}\n\ninterface FlattenerInterface {\n  [key: string]: ModelFlattener<any, any>\n}\n\n/**\n * Flattener is the class used to flatten nested objects.\n * Use storeFlattened() to call all actions to put the\n * flattened items into the store.\n */\nexport class Flattener {\n\n\n\n  info_proj_rel = new ModelFlattener<ProInfoProjRelSlice, ProInfoProjRel>(\n    this.proActions.info_proj_rel,\n    ProInfoProjRel.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new ProInfoProjRel(item);\n      })\n    })\n\n  pro_dfh_class_proj_rel = new ModelFlattener<ProDfhClassProjRelSlice, ProDfhClassProjRel>(\n    this.proActions.dfh_class_proj_rel,\n    ProDfhClassProjRel.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new ProDfhClassProjRel(item);\n      })\n    })\n\n  pro_dfh_profile_proj_rel = new ModelFlattener<ProDfhProfileProjRelSlice, ProDfhProfileProjRel>(\n    this.proActions.dfh_profile_proj_rel,\n    ProDfhProfileProjRel.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new ProDfhProfileProjRel(item);\n      })\n    })\n\n\n  persistent_item = new ModelFlattener<InfPersistentItemSlice, InfPersistentItem>(\n    this.infActions.persistent_item,\n    InfPersistentItem.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfPersistentItem(item);\n        this.statement.flatten(item.incoming_statements)\n        this.statement.flatten(item.outgoing_statements)\n        this.text_property.flatten(item.text_properties)\n        this.info_proj_rel.flatten(item.entity_version_project_rels)\n      })\n    })\n\n  temporal_entity = new ModelFlattener<InfPersistentItemSlice, InfTemporalEntity>(\n    this.infActions.temporal_entity,\n    InfTemporalEntity.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfTemporalEntity(item);\n        this.statement.flatten(item.outgoing_statements)\n        this.statement.flatten(item.incoming_statements)\n        this.text_property.flatten(item.text_properties)\n        this.info_proj_rel.flatten(item.entity_version_project_rels)\n      })\n    })\n\n\n  statement = new ModelFlattener<InfPersistentItemSlice, InfStatement>(\n    this.infActions.statement,\n    InfStatement.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfStatement(item);\n        this.info_proj_rel.flatten(item.entity_version_project_rels)\n\n        // Subject\n        if (item.subject_temporal_entity) this.temporal_entity.flatten([item.subject_temporal_entity])\n        else if (item.subject_statement) this.statement.flatten([item.subject_statement])\n\n        // Object\n        if (item.object_persistent_item) this.persistent_item.flatten([item.object_persistent_item])\n        else if (item.object_appellation) this.appellation.flatten([item.object_appellation])\n        else if (item.object_place) this.place.flatten([item.object_place])\n        else if (item.object_time_primitive) this.time_primitive.flatten([item.object_time_primitive])\n        else if (item.object_language) this.language.flatten([item.object_language])\n        else if (item.subject_chunk) this.chunk.flatten([item.subject_chunk])\n        else if (item.object_lang_string) this.lang_string.flatten([item.object_lang_string])\n        else if (item.object_dimension) this.dimension.flatten([item.object_dimension])\n      })\n    })\n\n  appellation = new ModelFlattener<InfAppellationSlice, InfAppellation>(\n    this.infActions.appellation,\n    InfAppellation.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfAppellation(item);\n      })\n    })\n\n\n  place = new ModelFlattener<InfPlaceSlice, InfPlace>(\n    this.infActions.place,\n    InfPlace.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfPlace(item);\n      })\n    })\n\n  time_primitive = new ModelFlattener<InfTimePrimitiveSlice, InfTimePrimitive>(\n    this.infActions.time_primitive,\n    InfTimePrimitive.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfTimePrimitive(item);\n      })\n    })\n\n  language = new ModelFlattener<InfLanguageSlice, InfLanguage>(\n    this.infActions.language,\n    InfLanguage.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfLanguage(item);\n      })\n    })\n\n  lang_string = new ModelFlattener<InfLangStringSlice, InfLangString>(\n    this.infActions.lang_string,\n    InfLangString.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfLangString(item);\n        this.language.flatten([item.language])\n        this.info_proj_rel.flatten(item.entity_version_project_rels)\n      })\n    })\n\n  dimension = new ModelFlattener<InfDimensionSlice, InfDimension>(\n    this.infActions.dimension,\n    InfDimension.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfDimension(item);\n        this.info_proj_rel.flatten(item.entity_version_project_rels)\n      })\n    })\n\n  text_property = new ModelFlattener<InfTextPropertySlice, InfTextProperty>(\n    this.infActions.text_property,\n    InfTextProperty.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfTextProperty(item);\n        this.language.flatten([item.language])\n        this.info_proj_rel.flatten(item.entity_version_project_rels)\n      })\n    })\n\n  digital = new ModelFlattener<DigitalSlice, DatDigital>(\n    this.datActions.digital,\n    DatDigital.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new DatDigital(item);\n      })\n    })\n\n  chunk = new ModelFlattener<ChunkSlice, DatChunk>(\n    this.datActions.chunk,\n    DatChunk.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new DatChunk(item);\n        this.statement.flatten(item.outgoing_statements)\n      })\n    })\n\n  pro_project = new ModelFlattener<ProProjectSlice, ProProject>(\n    this.proActions.project,\n    ProProject.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new ProProject(item);\n        this.language.flatten([item.default_language])\n      })\n    })\n\n  pro_text_property = new ModelFlattener<ProTextPropertySlice, ProTextProperty>(\n    this.proActions.text_property,\n    ProTextProperty.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new ProTextProperty(item);\n        this.language.flatten([item.language])\n      })\n    })\n\n\n  pro_class_field_config = new ModelFlattener<ProClassFieldConfigSlice, ProClassFieldConfig>(\n    this.proActions.class_field_config,\n    ProClassFieldConfig.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new ProClassFieldConfig(item);\n      })\n    })\n\n\n  analysis = new ModelFlattener<ProAnalysisSlice, ProAnalysis>(\n    this.proActions.analysis,\n    { relations: [] },\n    (items) => {\n      items.forEach(item => { })\n    })\n  constructor(\n    public infActions: InfActions,\n    public datActions: DatActions,\n    public proActions: ProActions\n  ) { }\n  getFlattened(): FlattenerInterface {\n    return {\n      pro_project: this.pro_project,\n      pro_text_property: this.pro_text_property,\n      pro_class_field_config: this.pro_class_field_config,\n      pro_dfh_profile_proj_rel: this.pro_dfh_profile_proj_rel,\n      pro_dfh_class_proj_rel: this.pro_dfh_class_proj_rel,\n\n      info_proj_rel: this.info_proj_rel,\n      analysis: this.analysis,\n\n      persistent_item: this.persistent_item,\n      temporal_entity: this.temporal_entity,\n      statement: this.statement,\n      appellation: this.appellation,\n      place: this.place,\n      time_primitive: this.time_primitive,\n      language: this.language,\n      text_property: this.text_property,\n      lang_string: this.lang_string,\n      dimension: this.dimension,\n\n      digital: this.digital,\n      chunk: this.chunk,\n    }\n  }\n}\n\nexport const storeFlattened = (flattened: FlattenerInterface, pk?, type?: 'LOAD' | 'UPSERT') => {\n  values(flattened).forEach(model => {\n    if (model.items) {\n      if (type === 'UPSERT') {\n        model.actions.upsertSucceeded(model.items, undefined, pk)\n      } else {\n        model.actions.loadSucceeded(model.items, undefined, pk)\n      }\n    }\n  })\n}\n","import { FluxStandardAction } from 'flux-standard-action';\nimport { Action } from 'redux';\nimport { ofType } from 'redux-observable-es6-compat';\nimport { Observable, Subscriber } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\nimport { FluxActionObservable, LoadActionMeta, ModifyActionMeta, SchemaActionsFactory } from './schema-actions-factory';\n\nexport class SchemaEpicsFactory<Payload, Model> {\n  constructor(\n    public actionPrefix: string,\n    public modelName: string,\n    public actions: SchemaActionsFactory<Payload, Model>,\n    public notifications: NotificationsAPIActions) { }\n\n\n  createLoadEpic<T>(apiFn: (meta: T) => Observable<Model[]>, actionSuffix: string, onSuccessHook?: (data: Model[], pk?, initialMeta?: T) => void) {\n    return (action$: FluxActionObservable<Payload, LoadActionMeta>, store) => {\n      return action$.pipe(\n        ofType(this.type('LOAD', actionSuffix)),\n        mergeMap((action) => new Observable<Action>((globalActions) => {\n          const pendingKey = action.meta.addPending;\n          const meta = action.meta as any as T;\n          apiFn(meta).subscribe((data: Model[]) => {\n            if (onSuccessHook) {\n              onSuccessHook(data, action.meta.pk, meta);\n              this.actions.succeeded(data, pendingKey, action.meta.pk);\n            }\n            else {\n              this.actions.loadSucceeded(data, pendingKey, action.meta.pk);\n            }\n          }, error => {\n            this.onError(globalActions, error, pendingKey, action.meta.pk)\n          });\n        })));\n    };\n  }\n  createUpsertEpic<T>(apiFn: (meta: T) => Observable<Model[]>, onSuccessHook?: (data: Model[], pk?) => void) {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(this.actionPrefix + '.' + this.modelName + '::UPSERT'),\n        mergeMap((action: FluxStandardAction<Payload, ModifyActionMeta<Model>>) => new Observable<Action>((globalActions) => {\n          const pendingKey = action.meta.addPending;\n          const meta = action.meta as any as T;\n          apiFn(meta).subscribe((data: Model[]) => {\n            if (onSuccessHook) {\n              onSuccessHook(data, action.meta.pk);\n              this.actions.succeeded(data, pendingKey, action.meta.pk);\n            }\n            else {\n              this.actions.upsertSucceeded(data, pendingKey, action.meta.pk);\n            }\n          }, error => {\n            this.onError(globalActions, error, pendingKey, action.meta.pk)\n          });\n        })));\n    };\n  }\n  createDeleteEpic(apiFn: (meta: ModifyActionMeta<Model>) => Observable<Model[]>) {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(this.actionPrefix + '.' + this.modelName + '::DELETE'),\n        mergeMap((action: FluxStandardAction<Payload, ModifyActionMeta<Model>>) => new Observable<Action>((globalActions) => {\n          const pendingKey = action.meta.addPending;\n          apiFn(action.meta).subscribe((data: Model[]) => {\n            this.actions.deleteSucceeded(action.meta.items, pendingKey, action.meta.pk);\n          }, error => {\n            this.onError(globalActions, error, pendingKey, action.meta.pk)\n          });\n        })));\n    };\n  }\n\n  /**\n   * Create the string used as action.type\n   */\n  type(operation: 'LOAD' | 'UPSERT' | 'Â DELETE', actionSuffix: string): string {\n    return this.actionPrefix + '.' + this.modelName + '::' + operation + (actionSuffix ? '::' + actionSuffix : '')\n  }\n\n  /**\n  * Create the onError logic for standard actions\n  * @param globalActions pass in the subscriber to the action$ stream\n  */\n  onError(globalActions: Subscriber<Action>, error, pendingKey, pkProject) {\n    globalActions.next(this.notifications.addToast({\n      type: 'error',\n      options: { title: error.message }\n    }));\n    this.actions.failed({ status: '' + error.status }, pendingKey, pkProject);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DatChunk, DatChunkApi, DatColumn, DatColumnApi, DatDigital, DatDigitalApi, DatNamespace, DatNamespaceApi, SchemaObject } from '@kleiolab/lib-sdk-lb3';\nimport { combineEpics, Epic } from 'redux-observable-es6-compat';\nimport { NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\nimport { ChunkActionsFactory, ColumnActionsFactory, DatActions, DigitalActionsFactory, LoadChunksOfDigitalAction, LoadColumnsOfTableAction } from '../actions/dat.actions';\nimport { InfActions } from '../actions/inf.actions';\nimport { ProActions } from '../actions/pro.actions';\nimport { ChunkSlice, ColumnSlice, DigitalSlice, NamespaceSlice } from '../models/dat.models';\nimport { datRoot } from '../reducer-configs/dat.config';\nimport { SchemaService } from '../services/schema.service';\nimport { Flattener, storeFlattened } from '../_helpers/flattener';\nimport { LoadActionMeta, LoadVersionAction, ModifyActionMeta } from '../_helpers/schema-actions-factory';\nimport { SchemaEpicsFactory } from '../_helpers/schema-epics-factory';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatEpics {\n  constructor(\n    public notification: NotificationsAPIActions,\n    public datActions: DatActions,\n    public infActions: InfActions,\n    public proActions: ProActions,\n    public digitalApi: DatDigitalApi,\n    public chunkApi: DatChunkApi,\n    public columnApi: DatColumnApi,\n    public namespaceApi: DatNamespaceApi,\n    private schemaObjectService: SchemaService\n  ) { }\n\n  public createEpics(): Epic {\n    const digitalEpicsFactory = new SchemaEpicsFactory<DigitalSlice, DatDigital>\n      (datRoot, 'digital', this.datActions.digital, this.notification);\n\n    const chunkEpicsFactory = new SchemaEpicsFactory<ChunkSlice, DatChunk>\n      (datRoot, 'chunk', this.datActions.chunk, this.notification);\n\n    const namespaceEpicsFactory = new SchemaEpicsFactory<NamespaceSlice, DatNamespace>\n      (datRoot, 'namespace', this.datActions.namespace, this.notification);\n\n    const columnEpicsFactory = new SchemaEpicsFactory<ColumnSlice, DatColumn>\n      (datRoot, 'column', this.datActions.column, this.notification);\n\n    return combineEpics(\n\n      // Digital\n      digitalEpicsFactory.createLoadEpic<LoadVersionAction>(\n        (meta) => this.digitalApi.getVersion(meta.pkEntity, meta.entityVersion ? meta.entityVersion : null),\n        DigitalActionsFactory.LOAD_VERSION\n      ),\n      digitalEpicsFactory.createUpsertEpic<ModifyActionMeta<DatDigital>>(\n        (meta) => this.digitalApi.bulkUpsert(meta.pk, meta.items)\n      ),\n      digitalEpicsFactory.createDeleteEpic(\n        (meta) => this.digitalApi.bulkDelete(meta.items.map(item => item.pk_entity))\n      ),\n\n      // Chunk\n      chunkEpicsFactory.createLoadEpic<LoadChunksOfDigitalAction>(\n        (meta) => this.chunkApi.ofDigital(meta.pk, meta.pkDigital),\n        ChunkActionsFactory.CHUNKS_OF_DIGITAL,\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.chunk.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk);\n        }\n      ),\n\n      // Namespace\n      namespaceEpicsFactory.createLoadEpic<LoadActionMeta>(\n        (meta) => this.namespaceApi.byProject(meta.pk), ''\n      ),\n\n      columnEpicsFactory.createLoadEpic<LoadColumnsOfTableAction>(\n        (meta) => this.columnApi.ofDigital(meta.pk, meta.pkDigital),\n        ColumnActionsFactory.COLUMNS_OF_TABLE,\n        (results, pk) => {\n          const schemaObject = results as unknown as SchemaObject;\n\n          this.schemaObjectService.storeSchemaObject(schemaObject, pk)\n        }\n      ),\n\n    )\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { DfhLabel, DfhLabelApi, DfhProfile, DfhProfileApi } from '@kleiolab/lib-sdk-lb3';\nimport { DfhClass, DfhClassControllerService, DfhProperty, DfhPropertyControllerService } from '@kleiolab/lib-sdk-lb4';\nimport { combineEpics, Epic } from 'redux-observable-es6-compat';\nimport { NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\nimport { DfhActions, DfhClassActionFactory, DfhLabelActionFactory, DfhProfileActionFactory, DfhPropertyActionFactory } from '../actions/dfh.actions';\nimport { DfhClassSlice, DfhLabelSlice, DfhProfileSlice, DfhPropertySlice } from '../models/dfh.models';\nimport { LoadActionMeta } from '../_helpers/schema-actions-factory';\nimport { SchemaEpicsFactory } from '../_helpers/schema-epics-factory';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DfhEpics {\n  constructor(\n    private actions: DfhActions,\n    private notification: NotificationsAPIActions,\n    private profileApi: DfhProfileApi,\n    private classApi: DfhClassControllerService,\n    private propertyApi: DfhPropertyControllerService,\n    private labelApi: DfhLabelApi,\n  ) { }\n\n  public createEpics(): Epic {\n    const dfhProfileEpicsFactory = new SchemaEpicsFactory<DfhProfileSlice, DfhProfile>('dfh', 'profile', this.actions.profile, this.notification);\n    const dfhClassEpicsFactory = new SchemaEpicsFactory<DfhClassSlice, DfhClass>('dfh', 'klass', this.actions.klass, this.notification);\n    const dfhLabelEpicsFactory = new SchemaEpicsFactory<DfhLabelSlice, DfhLabel>('dfh', 'label', this.actions.label, this.notification);\n    const dfhPropertyEpicsFactory = new SchemaEpicsFactory<DfhPropertySlice, DfhProperty>('dfh', 'property', this.actions.property, this.notification);\n\n    return combineEpics(\n      // Profile Loaders\n      dfhProfileEpicsFactory.createLoadEpic<LoadActionMeta>((meta) => this.profileApi.ofProject(meta.pk),\n        DfhProfileActionFactory.OF_PROJECT\n      ),\n      // Property Loaders\n      dfhPropertyEpicsFactory.createLoadEpic<LoadActionMeta>((meta) => this.propertyApi.dfhPropertyControllerOfProject(meta.pk),\n        DfhPropertyActionFactory.OF_PROJECT\n      ),\n      // Class Loaders\n      dfhClassEpicsFactory.createLoadEpic<LoadActionMeta>((meta) => this.classApi.dfhClassControllerOfProject(meta.pk),\n        DfhClassActionFactory.OF_PROJECT\n      ),\n      // Label Loaders\n      dfhLabelEpicsFactory.createLoadEpic<LoadActionMeta>((meta) => this.labelApi.ofProject(meta.pk),\n        DfhLabelActionFactory.OF_PROJECT\n      )\n    )\n\n  }\n\n\n}\n","import { ProInfoProjRel, ProInfoProjRelApi } from '@kleiolab/lib-sdk-lb3';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { pathOr } from 'ramda';\nimport { Action } from 'redux';\nimport { ofType } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { ProActions } from '../actions/pro.actions';\nimport { NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\nimport { InfActionFactory } from './inf-action-factory';\nimport { ModifyActionMeta } from './schema-actions-factory';\nimport { SchemaEpicsFactory } from './schema-epics-factory';\n\nexport class InfEpicsFactory<Payload, Model> extends SchemaEpicsFactory<Payload, Model> {\n  constructor(\n    public actionPrefix: string,\n    public modelName: string,\n    public actions: InfActionFactory<Payload, Model>,\n    public notifications: NotificationsAPIActions,\n    public infoProjRelApi: ProInfoProjRelApi,\n    public proActions: ProActions\n  ) {\n    super(actionPrefix, modelName, actions, notifications)\n  }\n\n  /**\n   * This upsert epic overrides the standard upsert.\n   * In addition to the standard, it extends the items to upsert, so that\n   * they are added to the project.\n   */\n  createUpsertEpic<T>(apiFn: (meta: T) => Observable<Model[]>, onSuccessHook?: (data: Model[], pk?) => void) {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(this.actionPrefix + '.' + this.modelName + '::UPSERT'),\n        mergeMap((action: FluxStandardAction<Payload, ModifyActionMeta<Model>>) => new Observable<Action>((globalActions) => {\n          const pendingKey = action.meta.addPending;\n\n          const meta = action.meta as any;\n          // add is_in_project true\n\n          meta.items = meta.items.map(i => ({\n            ...i, entity_version_project_rels: [{\n              ...pathOr({}, ['entity_version_project_rels', 0], i),\n              is_in_project: true,\n            }]\n          }))\n\n          apiFn(meta).subscribe((data: Model[]) => {\n            if (onSuccessHook) {\n              onSuccessHook(data, action.meta.pk);\n              this.actions.succeeded(data, pendingKey, action.meta.pk);\n            }\n            else {\n              this.actions.upsertSucceeded(data, pendingKey, action.meta.pk);\n            }\n          }, error => {\n            globalActions.next(this.notifications.addToast({\n              type: 'error',\n              options: { title: error.message }\n            }));\n            this.actions.failed({ status: '' + error.status }, pendingKey, action.meta.pk);\n          });\n        })));\n    };\n  }\n\n  /**\n   * This epic maps the items to remove in minimalisic instances of\n   * InfoProjRel, containing only the fk_entity and is_in_project=false.\n   * The pk of the project, that removes the items, is transported in meta.pk.\n   */\n  createRemoveEpic() {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(this.actionPrefix + '.' + this.modelName + '::REMOVE'),\n        mergeMap((action: FluxStandardAction<Payload, ModifyActionMeta<Model>>) => new Observable<Action>((globalActions) => {\n          const pendingKey = action.meta.addPending;\n\n          this.infoProjRelApi.bulkUpdateEprAttributes(\n            action.meta.pk,\n            action.meta.items.map((item: any) => ({\n              fk_entity: item.pk_entity,\n              is_in_project: false\n            }))\n          )\n            .subscribe((infoProjRels: ProInfoProjRel[]) => {\n              if (infoProjRels.length) {\n                this.proActions.info_proj_rel.upsertSucceeded(infoProjRels, undefined, action.meta.pk)\n              }\n              this.actions.removeSucceeded(action.meta.items, pendingKey, action.meta.pk)\n            }, error => {\n              globalActions.next(this.notifications.addToast({\n                type: 'error',\n                options: { title: error.message }\n              }));\n              this.actions.failed({ status: '' + error.status }, pendingKey, action.meta.pk)\n            })\n        }))\n\n      )\n    }\n  }\n\n\n\n  /**\n   * This upsert epic overrides the standard upsert.\n   * In addition to the standard, it extends the items to upsert, so that\n   * they are added to the project.\n   */\n  createCustomUpsertEpic<T>(apiFn: (meta: T) => Observable<Model[]>, actionSuffix: string, onSuccessHook?: (data: Model[], pk?) => void) {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(this.actionPrefix + '.' + this.modelName + '::UPSERT' + (actionSuffix ? '::' + actionSuffix : '')),\n        mergeMap((action: FluxStandardAction<Payload, ModifyActionMeta<Model>>) => new Observable<Action>((globalActions) => {\n          const pendingKey = action.meta.addPending;\n          const meta = action.meta as any;\n          apiFn(meta).subscribe((data: Model[]) => {\n            if (onSuccessHook) {\n              onSuccessHook(data, action.meta.pk);\n              this.actions.upsertSucceeded([], pendingKey, action.meta.pk);\n            }\n            else {\n              this.actions.upsertSucceeded(data, pendingKey, action.meta.pk);\n            }\n          }, error => {\n            globalActions.next(this.notifications.addToast({\n              type: 'error',\n              options: { title: error.message }\n            }));\n            this.actions.failed({ status: '' + error.status }, pendingKey, action.meta.pk);\n          });\n        })));\n    };\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfPersistentItem, InfPersistentItemApi, InfStatement, InfStatementApi, InfTemporalEntity, InfTemporalEntityApi, InfTextProperty, InfTextPropertyApi, ProInfoProjRelApi } from '@kleiolab/lib-sdk-lb3';\nimport { GvSubfieldPage, GvSubfieldPageScope } from '@kleiolab/lib-sdk-lb4';\nimport { Action } from 'redux';\nimport { combineEpics, Epic, ofType } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { SchemaObject } from '../../root/models/model';\nimport { NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\nimport { DatActions } from '../actions/dat.actions';\nimport { FindStatementByParams, InfActions, InfPersistentItemActionFactory, InfStatementActionFactory, InfTemporalEntityActionFactory, InfTextPropertyActionFactory, LoadAlternativeTextProperties, LoadByPkMeta, LoadIngoingAlternativeStatements, LoadPaginatedStatementListMeta, PaginatedStatementList, SourcesAndDigitalsOfEntity, SourcesAndDigitalsOfEntityResult } from '../actions/inf.actions';\nimport { ProActions } from '../actions/pro.actions';\nimport { InfPersistentItemSlice, InfStatementSlice, InfTemporalEntitySlice, InfTextPropertySlice } from '../models/inf.models';\nimport { infRoot } from '../reducer-configs/inf.config';\nimport { SchemaService } from '../services/schema.service';\nimport { Flattener, storeFlattened } from '../_helpers/flattener';\nimport { InfEpicsFactory } from '../_helpers/inf-epic-factory';\nimport { FluxActionObservable, ModifyActionMeta } from '../_helpers/schema-actions-factory';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InfEpics {\n  constructor(\n    public notification: NotificationsAPIActions,\n    public peItApi: InfPersistentItemApi,\n    public teEnApi: InfTemporalEntityApi,\n    public statementApi: InfStatementApi,\n    public textPropertyApi: InfTextPropertyApi,\n    public infActions: InfActions,\n    public proActions: ProActions,\n    public datActions: DatActions,\n    public infoProjRelApi: ProInfoProjRelApi,\n    private schemaObjectService: SchemaService\n  ) { }\n\n  public createEpics(): Epic {\n    const infPersistentItemEpicsFactory = new InfEpicsFactory<InfPersistentItemSlice, InfPersistentItem>\n      (infRoot, 'persistent_item', this.infActions.persistent_item, this.notification, this.infoProjRelApi, this.proActions);\n\n    const infTemporalEntityEpicsFactory = new InfEpicsFactory<InfTemporalEntitySlice, InfTemporalEntity>\n      (infRoot, 'temporal_entity', this.infActions.temporal_entity, this.notification, this.infoProjRelApi, this.proActions);\n\n    const infStatementEpicsFactory = new InfEpicsFactory<InfStatementSlice, InfStatement>\n      (infRoot, 'statement', this.infActions.statement, this.notification, this.infoProjRelApi, this.proActions);\n\n    const infTextPropertyEpicsFactory = new InfEpicsFactory<InfTextPropertySlice, InfTextProperty>\n      (infRoot, 'text_property', this.infActions.text_property, this.notification, this.infoProjRelApi, this.proActions);\n\n    return combineEpics(\n      /**\n       * Perstistent Item\n       *\n       */\n      infPersistentItemEpicsFactory.createLoadEpic<LoadByPkMeta>(\n        (meta) => this.peItApi.ownProperties(meta.pk, meta.pkEntity),\n        InfPersistentItemActionFactory.MINIMAL_BY_PK,\n        (results, pk) => {\n          const schemas = results as any as SchemaObject;\n          // call action to store records\n          Object.keys(schemas).forEach(schema => {\n            let actions;\n            if (schema === 'inf') actions = this.infActions;\n            else if (schema === 'pro') actions = this.proActions;\n            if (actions) {\n              Object.keys(schemas[schema]).forEach(model => {\n                actions[model].loadSucceeded(schemas[schema][model], undefined, pk)\n              })\n            }\n          })\n        }\n      ),\n      infPersistentItemEpicsFactory.createLoadEpic<LoadByPkMeta>(\n        (meta) => this.peItApi.typesOfProject(meta.pk),\n        InfPersistentItemActionFactory.TYPES_OF_PROJECT,\n        (results, pk) => {\n          const schemaObject = results as SchemaObject;\n          this.schemaObjectService.storeSchemaObject(schemaObject, pk)\n        }\n      ),\n      // infPersistentItemEpicsFactory.createLoadEpic<LoadTypeOfProjectAction>(\n      //   (meta) => this.peItApi.typeOfProject(meta.pk, meta.pkEntity),\n      //   InfPersistentItemActionFactory.TYPE_OF_PROJECT,\n      //   (results, pk) => {\n      //     const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n      //     flattener.persistent_item.flatten(results);\n      //     storeFlattened(flattener.getFlattened(), pk);\n      //   }\n      // ),\n      infPersistentItemEpicsFactory.createUpsertEpic<ModifyActionMeta<InfPersistentItem>>((meta) => this.peItApi\n        .findOrCreateInfPersistentItems(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.persistent_item.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n      infPersistentItemEpicsFactory.createRemoveEpic(),\n\n\n      /**\n       * Temporal Entity\n       *\n       */\n      infTemporalEntityEpicsFactory.createLoadEpic<LoadByPkMeta>(\n        (meta) => this.teEnApi.ownProperties(meta.pk, meta.pkEntity),\n        InfTemporalEntityActionFactory.OWN_PROPERTIES,\n        (results, pk) => {\n          const schemaObject = results as SchemaObject;\n          this.schemaObjectService.storeSchemaObject(schemaObject, pk)\n        }\n      ),\n      /**\n       * Epic to load paginated Temporal Entity List\n       */\n      (action$: FluxActionObservable<any, LoadPaginatedStatementListMeta>, store) => action$.pipe(\n        ofType(infTemporalEntityEpicsFactory.type('LOAD', InfTemporalEntityActionFactory.PAGINATED_LIST)),\n        mergeMap(action => new Observable<Action>((globalActions) => {\n          const meta = action.meta;\n          const apiCal$ = this.teEnApi.temporalEntityList(\n            meta.pk, meta.pkSourceEntity, meta.pkProperty, meta.fkTargetClass, meta.isOutgoing, meta.limit, meta.offset\n          )\n          const pkProject = meta.pk;\n          this.handleTemporalEntityListAction(action, infTemporalEntityEpicsFactory, globalActions, apiCal$, pkProject);\n        }))\n      ),\n      /**\n       * Epic to load paginated Alternative Temporal Entity List\n       */\n      (action$: FluxActionObservable<any, LoadPaginatedStatementListMeta>, store) => action$.pipe(\n        ofType(infTemporalEntityEpicsFactory.type('LOAD', InfTemporalEntityActionFactory.PAGINATED_ALTERNATIVE_LIST)),\n        mergeMap(action => new Observable<Action>((globalActions) => {\n          const meta = action.meta;\n          const apiCal$ = this.teEnApi.alternativeTemporalEntityList(\n            meta.pk, meta.pkSourceEntity, meta.pkProperty, meta.fkTargetClass, meta.isOutgoing, meta.limit, meta.offset\n          )\n          const pkProject = null;\n          this.handleTemporalEntityListAction(action, infTemporalEntityEpicsFactory, globalActions, apiCal$, pkProject);\n        }))\n      ),\n      infTemporalEntityEpicsFactory.createUpsertEpic<ModifyActionMeta<InfTemporalEntity>>((meta) => this.teEnApi\n        .findOrCreateInfTemporalEntities(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.temporal_entity.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n      infTemporalEntityEpicsFactory.createRemoveEpic(),\n\n\n      /**\n       * Statement\n       *\n       */\n      infStatementEpicsFactory.createLoadEpic<LoadIngoingAlternativeStatements>(\n        (meta) => this.statementApi.alternativesNotInProjectByEntityPk(meta.pkEntity, meta.pkProperty, meta.pk),\n        InfStatementActionFactory.ALTERNATIVES_INGOING,\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.statement.flatten(results);\n          storeFlattened(flattener.getFlattened(), null);\n        }\n      ),\n      infStatementEpicsFactory.createUpsertEpic<ModifyActionMeta<InfStatement>>((meta) => this.statementApi\n        .findOrCreateInfStatements(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.statement.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n\n      (action$: FluxActionObservable<any, LoadPaginatedStatementListMeta>, store) => action$.pipe(\n        ofType(infStatementEpicsFactory.type('LOAD', InfTemporalEntityActionFactory.PAGINATED_LIST)),\n        mergeMap(action => new Observable<Action>((globalActions) => {\n          const meta = action.meta;\n          const apiCal$ = this.statementApi.paginatedListTargetingEntityPreviews(\n            meta.pk, meta.pkSourceEntity, meta.pkProperty, meta.fkTargetClass, meta.isOutgoing, meta.limit, meta.offset\n          )\n          const pkProject = meta.pk;\n          this.handleTemporalEntityListAction(action, infStatementEpicsFactory, globalActions, apiCal$, pkProject);\n        }))\n      ),\n\n      infStatementEpicsFactory.createRemoveEpic(),\n\n\n      infStatementEpicsFactory.createLoadEpic<FindStatementByParams>(\n        (meta) => this.statementApi.queryByParams(meta.ofProject, meta.pk, meta.pkEntity, meta.pkInfoRange, meta.pkInfoDomain, meta.pkProperty),\n        InfStatementActionFactory.BY_PARAMS,\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.statement.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'LOAD');\n        }\n      ),\n\n      infStatementEpicsFactory.createLoadEpic<SourcesAndDigitalsOfEntity>(\n        (meta) => this.statementApi.sourcesAndDigitalsOfEntity(meta.ofProject, meta.pk, meta.pkEntity),\n        InfStatementActionFactory.SOURCES_AND_DIGITALS_OF_ENTITY,\n        (results, pk) => {\n          const res = results as any as SourcesAndDigitalsOfEntityResult;\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.statement.flatten(res.statements);\n          storeFlattened(flattener.getFlattened(), pk);\n\n          const flattener2 = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener2.digital.flatten(res.digitals);\n          storeFlattened(flattener2.getFlattened(), pk);\n\n        }\n      ),\n\n\n\n      /**\n       * Text Property\n       *\n       */\n      infTextPropertyEpicsFactory.createLoadEpic<LoadAlternativeTextProperties>((meta) => this.textPropertyApi\n        .findAlternativeTextProperties(meta.pk, meta.fkEntity, meta.fkClassField),\n        InfTextPropertyActionFactory.ALTERNATIVES,\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.text_property.flatten(results);\n          storeFlattened(flattener.getFlattened(), null);\n        }\n      ),\n\n      infTextPropertyEpicsFactory.createUpsertEpic<ModifyActionMeta<InfTextProperty>>((meta) => this.textPropertyApi\n        .findOrCreateInfTextProperties(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.text_property.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk);\n        }\n      ),\n      infTextPropertyEpicsFactory.createRemoveEpic(),\n\n    );\n  }\n\n\n  /**\n   * handles the update of store for paginated temporal entity lists.\n   * @param pkProject if null, list is handled as 'repo' list\n   */\n  private handleTemporalEntityListAction<M>(\n    action,\n    epicsFactory: InfEpicsFactory<InfTemporalEntitySlice, InfTemporalEntity> | InfEpicsFactory<InfStatementSlice, InfStatement>,\n    globalActions,\n    apiCall$: Observable<any>,\n    pkProject) {\n    const meta: LoadPaginatedStatementListMeta = action.meta;\n    const scope: GvSubfieldPageScope = meta.alternatives ? { notInProject: pkProject } : { inProject: pkProject }\n    const req: GvSubfieldPage = {\n      fkSourceEntity: meta.pkSourceEntity,\n      fkProperty: meta.pkProperty,\n      isOutgoing: meta.isOutgoing,\n      targetClass: meta.fkTargetClass,\n      limit: meta.limit,\n      offset: meta.offset,\n      scope,\n    }\n    const pendingKey = meta.addPending;\n\n    // call action to set pagination loading on true\n    this.infActions.statement.loadPage(req, pkProject);\n    // call api to load data\n    apiCall$.subscribe((data: PaginatedStatementList) => {\n      // call action to store records\n      this.schemaObjectService.storeSchemaObject(data.schemas, pkProject);\n      // call action to store pagination\n      this.infActions.statement.loadPageSucceeded(data.paginatedStatements, data.count, req, pkProject);\n      // call action to conclude the pending request\n      epicsFactory.actions.loadSucceeded([], pendingKey, pkProject);\n    }, error => {\n      // call action to handle error\n      epicsFactory.onError(globalActions, error, pendingKey, pkProject);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ProClassFieldConfig, ProClassFieldConfigApi, ProDfhClassProjRel, ProDfhClassProjRelApi, ProDfhProfileProjRel, ProDfhProfileProjRelApi, ProInfoProjRel, ProInfoProjRelApi, ProProject, ProProjectApi, ProTextProperty, ProTextPropertyApi } from '@kleiolab/lib-sdk-lb3';\nimport { AnalysisService, ProAnalysis } from '@kleiolab/lib-sdk-lb4';\nimport { combineEpics, Epic } from 'redux-observable-es6-compat';\nimport { SchemaObject } from '../../root/models/model';\nimport { NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\nimport { DatActions } from '../actions/dat.actions';\nimport { InfActions } from '../actions/inf.actions';\nimport { MarkStatementAsFavoriteActionMeta, ProActions, ProClassFieldConfigActionFactory, ProDfhClassProjRelActionFactory, ProDfhProfileProjRelActionFactory, ProInfoProjRelActionFactory, ProProjectActionFactory, ProTextPropertyActionFactory } from '../actions/pro.actions';\nimport { ProAnalysisSlice, ProClassFieldConfigSlice, ProDfhClassProjRelSlice, ProDfhProfileProjRelSlice, ProInfoProjRelSlice, ProProjectSlice, ProTextPropertySlice } from '../models/pro.models';\nimport { proRoot } from '../reducer-configs/pro.config';\nimport { SchemaService } from '../services/schema.service';\nimport { Flattener, storeFlattened } from '../_helpers/flattener';\nimport { LoadActionMeta, ModifyActionMeta } from '../_helpers/schema-actions-factory';\nimport { SchemaEpicsFactory } from '../_helpers/schema-epics-factory';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProEpics {\n  constructor(\n    public notification: NotificationsAPIActions,\n    public infActions: InfActions,\n    public proActions: ProActions,\n    public datActions: DatActions,\n    public projectApi: ProProjectApi,\n    public infoProjRelApi: ProInfoProjRelApi,\n    public classProjRelApi: ProDfhClassProjRelApi,\n    public profileProjRelApi: ProDfhProfileProjRelApi,\n    public classFieldConfApi: ProClassFieldConfigApi,\n    public textPropertyApi: ProTextPropertyApi,\n    public analysisApi: AnalysisService,\n    private schemaObjectService: SchemaService\n  ) { }\n\n  public createEpics(): Epic {\n    const proProjectEpicsFactory = new SchemaEpicsFactory<ProProjectSlice, ProProject>\n      (proRoot, 'project', this.proActions.project, this.notification);\n\n    const proInfoProjRelEpicsFactory = new SchemaEpicsFactory<ProInfoProjRelSlice, ProInfoProjRel>\n      (proRoot, 'info_proj_rel', this.proActions.info_proj_rel, this.notification);\n\n    const proDfhClassProjRelEpicsFactory = new SchemaEpicsFactory<ProDfhClassProjRelSlice, ProDfhClassProjRel>\n      (proRoot, 'dfh_class_proj_rel', this.proActions.dfh_class_proj_rel, this.notification);\n\n    const proDfhProfileProjRelEpicsFactory = new SchemaEpicsFactory<ProDfhProfileProjRelSlice, ProDfhProfileProjRel>\n      (proRoot, 'dfh_profile_proj_rel', this.proActions.dfh_profile_proj_rel, this.notification);\n\n    const proClassFieldConfigEpicsFactory = new SchemaEpicsFactory<ProClassFieldConfigSlice, ProClassFieldConfig>\n      (proRoot, 'class_field_config', this.proActions.class_field_config, this.notification);\n\n    const proTextPropertyEpicsFactory = new SchemaEpicsFactory<ProTextPropertySlice, ProTextProperty>\n      (proRoot, 'text_property', this.proActions.text_property, this.notification);\n\n    const proAnalysisEpicsFactory = new SchemaEpicsFactory<ProAnalysisSlice, ProAnalysis>\n      (proRoot, 'analysis', this.proActions.analysis, this.notification);\n\n\n\n    return combineEpics(\n      /**\n      * ProProject\n      */\n      proProjectEpicsFactory.createLoadEpic<LoadActionMeta>((meta) => this.projectApi\n        .ofAccount(meta.pk),\n        ProProjectActionFactory.OF_ACCOUNT,\n        (results) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_project.flatten(results);\n          storeFlattened(flattener.getFlattened());\n        }\n      ),\n      proProjectEpicsFactory.createLoadEpic<LoadActionMeta>((meta) => this.projectApi\n        .getBasics(meta.pk),\n        ProProjectActionFactory.LOAD_BASICS,\n        (results) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_project.flatten(results);\n          storeFlattened(flattener.getFlattened());\n        }\n      ),\n      /**\n       * ProInfoProjRel\n       */\n      proInfoProjRelEpicsFactory.createUpsertEpic<ModifyActionMeta<ProInfoProjRel>>((meta) => this.infoProjRelApi\n        .bulkUpdateEprAttributes(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.info_proj_rel.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n      proInfoProjRelEpicsFactory.createLoadEpic<MarkStatementAsFavoriteActionMeta>((meta) => this.infoProjRelApi\n        .markStatementAsFavorite(meta.pk, meta.pkStatement, meta.isOutgoing),\n        ProInfoProjRelActionFactory.MARK_ROLE_AS_FAVORITE,\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.info_proj_rel.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n      /**\n       * ProClassFieldConfig\n       */\n      proClassFieldConfigEpicsFactory.createLoadEpic<LoadActionMeta>(\n        (meta) => this.classFieldConfApi.ofProject(meta.pk),\n        ProClassFieldConfigActionFactory.OF_PROJECT,\n        (results) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_class_field_config.flatten(results);\n          storeFlattened(flattener.getFlattened());\n        }\n      ),\n      proClassFieldConfigEpicsFactory.createUpsertEpic<ModifyActionMeta<ProClassFieldConfig>>((meta) => this.classFieldConfApi\n        .bulkUpsert(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_class_field_config.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n      /**\n       * ProProDfhClassProjRel\n       */\n      proDfhClassProjRelEpicsFactory.createLoadEpic<LoadActionMeta>(\n        (meta) => this.classProjRelApi.ofProject(meta.pk),\n        ProDfhClassProjRelActionFactory.OF_PROJECT,\n        (results) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_dfh_class_proj_rel.flatten(results);\n          storeFlattened(flattener.getFlattened());\n        }\n      ),\n      proDfhClassProjRelEpicsFactory.createUpsertEpic<ModifyActionMeta<ProDfhClassProjRel>>((meta) => this.classProjRelApi\n        .bulkUpsert(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_dfh_class_proj_rel.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n      /**\n      * ProDfhProfileProjRel\n      */\n      proDfhProfileProjRelEpicsFactory.createLoadEpic<LoadActionMeta>(\n        (meta) => this.profileProjRelApi.ofProject(meta.pk),\n        ProDfhProfileProjRelActionFactory.OF_PROJECT,\n        (results) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_dfh_profile_proj_rel.flatten(results);\n          storeFlattened(flattener.getFlattened());\n        }\n      ),\n      proDfhProfileProjRelEpicsFactory.createUpsertEpic<ModifyActionMeta<ProDfhProfileProjRel>>((meta) => this.profileProjRelApi\n        .bulkUpsert(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_dfh_profile_proj_rel.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n      /**\n      * ProTextProperty\n      */\n      proTextPropertyEpicsFactory.createLoadEpic<LoadActionMeta>(\n        (meta) => this.textPropertyApi.ofProject(meta.pk),\n        ProTextPropertyActionFactory.OF_PROJECT,\n        (results, pk) => {\n          const schemas = results as any as SchemaObject;\n          this.schemaObjectService.storeSchemaObject(schemas, pk)\n        }\n      ),\n      proTextPropertyEpicsFactory.createUpsertEpic<ModifyActionMeta<ProTextProperty>>((meta) => this.textPropertyApi\n        .bulkUpsert(meta.pk, meta.items),\n        (results, pk) => {\n          const schemas = results as any as SchemaObject;\n          this.schemaObjectService.storeSchemaObject(schemas, pk)\n        }\n      ),\n      proTextPropertyEpicsFactory.createDeleteEpic((meta) => this.textPropertyApi.bulkDelete(meta.pk, meta.items)),\n      /**\n      * ProAnalysis\n      */\n      // proAnalysisEpicsFactory.createLoadEpic<LoadByPkANsVersionActionMeta>(\n      //   (meta) => this.analysisApi.analysisControllerGetVersion(meta.pk, meta.pkEntity, meta.version).pipe(map(x => [x])),\n      //   ProAnalysisActionFactory.BY_PK_AND_VERSION,\n      //   (results) => {\n      //     const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n      //     flattener.analysis.flatten(results);\n      //     storeFlattened(flattener.getFlattened());\n      //   }\n      // ),\n      // proAnalysisEpicsFactory.createUpsertEpic<ModifyActionMeta<ProAnalysis>>(\n      //   (meta) => this.analysisApi.analysisControllerBulkUpsert(meta.pk, meta.items),\n      //   (results, pk) => {\n      //     const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n      //     flattener.analysis.flatten(results);\n      //     storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n      //   }\n      // ),\n      proAnalysisEpicsFactory.createDeleteEpic(\n        (meta) => this.analysisApi.analysisControllerBulkDelete(meta.pk, meta.items.map(item => item.pk_entity)),\n      ),\n    )\n  }\n  // private storeSchemaObject(schemas: SchemaObject, pkProject) {\n  //   if (schemas && Object.keys(schemas).length > 0) {\n  //     Object.keys(schemas).forEach(schema => {\n  //       let actions;\n  //       if (schema === 'inf') actions = this.infActions;\n  //       else if (schema === 'pro') actions = this.proActions;\n  //       if (actions) {\n  //         Object.keys(schemas[schema]).forEach(model => {\n  //           actions[model].loadSucceeded(schemas[schema][model], undefined, pkProject);\n  //         });\n  //       }\n  //     });\n  //   }\n  // }\n\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { GvLoadSubfieldPageReq, GvSchemaObject } from '@kleiolab/lib-sdk-lb4';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { Observable } from 'rxjs';\nimport { IAppState } from '../../root/models/model';\nimport { LoadActionMeta } from '../_helpers/schema-actions-factory';\n\nexport type GvSchemaObjectAction = FluxStandardAction<Observable<GvSchemaObject>, LoadActionMeta>;\n\ninterface GvPaginationObjectActionMeta extends LoadActionMeta {\n  req: GvLoadSubfieldPageReq\n}\nexport type GvPaginationObjectAction = FluxStandardAction<null, GvPaginationObjectActionMeta>;\n\n\n/**\n * Class for actions that handle the loading of schema objects,\n * negative schema objects ect.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GvSchemaActions {\n  static readonly GV_SCHEMA_OBJECT_LOAD = 'GV_SCHEMA_OBJECT::LOAD';\n  static readonly GV_PAGINATION_OBJECT_LOAD = 'GV_PAGINATION_OBJECT::LOAD';\n\n  constructor(private ngRedux: NgRedux<IAppState>) { }\n\n  /**\n   * Action for loading GvSchemaObject into the store\n   * @param apiCall$ Pass in the api call. Don't subscribe to the call, since otherwise\n   *                we'll end up with two subscriptions and thus two api calls\n   */\n  loadGvSchemaObject(\n    apiCall$: Observable<GvSchemaObject>\n  ): void {\n    const addPending = U.uuid()\n    const action: GvSchemaObjectAction = {\n      type: GvSchemaActions.GV_SCHEMA_OBJECT_LOAD,\n      meta: { addPending },\n      payload: apiCall$,\n    };\n    this.ngRedux.dispatch(action)\n  }\n\n  /**\n * Action for loading GvPaginationObject into the store\n * @param apiCall$ Pass in the api call. Don't subscribe to the call, since otherwise\n *                we'll end up with two subscriptions and thus two api calls\n */\n  loadGvPaginationObject(\n    req: GvLoadSubfieldPageReq,\n  ): void {\n    const addPending = U.uuid()\n    const action: GvPaginationObjectAction = {\n      type: GvSchemaActions.GV_PAGINATION_OBJECT_LOAD,\n      meta: { addPending, req },\n    };\n    this.ngRedux.dispatch(action)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { SubfieldPageControllerService } from '@kleiolab/lib-sdk-lb4';\nimport { Action } from 'redux';\nimport { combineEpics, Epic, ofType, StateObservable } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { IAppState } from '../../root/models/model';\nimport { LoadingBarActions } from '../../state-gui/actions/loading-bar.actions';\nimport { NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\nimport { InfActions } from '../actions/inf.actions';\nimport { GvPaginationObjectAction, GvSchemaActions, GvSchemaObjectAction } from '../actions/schema.actions';\nimport { SchemaService } from '../services/schema.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SchemaEpics {\n  constructor(\n    private schemaObjectService: SchemaService,\n    private loadingBarActions: LoadingBarActions,\n    private notificationActions: NotificationsAPIActions,\n    public infActions: InfActions,\n    private pag: SubfieldPageControllerService\n\n  ) { }\n\n  public createEpics(): Epic {\n\n    return combineEpics(\n      /**\n       * Epic for loading GvSchemaObjects\n       * - it subscribes to the given observable (payload), which usually triggers a REST API call\n       * - on success it stores the GvSchemaObject\n       * - else it toasts an error message\n       */\n      (action$, store) => action$.pipe(\n        ofType(GvSchemaActions.GV_SCHEMA_OBJECT_LOAD),\n        mergeMap((action: GvSchemaObjectAction) => new Observable<Action>((actionEmitter) => {\n          actionEmitter.next(this.loadingBarActions.startLoading());\n          action.payload.subscribe((data) => {\n            this.schemaObjectService.storeSchemaObjectGv(data, 0)\n            actionEmitter.next(this.loadingBarActions.completeLoading());\n          }, error => {\n            actionEmitter.next(this.notificationActions.addToast({\n              type: 'error',\n              options: { title: error }\n            }))\n          })\n        }))\n      ),\n      /**\n      * Epic for loading GvPaginationObjects\n      * - it subscribes to the given observable (payload), which usually triggers a REST API call\n      * - on success it stores the GvPaginationObject\n      * - else it toasts an error message\n      */\n      (action$, store: StateObservable<IAppState>) => action$.pipe(\n        ofType(GvSchemaActions.GV_PAGINATION_OBJECT_LOAD),\n        mergeMap((action: GvPaginationObjectAction) => new Observable<Action>((actionEmitter) => {\n          actionEmitter.next(this.loadingBarActions.startLoading());\n\n          const pkProject = store.value.activeProject.pk_project;\n          const meta = action.meta;\n\n          // call action to set pagination loading on true\n          this.infActions.statement.loadPage(meta.req.page, pkProject);\n\n          this.pag.subfieldPageControllerLoadSubfieldPage(action.meta.req)\n            .subscribe((data) => {\n              // call action to store records\n              this.schemaObjectService.storeSchemaObjectGv(data.schemas, pkProject);\n              // call action to store page informations\n              for (const subfieldPage of data.subfieldPages) {\n                this.infActions.statement.loadPageSucceeded(subfieldPage.paginatedStatements, subfieldPage.count, subfieldPage.page, pkProject);\n              }\n              // call action to complete loading bar\n              actionEmitter.next(this.loadingBarActions.completeLoading());\n            }, error => {\n              actionEmitter.next(this.notificationActions.addToast({\n                type: 'error',\n                options: { title: error }\n              }))\n            })\n        }))\n      )\n    )\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { SysSystemRelevantClass, SysSystemRelevantClassApi } from '@kleiolab/lib-sdk-lb3';\nimport { SysConfigValue, SystemConfigurationService } from '@kleiolab/lib-sdk-lb4';\nimport { combineEpics, Epic } from 'redux-observable-es6-compat';\nimport { map } from 'rxjs/operators';\nimport { NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\nimport { SysActions } from '../actions/sys.actions';\nimport { SysConfigSlice, SysRelevantClassSlice } from '../models/sys.models';\nimport { sysRoot } from '../reducer-configs/sys.config';\nimport { ModifyActionMeta } from '../_helpers/schema-actions-factory';\nimport { SchemaEpicsFactory } from '../_helpers/schema-epics-factory';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SysEpics {\n  constructor(\n    private actions: SysActions,\n    private notification: NotificationsAPIActions,\n    private sysRelevantClassApi: SysSystemRelevantClassApi,\n    // private sysAnalysisTypeApi: SysAnalysisTypeApi,\n    private sysConfigApi: SystemConfigurationService\n  ) { }\n\n  public createEpics(): Epic {\n    const systemRelevantClassEpicsFactory = new SchemaEpicsFactory<SysRelevantClassSlice, SysSystemRelevantClass>\n      (sysRoot, 'system_relevant_class', this.actions.system_relevant_class, this.notification);\n\n    // const analysisTypeEpicsFactory = new StandardEpicsFactory<SysRelevantClassSlice, SysAnalysisType>\n    //   (sysRoot, 'analysis_type', this.actions.analysis_type, this.notification);\n\n    const configEpicsFactory = new SchemaEpicsFactory<SysConfigSlice, SysConfigValue>\n      (sysRoot, 'config', this.actions.config, this.notification);\n\n\n\n    return combineEpics(\n\n      // SystemRelevantClass Epics\n      systemRelevantClassEpicsFactory.createLoadEpic((action) => this.sysRelevantClassApi.find(), ''),\n      systemRelevantClassEpicsFactory.createUpsertEpic<ModifyActionMeta<SysSystemRelevantClass>>((meta) => this.sysRelevantClassApi.bulkReplaceOrCreate(meta.items)),\n\n      // analysisTypeEpicsFactory.createLoadEpic(() => this.sysAnalysisTypeApi.find(), ''),\n\n      configEpicsFactory.createLoadEpic(\n        () => this.sysConfigApi.sysConfigControllerGetSystemConfig().pipe(map(x => [x])),\n        '')\n    );\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Action } from 'redux';\nimport { ActionsObservable, combineEpics, Epic, StateObservable } from 'redux-observable-es6-compat';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { AccountEpics } from '../state-gui/epics/account.epics';\nimport { ActiveProjectEpics } from '../state-gui/epics/active-project.epics';\nimport { LoadingBarEpics } from '../state-gui/epics/loading-bar.epics';\nimport { NotificationsAPIEpics } from '../state-gui/epics/notifications.epics';\nimport { ActionResolverEpics } from '../state-schema/epics/action-resolver.epics';\nimport { DatEpics } from '../state-schema/epics/dat.epics';\nimport { DfhEpics } from '../state-schema/epics/dfh.epics';\nimport { InfEpics } from '../state-schema/epics/inf.epics';\nimport { ProEpics } from '../state-schema/epics/pro.epics';\nimport { SchemaEpics } from '../state-schema/epics/schema.epics';\nimport { SysEpics } from '../state-schema/epics/sys.epics';\nimport { IAppState } from './models/model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RootEpics {\n\n  private rootEpicStream$;\n  private rootEpic;\n\n  constructor(\n    private loadingBarEpics: LoadingBarEpics,\n    private notificationEpics: NotificationsAPIEpics,\n    private activeProjectEpics: ActiveProjectEpics,\n    private accountEpics: AccountEpics,\n    private sysEpics: SysEpics,\n    private dfhEpics: DfhEpics,\n    private infEpics: InfEpics,\n    private datEpics: DatEpics,\n    private proEpics: ProEpics,\n    private schemaObjectEpics: SchemaEpics,\n    private actionResolver: ActionResolverEpics\n  ) {\n\n    this.rootEpicStream$ = new BehaviorSubject(combineEpics(\n      this.loadingBarEpics.createEpics(),\n      this.notificationEpics.createEpics(),\n      this.activeProjectEpics.createEpics(),\n      this.accountEpics.createEpics(),\n      this.sysEpics.createEpics(),\n      this.dfhEpics.createEpics(),\n      this.infEpics.createEpics(),\n      this.datEpics.createEpics(),\n      this.proEpics.createEpics(),\n      this.schemaObjectEpics.createEpics(),\n      // important: this needs to be the last epic in\n      this.actionResolver.createEpics()\n    ));\n\n    this.rootEpic = (\n      action$: ActionsObservable<Action>,\n      state$: StateObservable<IAppState>,\n      dependencies = undefined\n    ): Observable<Action> => {\n      return this.rootEpicStream$.pipe(\n        mergeMap((epic: Epic) => epic(action$, state$, dependencies))\n      );\n    }\n  }\n\n  public getRootEpic(): Epic<Action<any>, Action<any>, void, any> {\n    return this.rootEpic;\n  }\n\n  /**\n   * Adds an epic to the RootEpic middleware\n   * @param epic that will be added to the RootEpics\n   */\n  public addEpic(epic: Epic<Action<any>, Action<any>, void, any>) {\n    this.rootEpicStream$.next(epic);\n  }\n}\n","import { AccountActions, AccountAction } from '../../state-gui/actions/account.actions';\nimport { IAccount } from '../models/account.model';\n\n\nconst INITIAL_STATE: IAccount = {\n  account: undefined,\n  roles: undefined\n};\n\nexport const accountRootReducer = (lastState: IAccount = INITIAL_STATE, action: AccountAction): IAccount => {\n  switch (action.type) {\n    case AccountActions.LOGIN_SUCCEEDED:\n      lastState = {\n        ...lastState,\n        account: action.meta.account\n      };\n      break;\n\n\n    case AccountActions.ACCOUNT_UPDATED:\n      lastState = {\n        ...lastState,\n        account: action.meta.account\n      };\n      break;\n\n    case AccountActions.LOAD_ROLES_SUCCEEDED:\n      lastState = {\n        ...lastState,\n        roles: action.meta.accountRoles\n      };\n      break;\n\n    case AccountActions.LOAD_ROLES_FAILED:\n      lastState = {\n        ...lastState,\n        roles: []\n      };\n      break;\n\n\n\n  }\n  return lastState;\n}\n\n","import { Action } from 'redux';\nimport { LoadingBarAction, LoadingBarActions } from '../actions/loading-bar.actions';\nimport { LoadingBar } from '../models/loading-bar.models';\n\nconst INITIAL_STATE: LoadingBar = {\n  loading: false,\n  progress: 0,\n};\n\n\nexport function loadingBarReducer(state: LoadingBar = INITIAL_STATE, a: Action): LoadingBar {\n\n  const action = a as LoadingBarAction;\n\n\n  switch (action.type) {\n\n    case LoadingBarActions.START:\n      return {\n        ...state,\n        loading: true\n      };\n\n    case LoadingBarActions.STOP:\n      return {\n        ...state,\n        loading: false,\n      };\n\n    case LoadingBarActions.COPMLETE:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n\n  return state;\n};\n\n","import { moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { omit } from 'ramda';\nimport { ActiveProjectActions, ActiveProjectAction } from '../../state-gui/actions/active-project.action';\nimport { ProjectDetail } from '../models/active-project.models';\n\n\nconst INITIAL_STATE: ProjectDetail = {\n  label: '',\n  list: '',\n  uiIdSerial: 0,\n  panelSerial: 0,\n  focusedPanel: 0,\n  panels: []\n};\nexport const activeProjectReducer = (state: ProjectDetail = INITIAL_STATE, action: ActiveProjectAction): ProjectDetail => {\n  let pi, ti, ppi, cpi, pti, cti;\n  switch (action.type) {\n    /************************************************************************************\n     * Load project data (metadata, crm)\n    ************************************************************************************/\n    case ActiveProjectActions.LOAD_PROJECT_BASICS_SUCCEEDED:\n      state = {\n        ...state,\n        ...action.meta.projectPreview\n      };\n      break;\n    case ActiveProjectActions.LOAD_PROJECT_CONFIG:\n      state = {\n        ...state,\n        loadingConfigData: true\n      }\n      break;\n    case ActiveProjectActions.LOAD_PROJECT_CONFIG_SUCCEEDED:\n      state = {\n        ...state,\n        // crm: action.payload.crm,\n        configDataInitialized: true,\n        loadingConfigData: false\n      }\n      break;\n\n    /************************************************************************************\n     * Layout -- Tabs\n    ************************************************************************************/\n    case ActiveProjectActions.SET_PANELS:\n      state = {\n        ...state,\n        panels: action.meta.panels,\n        uiIdSerial: action.meta.uiIdSerial,\n        panelSerial: action.meta.panelSerial,\n        focusedPanel: action.meta.focusedPanel\n      }\n      break;\n    case ActiveProjectActions.SET_LIST_TYPE:\n      state = {\n        ...state,\n        list: action.meta.list\n      }\n      break;\n    case ActiveProjectActions.ACTIVATE_TAB:\n      pi = action.meta.panelIndex;\n      ti = action.meta.tabIndex;\n      state = {\n        ...state,\n        panels: Object.assign([...state.panels], {\n          [pi]: {\n            ...state.panels[pi],\n            tabs: [...state.panels[pi].tabs].map((tab, index) => {\n              tab.active = (index === ti);\n              return tab;\n            })\n          }\n        })\n      }\n      break;\n    case ActiveProjectActions.MOVE_TAB:\n      ppi = action.meta.previousPanelIndex;\n      cpi = action.meta.currentPanelIndex;\n      pti = action.meta.previousTabIndex;\n      cti = action.meta.currentTabIndex;\n\n      if (ppi === cpi) {\n        const tabs = [...state.panels[cpi].tabs];\n        moveItemInArray(tabs, pti, cti);\n        state = {\n          ...state,\n          panels: Object.assign([...state.panels], {\n            [cpi]: {\n              ...state.panels[cpi],\n              tabs\n            }\n          })\n        }\n      } else {\n        const pTabs = [...state.panels[ppi].tabs];\n        const cTabs = [...state.panels[cpi].tabs];\n        transferArrayItem(pTabs, cTabs, pti, cti);\n        state = {\n          ...state,\n          panels: Object.assign([...state.panels], {\n            [ppi]: {\n              ...state.panels[ppi],\n              tabs: pTabs.map((tab, index) => {\n                tab.active = (index === (pti < pTabs.length ? pti : (pti - 1)));\n                return tab;\n              })\n            },\n            [cpi]: {\n              ...state.panels[cpi],\n              tabs: cTabs.map((tab, index) => {\n                tab.active = (index === cti);\n                return tab;\n              })\n            }\n          })\n        }\n      }\n\n      break;\n    case ActiveProjectActions.ADD_TAB:\n      if (state.panels.length === 0) {\n        state = {\n          ...state,\n          panels: [\n            {\n              id: state.panelSerial,\n              tabs: []\n            }\n          ],\n          focusedPanel: 0,\n          panelSerial: state.panelSerial + 1\n        }\n      }\n      pi = state.focusedPanel;\n      state = {\n        ...state,\n        panels: Object.assign([...state.panels], {\n          [pi]: {\n            ...state.panels[pi],\n            tabs: [\n              ...state.panels[pi].tabs.map(t => {\n                t.active = false;\n                return t;\n              }),\n              {\n                ...omit(['pathSegment'], action.meta.tab),\n                // panelIndex: pi,\n                path: ['activeProject', action.meta.tab.pathSegment, state.uiIdSerial.toString()]\n              }\n            ]\n          }\n        }),\n        uiIdSerial: (state.uiIdSerial + 1)\n      }\n      break;\n    case ActiveProjectActions.CLOSE_TAB:\n      pi = action.meta.panelIndex;\n      ti = action.meta.tabIndex;\n      // remove the closing tab\n      state = {\n        ...state,\n        panels: Object.assign([...state.panels], {\n          [pi]: {\n            ...state.panels[pi],\n            tabs: [...state.panels[pi].tabs]\n              .filter((tab, index) => index !== ti)\n\n          }\n        })\n      }\n      // activate a sibling tab, if needed and possible\n      if (!state.panels[pi].tabs.find(t => t.active)) {\n        state = {\n          ...state,\n          panels: Object.assign([...state.panels], {\n            [pi]: {\n              ...state.panels[pi],\n              tabs: [...state.panels[pi].tabs]\n                .map((tab, index) => {\n                  tab.active = (index === (ti < state.panels[pi].tabs.length ? ti : (ti - 1)));\n                  return tab;\n                })\n            }\n          })\n\n        }\n      }\n      break;\n    case ActiveProjectActions.CLOSE_PANEL:\n      pi = action.meta.panelIndex;\n      const panels = [...state.panels];\n      panels.splice(pi, 1);\n      state = {\n        ...state,\n        panels\n      }\n      break;\n\n    case ActiveProjectActions.FOCUS_PANEL:\n      state = {\n        ...state,\n        focusedPanel: action.meta.panelIndex\n      }\n      break;\n    case ActiveProjectActions.SPLIT_PANEL:\n      ppi = action.meta.previousPanelIndex;\n      ti = action.meta.tabIndex;\n      cpi = action.meta.currentPanelIndex;\n      const moveTab = state.panels[ppi].tabs[ti];\n      // removes tab from old panel\n      state = {\n        ...state,\n        panels: Object.assign([...state.panels], {\n          [ppi]: {\n            ...state.panels[ppi],\n            tabs: [...state.panels[ppi].tabs]\n              .filter((tab, index) => index !== ti)\n              .map((tab, index) => {\n                if (index === 0) tab.active = true;\n                return tab;\n              })\n          }\n        })\n      }\n      // insert a new panel at position of cpi\n      const newPanels = [...state.panels];\n      newPanels.splice(cpi, 0, {\n        id: state.panelSerial,\n        tabs: [moveTab]\n      })\n      state = {\n        ...state,\n        panels: newPanels,\n        // increase panel id sequence\n        panelSerial: state.panelSerial + 1\n      }\n\n      break;\n\n\n    case ActiveProjectActions.SET_REFINING_CHUNK:\n      state = {\n        ...state,\n        refiningChunk: action.payload.refiningChunk\n      };\n      break;\n    case ActiveProjectActions.SET_CREATING_MENTIONING:\n      state = {\n        ...state,\n        creatingMentioning: action.payload.creatingMentioning\n      };\n      break;\n\n    /************************************************************************************\n    * Highlighting of mentionings in the gui\n    ************************************************************************************/\n    case ActiveProjectActions.SET_MENTIONINGS_FOCUSED_IN_TEXT:\n      state = {\n        ...state,\n        mentioningsFocusedInText: action.payload.mentioningsFocusedInText\n      };\n      break;\n\n    case ActiveProjectActions.SET_MENTIONINGS_FOCUSED_IN_TABLE:\n      state = {\n        ...state,\n        mentioningsFocusedInTable: action.payload.mentioningsFocusedInTable\n      };\n      break;\n\n\n    /************************************************************************************\n     * Destroy the active project state (on closing a project)\n    ************************************************************************************/\n    case ActiveProjectActions.DESTROY:\n      state = INITIAL_STATE;\n      break;\n  }\n\n  return state;\n}\n","import { List } from './list';\n\nexport class Information {\n\n  // search results\n  items?: List;\n\n  loading?: boolean;\n\n  constructor(data?: Information) {\n    Object.assign(this, data);\n  }\n}\n","import { dispatch } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { Information } from '../models/entity-list.models';\n\ntype Payload = Information;\nexport type InformationAPIAction = FluxStandardAction<Payload, {}>;\n\n@Injectable()\nexport class InformationAPIActions {\n\n\n\n  static readonly DESTROY = 'Information::DESTROY';\n\n\n  /*********************************************************************\n  *  Method to distroy the slice of store\n  *********************************************************************/\n  @dispatch() destroy = (): InformationAPIAction => ({\n    type: InformationAPIActions.DESTROY,\n    meta: null,\n    payload: null\n  })\n}\n","import { Action } from 'redux';\nimport { Information } from '../models/entity-list.models';\nimport { InformationAPIAction, InformationAPIActions } from '../actions/entity-list.actions';\n\n\nconst INITIAL_STATE = new Information();\n\nexport function informationReducer(state: Information = INITIAL_STATE, a: Action): Information {\n\n  const action = a as InformationAPIAction;\n\n  switch (action.type) {\n\n\n    /*****************************************************\n    * Reducers called on destroy of component\n    *****************************************************/\n    case InformationAPIActions.DESTROY:\n      state = {};\n      break;\n\n  }\n\n  return state;\n};\n\n","import { dispatch } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { SourceList } from '../models/source-list.models';\n\ntype Payload = SourceList;\ninterface MetaData {\n  // pkEntity?: number;\n  // pkSource?: number;\n  // pkProject?: number;\n  // crm?: ProjectCrm;\n\n  // sourceDetail?: PeItDetail;\n  // sectionDetail?: PeItDetail;\n\n  // classAndTypePk?: ClassAndTypePk;\n  // pkUiContext?: number;\n  pkAllowedClasses?: number[];\n};\nexport type SourceListAPIAction = FluxStandardAction<Payload, MetaData>;\n\n@Injectable()\nexport class SourceListAPIActions {\n\n  static readonly INITIALIZE_LIST = 'SourceList::INITIALIZE_LIST';\n\n  static readonly DESTROY = 'SourceList::DESTROY';\n\n\n  /*********************************************************************\n  *  Actions to manage the list\n  *********************************************************************/\n\n  @dispatch() initializeList = (pkAllowedClasses: number[]): SourceListAPIAction => ({\n    type: SourceListAPIActions.INITIALIZE_LIST,\n    meta: { pkAllowedClasses },\n    payload: null\n  })\n\n\n\n\n  /*********************************************************************\n  *  Method to distroy the slice of store\n  *********************************************************************/\n  @dispatch()\n  destroy = (): SourceListAPIAction => ({\n    type: SourceListAPIActions.DESTROY,\n    meta: null,\n    payload: null\n  })\n\n}\n","import { List } from './list';\n\n// Class of this slice of store\nexport class SourceList {\n\n  // the list of sources (search result)\n  list?: List;\n\n  // // class and type selector\n  // classAndTypeSelector?: ClassAndTypeSelector;\n\n  loading?: boolean;\n\n  constructor(data?: SourceList) {\n    Object.assign(this, data);\n  }\n}\n","import { Action } from 'redux';\nimport { SourceListAPIAction, SourceListAPIActions } from '../actions/source-list.actions';\nimport { SourceList } from '../models/source-list.models';\n\nconst INITIAL_STATE = new SourceList();\n\nexport function sourceListReducer(state: SourceList = INITIAL_STATE, a: Action): SourceList {\n\n  const action = a as SourceListAPIAction;\n\n  switch (action.type) {\n\n    case SourceListAPIActions.INITIALIZE_LIST:\n      state = {\n        ...state,\n        list: {\n          pkAllowedClasses: action.meta.pkAllowedClasses\n        }\n      }\n      break;\n\n\n    /*****************************************************\n    * Reducers called on destroy of component\n    *****************************************************/\n    case SourceListAPIActions.DESTROY:\n      state = {};\n      break;\n\n  }\n\n  return state;\n};\n\n","import { Injectable } from '@angular/core';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { ProjectPreview } from '../models/active-project.models';\nexport type ProjectsAction = FluxStandardAction<ProjectPreview[], {}>;\n\n\n@Injectable()\nexport class ProjectsActions {\n  static LOAD_PROJECTS_SUCCEEDED = 'LOAD_PROJECTS_SUCCEEDED';\n\n  loadProjectsSucceeded(payload: ProjectPreview[]): ProjectsAction {\n    return {\n      type: ProjectsActions.LOAD_PROJECTS_SUCCEEDED,\n      payload,\n      meta: null\n    };\n  }\n\n}\n","import { ProjectsAction, ProjectsActions } from '../actions/projects.actions';\nimport { IProjectList } from '../models/projects.model';\nimport { ProjectPreview } from '../models/active-project.models';\n\nconst INITIAL_STATE: IProjectList = {\n  records: []\n};\n\nconst projectListReducer = (lastState: IProjectList = INITIAL_STATE, action: ProjectsAction): IProjectList => {\n  switch (action.type) {\n    case ProjectsActions.LOAD_PROJECTS_SUCCEEDED: return {\n      ...lastState, records: action.payload.map((record: ProjectPreview) => ({ record: record }))\n    };\n  }\n\n  return lastState;\n}\n\nexport const createProjectsReducer = () => {\n  return projectListReducer;\n}\n","import { GvSubfieldId } from '@kleiolab/lib-sdk-lb4';\nimport { keys, values } from 'ramda';\nexport function subfieldIdToString(x: GvSubfieldId): string {\n  return `${x.fkSourceEntity}_${x.fkProperty}_${x.isOutgoing ? 'out' : 'in'}_${x.targetClass}_${keys(x.scope)[0]}_${values(x.scope)[0]}`\n}\n","import { composeReducers } from '@angular-redux/form';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { equals, indexBy, keys, omit, values } from 'ramda';\nimport { combineReducers, Reducer } from 'redux';\nimport { LoadPageMeta, LoadPageSucceededMeta } from './schema-actions-factory';\nimport { subfieldIdToString } from './subfieldIdToString';\n\nexport const PR_ENTITY_MODEL_MAP = 'pkEntityModelMap'\nexport interface EntityModelAndClass<ModelName> {\n  modelName: ModelName,\n  fkClass: number\n}\n\nexport interface ReducerConfigCollection {\n  [key: string]: ReducerConfig\n}\n\nexport interface ReducerConfig {\n  // wraps everything in facette named by facetteByPk and grouped by action.meta.pk\n  facetteByPk?: string,\n  indexBy?: {\n    keyInStore: string;\n    indexByFn: (item) => string;\n  },\n  groupBy?: {\n    keyInStore: string;\n    groupByFn: (item) => string;\n  }[],\n  equals?: (itemA, itemB) => boolean\n}\n\nexport interface Meta<Model> { items: Model[], pk?: number }\n\n\nexport const by = (name: string) => 'by_' + name;\n// export const paginateName = (pagBy: PaginateByParam[]) => pagBy.map(p => Object.keys(p)[0]).join('__');\n\n// export const pag = (name: string) => 'pag_' + name;\n// export const paginatedBy = (name: string) => pag(by(name));\n\n// export const paginateKey = (pagBy: PaginateByParam[]) => pagBy.map(p => values(p)[0]).join('_');\nexport const paginateBy = 'by_subfield_page'\n\nexport function getFromTo(limit: number, offset: number) {\n  return getStart(limit, offset) + '_' + getEnd(limit, offset);\n}\n\nexport function getEnd(limit: number, offset: number) {\n  return getStart(limit, offset) + limit;\n}\n\nexport function getStart(limit: number, offset: number) {\n  return offset;\n}\n\n/**\n * Creates standard reducers for the given model.\n *\n * Adds indexes according to config.\n *\n * S: Interface of the state (slice of store)\n */\nexport class ReducerFactory<Payload, Model> {\n\n  constructor(public actionPrefix: string, public configs: ReducerConfigCollection) { }\n\n  public createReducers() {\n\n    const reducers = {}\n    U.obj2KeyValueArr(this.configs).forEach(x => {\n      reducers[x.key] = this.createModelReducers(x.key, x.value);\n    });\n\n    const entityModelMapReducers = keys(this.configs).map(modelName => this.createEntityModelMapReducers(modelName))\n    reducers[PR_ENTITY_MODEL_MAP] = composeReducers(...entityModelMapReducers)\n\n    return combineReducers(reducers)\n  }\n\n  private createModelReducers(modelName, config: ReducerConfig) {\n    const actionPrefix = this.actionPrefix;\n    const reducer = (state = {}, action: FluxStandardAction<Payload, Meta<Model>>) => {\n\n      const facette = this.facette(modelName, config)\n\n      if (action.type === actionPrefix + '.' + modelName + '::LOAD') {\n\n        state = facette(action, state, (innerState) => ({\n          // TODO refactor this for partial lodings\n          ...omit([by(config.indexBy.keyInStore)], innerState),\n          loading: true\n        }));\n\n      }\n\n\n      else if (action.type === actionPrefix + '.' + modelName + '::LOAD_SUCCEEDED') {\n        // If action state differs from\n        state = facette(action, state, (innerState) => (\n          {\n            ...this.mergeItemsInState(config, innerState, action),\n            loading: false\n          }))\n      }\n\n\n      else if (action.type === actionPrefix + '.' + modelName + '::UPSERT') {\n        state = facette(action, state, (innerState) => ({\n          ...innerState,\n          [this.updatingBy(config.indexBy.keyInStore)]: this.indexKeyObject(action, config)\n        }))\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::UPSERT_SUCCEEDED') {\n        state = facette(action, state, (innerState) => ({\n          ... this.mergeItemsInState(config, innerState, action\n            // , true\n          ),\n          [this.updatingBy(config.indexBy.keyInStore)]:\n            omit(values(this.indexKeyObject(action, config)), innerState[this.updatingBy(config.indexBy.keyInStore)])\n        }))\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::DELETE') {\n        state = facette(action, state, (innerState) => ({\n          ...innerState,\n          [this.deletingBy(config.indexBy.keyInStore)]: this.indexKeyObject(action, config)\n        }));\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::DELETE_SUCCEEDED') {\n\n        const deletingKey = this.deletingBy(config.indexBy.keyInStore)\n        state = facette(action, state, (innerState) => {\n          innerState = {\n            ...this.deleteItemsFromState(config, action, innerState),\n            [deletingKey]: omit(values(this.indexKeyObject(action, config)), innerState[this.deletingBy(config.indexBy.keyInStore)])\n          }\n          if (!Object.keys(innerState[deletingKey]).length) innerState = omit([deletingKey], innerState);\n          return innerState;\n        })\n\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::REMOVE') {\n        state = facette(action, state, (innerState) => ({\n          ...innerState,\n          [this.removingBy(config.indexBy.keyInStore)]: this.indexKeyObject(action, config)\n        }));\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::REMOVE_SUCCEEDED') {\n\n        const removingKey = this.removingBy(config.indexBy.keyInStore)\n        state = facette(action, state, (innerState) => {\n          innerState = {\n            ...this.deleteItemsFromState(config, action, innerState),\n            [removingKey]: omit(values(this.indexKeyObject(action, config)), innerState[this.removingBy(config.indexBy.keyInStore)])\n          }\n          if (!Object.keys(innerState[removingKey]).length) innerState = omit([removingKey], innerState);\n          return innerState;\n        })\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::FAILED') {\n\n        state = facette(action, state, (innerState) => ({\n          ...innerState,\n          ...omit([by(config.indexBy.keyInStore)], innerState),\n          loading: false\n        }));\n\n      }\n\n\n      else if (action.type === actionPrefix + '.' + modelName + '::LOAD_PAGE') {\n        const meta = action.meta as any as LoadPageMeta;\n        const key = subfieldIdToString(meta.page)\n        const fromTo = getFromTo(meta.page.limit, meta.page.offset);\n\n        state = facette(action, state, (innerState) => ({\n          ...innerState,\n          [paginateBy]: {\n            ...innerState[paginateBy],\n            [key]: {\n              ...(innerState[paginateBy] || {})[key],\n              loading: {\n                ...((innerState[paginateBy] || {})[key] || {}).loading,\n                [fromTo]: true\n              }\n            }\n          }\n        }));\n      }\n      else if (action.type === actionPrefix + '.' + modelName + '::LOAD_PAGE_FAILED') {\n        const meta = action.meta as any as LoadPageMeta;\n\n        const key = subfieldIdToString(meta.page)\n        const fromTo = getFromTo(meta.page.limit, meta.page.offset);\n\n        state = facette(action, state, (innerState) => ({\n          ...innerState,\n          [paginateBy]: {\n            ...innerState[paginateBy],\n            [key]: {\n              ...(innerState[paginateBy] || {})[key],\n              loading: {\n                ...((innerState[paginateBy] || {})[key] || {}).loading,\n                [fromTo]: false\n              }\n            }\n          }\n        }));\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::LOAD_PAGE_SUCCEEDED') {\n        const meta = action.meta as any as LoadPageSucceededMeta;\n        const key = subfieldIdToString(meta.page)\n        const fromTo = getFromTo(meta.page.limit, meta.page.offset);\n        const start = getStart(meta.page.limit, meta.page.offset);\n\n        const rows = {}\n        if (meta.pks) {\n          meta.pks.forEach((pk, i) => {\n            rows[start + i] = pk;\n          })\n        }\n        state = facette(action, state, (innerState) => ({\n          ...innerState,\n          [paginateBy]: {\n            ...innerState[paginateBy],\n            [key]: {\n              ...(innerState[paginateBy] || {})[key],\n              count: meta.count || 0,\n              rows: {\n                ...((innerState[paginateBy] || {})[key] || {}).rows,\n                ...rows\n              },\n              loading: {\n                ...((innerState[paginateBy] || {})[key] || {}).loading,\n                [fromTo]: false\n              }\n            }\n          }\n        }));\n\n      }\n\n      return state;\n    };\n\n\n    return reducer;\n  }\n\n  /**\n   * Creates an map for pk_entity -> modelName on the level of the schema:\n   * example:\n   */\n  private createEntityModelMapReducers(modelName): Reducer<unknown, FluxStandardAction<Payload, Meta<Model>>> {\n    const actionPrefix = this.actionPrefix;\n    const reducer = (state = {}, action: FluxStandardAction<Payload, Meta<Model>>) => {\n      const modelPath = actionPrefix + '.' + modelName;\n\n      if (!action || !action.meta || !action.meta.items || !action.meta.items.length) return state;\n      const items = action.meta.items;\n\n      switch (action.type) {\n        case modelPath + '::LOAD_SUCCEEDED':\n        case modelPath + '::UPSERT_SUCCEEDED':\n          const idx = {}\n          for (let i = 0; i < items.length; i++) {\n            const item = items[i] as any;\n            if (item.pk_entity) {\n              idx[item.pk_entity] = {\n                modelName,\n                fkClass: item.fkClass\n              }\n            }\n          }\n          state = {\n            ...state,\n            ...idx\n          }\n          break;\n\n        case modelPath + '::DELETE_SUCCEEDED':\n        case modelPath + '::REMOVE_SUCCEEDED':\n          const pkEntities = []\n          for (let i = 0; i < items.length; i++) {\n            const item = items[i] as any;\n            if (item.pk_entity) {\n              pkEntities.push(item.pk_entity);\n            }\n          }\n          state = omit(pkEntities, state)\n          break;\n\n        default:\n          break;\n      }\n      return state;\n    };\n    return reducer;\n  }\n\n\n  updatingBy = (name: string) => 'updating_' + by(name);\n  deletingBy = (name: string) => 'deleting_' + by(name);\n  removingBy = (name: string) => 'removing_' + by(name);\n\n\n\n  private facette(modelName: any, config: ReducerConfig) {\n    return (action, state, cb: (innerState) => any) => {\n      let outerState;\n      ({ outerState, state } = this.deFacette(modelName, config, action, outerState, state));\n      const innerState = cb(state);\n      return this.enFacette(modelName, config, action, innerState, outerState);\n    };\n  }\n\n  private deFacette(modelName: string, config: ReducerConfig, action: FluxStandardAction<Payload, { items: Model[]; pk?: number; }>, outerState: any, state: {}) {\n    if (this.isFacetteByPk(config, action)) {\n      // outerState = clone(state);\n      const pk = action.meta.pk || 'repo'\n      // state = !state[config.facetteByPk] ? {} : state[config.facetteByPk][pk] || {};\n      const innerState = !state[config.facetteByPk] ? {} : state[config.facetteByPk][pk] || {};\n      return {\n        outerState: state,\n        state: innerState\n      }\n    }\n    return { outerState, state };\n  }\n\n  private enFacette(modelName: string, config: ReducerConfig, action: FluxStandardAction<Payload, { items: Model[]; pk?: number; }>, state: {}, outerState: any) {\n    if (this.isFacetteByPk(config, action)) {\n      const pk = action.meta.pk || 'repo'\n      state = {\n        ...outerState,\n        [config.facetteByPk]: {\n          ...outerState[config.facetteByPk],\n          [pk]: state\n        }\n      };\n    }\n    return state;\n  }\n\n\n  private isFacetteByPk(config: ReducerConfig, action: FluxStandardAction<Payload, { items: Model[]; pk?: number; }>) {\n    if (config.facetteByPk) {\n      if (!action.meta || action.meta.pk === undefined) throw Error('Facette actionÂ must provide pk for facette');\n      else return true;\n    }\n    else return false;\n  }\n\n\n\n  deleteItemsFromState(config: ReducerConfig, action: FluxStandardAction<Payload, { items: Model[]; }>, state) {\n    const items = action.meta.items;\n    // let state = {}\n    const groupBys = !(config.groupBy && config.groupBy.length) ? [] : config.groupBy;\n    const groups = groupBys.map(i => ({\n      groupByKey: by(i.keyInStore),\n      groupByFn: i.groupByFn,\n    }))\n    const mainIndexKey = by(config.indexBy.keyInStore); // first segment e.g. 'by_pk_entity'\n\n    items.forEach((removedItem) => {\n      // get path segments of new item\n      const itemKey = config.indexBy.indexByFn(removedItem); // second segment e.g. '807060'\n\n      // get old item, if exists\n      const oldItem = state[mainIndexKey] ? state[mainIndexKey][itemKey] : undefined;\n\n      // Q: Does the item exists?\n      if (oldItem) {\n        // A: Yes. use old item does exist\n\n        // remove the removedItem at path in main index\n        state = {\n          ...state,\n          [mainIndexKey]: {\n            ...omit([itemKey], state[mainIndexKey]),\n          }\n        }\n\n        // delete the removedItem at path in the group index\n        groups.forEach(g => {\n          const groupKey = this.getGroupKeyOfItem(g.groupByFn, removedItem)\n          state = {\n            ...state,\n            [g.groupByKey]: {\n              ...state[g.groupByKey],\n              [groupKey]: {\n                ...omit([itemKey], (state[g.groupByKey] || {})[groupKey])\n              }\n            }\n          }\n          // // cleanup paginations\n          // state = this.resetPaginationsByGroup(g.groupByKey, state, groupKey);\n\n        })\n      }\n\n\n    })\n\n    // cleanup main index\n    if (Object.keys(state[mainIndexKey]).length < 1) {\n      state = { ...omit([mainIndexKey], state) }\n    }\n    // cleanup group indices\n    groups.forEach(g => {\n\n      // cleanup groups in group index\n      Object.keys(state[g.groupByKey]).forEach(groupKey => {\n\n        if (Object.keys(state[g.groupByKey][groupKey]).length < 1) {\n          state = {\n            ...state,\n            [g.groupByKey]: omit([groupKey], state[g.groupByKey])\n          }\n        }\n      })\n\n      // cleanup group index\n      if (Object.keys(state[g.groupByKey]).length < 1) {\n        state = { ...omit([g.groupByKey], state) }\n      }\n    })\n\n\n    return state;\n  }\n\n  mergeItemsInState(config: ReducerConfig, state, action: FluxStandardAction<Payload, { items: Model[]; }>\n    // , resetPaginations = false\n  ) {\n    const items = action.meta.items;\n    const groupBys = !(config.groupBy && config.groupBy.length) ? [] : config.groupBy;\n    const groups = groupBys.map(i => ({\n      groupByKey: by(i.keyInStore),\n      groupByFn: i.groupByFn,\n    }))\n\n    const mainIndexKey = by(config.indexBy.keyInStore); // first segment e.g. 'by_pk_entity'\n\n    items.forEach((newItem) => {\n      // get path segments of new item\n      const itemKey = config.indexBy.indexByFn(newItem); // second segment e.g. '807060'\n\n      // get old item, if exists\n      const oldItem = state[mainIndexKey] ? state[mainIndexKey][itemKey] : undefined;\n\n      let itemToSet;\n\n      // Q: Does the item exists, and is it deeply-equal to the new item?\n      const equalsFn = config.equals || equals\n      if (oldItem && equalsFn(newItem, oldItem)) {\n        // A: Yes. use old item as itemToSet\n        itemToSet = oldItem;\n      }\n      else {\n        // A: No. use new item as itemToSet\n        itemToSet = newItem;\n\n        // put the itemToSet at path in main index\n        state = {\n          ...state,\n          [mainIndexKey]: {\n            ...state[mainIndexKey],\n            [itemKey]: itemToSet\n          }\n        }\n\n        // iterate over the group indexes\n        groups.forEach(g => {\n          // remove the oldItem from all group indexes\n          const oldGroupKey = this.getGroupKeyOfItem(g.groupByFn, oldItem)\n          state = {\n            ...state,\n            [g.groupByKey]: {\n              ...state[g.groupByKey],\n              [oldGroupKey]: {\n                ...omit([itemKey], (state[g.groupByKey] || {})[oldGroupKey])\n              }\n            }\n          }\n\n          // add the itemToSet to all group indexes, if not undefined\n          const newGroupKey = this.getGroupKeyOfItem(g.groupByFn, itemToSet)\n          if (newGroupKey !== undefined) {\n            state = {\n              ...state,\n              [g.groupByKey]: {\n                ...state[g.groupByKey],\n                [newGroupKey]: {\n                  ...(state[g.groupByKey] || {})[newGroupKey],\n                  [itemKey]: itemToSet\n                }\n              }\n            }\n          }\n\n        })\n      }\n    })\n\n\n    return state;\n  }\n\n\n  // /**\n  //  * resets pagination within a group, e.g. 'pag_by_fk_property'\n  //  * TODO: check if can be deleted\n  //  */\n  // private resetPaginationsByGroup(groupByKey: string, state: any, groupKey: any, isUpsert = false) {\n  //   const paginateBy = pag(groupByKey);\n  //   if (state[paginateBy] && state[paginateBy][groupKey] && state[paginateBy][groupKey].count !== undefined) {\n  //     state = {\n  //       ...state,\n  //       [paginateBy]: {\n  //         ...state[paginateBy],\n  //         [groupKey]: {\n  //           ...state[paginateBy][groupKey],\n  //           ...(!isUpsert ? {} : { count: state[paginateBy][groupKey].count + 1 }),\n  //           rows: {},\n  //           loading: {}\n  //         }\n  //       }\n  //     };\n  //   }\n  //   return state;\n  // }\n\n  /**\n   * Creates object where the key returned by the configured indexByFn\n   */\n  private indexKeyObject(action: FluxStandardAction<Payload, { items: Model[]; }>, config: ReducerConfig) {\n    return indexBy((i) => (i), action.meta.items\n      // filter items that are not (yet) indexable. This is normally the case, when creating new items that have no pk yet.\n      .filter(item => {\n        try {\n          config.indexBy.indexByFn(item);\n          return true;\n        } catch (error) {\n          return false;\n        }\n      })\n      .map(item => config.indexBy.indexByFn(item)));\n  }\n\n  groupBy(items: any[], groupByFn: (item) => string, indexByFn: (item) => string) {\n    const groups = {}\n    items.forEach(item => {\n      // if the group by key is not possible to create, the item won't be added to the index\n      const groupKey = this.getGroupKeyOfItem(groupByFn, item);\n\n      if (groupKey) {\n        const indexKey = indexByFn(item);\n        groups[groupKey] = { ...groups[groupKey], ...{ [indexKey]: item } }\n      }\n    })\n    return groups;\n  }\n\n\n\n\n  private getGroupKeyOfItem(groupByFn: (item: any) => string, item: any): string {\n    let groupKey\n    try {\n      groupKey = groupByFn(item);\n    } catch (error) {\n\n    }\n    return groupKey;\n  }\n}\n","import { sysDefinitions, sysRoot } from '../reducer-configs/sys.config';\nimport { ReducerFactory } from '../_helpers/reducer-factory';\nexport function createSysReducer() {\n  return new ReducerFactory(sysRoot, sysDefinitions).createReducers()\n}\n","\nimport { ReducerFactory } from '../_helpers/reducer-factory';\nimport { dfhDefinitions } from '../reducer-configs/dfh.config';\n\nexport function createDfhReducer() {\n  return new ReducerFactory('dfh', dfhDefinitions).createReducers()\n}\n","import { ReducerFactory } from '../_helpers/reducer-factory';\nimport { infDefinitions, infRoot } from '../reducer-configs/inf.config';\n\n\n\nexport function createInfReducer() {\n  return new ReducerFactory(infRoot, infDefinitions).createReducers()\n}\n\n\n","import { ReducerFactory } from '../_helpers/reducer-factory';\nimport { datDefinitions, datRoot } from '../reducer-configs/dat.config';\n\nexport function createDatReducer() {\n  return new ReducerFactory(datRoot, datDefinitions).createReducers()\n}\n","import { ReducerFactory } from '../_helpers/reducer-factory';\nimport { proDefinitions, proRoot } from '../reducer-configs/pro.config';\n\n\n\n\nexport function createProReducer() {\n  return new ReducerFactory(proRoot, proDefinitions).createReducers()\n}\n\n\n","import { warDefinitions, warRoot } from '../reducer-configs/war.config';\nimport { ReducerFactory } from '../_helpers/reducer-factory';\n\nexport function createWarReducer() {\n  return new ReducerFactory(warRoot, warDefinitions).createReducers()\n}\n\n\n","import { tabDefinitions, tabRoot } from '../reducer-configs/tab.config';\nimport { ReducerFactory } from '../_helpers/reducer-factory';\n\nexport function createTabReducer() {\n  return new ReducerFactory(tabRoot, tabDefinitions).createReducers()\n}\n","import { composeReducers, defaultFormReducer } from '@angular-redux/form';\nimport { routerReducer } from '@angular-redux/router';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { omit } from 'ramda';\nimport { combineReducers } from 'redux';\nimport { accountRootReducer } from '../state-gui/reducers/account.reducers';\nimport { loadingBarReducer } from '../state-gui/reducers/loading-bar.reducer';\nimport { activeProjectReducer } from '../state-gui/reducers/active-project.reducer';\nimport { informationReducer } from '../state-gui/reducers/entity-list.reducer';\nimport { sourceListReducer } from '../state-gui/reducers/source-list.reducer';\nimport { createProjectsReducer } from '../state-gui/reducers/projects.reducers';\nimport { createSysReducer } from '../state-schema/reducers/sys.reducer';\nimport { createDfhReducer } from '../state-schema/reducers/dfh.reducer';\nimport { createInfReducer } from '../state-schema/reducers/inf.reducer';\nimport { createDatReducer } from '../state-schema/reducers/dat.reducer';\nimport { createProReducer } from '../state-schema/reducers/pro.reducer';\nimport { createWarReducer } from '../state-schema/reducers/war.reducer';\nimport { createTabReducer } from '../state-schema/reducers/tab.reducer';\n\n\nexport const INIT_SANDBOX_STATE = 'INIT_SANDBOX_STATE';\nexport const sandboxStateReducer = (lastState = {}, action: FluxStandardAction<any>) => {\n  if (action.type === INIT_SANDBOX_STATE) {\n    lastState = {\n      ...lastState,\n      ...action.payload\n    };\n  }\n  return lastState;\n};\n\n\nexport const pendingRequestReducer = (state = {}, action) => {\n\n  if (action && action.meta && action.meta.addPending) {\n    const uuid = action.meta.addPending;\n    state = {\n      ...state,\n      [uuid]: true\n    }\n    // console.log('add ' + uuid + ' ' + Date.now())\n  }\n\n  if (action && action.meta && action.meta.removePending) {\n    const uuid = action.meta.removePending;\n    state = {\n      ...omit([uuid], state)\n    }\n  }\n  return state;\n}\n\n\nexport const resolvedRequestReducer = (state = {}, action) => {\n\n  if (action && action.meta && action.meta.removePending) {\n    const uuid = action.meta.removePending;\n    state = {\n      ...state,\n      [uuid]: action.meta\n    }\n  }\n  return state;\n}\n\nexport const cleanupResolved = (state = {}, action) => {\n\n  if (action && action.type === 'CLEAN_UP_RESOLVED') {\n    const uuid = action.meta.uuid;\n    state = {\n      ...omit([uuid], state)\n    }\n    // console.log('resolve ' + uuid + ' ' + Date.now().toString())\n  }\n  return state;\n}\nexport const SET_APP_STATE = 'SET_APP_STATE';\nexport const setAppState = (state = {}, action) => {\n  if (action && action.type === SET_APP_STATE) {\n    state = action.payload\n  }\n  return state;\n}\n\nexport const rootReducer = composeReducers(\n  defaultFormReducer(),\n  combineReducers({\n    account: accountRootReducer,\n    loadingBar: loadingBarReducer,\n    activeProject: activeProjectReducer,\n    routes: routerReducer,\n    information: informationReducer,\n    sources: sourceListReducer,\n    sandboxState: sandboxStateReducer,\n    projects: createProjectsReducer(),\n    sys: createSysReducer(),\n    dfh: createDfhReducer(),\n    inf: createInfReducer(),\n    dat: createDatReducer(),\n    pro: createProReducer(),\n    war: createWarReducer(),\n    tab: createTabReducer(),\n    pending: pendingRequestReducer,\n    resolved: composeReducers(resolvedRequestReducer, cleanupResolved),\n  }),\n  setAppState\n)\n","// Angular-redux ecosystem stuff.\n// @angular-redux/form and @angular-redux/router are optional\n// extensions that sync form and route location state between\n// our store and Angular.\nimport { DevToolsExtension, NgRedux, NgReduxModule } from '@angular-redux/store';\nimport { Inject, InjectionToken, ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { SlimLoadingBarModule } from '@cime/ngx-slim-loading-bar';\nimport { ToastyModule } from '@cime/ngx-toasty';\nimport { SdkLb3Module } from '@kleiolab/lib-sdk-lb3';\nimport { Configuration, ConfigurationParameters, SdkLb4Module } from '@kleiolab/lib-sdk-lb4';\nimport { equals } from 'ramda';\nimport dynamicMiddlewares from 'redux-dynamic-middlewares';\nimport { createEpicMiddleware } from 'redux-observable-es6-compat';\nimport { IAppState } from '../root/models/model';\nimport { RootEpics } from '../root/root-epics';\nimport { rootReducer } from '../root/root-reducer';\n\n\n/**\n * Function to use in combination with rxjs/operator .filter()\n * in order to get only actions dispached with a fractalkey\n * equal to the provided path.\n *\n * example:\n * pipe(\n *    filter(action => ofSubstore(c.basePath)(action)),\n *    ofType('Foo')\n * )\n * @param path\n */\nexport const ofSubstore = (path: string[]) => (action): boolean => {\n  if (!('@angular-redux::fractalkey' in action)) return false;\n\n  const actionPath = JSON.parse(action['@angular-redux::fractalkey']);\n  const bool = equals(actionPath, path);\n  return bool;\n}\n\nexport const APP_INITIAL_STATE = new InjectionToken<IAppState>('app.INITIAL_STATE');\n\nexport function apiConfigFactory(): Configuration {\n  const params: ConfigurationParameters = {\n    // set configuration parameters here.\n  }\n  return new Configuration(params);\n}\n\n@NgModule({\n  imports: [\n    NgReduxModule,\n\n    // for gui-state epics\n    SlimLoadingBarModule,\n    ToastyModule.forRoot(),\n\n  ],\n  providers: [\n\n    // AccountActions,\n    // ActiveProjectActions,\n    // LoadingBarActions,\n    // NotificationsAPIActions,\n\n    // AccountEpics,\n    // ActiveProjectEpics,\n    // LoadingBarEpics,\n    // NotificationsAPIEpics,\n\n    // DatActions,\n    // DfhActions,\n    // InfActions,\n    // ProActions,\n    // SysActions,\n    // TabActions,\n    // WarActions,\n\n    // DatEpics,\n    // DfhEpics,\n    // InfEpics,\n    // ProEpics,\n    // SysEpics,\n    // TabEpics,\n    // WarEpics,\n\n    // RootEpics,\n    // // SchemaActionsFactory,\n    // SchemaObjectService,\n    // { provide: APP_INITIAL_STATE, useValue: {} }\n  ]\n})\nexport class ReduxModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: ReduxModule,\n      providers: [{ provide: APP_INITIAL_STATE, useValue: {} }]\n    };\n  }\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    devTools: DevToolsExtension,\n    rootEpics: RootEpics,\n    @Optional() @SkipSelf() parentModule?: ReduxModule,\n    @Optional() sdkLb3?: SdkLb3Module,\n    @Optional() sdkLb4?: SdkLb4Module,\n    @Optional() @Inject(APP_INITIAL_STATE) initialState?: IAppState\n  ) {\n    const errors: string[] = []\n    if (parentModule) errors.push('ReduxModule is already loaded. Import in your base AppModule only.');\n    if (!sdkLb3) errors.push('You need to import the SdkLb3Module in your AppModule!');\n    if (!sdkLb4) errors.push('You need to import the SdkLb4Module in your AppModule!');\n    if (errors.length) throw new Error(errors.join('\\n'));\n    if (!initialState) initialState = {}\n\n    const epicMiddleware = createEpicMiddleware();\n\n    // Tell Redux about our reducers and epics. If the Redux DevTools\n    // chrome extension is available in the browser, tell Redux about\n    // it too.\n    ngRedux.configureStore(\n      // RootReducer\n      rootReducer,\n\n      // Initial state\n      initialState,\n\n      // Middleware\n      [\n        // createLogger(),\n        epicMiddleware,\n        dynamicMiddlewares,\n      ],\n      // Enhancers\n      devTools.isEnabled() ? [devTools.enhancer()] : []\n    );\n\n    // Apply rootEpic\n    epicMiddleware.run(rootEpics.getRootEpic());\n\n\n    // // Enable syncing of Angular router state with our Redux store.\n    // if (ngReduxRouter) {\n    //     ngReduxRouter.initialize();\n    // }\n\n    // Enable syncing of Angular form state with our Redux store.\n    // provideReduxForms(ngRedux);\n  }\n}\n","export type RightPanelTab = 'linked-sources' | 'linked-digitals' | 'content-tree';\n\nexport interface PeItDetailList { [pk_entity: number]: EntityDetail };\n\n\nexport class EntityDetail {\n\n\n  // _fields?: FieldList;\n\n  pkEntity?: number;\n\n  /** Left Panel Visibility */\n\n  // the properties with information about the peIt\n  showProperties?= false;\n\n  // the right area\n  showRightArea?= true;\n\n  /** Right panel */\n  rightPanelTabs?: RightPanelTab[] = []\n  rightPanelActiveTab?= 0; // index of the active tab\n\n  // the bar to above the properties\n  // showPropertiesHeader?= true;\n\n  // the header with name of peIt\n  showHeader?= true;\n\n\n  constructor(data?: EntityDetail) {\n    Object.assign(this, data);\n  }\n\n\n}\n","import { ClassConfig } from '../active-project.models';\n\nexport type EntityType = 'teEnt' | 'peIt' | 'other';\n\n\n// Class of this slice of store\nexport class ProjectSettingsData {\n  items?: ClassConfig[];\n  // profiles?: DfhClassProfileView[];\n  tabTitle?: string;\n  loading?: boolean;\n  error?: any;\n\n  constructor(data?: ProjectSettingsData) {\n    Object.assign(this, data);\n  }\n}\n","export type TabLayoutMode = 'left-only' | 'right-only' | 'both';\n\n// Class of this slice of store\nexport class TabBase {\n\n  pkEntity?: number;\n\n  tabTitle?: string;\n\n  tabTooltip?: string;\n\n  loading?: boolean;\n\n  layoutMode?: TabLayoutMode;\n\n  constructor(data?: TabBase) {\n    Object.assign(this, data);\n  }\n}\n","\n\n// Class of this slice of store\nexport class Types {\n  items?: {};\n  edit?: boolean;\n  loading?: boolean;\n  error?: any;\n\n  // title in the tab\n  tabTitle?: string;\n\n  constructor(data?: Types) {\n    Object.assign(this, data);\n  }\n}\n","import { EntitySearchHit } from '@kleiolab/lib-sdk-lb4';\n// Class of this slice of store\nexport class List {\n    searchString?: string;\n    // Array of dfh_pk_class of those classes that may appear in the list\n    pkAllowedClasses?: number[];\n    collectionSize?: number;\n    items?: EntitySearchHit[];\n    loading?: boolean;\n    error?: any;\n    constructor(data?: List) {\n        Object.assign(this, data);\n        if (true) {\n        }\n        else {\n        }\n    }\n}\n","import { ToastOptions } from '@cime/ngx-toasty';\n\n// Interface of this slice of store\nexport interface NotificationsI {\n    type: 'info' | Â 'success' | Â 'wait' | 'error' | 'warning';\n    options: ToastOptions;\n}\n\n// Class of this slice of store\nexport class Notifications implements NotificationsI {\n    type: 'info' | Â 'success' | Â 'wait' | 'error' | 'warning';\n    options: ToastOptions;\n\n    constructor(data?: NotificationsI) {\n        Object.assign(this, data);\n    }\n}\n","import { DatColumn, DatNamespace, DatTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { DatClassColumnMapping, DatDigital } from '@kleiolab/lib-sdk-lb4';\nimport { ByPk } from '../../root/models/model';\n\n\n\n\nexport class DigitalSlice {\n  by_pk_entity__entity_version?: ByPk<DatDigital>;\n  by_pk_entity?: ByPk<ByPk<DatDigital>>;\n  by_pk_text?: ByPk<ByPk<DatDigital>>;\n  loading?: boolean\n}\nexport class ChunkSlice {\n  by_pk_entity?: ByPk<DatDigital>;\n  by_fk_text?: ByPk<ByPk<DatDigital>>;\n  loading?: boolean\n}\n\nexport class ColumnSlice {\n  by_pk_entity?: ByPk<DatColumn>;\n  by_fk_digital?: ByPk<ByPk<DatColumn>>;\n}\n\nexport class ClassColumnMappingSlice {\n  by_pk_entity?: ByPk<DatClassColumnMapping>;\n  by_fk_column?: ByPk<ByPk<DatClassColumnMapping>>;\n}\n\nexport class TextPropertySlice {\n  by_pk_entity?: ByPk<DatTextProperty>;\n  by_fk_digital?: ByPk<ByPk<DatTextProperty>>;\n}\n\nexport class NamespaceSlice {\n  by_pk_entity?: ByPk<DatNamespace>;\n  by_fk_project?: ByPk<ByPk<DatNamespace>>;\n  loading?: boolean\n}\n\nexport interface Dat {\n  digital?: DigitalSlice;\n  chunk?: ChunkSlice;\n  column?: ColumnSlice;\n  text_property?: TextPropertySlice;\n}\n\n\n\n\n","import { DfhLabel, DfhProfile } from '@kleiolab/lib-sdk-lb3';\nimport { DfhClass, DfhProperty } from '@kleiolab/lib-sdk-lb4';\nimport { ByPk } from '../../root/models/model';\n\n\nexport class DfhProfileSlice {\n  by_pk_profile?: ByPk<DfhProfile>;\n\n  loading?: boolean; // todo remove in reducer factory then here\n}\n\nexport class DfhClassSlice {\n  by_pk_class?: ByPk<DfhClass>;\n  by_basic_type?: ByPk<ByPk<DfhClass>>;\n  loading?: boolean; // todo remove in reducer factory then here\n}\n\nexport class DfhPropertySlice {\n  by_pk_property?: ByPk<ByPk<DfhProperty>>;\n  by_has_domain__fk_property?: ByPk<ByPk<DfhProperty>>;\n  by_has_range__fk_property?: ByPk<ByPk<DfhProperty>>;\n  by_has_domain?: ByPk<ByPk<DfhProperty>>;\n  by_has_range?: ByPk<ByPk<DfhProperty>>;\n  by_pk_property__has_domain__has_range?: ByPk<DfhProperty>;\n  by_is_has_type_subproperty?: ByPk<ByPk<DfhProperty>>;\n\n  loading?: boolean; // todo remove in reducer factory then here\n}\n\nexport class DfhLabelSlice {\n  by_fks?: ByPk<DfhLabel>;\n  by_fk_class__type?: ByPk<ByPk<DfhLabel>>;\n  by_fk_property__type?: ByPk<ByPk<DfhLabel>>;\n  by_fk_profile__type?: ByPk<ByPk<DfhLabel>>;\n\n  loading?: boolean; // todo remove in reducer factory then here\n}\n\nexport interface Dfh {\n  profile?: DfhProfileSlice;\n  klass?: DfhClassSlice;\n  property?: DfhPropertySlice;\n  label?: DfhLabelSlice;\n\n  pkEntityModelMap: ByPk<{ modelName: string }>\n}\n","import { InfAppellation, InfDimension, InfLangString, InfLanguage, InfPersistentItem, InfPlace, InfTemporalEntity, InfTextProperty, InfTimePrimitive } from '@kleiolab/lib-sdk-lb3';\nimport { InfStatement } from '@kleiolab/lib-sdk-lb4';\nimport { ByPk } from '../../root/models/model';\n\ninterface PaginationInfo {\n  loading: {\n    [key: string]: boolean\n  },\n  count: number,\n  rows: {\n    [key: string]: number\n  }\n}\nexport class InfPersistentItemSlice {\n  by_pk_entity?: ByPk<InfPersistentItem>;\n  by_fk_class?: ByPk<ByPk<InfPersistentItem>>;\n  loading?: boolean\n}\n\nexport class InfTemporalEntitySlice {\n  by_pk_entity?: ByPk<InfTemporalEntity>;\n  by_fk_class?: ByPk<ByPk<InfPersistentItem>>;\n  loading?: boolean\n}\n\nexport class InfStatementSlice {\n  by_pk_entity?: ByPk<InfStatement>;\n  by_subject?: ByPk<ByPk<InfStatement>>;\n  by_object?: ByPk<ByPk<InfStatement>>;\n  'by_subject+property'?: ByPk<ByPk<InfStatement>>;\n  'by_object+property'?: ByPk<ByPk<InfStatement>>;\n  by_fk_subject_data?: ByPk<ByPk<InfStatement>>;\n  by_subfield_page?: ByPk<PaginationInfo>\n  loading?: boolean\n}\n\nexport class InfPlaceSlice {\n  by_pk_entity?: ByPk<InfPlace>;\n  loading?: boolean\n}\n\nexport class InfTimePrimitiveSlice {\n  by_pk_entity?: ByPk<InfTimePrimitive>;\n  loading?: boolean\n}\n\nexport class InfLanguageSlice {\n  by_pk_entity?: ByPk<InfLanguage>;\n  loading?: boolean\n}\n\nexport class InfAppellationSlice {\n  by_pk_entity?: ByPk<InfAppellation>;\n  loading?: boolean\n}\n\n\nexport class InfLangStringSlice {\n  by_pk_entity?: ByPk<InfLangString>;\n  loading?: boolean\n}\n\n\nexport class InfDimensionSlice {\n  by_pk_entity?: ByPk<InfDimension>;\n  loading?: boolean\n}\n\nexport class InfTextPropertySlice {\n  by_pk_entity?: ByPk<InfTextProperty>;\n  by_fk_concerned_entity__fk_class_field?: ByPk<ByPk<InfTextProperty>>;\n  by_fk_concerned_entity?: ByPk<ByPk<InfTextProperty>>;\n  loading?: boolean\n}\n\n\nexport interface Inf {\n  persistent_item?: InfPersistentItemSlice;\n  temporal_entity?: InfTemporalEntitySlice;\n  statement?: InfStatementSlice;\n  place?: InfPlaceSlice;\n  time_primitive?: InfTimePrimitiveSlice;\n  language?: InfLanguageSlice;\n  appellation?: InfAppellationSlice;\n  lang_string?: InfLangStringSlice;\n  dimension?: InfDimensionSlice;\n  text_property?: InfTextPropertySlice;\n\n  pkEntityModelMap?: ByPk<{ modelName: string }>\n}\n\n\n\n\n","import { TabCell } from '@kleiolab/lib-sdk-lb4';\nimport { ByPk } from '../../root/models/model';\n\nexport class TabCellSlice {\n  by_pk_cell?: ByPk<TabCell>;\n  by_fk_column_fk_row?: ByPk<ByPk<TabCell>>;\n}\n\nexport interface Tab {\n  cell?: TabCellSlice;\n}\n\n\n\n\n"]}