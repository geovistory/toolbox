{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/actions/loading-bar.actions.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/epics/loading-bar.epics.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/actions/notifications.actions.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/epics/notifications.epics.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/actions/active-project.action.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/reducer-configs/dat.config.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/_helpers/schema-actions-factory.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/actions/dat.actions.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/reducer-configs/dfh.config.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/actions/dfh.actions.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/reducer-configs/inf.config.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/_helpers/inf-action-factory.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/actions/inf.actions.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/reducer-configs/pro.config.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/actions/pro.actions.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/reducer-configs/sys.config.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/actions/sys.actions.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/epics/active-project.epics.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/actions/account.actions.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/epics/account.epics.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/_helpers/schema-epics-factory.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/epics/sys.epics.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/epics/dfh.epics.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/reducer-configs/tab.config.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/actions/tab.actions.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/reducer-configs/war.config.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/actions/war.actions.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/services/schema-object.service.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/_helpers/flattener.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/_helpers/inf-epic-factory.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/epics/inf.epics.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/epics/dat.epics.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/epics/pro.epics.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/epics/action-resolver.epics.ts","ng://@kleiolab/lib-redux/lib/redux-store/root/root-epics.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/reducers/account.reducers.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/reducers/loading-bar.reducer.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/reducers/active-project.reducer.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/models/entity-list.models.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/actions/entity-list.actions.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/reducers/entity-list.reducer.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/actions/source-list.actions.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/models/source-list.models.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/reducers/source-list.reducer.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/actions/projects.actions.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/reducers/projects.reducers.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/_helpers/reducer-factory.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/reducers/sys.reducer.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/reducers/dfh.reducer.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/reducers/inf.reducer.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/reducers/dat.reducer.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/reducers/pro.reducer.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/reducers/war.reducer.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/reducers/tab.reducer.ts","ng://@kleiolab/lib-redux/lib/redux-store/root/root-reducer.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/epics/tab.epics.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/epics/war.epics.ts","ng://@kleiolab/lib-redux/lib/redux-store/module/redux-store.module.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/models/notifications.models.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/models/list.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/models/active-project/entity-detail.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/models/active-project/project-settings-data.models.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/models/active-project/tab-layout.models.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-gui/models/active-project/types.models.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/models/dat.models.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/models/dfh.models.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/models/inf.models.ts","ng://@kleiolab/lib-redux/lib/redux-store/state-schema/models/tab.models.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__read","o","m","Symbol","iterator","e","ar","next","done","push","value","error","__spread","concat","LoadingBarActions","startLoading","type","START","meta","payload","stopLoading","STOP","completeLoading","COPMLETE","Injectable","tslib_1.__decorate","dispatch","LoadingBarEpics","service","actions","createEpics","combineEpics","createStartLoadingBarEpic","createCompleteLoadingBarEpic","_this","action$","store","pipe","ofType","switchMap","Observable","observer","complete","start","SlimLoadingBarService","NotificationsAPIActions","addToast","ADD_TOAST","NotificationsAPIEpics","toastyService","toastyConfig","theme","createAddToastEpic","filter","a","action","options","title","msg","ToastyService","ToastyConfig","ActiveProjectActions","loadProjectBasics","pk_project","LOAD_PROJECT_BASICS","loadProjectBasiscsSucceded","projectPreview","LOAD_PROJECT_BASICS_SUCCEEDED","loadProjectConfig","LOAD_PROJECT_CONFIG","loadProjectConfigSucceeded","LOAD_PROJECT_CONFIG_SUCCEEDED","setListType","list","SET_LIST_TYPE","setPanels","panels","uiIdSerial","panelSerial","focusedPanel","SET_PANELS","activateTab","panelIndex","tabIndex","ACTIVATE_TAB","moveTab","previousPanelIndex","currentPanelIndex","previousTabIndex","currentTabIndex","MOVE_TAB","closeTab","CLOSE_TAB","addTab","tab","ADD_TAB","splitPanel","SPLIT_PANEL","closePanel","CLOSE_PANEL","focusPanel","FOCUS_PANEL","setRefiningChunk","refiningChunk","SET_REFINING_CHUNK","setCreatingMentioning","creatingMentioning","SET_CREATING_MENTIONING","setMentioningsFocusedInText","mentioningsFocusedInText","SET_MENTIONINGS_FOCUSED_IN_TEXT","setMentioningsFocusedInTable","mentioningsFocusedInTable","SET_MENTIONINGS_FOCUSED_IN_TABLE","destroy","DESTROY","LOAD_PROJECT_BASICS_FAILED","UPDATE_SELECTED_CHUNK","datRoot","datDefinitions","digital","equals","newItem","oldItem","quill_doc","pk_entity","entity_version","indexBy","keyInStore","indexByFn","item","toString","groupBy","groupByFn","pk_text","chunk","fk_text","column","fk_digital","class_column_mapping","fk_column","text_property","fk_entity","fk_system_type","namespace","fk_project","SchemaActionsFactory","ngRedux","createCrudActions","actionPrefix","modelName","load","suffix","pk","addPending","U","uuid","pending$","select","resolved$","loadSucceeded","items","removePending","upsert","upsertSucceeded","succeeded","delete","x","deleteSucceeded","failed","loadPage","paginateBy","limit","offset","loadPageSucceeded","pks","count","loadPageFailed","DigitalActionsFactory","_super","tslib_1.__extends","createActions","loadVersion","pkEntity","entityVersion","LOAD_VERSION","ChunkActionsFactory","loadChunksOfDigital","pkDigital","CHUNKS_OF_DIGITAL","ColumnActionsFactory","loadColumnsOfTable","COLUMNS_OF_TABLE","DatActions","NgRedux","dfhLabelByFksKey","language","fk_class","fk_profile","fk_property","dfhDefinitions","profile","pk_profile","klass","pk_class","basic_type","property","pk_property","has_domain","has_range","is_has_type_subproperty","undefined","label","DfhProfileActionFactory","loadOfProject","pkProject","OF_PROJECT","DfhClassActionFactory","DfhPropertyActionFactory","DfhLabelActionFactory","DfhActions","infRoot","infDefinitions","persistent_item","temporal_entity","statement","indexStatementBySubject","indexStatementBySubjectProperty","indexStatementByObject","indexStatementByObjectProperty","toStr0undef","fk_subject_data","fk_concerned_entity","fk_class_field","lang_string","appellation","time_primitive","place","dimension","fks","fk_subject_info","fk_object_info","fk_object_data","fk_object_tables_row","fk_object_tables_cell","fk_property_of_property","InfActionFactory","createInfActions","remove","removeSucceeded","InfPersistentItemActionFactory","loadMinimal","MINIMAL_BY_PK","typesOfProject","TYPES_OF_PROJECT","TYPE_OF_PROJECT","InfTemporalEntityActionFactory","loadNestedObject","OWN_PROPERTIES","loadPaginatedList","pkSourceEntity","pkProperty","fkTargetClass","isOutgoing","PAGINATED_LIST","alternatives","loadPaginatedAlternativeList","PAGINATED_ALTERNATIVE_LIST","InfStatementActionFactory","findByParams","ofProject","pkInfoRange","pkInfoDomain","BY_PARAMS","loadIngoingAlternatives","ALTERNATIVES_INGOING","sourcesAndDigitalsOfEntity","SOURCES_AND_DIGITALS_OF_ENTITY","CONTENT_TREE","InfTextPropertyActionFactory","loadAlternatives","fkEntity","fkClassField","ALTERNATIVES","InfActions","proRoot","textPropertyByFksKey","fk_language","fk_dfh_class","fk_dfh_property","fk_dfh_property_domain","fk_dfh_property_range","textPropertyByFksWithoutLang","proClassFieldConfgByProjectAndClassKey","fk_range_class","fk_domain_class","fk_class_for_class_field","proDefinitions","project","info_proj_rel","class_field_config","dfh_class_proj_rel","enabled_in_entities","dfh_profile_proj_rel","enabled","analysis","ProProjectActionFactory","loadOfAccount","OF_ACCOUNT","loadBasics","LOAD_BASICS","ProInfoProjRelActionFactory","markStatementAsFavorite","pkStatement","MARK_ROLE_AS_FAVORITE","ProDfhClassProjRelActionFactory","ProDfhProfileProjRelActionFactory","ProClassFieldConfigActionFactory","ProTextPropertyActionFactory","ProAnalysisActionFactory","loadByIdAndVersion","version","BY_PK_AND_VERSION","ProActions","sysRoot","sysDefinitions","system_relevant_class","required_by_sources","required_by_entities","required_by_basics","config","SysActions","ActiveProjectEpics","sys","dat","dfh","pro","inf","projectApi","notificationActions","loadingBarActions","createLoadProjectBasicsEpic","createLoadProjectConfigEpic","createLoadProjectUpdatedEpic","createClosePanelEpic","createActivateTabFocusPanelEpic","createMoveTabFocusPanelEpic","createClosePanelFocusPanelEpic","createSplitPanelActivateTabEpic","createAddTabCloseListEpic","globalStore","getBasics","subscribe","data","firstProTextPropStringOfType","text_properties","SysConfig","PK_SYSTEM_TYPE__TEXT_PROPERTY__LABEL","description","PK_SYSTEM_TYPE__TEXT_PROPERTY__DESCRIPTION","default_language","proProjectToProjectPreview","message","mapTo","combineLatest","res","includes","mergeMap","getState","activeProject","forEach","panel","tabs","map","ProProjectApi","AccountActions","login","LOGIN","loginSucceeded","account","LOGIN_SUCCEEDED","loginFailed","LOGIN_FAILED","accountUpdated","ACCOUNT_UPDATED","loadRoles","accountId","LOAD_ROLES","loadRolesSucceeded","accountRoles","LOAD_ROLES_SUCCEEDED","loadRolesFailed","LOAD_ROLES_FAILED","AccountEpics","accountApi","getRoles","PubAccountApi","SchemaEpicsFactory","notifications","createLoadEpic","apiFn","actionSuffix","onSuccessHook","globalActions","pendingKey","onError","createUpsertEpic","createDeleteEpic","operation","status","SysEpics","notification","sysRelevantClassApi","sysConfigApi","systemRelevantClassEpicsFactory","configEpicsFactory","find","bulkReplaceOrCreate","sysConfigControllerGetSystemConfig","SysSystemRelevantClassApi","SystemConfigurationService","DfhEpics","profileApi","classApi","propertyApi","labelApi","dfhProfileEpicsFactory","dfhClassEpicsFactory","dfhLabelEpicsFactory","dfhPropertyEpicsFactory","dfhPropertyControllerOfProject","dfhClassControllerOfProject","DfhProfileApi","DfhClassControllerService","DfhPropertyControllerService","DfhLabelApi","tabRoot","tabDefinitions","cell","pk_cell","fk_row","TabActions","warRoot","warDefinitions","entity_preview","WarActions","SchemaObjectService","api","infActions","proActions","datActions","warActions","tabActions","dfhActions","sysActions","apiCall$","s$","Subject","result","storeSchemaObject","storeGv","storeSchemaObjectGv","object","keys","schema","model","console","warn","SchemaObjectApi","ModelFlattener","modelDefinition","flattenCb","flatten","keysToOmit_1","relations","omit","Flattener","ProInfoProjRel","getModelDefinition","pro_dfh_class_proj_rel","ProDfhClassProjRel","pro_dfh_profile_proj_rel","ProDfhProfileProjRel","InfPersistentItem","incoming_statements","outgoing_statements","entity_version_project_rels","InfTemporalEntity","InfStatement","subject_temporal_entity","subject_statement","object_persistent_item","object_appellation","object_place","object_time_primitive","object_language","subject_chunk","object_lang_string","object_dimension","InfAppellation","InfPlace","InfTimePrimitive","InfLanguage","InfLangString","InfDimension","InfTextProperty","DatDigital","DatChunk","pro_project","ProProject","pro_text_property","ProTextProperty","pro_class_field_config","ProClassFieldConfig","getFlattened","storeFlattened","flattened","values","InfEpicsFactory","infoProjRelApi","pathOr","is_in_project","createRemoveEpic","bulkUpdateEprAttributes","infoProjRels","createCustomUpsertEpic","InfEpics","peItApi","teEnApi","statementApi","textPropertyApi","schemaObjectService","infPersistentItemEpicsFactory","infTemporalEntityEpicsFactory","infStatementEpicsFactory","infTextPropertyEpicsFactory","ownProperties","results","schemas","schemaObject","findOrCreateInfPersistentItems","flattener","apiCal$","temporalEntityList","handleTemporalEntityListAction","alternativeTemporalEntityList","findOrCreateInfTemporalEntities","alternativesNotInProjectByEntityPk","findOrCreateInfStatements","paginatedListTargetingEntityPreviews","queryByParams","statements","flattener2","digitals","findAlternativeTextProperties","findOrCreateInfTextProperties","epicsFactory","fk_target_class","_a","_b","paginatedStatements","InfPersistentItemApi","InfTemporalEntityApi","InfStatementApi","InfTextPropertyApi","ProInfoProjRelApi","DatEpics","digitalApi","chunkApi","columnApi","namespaceApi","digitalEpicsFactory","chunkEpicsFactory","namespaceEpicsFactory","columnEpicsFactory","getVersion","bulkUpsert","bulkDelete","ofDigital","byProject","DatDigitalApi","DatChunkApi","DatColumnApi","DatNamespaceApi","ProEpics","classProjRelApi","profileProjRelApi","classFieldConfApi","analysisApi","proProjectEpicsFactory","proInfoProjRelEpicsFactory","proDfhClassProjRelEpicsFactory","proDfhProfileProjRelEpicsFactory","proClassFieldConfigEpicsFactory","proTextPropertyEpicsFactory","proAnalysisEpicsFactory","ofAccount","analysisControllerBulkDelete","ProDfhClassProjRelApi","ProDfhProfileProjRelApi","ProClassFieldConfigApi","ProTextPropertyApi","AnalysisService","ActionResolverEpics","createResolveEpic","of","args","providedIn","RootEpics","loadingBarEpics","notificationEpics","activeProjectEpics","accountEpics","systemEpics","dfhEpics","infEpics","datEpics","proEpics","actionResolver","rootEpicStream$","BehaviorSubject","rootEpic","state$","dependencies","epic","getRootEpic","addEpic","INITIAL_STATE","roles","accountRootReducer","lastState","loading","progress","loadingBarReducer","state","INITIAL_STATE$1","activeProjectReducer","pi","ti","ppi","cpi","pti","cti","INITIAL_STATE$2","loadingConfigData","configDataInitialized","tslib_1.__spread","index","active","moveItemInArray","pTabs_1","cTabs","transferArrayItem","_c","id","_d","path","pathSegment","_e","_f","splice","_g","newPanels","Information","InformationAPIActions","informationReducer","INITIAL_STATE$3","SourceListAPIActions","initializeList","pkAllowedClasses","INITIALIZE_LIST","SourceList","sourceListReducer","INITIAL_STATE$4","ProjectsActions","loadProjectsSucceeded","LOAD_PROJECTS_SUCCEEDED","records","projectListReducer","INITIAL_STATE$5","record","createProjectsReducer","by","name","paginateName","pagBy","join","pag","paginatedBy","paginateKey","getFromTo","getStart","getEnd","ReducerFactory","configs","updatingBy","deletingBy","removingBy","createReducers","reducers","obj2KeyValueArr","createModelReducers","entityModelMapReducers","createEntityModelMapReducers","composeReducers","combineReducers","facette","innerState","mergeItemsInState","indexKeyObject","deletingKey_1","deleteItemsFromState","removingKey_1","paginateBy_1","key_1","fromTo_1","paginateBy_2","key_2","fromTo_2","meta_1","paginateBy_3","key_3","start_1","fromTo_3","rows_1","rows","modelPath","idx","fkClass","pkEntities","cb","outerState","deFacette","enFacette","isFacetteByPk","facetteByPk","Error","groups","groupByKey","mainIndexKey","removedItem","itemKey","g","groupKey","getGroupKeyOfItem","itemToSet","equalsFn","oldGroupKey","newGroupKey","indexKey","createSysReducer","createDfhReducer","createInfReducer","createDatReducer","createProReducer","createWarReducer","createTabReducer","sandboxStateReducer","pendingRequestReducer","resolvedRequestReducer","cleanupResolved","setAppState","rootReducer","defaultFormReducer","loadingBar","routes","routerReducer","information","sources","sandboxState","projects","war","pending","resolved","TabEpics","WarEpics","APP_INITIAL_STATE","InjectionToken","ReduxStoreModule","devTools","rootEpics","initialState","epicMiddleware","createEpicMiddleware","configureStore","dynamicMiddlewares","isEnabled","enhancer","run","NgModule","imports","NgReduxModule","SlimLoadingBarModule","ToastyModule","forRoot","SDKBrowserModule","ApiModule","providers","provide","useValue","ɵ0$8","DevToolsExtension","Inject","EntityDetail","showProperties","showRightArea","rightPanelTabs","rightPanelActiveTab","showHeader","DigitalSlice","ChunkSlice","ColumnSlice","ClassColumnMappingSlice","TextPropertySlice","NamespaceSlice","DfhProfileSlice","DfhClassSlice","DfhPropertySlice","DfhLabelSlice","InfPersistentItemSlice","InfTemporalEntitySlice","InfStatementSlice","InfPlaceSlice","InfTimePrimitiveSlice","InfLanguageSlice","InfAppellationSlice","InfLangStringSlice","InfDimensionSlice","InfTextPropertySlice","TabCellSlice"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { dispatch } from '@angular-redux/store';\nimport { FluxStandardAction } from 'flux-standard-action';\n\n// Flux-standard-action gives us stronger typing of our actions.\ntype Payload = any;\ninterface MetaData { null };\nexport type LoadingBarAction = FluxStandardAction<Payload, undefined>;\n\n\n/**\n* This actions start, stop and complete the global loading bar\n* using a SlimLoadingBarService instantiated within the loading-bar\n* module.\n*\n* In order to show a loading bar in GUI, use the LoadingBarComponent\n* exported by this module.\n*/\n@Injectable()\nexport class LoadingBarActions {\n  static readonly START = 'LOADING_BAR_START';\n  static readonly STOP = 'LOADING_BAR_STOP';\n  static readonly COPMLETE = 'LOADING_BAR_COPMLETE';\n  @dispatch() startLoading = (): LoadingBarAction => ({\n    type: LoadingBarActions.START,\n    meta: null,\n    payload: null,\n  })\n\n  @dispatch() stopLoading = (): LoadingBarAction => ({\n    type: LoadingBarActions.STOP,\n    meta: null,\n    payload: null\n  })\n\n  @dispatch() completeLoading = (): LoadingBarAction => ({\n    type: LoadingBarActions.COPMLETE,\n    meta: null,\n    payload: null,\n  })\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { SlimLoadingBarService } from '@cime/ngx-slim-loading-bar';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { combineEpics, Epic, ofType } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { LoadingBarActions } from '../../state-gui/actions/loading-bar.actions';\n\n\n\n\n@Injectable()\nexport class LoadingBarEpics {\n  constructor(\n    private service: SlimLoadingBarService,\n    private actions: LoadingBarActions,\n  ) { }\n\n  public createEpics(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return combineEpics(\n      this.createStartLoadingBarEpic(),\n      this.createCompleteLoadingBarEpic()\n    );\n  }\n\n  private createCompleteLoadingBarEpic(): Epic {\n    return (action$, store) => action$.pipe(\n      ofType(LoadingBarActions.COPMLETE),\n      switchMap(() => {\n        return Observable.create(observer => {\n          this.service.complete()\n          // observer.next(this.actions.stopLoading())\n        })\n      })\n    )\n  }\n\n  private createStartLoadingBarEpic(): Epic {\n    return (action$, store) => action$.pipe(\n      ofType(LoadingBarActions.START),\n      switchMap(() => {\n        return Observable.create(observer => {\n          this.service.start();\n        })\n      })\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { NotificationsI } from '../models/notifications.models';\n\ntype Payload = NotificationsI;\ninterface MetaData {\n  itemsArray?: any[]\n};\nexport type NotificationsAPIAction = FluxStandardAction<Payload, MetaData>;\n\n@Injectable()\nexport class NotificationsAPIActions {\n  static readonly ADD_TOAST = 'Notifications::ADD_TOAST';\n\n  addToast = (payload: Payload): NotificationsAPIAction => ({\n    type: NotificationsAPIActions.ADD_TOAST,\n    meta: null,\n    payload\n  });\n\n}\n","import { Injectable } from '@angular/core';\nimport { ToastyConfig, ToastyService } from '@cime/ngx-toasty';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { combineEpics, Epic, ofType } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { filter, switchMap } from 'rxjs/operators';\nimport { NotificationsAPIActions, NotificationsAPIAction } from '../../state-gui/actions/notifications.actions';\n\n@Injectable()\nexport class NotificationsAPIEpics {\n  constructor(\n    private toastyService: ToastyService,\n    private toastyConfig: ToastyConfig\n  ) {\n    // Assign the selected theme name to the `theme` property of the instance of ToastyConfig.\n    // Possible values: default, bootstrap, material\n    this.toastyConfig.theme = 'bootstrap';\n  }\n\n  public createEpics(): Epic {\n    return combineEpics(this.createAddToastEpic());\n  }\n\n  private createAddToastEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        /**\n         * Filter the actions that triggers this epic\n         */\n        filter((a) => {\n          return a;\n        }),\n        ofType(NotificationsAPIActions.ADD_TOAST),\n        switchMap((action) => new Observable<FluxStandardAction<any>>((observer) => {\n          /**\n           * Add Toast\n           */\n          const a = action as NotificationsAPIAction;\n          if (!a.payload.options.title && !a.payload.options.msg) {\n            if (a.payload.type === 'error') {\n              a.payload.options.title = 'Oops, something went wrong!'\n            }\n          }\n          this.toastyService[a.payload.type](a.payload.options);\n\n        })),\n      )\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DatChunk, InfPersistentItem, InfTemporalEntity, ProDfhClassProjRel, ProInfoProjRel } from '@kleiolab/lib-sdk-lb3';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { ListType, Panel, ProjectDetail, ProjectPreview, PanelTab, TypePeIt } from '../models/active-project.models';\n\nexport interface ActiveProjectMeta {\n\n  projectPreview?: ProjectPreview;\n\n  pk_project?: number;\n  pk_entity?: number;\n  pk_entities?: number[];\n  pk_classes?: number[]\n  pk_ui_context?: number;\n  entity_version?: number;\n\n\n  chunk?: DatChunk\n  teEnGraphs?: InfTemporalEntity[]\n  peItGraphs?: InfPersistentItem[]\n  types?: TypePeIt[]\n\n  // CRM and Config\n  projRel?: ProDfhClassProjRel;\n  dfh_pk_class?: number;\n  // hasTypeProperties?: HasTypePropertyReadable[]\n\n  // Information\n  infProjRel?: ProInfoProjRel;\n\n  // layout\n  panels?: Panel[];\n  list?: ListType;\n  panelIndex?: number;\n  panelSerial?: number;\n  tabIndex?: number;\n  uiIdSerial?: number;\n  focusedPanel?: number;\n  previousPanelIndex?: number\n  currentPanelIndex?: number\n  previousTabIndex?: number\n  currentTabIndex?: number\n  tab?: PanelTab<any>;\n\n  // Layout Modals\n  // createOrAddEntity?: CreateOrAddEntity; // Check if this really belongt in state\n};\ntype Payload = ProjectDetail;\nexport type ActiveProjectAction = FluxStandardAction<Payload, ActiveProjectMeta>;\n\n\n@Injectable()\nexport class ActiveProjectActions {\n\n  /* tslint:disable:member-ordering */\n\n  /************************************************************************************\n   * CRM and Config (metadata, crm)\n  ************************************************************************************/\n  static LOAD_PROJECT_BASICS = 'ActiveProject::LOAD_PROJECT_BASICS';\n  static LOAD_PROJECT_BASICS_FAILED = 'ActiveProject::LOAD_PROJECT_BASICS_FAILED';\n  static LOAD_PROJECT_BASICS_SUCCEEDED = 'ActiveProject::LOAD_PROJECT_BASICS_SUCCEEDED';\n  static LOAD_PROJECT_CONFIG = 'ActiveProject::LOAD_PROJECT_CONFIG';\n  static LOAD_PROJECT_CONFIG_SUCCEEDED = 'ActiveProject::LOAD_PROJECT_CONFIG_SUCCEEDED';\n\n\n  loadProjectBasics(pk_project: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.LOAD_PROJECT_BASICS,\n      payload: null,\n      meta: {\n        pk_project\n      }\n    }\n  }\n\n  loadProjectBasiscsSucceded(projectPreview: ProjectPreview): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.LOAD_PROJECT_BASICS_SUCCEEDED,\n      payload: null,\n      meta: { projectPreview },\n    }\n  }\n\n  loadProjectConfig(pk_project: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.LOAD_PROJECT_CONFIG,\n      payload: null,\n      meta: {\n        pk_project\n      },\n    }\n  }\n\n  loadProjectConfigSucceeded(): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.LOAD_PROJECT_CONFIG_SUCCEEDED,\n      payload: {\n        // crm\n      },\n      meta: null,\n    }\n  }\n\n  /************************************************************************************\n   * Layout -- Tabs\n  ************************************************************************************/\n  static SET_LIST_TYPE = 'ActiveProject::SET_LIST_TYPE';\n\n  setListType(list: ListType): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_LIST_TYPE,\n      payload: null,\n      meta: {\n        list\n      }\n    }\n  }\n\n  static SET_PANELS = 'ActiveProject::SET_PANELS';\n\n  setPanels(panels: Panel[], uiIdSerial: number, panelSerial: number, focusedPanel: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_PANELS,\n      payload: null,\n      meta: { panels, uiIdSerial, panelSerial, focusedPanel }\n    }\n  }\n\n  static ACTIVATE_TAB = 'ActiveProject::ACTIVATE_TAB';\n\n  activateTab(panelIndex: number, tabIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.ACTIVATE_TAB,\n      payload: null,\n      meta: {\n        panelIndex, tabIndex\n      }\n    }\n  }\n  static MOVE_TAB = 'ActiveProject::MOVE_TAB';\n  moveTab(previousPanelIndex: number, currentPanelIndex: number, previousTabIndex: number, currentTabIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.MOVE_TAB,\n      payload: null,\n      meta: {\n        previousPanelIndex, currentPanelIndex, previousTabIndex, currentTabIndex\n      }\n    }\n  }\n\n  static CLOSE_TAB = 'ActiveProject::CLOSE_TAB';\n  closeTab(panelIndex: number, tabIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.CLOSE_TAB,\n      payload: null,\n      meta: {\n        panelIndex, tabIndex\n      }\n    }\n  }\n\n  static ADD_TAB = 'ActiveProject::ADD_TAB';\n  addTab<TabData>(tab: PanelTab<TabData>): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.ADD_TAB,\n      payload: null,\n      meta: { tab }\n    }\n  }\n\n  static SPLIT_PANEL = 'ActiveProject::SPLIT_PANEL';\n  splitPanel(previousPanelIndex: number, tabIndex: number, currentPanelIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SPLIT_PANEL,\n      payload: null,\n      meta: { previousPanelIndex, tabIndex, currentPanelIndex }\n    }\n  }\n\n  static CLOSE_PANEL = 'ActiveProject::CLOSE_PANEL';\n  closePanel(panelIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.CLOSE_PANEL,\n      payload: null,\n      meta: { panelIndex }\n    }\n  }\n\n\n  static FOCUS_PANEL = 'ActiveProject::FOCUS_PANEL';\n  focusPanel(panelIndex: number): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.FOCUS_PANEL,\n      payload: null,\n      meta: { panelIndex }\n    }\n  }\n\n\n  // /************************************************************************************\n  //  * Layout -- Modals\n  // ************************************************************************************/\n  // // create or add entity modal\n  // static readonly OPEN_ADD_FORM = 'ActiveProject::OPEN_ADD_FORM';\n  // static readonly CLOSE_ADD_FORM = 'ActiveProject::CLOSE_ADD_FORM';\n\n  // openAddForm = (createOrAddEntity: CreateOrAddEntity): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.OPEN_ADD_FORM,\n  //   meta: { createOrAddEntity },\n  //   payload: null\n  // })\n\n  // closeAddForm = (): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.CLOSE_ADD_FORM,\n  //   meta: null,\n  //   payload: null\n  // })\n\n\n  /************************************************************************************\n  * Information cache\n  ************************************************************************************/\n\n  // EntityPreviews\n  // static LOAD_ENTITY_PREVIEW = 'ActiveProject::LOAD_ENTITY_PREVIEW';\n  // static LOAD_ENTITY_PREVIEW_SUCCEEDED = 'ActiveProject::LOAD_ENTITY_PREVIEW_SUCCEEDED';\n  // static LOAD_ENTITY_PREVIEW_FAILED = 'ActiveProject::LOAD_ENTITY_PREVIEW_FAILED';\n\n\n  // loadEntityPreview(pk_project: number, pk_entity: number, pk_ui_context: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_ENTITY_PREVIEW,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entity, pk_ui_context\n  //     }\n  //   }\n  // }\n\n  // loadEntityPreviewSucceeded(entityPreview: EntityPreview): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_ENTITY_PREVIEW_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       entityPreview\n  //     },\n  //   }\n  // }\n\n  // loadEntityPreviewFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_ENTITY_PREVIEW_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n  // // EntityPreviews\n  // static LOAD_TYPES = 'ActiveProject::LOAD_TYPES';\n  // static LOAD_TYPES_SUCCEEDED = 'ActiveProject::LOAD_TYPES_SUCCEEDED';\n  // static LOAD_TYPES_FAILED = 'ActiveProject::LOAD_TYPES_FAILED';\n  // loadTypes(pk_project: number, pk_classes: number[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TYPES,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_classes\n  //     }\n  //   }\n  // }\n\n  // loadTypesSucceeded(types: TypePeIt[], pk_classes: number[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TYPES_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       types, pk_classes\n  //     },\n  //   }\n  // }\n\n  // loadTypesFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TYPES_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n\n  // // Entities Details for display in Modals\n  // static LOAD_ENTITY_DETAIL_FOR_MODAL = 'ActiveProject::LOAD_ENTITY_DETAIL_FOR_MODAL';\n  // static LOAD_PE_IT_DETAIL_FOR_MODAL_SUCCEEDED = 'ActiveProject::LOAD_PE_IT_DETAIL_FOR_MODAL_SUCCEEDED';\n  // static LOAD_TE_EN_DETAIL_FOR_MODAL_SUCCEEDED = 'ActiveProject::LOAD_TE_EN_DETAIL_FOR_MODAL_SUCCEEDED'; // TODO: Implement action/reducer\n  // static LOAD_ENTITY_DETAIL_FOR_MODAL_FAILED = 'ActiveProject::LOAD_ENTITY_DETAIL_FOR_MODAL_FAILED';\n\n  // loadEntityDetailForModal(pk_project: number, pk_entity: number, pk_ui_context: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_ENTITY_DETAIL_FOR_MODAL,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entity, pk_ui_context\n  //     }\n  //   }\n  // }\n\n  // loadPeItDetailsForModalSucceeded(peItDetail: EntityDetail): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_PE_IT_DETAIL_FOR_MODAL_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       peItDetail\n  //     },\n  //   }\n  // }\n\n  // loaEntitytDetailsForModalFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_ENTITY_DETAIL_FOR_MODAL_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n  // // Chunks\n  // static LOAD_CHUNK = 'ActiveProject::LOAD_CHUNK';\n  // static LOAD_CHUNK_SUCCEEDED = 'ActiveProject::LOAD_CHUNK_SUCCEEDED';\n  // static LOAD_CHUNK_FAILED = 'ActiveProject::LOAD_CHUNK_FAILED';\n\n  // loadChunk(pk_project: number, pk_entity: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_CHUNK,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entity\n  //     }\n  //   }\n  // }\n\n  // loadChunkSucceeded(chunk: DatChunk): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_CHUNK_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       chunk\n  //     },\n  //   }\n  // }\n\n  // loadChunkFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_CHUNK_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n  // // PeIt Graphs\n  // static LOAD_PEIT_GRAPHS = 'ActiveProject::LOAD_PEIT_GRAPHS';\n  // static LOAD_PEIT_GRAPHS_SUCCEEDED = 'ActiveProject::LOAD_PEIT_GRAPHS_SUCCEEDED';\n  // static LOAD_PEIT_GRAPHS_FAILED = 'ActiveProject::LOAD_PEIT_GRAPHS_FAILED';\n\n\n  // loadPeItGraphs(pk_project: number, pk_entities: number[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_PEIT_GRAPHS,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entities\n  //     }\n  //   }\n  // }\n\n  // loadPeItGraphsSucceeded(peItGraphs: InfPersistentItem[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_PEIT_GRAPHS_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       peItGraphs\n  //     },\n  //   }\n  // }\n\n  // loadPeItGraphsFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_PEIT_GRAPHS_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n  // // TeEn Graphs\n  // static LOAD_TEEN_GRAPHS = 'ActiveProject::LOAD_TEEN_GRAPHS';\n  // static LOAD_TEEN_GRAPHS_SUCCEEDED = 'ActiveProject::LOAD_TEEN_GRAPHS_SUCCEEDED';\n  // static LOAD_TEEN_GRAPHS_FAILED = 'ActiveProject::LOAD_TEEN_GRAPHS_FAILED';\n\n  // loadTeEnGraphs(pk_project: number, pk_entities: number[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TEEN_GRAPHS,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entities\n  //     }\n  //   }\n  // }\n\n  // loadTeEnGraphsSucceeded(teEnGraphs: InfTemporalEntity[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TEEN_GRAPHS_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       teEnGraphs\n  //     },\n  //   }\n  // }\n\n  // loadTeEnGraphsFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_TEEN_GRAPHS_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n  // // Queries\n  // static LOAD_QUERIES = 'ActiveProject::LOAD_QUERIES';\n  // static LOAD_QUERIES_SUCCEEDED = 'ActiveProject::LOAD_QUERIES_SUCCEEDED';\n  // static LOAD_QUERIES_FAILED = 'ActiveProject::LOAD_QUERIES_FAILED';\n\n  // loadQueries(pk_project: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERIES,\n  //     payload: null,\n  //     meta: {\n  //       pk_project\n  //     }\n  //   }\n  // }\n\n  // loadQueriesSucceeded(comQueryArray: ComQueryV[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERIES_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       comQueryArray\n  //     },\n  //   }\n  // }\n\n  // loadQueriesFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERIES_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n  // // Query Version\n  // static LOAD_QUERY_VERSION = 'ActiveProject::LOAD_QUERY_VERSION';\n  // static LOAD_QUERY_VERSION_SUCCEEDED = 'ActiveProject::LOAD_QUERY_VERSION_SUCCEEDED';\n  // static LOAD_QUERY_VERSION_FAILED = 'ActiveProject::LOAD_QUERY_VERSION_FAILED';\n\n  // loadQueryVersion(pk_project: number, pk_entity: number, entity_version: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERY_VERSION,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entity, entity_version\n  //     }\n  //   }\n  // }\n\n  // loadQueryVersionSucceeded(comQuery: ProQuery): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERY_VERSION_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       comQuery\n  //     },\n  //   }\n  // }\n\n  // loadQueryVersionFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_QUERY_VERSION_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n\n  // // Visuals\n  // static LOAD_VISUALS = 'ActiveProject::LOAD_VISUALS';\n  // static LOAD_VISUALS_SUCCEEDED = 'ActiveProject::LOAD_VISUALS_SUCCEEDED';\n  // static LOAD_VISUALS_FAILED = 'ActiveProject::LOAD_VISUALS_FAILED';\n\n  // loadVisuals(pk_project: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUALS,\n  //     payload: null,\n  //     meta: {\n  //       pk_project\n  //     }\n  //   }\n  // }\n\n  // loadVisualsSucceeded(comVisualArray: ComVisualV[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUALS_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       comVisualArray\n  //     },\n  //   }\n  // }\n\n  // loadVisualsFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUALS_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n  // // Visual Version\n  // static LOAD_VISUAL_VERSION = 'ActiveProject::LOAD_VISUAL_VERSION';\n  // static LOAD_VISUAL_VERSION_SUCCEEDED = 'ActiveProject::LOAD_VISUAL_VERSION_SUCCEEDED';\n  // static LOAD_VISUAL_VERSION_FAILED = 'ActiveProject::LOAD_VISUAL_VERSION_FAILED';\n\n  // loadVisualVersion(pk_project: number, pk_entity: number, entity_version?: number): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUAL_VERSION,\n  //     payload: null,\n  //     meta: {\n  //       pk_project, pk_entity, entity_version\n  //     }\n  //   }\n  // }\n\n  // loadVisualVersionSucceeded(comVisualArray: ComVisualV[]): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUAL_VERSION_SUCCEEDED,\n  //     payload: null,\n  //     meta: {\n  //       comVisualArray\n  //     },\n  //   }\n  // }\n\n  // loadVisualVersionFailed(error): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.LOAD_VISUAL_VERSION_FAILED,\n  //     payload: null,\n  //     meta: null,\n  //     error\n  //   }\n  // }\n\n\n\n\n  /************************************************************************************\n   *  Things for Mentionings / Annotations\n  ************************************************************************************/\n  static UPDATE_SELECTED_CHUNK = 'ActiveProject::UPDATE_SELECTED_CHUNK';\n  static SET_REFINING_CHUNK = 'ActiveProject::SET_REFINING_CHUNK';\n  static SET_CREATING_MENTIONING = 'ActiveProject::SET_CREATING_MENTIONING';\n\n\n  // updateSelectedChunk(selectedChunk: DatChunk): ActiveProjectAction {\n  //   return {\n  //     type: ActiveProjectActions.UPDATE_SELECTED_CHUNK,\n  //     payload: { selectedChunk },\n  //     meta: null\n  //   }\n  // }\n\n  setRefiningChunk(refiningChunk: boolean): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_REFINING_CHUNK,\n      payload: { refiningChunk },\n      meta: null\n    }\n  }\n\n  setCreatingMentioning(creatingMentioning: boolean): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_CREATING_MENTIONING,\n      payload: { creatingMentioning },\n      meta: null\n    }\n  }\n\n  /************************************************************************************\n  * Highlighting of mentionings in the gui\n  ************************************************************************************/\n  static SET_MENTIONINGS_FOCUSED_IN_TEXT = 'ActiveProject::SET_MENTIONINGS_FOCUSED_IN_TEXT';\n  static SET_MENTIONINGS_FOCUSED_IN_TABLE = 'ActiveProject::SET_MENTIONINGS_FOCUSED_IN_TABLE';\n\n  setMentioningsFocusedInText(mentioningsFocusedInText: number[]): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_MENTIONINGS_FOCUSED_IN_TEXT,\n      payload: { mentioningsFocusedInText },\n      meta: null\n    }\n  }\n\n  setMentioningsFocusedInTable(mentioningsFocusedInTable: number[]): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.SET_MENTIONINGS_FOCUSED_IN_TABLE,\n      payload: { mentioningsFocusedInTable },\n      meta: null\n    }\n  }\n\n\n  // /*********************************************************************\n  //  *  Methods to manage enabling and disabling a class for the project\n  //  *********************************************************************/\n  // static readonly UPSERT_CLASS_PROJ_REL = 'ActiveProject::UPSERT_CLASS_PROJ_REL';\n  // static readonly UPSERT_CLASS_PROJ_REL_SUCCEEDED = 'ActiveProject::UPSERT_CLASS_PROJ_REL_SUCCEEDED';\n  // static readonly UPSERT_CLASS_PROJ_REL_FAILED = 'ActiveProject::UPSERT_CLASS_PROJ_REL_FAILED';\n\n  // upsertClassProjRel = (projRel: ProDfhClassProjRel, dfh_pk_class: number): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_CLASS_PROJ_REL,\n  //   meta: { projRel, dfh_pk_class },\n  //   payload: null,\n  // });\n\n  // upsertClassProjRelSucceeded = (projRel: ProDfhClassProjRel, dfh_pk_class: number): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_CLASS_PROJ_REL_SUCCEEDED,\n  //   meta: { projRel, dfh_pk_class },\n  //   payload: null\n  // })\n\n  // upsertClassProjRelFailed = (error, dfh_pk_class: number): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_CLASS_PROJ_REL_FAILED,\n  //   meta: { dfh_pk_class },\n  //   payload: null,\n  //   error,\n  // })\n\n\n  // /*********************************************************************\n  //  *  Methods to manage enabling and disabling an entity for the project\n  //  *********************************************************************/\n  // static readonly UPSERT_ENTITY_PROJ_REL = 'ActiveProject::UPSERT_ENTITY_PROJ_REL';\n  // static readonly UPSERT_ENTITY_PROJ_REL_SUCCEEDED = 'ActiveProject::UPSERT_ENTITY_PROJ_REL_SUCCEEDED';\n  // static readonly UPSERT_ENTITY_PROJ_REL_FAILED = 'ActiveProject::UPSERT_ENTITY_PROJ_REL_FAILED';\n\n  // upsertEntityProjRel = (infProjRel: ProInfoProjRel): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_ENTITY_PROJ_REL,\n  //   meta: { infProjRel },\n  //   payload: null,\n  // });\n\n  // upsertEntityProjRelSucceeded = (infProjRel: ProInfoProjRel): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_ENTITY_PROJ_REL_SUCCEEDED,\n  //   meta: { infProjRel },\n  //   payload: null\n  // })\n\n  // upsertEntityProjRelFailed = (error): ActiveProjectAction => ({\n  //   type: ActiveProjectActions.UPSERT_ENTITY_PROJ_REL_FAILED,\n  //   meta: null,\n  //   payload: null,\n  //   error,\n  // })\n\n\n  /************************************************************************************\n   * Destroy the active project state (on closing a project)\n  ************************************************************************************/\n  static DESTROY = 'ActiveProject::DESTROY';\n  destroy(): ActiveProjectAction {\n    return {\n      type: ActiveProjectActions.DESTROY,\n      payload: null,\n      meta: null,\n    }\n  }\n}\n","import { DatDigital, DatTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { ReducerConfigCollection } from '../_helpers/reducer-factory';\nimport { DatClassColumnMapping } from '@kleiolab/lib-sdk-lb4';\n\nexport const datRoot = 'dat';\nexport const facetteByPk = 'by_namespace';\n\nexport const datDefinitions: ReducerConfigCollection = {\n  digital: {\n    equals: (newItem: DatDigital, oldItem: DatDigital) => {\n      if (!oldItem.quill_doc && newItem.quill_doc) return false;\n      return (\n        newItem.pk_entity === oldItem.pk_entity &&\n        newItem.entity_version === oldItem.entity_version\n      )\n    },\n    indexBy: {\n      keyInStore: 'pk_entity__entity_version',\n      indexByFn: (item) => item.pk_entity.toString() + '_' + item.entity_version.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'pk_entity',\n        groupByFn: (item): string => item.pk_entity.toString()\n      },\n      {\n        keyInStore: 'pk_text',\n        groupByFn: (item): string => item.pk_text.toString()\n      }\n    ]\n  },\n  chunk: {\n    // facetteByPk,\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_text',\n        groupByFn: (item): string => item.fk_text.toString()\n      }\n    ]\n  },\n  column: {\n    // facetteByPk,\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_digital',\n        groupByFn: (item): string => item.fk_digital.toString()\n      }\n    ]\n  },\n  class_column_mapping: {\n    // facetteByPk,\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_column',\n        groupByFn: (item: DatClassColumnMapping): string => item.fk_column.toString()\n      }\n    ]\n  },\n  text_property: {\n    // facetteByPk,\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_entity__fk_system_type',\n        groupByFn: (item: DatTextProperty): string => item.fk_entity + '_' + item.fk_system_type\n      }\n    ]\n  },\n  namespace: {\n    // facetteByPk,\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_project',\n        groupByFn: (item): string => item.fk_project.toString()\n      }\n    ]\n  }\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { ActionsObservable } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { IAppState } from '../../root/models/model';\n\nexport interface LoadActionMeta { addPending: string, pk?: number }\nexport interface LoadVersionAction extends LoadActionMeta { pkEntity: number, entityVersion: number };\nexport interface LoadByPkAndVersionActionMeta { addPending: string, pk?: number, pkEntity: number, version: number }\n\nexport interface ModifyActionMeta<Model> { items: Model[], addPending: string, pk?: number }\nexport interface SucceedActionMeta<Model> { items: Model[], removePending: string, pk?: number }\nexport interface FailActionMeta { removePending: string, pk?: number }\n\nexport interface PaginateByParam { [key: string]: number | boolean }\nexport interface LoadPageMeta { paginateBy: PaginateByParam[], limit: number, offset: number, pk?: number }\nexport interface LoadPageSucceededMeta { pks: number[], count: number, paginateBy: PaginateByParam[], limit: number, offset: number, pk?: number }\n\n\n\nexport interface ActionResultObservable<Model> { pending$: Observable<boolean>, resolved$: Observable<SucceedActionMeta<Model>>, key: string }\n\nexport type FluxActionObservable<Payload, Meta> = ActionsObservable<FluxStandardAction<Payload, Meta>>\n\n\n\n/**\n * A: Schema Action Type (e.g. DfhAction)\n * M: Model for whitch the Actions are produced\n */\n\nexport class SchemaActionsFactory<Payload, Model> {\n\n  load: (suffix?: string, pk?: number) => ActionResultObservable<Model>;\n\n  /**\n   * @param pk is used for facetting\n   */\n  loadSucceeded: (items: Model[], removePending: string, pk?: number) => void;\n\n  /**\n   * @param pk is used for facetting\n   */\n  upsert: (items: Partial<Model>[], pk?: number) => ActionResultObservable<Model>;\n\n  /**\n   * @param pk is used for facetting\n   */\n  upsertSucceeded: (items: Model[], removePending: string, pk?: number) => void;\n\n  /**\n   * @param pk is used for facetting\n   */\n  delete: (items: Model[], pk?: number) => ActionResultObservable<Model>;\n\n  /**\n   * @param pk is used for facetting\n   */\n  deleteSucceeded: (items: Model[], removePending: string, pk?: number) => void;\n\n  /**\n   * @param pk is used for facetting\n   */\n  failed: (error, removePending: string, pk?: number) => void;\n\n\n  /**\n   * @param pk is used for facetting\n   */\n  loadPage: (paginateBy: PaginateByParam[], limit: number, offset: number, pk?: number) => void;\n\n  /**\n * @param pk is used for facetting\n */\n  loadPageSucceeded: (pks: number[], count: number, paginateBy: PaginateByParam[], limit: number, offset: number, pk?: number) => void;\n  loadPageFailed: (paginateBy: PaginateByParam[], limit: number, offset: number, pk?: number) => void;\n\n  /**\n   * this action is not model specific but pendingKey specific.\n   * Reducer will add whole meta part to the resolved key.\n   */\n  succeeded: (items: Model[], removePending: string, pk?: number) => void;\n\n  actionPrefix: string;\n  modelName: string;\n\n  constructor(public ngRedux: NgRedux<IAppState>) {\n  }\n\n\n  createCrudActions(actionPrefix: string, modelName: string): SchemaActionsFactory<Payload, Model> {\n    this.actionPrefix = actionPrefix;\n    this.modelName = modelName;\n\n    this.load = (suffix: string = '', pk?: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + (suffix ? '::' + suffix : ''),\n        meta: { addPending, pk },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<Model>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n\n    this.loadSucceeded = (items: Model[], removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, SucceedActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD_SUCCEEDED',\n        meta: { items, removePending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    /**\n     * Call the Redux Action to upsert model instances.\n     */\n    this.upsert = (items: Model[], pk?: number) => {\n      const addPending = U.uuid();\n      const action: FluxStandardAction<Payload, ModifyActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::UPSERT',\n        meta: { items, addPending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<Model>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n\n    this.upsertSucceeded = (items: Model[], removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, SucceedActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::UPSERT_SUCCEEDED',\n        meta: { items, removePending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    /**\n     * this action is not model specific but pendingKey specific.\n     * Reducer will add whole meta part to the resolved key\n     */\n    this.succeeded = (items: Model[], removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, SucceedActionMeta<Model>> = ({\n        type: 'general::UPSERT_SUCCEEDED',\n        meta: { items, removePending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n\n    /**\n    * Call the Redux Action to delete model instances.\n    */\n    this.delete = (items: Model[], pk?: number) => {\n      const addPending = U.uuid();\n      const action: FluxStandardAction<Payload, ModifyActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::DELETE',\n        meta: { items, addPending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<Model>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    this.deleteSucceeded = (items: Model[], removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, SucceedActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::DELETE_SUCCEEDED',\n        meta: { items, removePending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n\n\n    this.failed = (error, removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, FailActionMeta> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::FAILED',\n        meta: { removePending, pk },\n        payload: null,\n        error,\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n\n    this.loadPage = (paginateBy: PaginateByParam[], limit: number, offset: number, pk?: number) => {\n      const action: FluxStandardAction<Payload, LoadPageMeta> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD_PAGE',\n        meta: { paginateBy, limit, offset, pk },\n        payload: null,\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    this.loadPageSucceeded = (pks: number[], count: number, paginateBy: PaginateByParam[], limit: number, offset: number, pk?: number) => {\n      const action: FluxStandardAction<Payload, LoadPageSucceededMeta> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD_PAGE_SUCCEEDED',\n        meta: { pks, paginateBy, count, limit, offset, pk },\n        payload: null,\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    this.loadPageFailed = (paginateBy: PaginateByParam[], limit: number, offset: number, pk?: number) => {\n      const action: FluxStandardAction<Payload, LoadPageMeta> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD_PAGE_FAILED',\n        meta: { paginateBy, limit, offset, pk },\n        payload: null,\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    return this;\n  }\n\n}\n\nexport interface SchemaObjectLoadActionMeta { removePending: string, pk?: number }\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { DatChunk, DatColumn, DatDigital, DatNamespace, DatTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { DatClassColumnMapping } from '@kleiolab/lib-sdk-lb4';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { IAppState } from '../../root/models/model';\nimport { ChunkSlice, ClassColumnMappingSlice, ColumnSlice, DigitalSlice, NamespaceSlice, TextPropertySlice } from '../models/dat.models';\nimport { datRoot } from '../reducer-configs/dat.config';\nimport { ActionResultObservable, LoadActionMeta, SchemaActionsFactory, SucceedActionMeta, LoadVersionAction } from '../_helpers/schema-actions-factory';\n\n\nexport class DigitalActionsFactory extends SchemaActionsFactory<DigitalSlice, DatDigital> {\n\n  // Suffixes of load action types\n  static readonly LOAD_VERSION = 'LOAD_VERSION';\n\n  /**\n   * Load a version. if entityVersion omitted, latest version is returned.\n   */\n  loadVersion: (pkEntity: number, entityVersion?: number) => ActionResultObservable<DatDigital>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): DigitalActionsFactory {\n    Object.assign(this, this.createCrudActions(datRoot, 'digital'))\n\n    this.loadVersion = (pkEntity: number, entityVersion?: number) => {\n      const addPending = U.uuid()\n\n      const action: FluxStandardAction<DigitalSlice, LoadVersionAction> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + DigitalActionsFactory.LOAD_VERSION,\n        meta: { addPending, pkEntity, entityVersion },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DatDigital>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n    return this;\n  }\n}\n\nexport interface LoadChunksOfDigitalAction extends LoadActionMeta { pkDigital: number }\n\nexport class ChunkActionsFactory extends SchemaActionsFactory<ChunkSlice, DatChunk> {\n\n  // Suffixes of load action types\n  static readonly CHUNKS_OF_DIGITAL = 'CHUNKS_OF_DIGITAL';\n\n  /**\n   * Load a version. if entityVersion omitted, latest version is returned.\n   */\n  loadChunksOfDigital: (pkDigital: number, pk: number) => ActionResultObservable<DatChunk>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ChunkActionsFactory {\n    Object.assign(this, this.createCrudActions(datRoot, 'chunk'))\n\n    this.loadChunksOfDigital = (pkDigital: number, pk: number) => {\n      const addPending = U.uuid()\n\n      const action: FluxStandardAction<ChunkSlice, LoadChunksOfDigitalAction> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ChunkActionsFactory.CHUNKS_OF_DIGITAL,\n        meta: { addPending, pkDigital, pk },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DatChunk>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n    return this;\n  }\n}\n\nexport interface LoadColumnsOfTableAction extends LoadActionMeta { pkDigital: number }\n\nexport class ColumnActionsFactory extends SchemaActionsFactory<ColumnSlice, DatColumn> {\n\n  // Suffixes of load action types\n  static readonly COLUMNS_OF_TABLE = 'COLUMNS_OF_TABLE';\n\n  /**\n   * Load a version. if entityVersion omitted, latest version is returned.\n   */\n  loadColumnsOfTable: (pkDigital: number, pk: number) => ActionResultObservable<DatColumn>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ColumnActionsFactory {\n    Object.assign(this, this.createCrudActions(datRoot, 'column'))\n\n    this.loadColumnsOfTable = (pkDigital: number, pk: number) => {\n      const addPending = U.uuid()\n\n      const action: FluxStandardAction<ColumnSlice, LoadColumnsOfTableAction> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ColumnActionsFactory.COLUMNS_OF_TABLE,\n        meta: { addPending, pkDigital, pk },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DatColumn>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n    return this;\n  }\n}\n\n@Injectable()\nexport class DatActions {\n\n  digital = new DigitalActionsFactory(this.ngRedux).createActions();\n\n  chunk = new ChunkActionsFactory(this.ngRedux).createActions()\n\n  column = new ColumnActionsFactory(this.ngRedux).createActions()\n\n  class_column_mapping = new SchemaActionsFactory<ClassColumnMappingSlice, DatClassColumnMapping>(this.ngRedux).createCrudActions(datRoot, 'class_column_mapping')\n\n  namespace = new SchemaActionsFactory<NamespaceSlice, DatNamespace>(this.ngRedux).createCrudActions(datRoot, 'namespace')\n\n  text_property = new SchemaActionsFactory<TextPropertySlice, DatTextProperty>(this.ngRedux).createCrudActions(datRoot, 'text_property')\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","import { ReducerConfigCollection } from '../_helpers/reducer-factory';\nimport { DfhLabel, DfhProfile } from '@kleiolab/lib-sdk-lb3';\nimport { DfhProperty } from '@kleiolab/lib-sdk-lb4';\n\nimport { DfhClass } from '@kleiolab/lib-sdk-lb4';\n\nexport const dfhRoot = 'dfh';\n\nexport const dfhLabelByFksKey = (item: Partial<DfhLabel>) => `${item.type || null}_${item.language || null}_${item.fk_class || null}_${item.fk_profile || null}_${item.fk_property || null}_${item.fk_project || null}`;\n\nexport const dfhDefinitions: ReducerConfigCollection = {\n  profile: {\n    indexBy: {\n      keyInStore: 'pk_profile',\n      indexByFn: (item: DfhProfile) => item.pk_profile.toString()\n    }\n  },\n  klass: {\n    indexBy: {\n      keyInStore: 'pk_class',\n      indexByFn: (item: DfhClass) => item.pk_class.toString(),\n    },\n    groupBy: [\n      {\n        keyInStore: 'basic_type',\n        groupByFn: (d: DfhClass): string => d.basic_type.toString()\n      },\n    ]\n  },\n  property: {\n    indexBy: {\n      keyInStore: 'pk_property__has_domain__has_range',\n      indexByFn: (item: DfhProperty) => item.pk_property + '_' + item.has_domain + '_' + item.has_range\n    },\n    groupBy: [\n      {\n        keyInStore: 'pk_property',\n        groupByFn: (d: DfhProperty): string => d.pk_property.toString()\n      },\n      {\n        keyInStore: 'has_domain',\n        groupByFn: (d: DfhProperty): string => d.has_domain.toString()\n      },\n      {\n        keyInStore: 'has_range',\n        groupByFn: (d: DfhProperty): string => d.has_range.toString()\n      },\n      {\n        keyInStore: 'has_domain__fk_property',\n        groupByFn: (d: DfhProperty): string => d.has_domain + '_' + d.pk_property\n      },\n      {\n        keyInStore: 'has_range__fk_property',\n        groupByFn: (d: DfhProperty): string => d.has_range + '_' + d.pk_property\n      },\n      {\n        keyInStore: 'is_has_type_subproperty',\n        groupByFn: (d: DfhProperty): string => d.is_has_type_subproperty ? d.is_has_type_subproperty.toString() : undefined\n      }\n    ]\n  },\n  label: {\n    indexBy: {\n      keyInStore: 'fks',\n      indexByFn: dfhLabelByFksKey\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_class__type',\n        groupByFn: (d: DfhLabel): string => !d.fk_class ? undefined : `${d.fk_class}_${d.type}`\n      },\n      {\n        keyInStore: 'fk_property__type',\n        groupByFn: (d: DfhLabel): string => !d.fk_property ? undefined : `${d.fk_property}_${d.type}`\n      },\n      {\n        keyInStore: 'fk_profile__type',\n        groupByFn: (d: DfhLabel): string => !d.fk_profile ? undefined : `${d.fk_profile}_${d.type}`\n      }\n    ]\n  },\n};\n","\nimport { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { DfhLabel, DfhProfile } from '@kleiolab/lib-sdk-lb3';\nimport { DfhClass, DfhProperty } from '@kleiolab/lib-sdk-lb4';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { ActionResultObservable, LoadActionMeta, SchemaActionsFactory, SucceedActionMeta } from '../_helpers/schema-actions-factory';\nimport { filter } from 'rxjs/operators';\nimport { IAppState } from '../../root/models/model';\nimport { DfhClassSlice } from '../models/dfh.models';\nimport { dfhRoot } from '../reducer-configs/dfh.config';\n\n\nexport class DfhProfileActionFactory extends SchemaActionsFactory<Payload, DfhProfile> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<DfhProfile>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): DfhProfileActionFactory {\n    Object.assign(this, this.createCrudActions(dfhRoot, 'profile'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + DfhProfileActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DfhProfile>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\nexport class DfhClassActionFactory extends SchemaActionsFactory<Payload, DfhClass> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<DfhClass>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): DfhClassActionFactory {\n    Object.assign(this, this.createCrudActions(dfhRoot, 'klass'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + DfhClassActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DfhClass>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\nexport class DfhPropertyActionFactory extends SchemaActionsFactory<Payload, DfhProperty> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<DfhProperty>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): DfhPropertyActionFactory {\n    Object.assign(this, this.createCrudActions(dfhRoot, 'property'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + DfhPropertyActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DfhProperty>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\nexport class DfhLabelActionFactory extends SchemaActionsFactory<Payload, DfhLabel> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<DfhLabel>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): DfhLabelActionFactory {\n    Object.assign(this, this.createCrudActions(dfhRoot, 'label'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + DfhLabelActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<DfhLabel>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    return this;\n  }\n}\n\n\ntype Payload = DfhClassSlice;\n\n@Injectable()\nexport class DfhActions {\n\n\n  profile = new DfhProfileActionFactory(this.ngRedux).createActions();\n  klass = new DfhClassActionFactory(this.ngRedux).createActions();\n  property = new DfhPropertyActionFactory(this.ngRedux).createActions();\n  label = new DfhLabelActionFactory(this.ngRedux).createActions();\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","import { ReducerConfigCollection } from '../_helpers/reducer-factory';\n\nimport { InfStatement, InfTextProperty, InfDimension } from '@kleiolab/lib-sdk-lb3';\nimport { U } from '@kleiolab/lib-utils';\n\nexport const infRoot = 'inf';\n\nexport const infDefinitions: ReducerConfigCollection = {\n  persistent_item: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_class',\n        groupByFn: (d): string => d.fk_class.toString()\n      }\n    ]\n  },\n  temporal_entity: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_class',\n        groupByFn: (d): string => d.fk_class.toString()\n      }\n    ]\n  },\n  statement: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item: InfStatement) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: [\n      {\n        keyInStore: 'subject',\n        groupByFn: (d: InfStatement): string => indexStatementBySubject(d)\n      },\n      {\n        keyInStore: 'subject+property',\n        groupByFn: (d: InfStatement): string => indexStatementBySubjectProperty(d)\n      },\n      {\n        keyInStore: 'object',\n        groupByFn: (d: InfStatement): string => indexStatementByObject(d)\n      },\n      {\n        keyInStore: 'object+property',\n        groupByFn: (d: InfStatement): string => indexStatementByObjectProperty(d)\n      },\n\n      {\n        keyInStore: 'fk_subject_data',\n        groupByFn: (d: InfStatement): string => U.toStr0undef(d.fk_subject_data)\n      },\n    ]\n  },\n\n  text_property: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_concerned_entity__fk_class_field',\n        groupByFn: (d: InfTextProperty): string => d.fk_concerned_entity + '_' + d.fk_class_field\n      },\n      {\n        keyInStore: 'fk_concerned_entity',\n        groupByFn: (d: InfTextProperty): string => d.fk_concerned_entity.toString()\n      },\n    ]\n  },\n  lang_string: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n  appellation: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n  time_primitive: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n  place: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n  language: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n  dimension: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item: InfDimension) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: []\n  },\n}\n\n\n\n\n\n/**\n * This function creates a key for the given statement by\n * - subject (all subject foreign keys)\n *\n * The key is created on the basis of the given foreign keys.\n * Keys are separated by dash '-', undefined keys are replaced by a zero '0'\n *\n * Use this function to index groups of statements with the same subject\n * or to retrieve statements from such a group index\n */\nexport function indexStatementBySubject(fks: IndexStatementBySubject = {}): string {\n  return `${fks.fk_subject_info || '0'}-${fks.fk_subject_data || '0'}-${(fks.fk_subject_tables_row) || '0'}-${(fks.fk_subject_tables_cell) || '0'}`\n}\nexport interface IndexStatementBySubject {\n  fk_subject_info?: number;\n  fk_subject_data?: number;\n  fk_subject_tables_row?: number;\n  fk_subject_tables_cell?: number;\n};\n\n\n/**\n * This function creates a key for the given statement by\n * - object (all object foreign keys)\n *\n * The key is created on the basis of the given foreign keys.\n * Keys are separated by dash '-', undefined keys are replaced by a zero '0'\n *\n * Use this function to index groups of statements with the same object\n * or to retrieve statements from such a group index\n */\nexport function indexStatementByObject(fks: IndexStatementByObject = {}): string {\n  return `${fks.fk_object_info || '0'}-${fks.fk_object_data || '0'}-${fks.fk_object_tables_row || '0'}-${fks.fk_object_tables_cell || '0'}`\n}\nexport interface IndexStatementByObject {\n  fk_object_info?: number;\n  fk_object_data?: number;\n  fk_object_tables_row?: number;\n  fk_object_tables_cell?: number;\n};\n\n\n/**\n * This function creates a key for the given statement by\n * - subject (all subject foreign keys)\n * - property (all property foreign keys)\n *\n * The key is created on the basis of the given foreign keys.\n * Keys are separated by dash '-', undefined keys are replaced by a zero '0'\n *\n * Use this function to index groups of statements with the same subject + property\n * or to retrieve statements from such a group index\n */\nexport function indexStatementBySubjectProperty(fks: IndexStatementBySubjectProperty = {}): string {\n  return `${fks.fk_subject_info || '0'}-${fks.fk_subject_data || '0'}-${(fks.fk_subject_tables_row) || '0'}-${(fks.fk_subject_tables_cell) || '0'}-${fks.fk_property || '0'}-${fks.fk_property_of_property || '0'}`\n}\nexport interface IndexStatementBySubjectProperty {\n  fk_subject_info?: number;\n  fk_subject_data?: number;\n  fk_subject_tables_row?: number;\n  fk_subject_tables_cell?: number;\n  fk_property?: number;\n  fk_property_of_property?: number;\n}\n\n\n/**\n * This function creates a key for the given statement by\n * - object (all object foreign keys)\n * - property (all property foreign keys)\n *\n * The key is created on the basis of the given foreign keys.\n * Keys are separated by dash '-', undefined keys are replaced by a zero '0'\n *\n * Use this function to index groups of statements with the same object + property\n * or to retrieve statements from such a group index\n */\nexport function indexStatementByObjectProperty(fks: IndexStatementByObjectProperty = {}): string {\n  return `${fks.fk_object_info || '0'}-${fks.fk_object_data || '0'}-${fks.fk_object_tables_row || '0'}-${fks.fk_object_tables_cell || '0'}-${fks.fk_property || '0'}-${fks.fk_property_of_property || '0'}`\n}\nexport interface IndexStatementByObjectProperty {\n  fk_object_info?: number;\n  fk_object_data?: number;\n  fk_object_tables_row?: number;\n  fk_object_tables_cell?: number;\n  fk_property?: number;\n  fk_property_of_property?: number;\n}\n\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { IAppState } from '../../root/models/model';\nimport { ActionResultObservable, ModifyActionMeta, SchemaActionsFactory, SucceedActionMeta } from './schema-actions-factory';\n\n@Injectable()\nexport class InfActionFactory<Payload, Model> extends SchemaActionsFactory<Payload, Model> {\n\n\n  /**\n   * @param pk is used for facetting\n   */\n  remove: (items: Model[], pk?: number) => ActionResultObservable<Model>;\n\n  /**\n   * @param pk is used for facetting\n   */\n  removeSucceeded: (items: Model[], removePending: string, pk?: number) => void;\n\n  constructor(public ngRedux: NgRedux<IAppState>) {\n    super(ngRedux);\n  }\n\n  createInfActions(actionPrefix: string, modelName: string): InfActionFactory<Payload, Model> {\n    this.createCrudActions(actionPrefix, modelName)\n\n    /**\n     * Call the Redux Action to remove model instances from project.\n     */\n    this.remove = (items: Model[], pk?: number) => {\n      const addPending = U.uuid();\n      const action: FluxStandardAction<Payload, ModifyActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::REMOVE',\n        meta: { items, addPending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<Model>>(['resolved', addPending]),\n        key: addPending\n      };\n    }\n\n    this.removeSucceeded = (items: Model[], removePending: string, pk?: number) => {\n      const action: FluxStandardAction<Payload, SucceedActionMeta<Model>> = ({\n        type: this.actionPrefix + '.' + this.modelName + '::REMOVE_SUCCEEDED',\n        meta: { items, removePending, pk },\n        payload: null\n      })\n      this.ngRedux.dispatch(action)\n    }\n\n    return this;\n  }\n\n}\n","\nimport { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { DatDigital, InfAppellation, InfDimension, InfLangString, InfLanguage, InfPersistentItem, InfPlace, InfStatement, InfTemporalEntity, InfTextProperty, InfTimePrimitive } from '@kleiolab/lib-sdk-lb3';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { filter } from 'rxjs/operators';\nimport { IAppState, SchemaObject } from '../../root/models/model';\nimport { InfDimensionSlice, InfPersistentItemSlice } from '../models/inf.models';\nimport { infRoot } from '../reducer-configs/inf.config';\nimport { InfActionFactory } from '../_helpers/inf-action-factory';\nimport { ActionResultObservable, LoadActionMeta, SchemaActionsFactory, SucceedActionMeta } from '../_helpers/schema-actions-factory';\n\n\n\ntype Payload = InfPersistentItemSlice;\n\nexport interface LoadByPkMeta extends LoadActionMeta { pkEntity: number };\nexport type LoadTypesOfProjectAction = LoadActionMeta;\nexport interface LoadTypeOfProjectAction extends LoadActionMeta { pkEntity: number };\ntype LoadNestetedPeItResult = InfPersistentItem[]\n\nexport class InfPersistentItemActionFactory extends InfActionFactory<Payload, InfPersistentItem> {\n\n  // Suffixes of load action types\n  // static readonly NESTED_BY_PK = 'NESTED_BY_PK';\n  static readonly MINIMAL_BY_PK = 'MINIMAL_BY_PK';\n  static readonly TYPES_OF_PROJECT = 'TYPES_OF_PROJECT';\n  static readonly TYPE_OF_PROJECT = 'TYPE_OF_PROJECT';\n\n  loadMinimal: (pkProject: number, pkEntity: number) => ActionResultObservable<SchemaObject>;\n  loadNestedObject: (pkProject: number, pkEntity: number) => ActionResultObservable<LoadNestetedPeItResult>;\n\n  typesOfProject: (pkProject: number) => ActionResultObservable<LoadActionMeta>;\n  // typeOfProject: (pkProject: number, pkEntity: number) => ActionResultObservable<LoadNestetedPeItResult>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): InfPersistentItemActionFactory {\n    Object.assign(this, this.createInfActions(infRoot, 'persistent_item'))\n\n    // this.loadNestedObject = (pkProject: number, pkEntity: number) => {\n    //   const addPending = U.uuid();\n    //   const action: FluxStandardAction<Payload, LoadByPkMeta> = {\n    //     type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfPersistentItemActionFactory.NESTED_BY_PK,\n    //     meta: { addPending, pk: pkProject, pkEntity },\n    //     payload: null,\n    //   };\n    //   this.ngRedux.dispatch(action)\n    //   return {\n    //     pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n    //     resolved$: this.ngRedux.select<SucceedActionMeta<LoadNestetedPeItResult>>(['resolved', addPending]).pipe(filter(x => !!x)),\n    //     key: addPending\n    //   };\n    // }\n    this.loadMinimal = (pkProject: number, pkEntity: number) => {\n      const addPending = U.uuid();\n      const action: FluxStandardAction<Payload, LoadByPkMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfPersistentItemActionFactory.MINIMAL_BY_PK,\n        meta: { addPending, pk: pkProject, pkEntity },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<SchemaObject>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    this.typesOfProject = (pkProject: number) => {\n      const addPending = U.uuid();\n\n      const action: FluxStandardAction<Payload, LoadTypesOfProjectAction> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfPersistentItemActionFactory.TYPES_OF_PROJECT,\n        meta: { addPending, pk: pkProject },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<LoadActionMeta>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    // this.typeOfProject = (pkProject: number, pkEntity: number) => {\n    //   const addPending = U.uuid();\n\n    //   const action: FluxStandardAction<Payload, LoadTypeOfProjectAction> = {\n    //     type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfPersistentItemActionFactory.TYPE_OF_PROJECT,\n    //     meta: { addPending, pk: pkProject, pkEntity },\n    //     payload: null,\n    //   };\n    //   this.ngRedux.dispatch(action)\n    //   return {\n    //     pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n    //     resolved$: this.ngRedux.select<SucceedActionMeta<LoadNestetedPeItResult>>(['resolved', addPending]).pipe(filter(x => !!x)),\n    //     key: addPending\n    //   };\n    // }\n\n    return this;\n  }\n\n}\nexport type PaginatedStatements = number[]\nexport interface PaginatedStatementList {\n  count: number,\n  schemas: SchemaObject,\n  paginatedStatements: PaginatedStatements\n}\nexport interface LoadPaginatedStatementListMeta extends LoadActionMeta {\n  pkSourceEntity: number // Pk of the source entity.\n  pkProperty: number // Pk of the property.\n  fkTargetClass: number // Pk of the target class.\n  isOutgoing: boolean // If true, the source entity is domain, else range.\n  limit: number // number of items per page.\n  offset: number // offset.\n  alternatives: boolean\n}\nexport class InfTemporalEntityActionFactory extends InfActionFactory<Payload, InfTemporalEntity> {\n\n  // Suffixes of load action types\n  static readonly OWN_PROPERTIES = 'OWN_PROPERTIES';\n  static readonly PAGINATED_LIST = 'PAGINATED_LIST';\n  static readonly PAGINATED_ALTERNATIVE_LIST = 'PAGINATED_ALTERNATIVE_LIST';\n\n  loadNestedObject: (pkProject: number, pkEntity: number) => ActionResultObservable<InfTemporalEntity[]>;\n  loadPaginatedList: (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => ActionResultObservable<PaginatedStatementList>;\n  loadPaginatedAlternativeList: (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => ActionResultObservable<PaginatedStatementList>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): InfTemporalEntityActionFactory {\n    Object.assign(this, this.createInfActions(infRoot, 'temporal_entity'))\n\n    this.loadNestedObject = (pkProject: number, pkEntity: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadByPkMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfTemporalEntityActionFactory.OWN_PROPERTIES,\n        meta: { addPending, pk: pkProject, pkEntity },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<InfTemporalEntity[]>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    this.loadPaginatedList = (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadPaginatedStatementListMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfTemporalEntityActionFactory.PAGINATED_LIST,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkSourceEntity,\n          fkTargetClass,\n          pkProperty,\n          isOutgoing,\n          limit,\n          offset,\n          alternatives: false\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<PaginatedStatementList>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n    this.loadPaginatedAlternativeList = (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadPaginatedStatementListMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfTemporalEntityActionFactory.PAGINATED_ALTERNATIVE_LIST,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkSourceEntity,\n          pkProperty,\n          fkTargetClass,\n          isOutgoing,\n          limit,\n          offset,\n          alternatives: true\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<PaginatedStatementList>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n    return this;\n  }\n}\nexport interface FindStatementByParams extends LoadActionMeta {\n  ofProject: boolean,\n  pkEntity: number,\n  pkInfoRange: number,\n  pkInfoDomain: number,\n  pkProperty: number,\n}\nexport interface ContentTreeMeta extends LoadActionMeta {\n  pkExpressionEntity: number,\n}\nexport interface SourcesAndDigitalsOfEntity extends LoadActionMeta {\n  ofProject: boolean,\n  pkEntity: number,\n}\nexport interface SourcesAndDigitalsOfEntityResult {\n  statements: InfStatement[],\n  digitals: DatDigital[],\n}\n\n\nexport interface LoadOutgoingAlternativeStatements extends LoadActionMeta { pkTemporalEntity: number, pkProperty: number };\nexport interface LoadIngoingAlternativeStatements extends LoadActionMeta { pkEntity: number, pkProperty: number };\nexport interface AddToProjectWithTeEntActionMeta { pkStatements: number[], pk: number, addPending: string };\n\nexport class InfStatementActionFactory extends InfActionFactory<Payload, InfStatement> {\n\n  // Suffixes of load action types\n  // static readonly ALTERNATIVES_OUTGOING = 'ALTERNATIVES_OUTGOING';\n  static readonly ALTERNATIVES_INGOING = 'ALTERNATIVES_INGOING';\n  // static readonly ADD_TO_PROJECT_WITH_TE_EN = 'ADD_TO_PROJECT_WITH_TE_EN';\n  static readonly PAGINATED_LIST = 'PAGINATED_LIST';\n  static readonly CONTENT_TREE = 'CONTENT_TREE';\n  static readonly SOURCES_AND_DIGITALS_OF_ENTITY = 'SOURCES_AND_DIGITALS_OF_ENTITY';\n  static readonly BY_PARAMS = 'BY_PARAMS';\n\n  loadIngoingAlternatives: (pkEntity, pkProperty, pkProjec) => ActionResultObservable<InfStatement>;\n  loadPaginatedList: (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => ActionResultObservable<PaginatedStatementList>;\n\n  // contentTree: (pkProject: number, pkExpressionEntity: number) => void;\n  sourcesAndDigitalsOfEntity: (ofProject: boolean, pkProject: number, pkEntity: number) => ActionResultObservable<SourcesAndDigitalsOfEntityResult>;\n  findByParams: (\n    ofProject: boolean,\n    pkProject: number,\n    pkEntity: number,\n    pkInfoRange: number,\n    pkInfoDomain: number,\n    pkProperty: number,\n  ) => void;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): InfStatementActionFactory {\n    Object.assign(this, this.createInfActions(infRoot, 'statement'))\n\n    this.findByParams = (\n      ofProject: boolean,\n      pkProject: number,\n      pkEntity: number,\n      pkInfoRange: number,\n      pkInfoDomain: number,\n      pkProperty: number,\n    ) => {\n      const action: FluxStandardAction<Payload, FindStatementByParams> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfStatementActionFactory.BY_PARAMS,\n        meta: {\n          addPending: U.uuid(),\n          pk: pkProject,\n          ofProject,\n          pkEntity,\n          pkInfoRange,\n          pkInfoDomain,\n          pkProperty,\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n    }\n\n\n    this.loadIngoingAlternatives = (pkEntity: number, pkProperty: number, pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadIngoingAlternativeStatements> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfStatementActionFactory.ALTERNATIVES_INGOING,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkEntity,\n          pkProperty,\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<InfStatement>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    this.loadPaginatedList = (pkProject: number, pkSourceEntity: number, pkProperty: number, fkTargetClass: number, isOutgoing: boolean, limit: number, offset: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadPaginatedStatementListMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfStatementActionFactory.PAGINATED_LIST,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkSourceEntity,\n          fkTargetClass,\n          pkProperty,\n          isOutgoing,\n          limit,\n          offset,\n          alternatives: false\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<PaginatedStatementList>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    /**\n    * Get an nested object with everything needed to display the\n    * links made from an entity towards sources and digitals.\n    */\n    this.sourcesAndDigitalsOfEntity = (ofProject: boolean, pkProject: number, pkEntity: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, SourcesAndDigitalsOfEntity> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfStatementActionFactory.SOURCES_AND_DIGITALS_OF_ENTITY,\n        meta: {\n          addPending,\n          ofProject,\n          pk: pkProject,\n          pkEntity\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<SourcesAndDigitalsOfEntityResult>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\nexport interface LoadAlternativeTextProperties extends LoadActionMeta { fkEntity: number, fkClassField: number };\n\nexport class InfTextPropertyActionFactory extends InfActionFactory<Payload, InfTextProperty> {\n\n  // Suffixes of load action types\n  static readonly ALTERNATIVES = 'ALTERNATIVES';\n\n  loadAlternatives: (fkEntity, fkClassField, fkProject) => ActionResultObservable<InfTextProperty>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): InfTextPropertyActionFactory {\n    Object.assign(this, this.createInfActions(infRoot, 'text_property'))\n\n    this.loadAlternatives = (fkEntity: number, fkClassField: number, pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadAlternativeTextProperties> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + InfTextPropertyActionFactory.ALTERNATIVES,\n        meta: {\n          addPending,\n          pk: pkProject,\n          fkEntity,\n          fkClassField,\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<InfTextProperty>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\n\n@Injectable()\nexport class InfActions {\n\n  persistent_item = new InfPersistentItemActionFactory(this.ngRedux).createActions();\n  temporal_entity = new InfTemporalEntityActionFactory(this.ngRedux).createActions()\n  statement = new InfStatementActionFactory(this.ngRedux).createActions()\n\n  // TODO: pimp those up to real Inf Actions!\n  language = new SchemaActionsFactory<Payload, InfLanguage>(this.ngRedux).createCrudActions(infRoot, 'language')\n  appellation = new SchemaActionsFactory<Payload, InfAppellation>(this.ngRedux).createCrudActions(infRoot, 'appellation')\n  lang_string = new SchemaActionsFactory<Payload, InfLangString>(this.ngRedux).createCrudActions(infRoot, 'lang_string')\n  dimension = new SchemaActionsFactory<InfDimensionSlice, InfDimension>(this.ngRedux).createCrudActions(infRoot, 'dimension')\n  place = new SchemaActionsFactory<Payload, InfPlace>(this.ngRedux).createCrudActions(infRoot, 'place')\n  time_primitive = new SchemaActionsFactory<Payload, InfTimePrimitive>(this.ngRedux).createCrudActions(infRoot, 'time_primitive')\n  text_property = new InfTextPropertyActionFactory(this.ngRedux).createActions()\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","import { ReducerConfigCollection } from '../_helpers/reducer-factory';\nimport { ProClassFieldConfig, ProDfhClassProjRel, ProTextProperty, ProDfhProfileProjRel } from '@kleiolab/lib-sdk-lb3';\nimport { ProAnalysis } from '@kleiolab/lib-sdk-lb4';\n\nexport const proRoot = 'pro';\n\n\nexport const textPropertyByFksKey = (d: Partial<ProTextProperty>) => `${d.fk_project || null}_${d.fk_system_type || null}_${d.fk_language || null}_${d.fk_dfh_class || null}_${d.fk_dfh_property || null}_${d.fk_dfh_property_domain || null}_${d.fk_dfh_property_range || null}`\nexport const textPropertyByFksWithoutLang = (d: Partial<ProTextProperty>): string => `${d.fk_project || null}_${d.fk_system_type || null}_${d.fk_dfh_class || null}_${d.fk_dfh_property || null}_${d.fk_dfh_property_domain || null}_${d.fk_dfh_property_range || null}`;\nexport const proClassFieldConfgByProjectAndClassKey = (d: Partial<ProClassFieldConfig>): string => {\n  const fk_class = d.fk_range_class || d.fk_domain_class || d.fk_class_for_class_field;\n  return `${d.fk_project || null}_${fk_class || null}`;\n};\n\nexport const proDefinitions: ReducerConfigCollection = {\n  project: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    }\n  },\n  info_proj_rel: {\n    indexBy: {\n      keyInStore: 'fk_project__fk_entity',\n      indexByFn: (item) => item.fk_project.toString() + '_' + item.fk_entity.toString()\n    }\n  },\n  class_field_config: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => item.pk_entity.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_project__fk_class',\n        groupByFn: proClassFieldConfgByProjectAndClassKey\n      }\n    ]\n  },\n  dfh_class_proj_rel: {\n    indexBy: {\n      keyInStore: 'fk_project__fk_class',\n      indexByFn: (item: ProDfhClassProjRel) => item.fk_project + '_' + item.fk_class\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_project__enabled_in_entities',\n        groupByFn: (d: ProDfhClassProjRel): string => d.fk_project + '_' + d.enabled_in_entities\n      },\n      {\n        keyInStore: 'fk_project',\n        groupByFn: (d: ProDfhClassProjRel): string => d.fk_project.toString()\n      }\n    ],\n  },\n  dfh_profile_proj_rel: {\n    indexBy: {\n      keyInStore: 'fk_project__fk_profile',\n      indexByFn: (item: ProDfhProfileProjRel) => item.fk_project + '_' + item.fk_profile\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_project__enabled',\n        groupByFn: (d: ProDfhProfileProjRel): string => d.fk_project + '_' + d.enabled\n      },\n      {\n        keyInStore: 'fk_project',\n        groupByFn: (d: ProDfhProfileProjRel): string => d.fk_project.toString()\n      }\n    ],\n  },\n  text_property: {\n    indexBy: {\n      keyInStore: 'fks',\n      indexByFn: textPropertyByFksKey\n    },\n    groupBy: [\n      {\n        keyInStore: 'fks_without_lang',\n        groupByFn: textPropertyByFksWithoutLang\n      }\n    ]\n  },\n  analysis: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item: ProAnalysis) => item.pk_entity.toString()\n    }\n  }\n}\n","\nimport { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { ProClassFieldConfig, ProDfhClassProjRel, ProDfhProfileProjRel, ProInfoProjRel, ProProject, ProTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { ProAnalysis } from '@kleiolab/lib-sdk-lb4';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { filter } from 'rxjs/operators';\nimport { IAppState } from '../../root/models/model';\nimport { ProAnalysisSlice, ProInfoProjRelSlice } from '../models/pro.models';\nimport { proRoot } from '../reducer-configs/pro.config';\nimport { ActionResultObservable, LoadActionMeta, SchemaActionsFactory, SucceedActionMeta, LoadByPkAndVersionActionMeta } from '../_helpers/schema-actions-factory';\n\n\ntype Payload = ProInfoProjRelSlice;\n\nexport class ProProjectActionFactory extends SchemaActionsFactory<Payload, ProProject> {\n\n  // Suffixes of load action types\n  static readonly OF_ACCOUNT = 'OF_ACCOUNT';\n  static readonly LOAD_BASICS = 'LOAD_BASICS';\n\n  loadOfAccount: (pkProject) => ActionResultObservable<ProProject>;\n\n  /**\n   * loads the ProProject and the default InfLanguage\n   */\n  loadBasics: (pkProject) => ActionResultObservable<ProProject>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProProjectActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'project'))\n\n    this.loadOfAccount = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProProjectActionFactory.OF_ACCOUNT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProProject>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    this.loadBasics = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProProjectActionFactory.LOAD_BASICS,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProProject>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n\n    return this;\n  }\n}\n\nexport interface MarkStatementAsFavoriteActionMeta {\n  addPending: string,\n  pk: number\n  pkStatement: number\n  isOutgoing: boolean\n}\nexport class ProInfoProjRelActionFactory extends SchemaActionsFactory<Payload, ProInfoProjRel> {\n\n  // Suffixes of load action types\n  static readonly MARK_ROLE_AS_FAVORITE = 'MARK_ROLE_AS_FAVORITE';\n\n  markStatementAsFavorite: (pkProject: number, pkStatement: number, isOutgoing: boolean) => ActionResultObservable<ProInfoProjRel>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProInfoProjRelActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'info_proj_rel'))\n\n    this.markStatementAsFavorite = (pkProject: number, pkStatement: number, isOutgoing: boolean) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, MarkStatementAsFavoriteActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProInfoProjRelActionFactory.MARK_ROLE_AS_FAVORITE,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkStatement: pkStatement,\n          isOutgoing\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProInfoProjRel>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\nexport class ProDfhClassProjRelActionFactory extends SchemaActionsFactory<Payload, ProDfhClassProjRel> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<ProDfhClassProjRel>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProDfhClassProjRelActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'dfh_class_proj_rel'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProDfhClassProjRelActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProDfhClassProjRel>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\nexport class ProDfhProfileProjRelActionFactory extends SchemaActionsFactory<Payload, ProDfhProfileProjRel> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<ProDfhProfileProjRel>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProDfhProfileProjRelActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'dfh_profile_proj_rel'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProDfhProfileProjRelActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProDfhProfileProjRel>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\nexport class ProClassFieldConfigActionFactory extends SchemaActionsFactory<Payload, ProClassFieldConfig> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<ProClassFieldConfig>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProClassFieldConfigActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'class_field_config'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProClassFieldConfigActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProClassFieldConfig>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\nexport class ProTextPropertyActionFactory extends SchemaActionsFactory<Payload, ProTextProperty> {\n\n  // Suffixes of load action types\n  static readonly OF_PROJECT = 'OF_PROJECT';\n\n  loadOfProject: (pkProject) => ActionResultObservable<ProTextProperty>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProTextPropertyActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'text_property'))\n\n    this.loadOfProject = (pkProject: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProTextPropertyActionFactory.OF_PROJECT,\n        meta: {\n          addPending,\n          pk: pkProject\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProTextProperty>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\nexport class ProAnalysisActionFactory extends SchemaActionsFactory<ProAnalysisSlice, ProAnalysis> {\n\n  // Suffixes of load action types\n  static readonly BY_PK_AND_VERSION = 'BY_PK_AND_VERSION';\n\n  loadByIdAndVersion: (pkProject: number, pkEntity: number, version: number) => ActionResultObservable<ProAnalysis>;\n\n  constructor(public ngRedux: NgRedux<IAppState>) { super(ngRedux) }\n\n  createActions(): ProAnalysisActionFactory {\n    Object.assign(this, this.createCrudActions(proRoot, 'analysis'))\n\n    this.loadByIdAndVersion = (pkProject: number, pkEntity: number, version: number) => {\n      const addPending = U.uuid()\n      const action: FluxStandardAction<Payload, LoadByPkAndVersionActionMeta> = {\n        type: this.actionPrefix + '.' + this.modelName + '::LOAD' + '::' + ProAnalysisActionFactory.BY_PK_AND_VERSION,\n        meta: {\n          addPending,\n          pk: pkProject,\n          pkEntity,\n          version\n        },\n        payload: null,\n      };\n      this.ngRedux.dispatch(action)\n      return {\n        pending$: this.ngRedux.select<boolean>(['pending', addPending]),\n        resolved$: this.ngRedux.select<SucceedActionMeta<ProAnalysis>>(['resolved', addPending]).pipe(filter(x => !!x)),\n        key: addPending\n      };\n    }\n\n    return this;\n  }\n}\n\n\n\n@Injectable()\nexport class ProActions {\n  project = new ProProjectActionFactory(this.ngRedux).createActions()\n  info_proj_rel = new ProInfoProjRelActionFactory(this.ngRedux).createActions()\n  text_property = new ProTextPropertyActionFactory(this.ngRedux).createActions()\n  dfh_class_proj_rel = new ProDfhClassProjRelActionFactory(this.ngRedux).createActions()\n  dfh_profile_proj_rel = new ProDfhProfileProjRelActionFactory(this.ngRedux).createActions()\n  class_field_config = new ProClassFieldConfigActionFactory(this.ngRedux).createActions()\n  analysis = new ProAnalysisActionFactory(this.ngRedux).createActions()\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","import { ReducerConfigCollection } from '../_helpers/reducer-factory';\nimport { SysSystemRelevantClass } from '@kleiolab/lib-sdk-lb3';\n\nexport const sysRoot = 'sys';\n\nexport const sysDefinitions: ReducerConfigCollection = {\n  system_relevant_class: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item) => {\n        return item.pk_entity.toString()\n      }\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_class',\n        groupByFn: (d: SysSystemRelevantClass): string => d.fk_class.toString()\n      },\n      {\n        keyInStore: 'required_by_sources',\n        groupByFn: (d: SysSystemRelevantClass): string => d.required_by_sources.toString()\n      },\n      {\n        keyInStore: 'required',\n        groupByFn: (d: SysSystemRelevantClass): string => (d.required_by_sources || d.required_by_entities || d.required_by_basics) ? 'true' : 'false'\n      }\n    ]\n  },\n  config: {\n    indexBy: {\n      keyInStore: 'main',\n      indexByFn: () => 'main'\n    }\n  }\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { SysSystemRelevantClass } from '@kleiolab/lib-sdk-lb3';\nimport { SysConfigValue } from '@kleiolab/lib-sdk-lb4';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { IAppState } from '../../root/models/model';\nimport { Sys } from '../models/sys.models';\nimport { sysRoot } from '../reducer-configs/sys.config';\nimport { SchemaActionsFactory } from '../_helpers/schema-actions-factory';\n\ntype Payload = Sys;\ninterface MetaData {\n  systemRelevantClasses?: SysSystemRelevantClass[]\n};\nexport type SysAction = FluxStandardAction<Payload, MetaData>;\n\n@Injectable()\nexport class SysActions {\n\n  system_relevant_class = new SchemaActionsFactory<Payload, SysSystemRelevantClass>\n    (this.ngRedux).createCrudActions(sysRoot, 'system_relevant_class');\n\n  // analysis_type = new StandardActionsFactory<Payload, SysAnalysisType>\n  //   (this.ngRedux).createCrudActions(sysRoot, 'analysis_type');\n\n\n  config = new SchemaActionsFactory<Payload, SysConfigValue>\n    (this.ngRedux).createCrudActions(sysRoot, 'config');\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { SysConfig } from '@kleiolab/lib-config';\nimport { ProProject, ProProjectApi } from '@kleiolab/lib-sdk-lb3';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { Action } from 'redux';\nimport { combineEpics, Epic, ofType } from 'redux-observable-es6-compat';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, mapTo, mergeMap, switchMap } from 'rxjs/operators';\nimport { IAppState } from '../../root/models/model';\nimport { ActiveProjectActions, ActiveProjectAction } from '../../state-gui/actions/active-project.action';\nimport { LoadingBarActions } from '../../state-gui/actions/loading-bar.actions';\nimport { NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\nimport { DatActions } from '../../state-schema/actions/dat.actions';\nimport { DfhActions } from '../../state-schema/actions/dfh.actions';\nimport { InfActions } from '../../state-schema/actions/inf.actions';\nimport { ProActions } from '../../state-schema/actions/pro.actions';\nimport { SysActions } from '../../state-schema/actions/sys.actions';\nimport { ProjectPreview } from '../models/active-project.models';\n\n/**\n * Transform ProProject to ProjectPreview\n */\nfunction proProjectToProjectPreview(project: ProProject): ProjectPreview {\n  return {\n    label: this.firstProTextPropStringOfType(project.text_properties, SysConfig.PK_SYSTEM_TYPE__TEXT_PROPERTY__LABEL),\n    description: this.firstProTextPropStringOfType(project.text_properties, SysConfig.PK_SYSTEM_TYPE__TEXT_PROPERTY__DESCRIPTION),\n    default_language: project.default_language,\n    pk_project: project.pk_entity\n  }\n}\n\n\n@Injectable()\nexport class ActiveProjectEpics {\n  constructor(\n    private sys: SysActions,\n    private dat: DatActions,\n    private dfh: DfhActions,\n    private pro: ProActions,\n    private inf: InfActions,\n    private projectApi: ProProjectApi,\n    private actions: ActiveProjectActions,\n    private notificationActions: NotificationsAPIActions,\n    private loadingBarActions: LoadingBarActions,\n    private ngRedux: NgRedux<IAppState>,\n  ) { }\n\n  public createEpics(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return combineEpics(\n      this.createLoadProjectBasicsEpic(),\n      this.createLoadProjectConfigEpic(),\n      this.createLoadProjectUpdatedEpic(),\n      this.createClosePanelEpic(),\n      this.createActivateTabFocusPanelEpic(),\n      this.createMoveTabFocusPanelEpic(),\n      this.createClosePanelFocusPanelEpic(),\n      this.createSplitPanelActivateTabEpic(),\n      this.createAddTabCloseListEpic(),\n    );\n  }\n\n  /**\n   * This epic listenes to an action that wants to load tha active project (by id)\n   * It loads the project info and\n   * - on loaded dispaches an action that reduces the project into the store\n   * - on fail dispaches an action that shows an error notification\n   */\n  private createLoadProjectBasicsEpic(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return (action$, store) => action$.pipe(\n\n      ofType(ActiveProjectActions.LOAD_PROJECT_BASICS),\n      switchMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n        /**\n       * Emit the global action that activates the loading bar\n       */\n        globalStore.next(this.loadingBarActions.startLoading());\n\n        this.projectApi.getBasics(action.meta.pk_project)\n          .subscribe(\n            (data: ProProject[]) => {\n              globalStore.next(this.actions.loadProjectBasiscsSucceded(proProjectToProjectPreview(data[0])))\n            },\n            error => {\n              globalStore.next(this.notificationActions.addToast({\n                type: 'error',\n                options: { title: error.message }\n              }))\n            })\n      }))\n\n    )\n  }\n\n  /**\n  * This epic listenes to an action that is dispached when loading projcect succeeded\n  *\n  * It dispaches an action that completes the loading bar\n  */\n  private createLoadProjectUpdatedEpic(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return (action$, store) => action$.pipe(\n      ofType(ActiveProjectActions.LOAD_PROJECT_BASICS_SUCCEEDED),\n      mapTo(this.loadingBarActions.completeLoading())\n    )\n  }\n\n  private createLoadProjectConfigEpic(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return (action$, store) => action$.pipe(\n\n      ofType(ActiveProjectActions.LOAD_PROJECT_CONFIG),\n      switchMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n        globalStore.next(this.loadingBarActions.startLoading());\n\n        combineLatest(\n          this.dfh.profile.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n\n          this.dfh.klass.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n          this.dfh.property.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n          this.dfh.label.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n\n          this.sys.system_relevant_class.load().resolved$.pipe(filter(x => !!x)),\n          this.sys.config.load().resolved$.pipe(filter(x => !!x)),\n          this.dat.namespace.load('', action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n\n          this.pro.text_property.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n          this.pro.dfh_class_proj_rel.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n          this.pro.dfh_profile_proj_rel.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n          this.pro.class_field_config.loadOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x)),\n\n          this.inf.persistent_item.typesOfProject(action.meta.pk_project).resolved$.pipe(filter(x => !!x))\n        )\n          .pipe(filter((res: any[]) => !res.includes(undefined)))\n          .subscribe((res) => {\n\n            globalStore.next(this.actions.loadProjectConfigSucceeded());\n            globalStore.next(this.loadingBarActions.completeLoading());\n\n          }, error => {\n            // subStore.dispatch(this.actions.loadFailed({ status: '' + error.status }))\n          });\n\n      }))\n\n    )\n  }\n\n\n  /**\n   * LAYOUT\n   */\n  private createClosePanelEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.CLOSE_TAB, ActiveProjectActions.MOVE_TAB, ActiveProjectActions.SPLIT_PANEL),\n        mergeMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n          this.ngRedux.getState().activeProject.panels.forEach((panel, panelIndex) => {\n            if (panel.tabs.length === 0) globalStore.next(this.actions.closePanel(panelIndex));\n          })\n        }))\n      )\n    }\n  }\n  private createSplitPanelActivateTabEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.SPLIT_PANEL),\n        map((action: ActiveProjectAction) => {\n          const p = this.ngRedux.getState().activeProject;\n          const c = action.meta.currentPanelIndex;\n          const panelIndex = p.panels.length < (c + 1) ? c - 1 : c;\n          return this.actions.activateTab(panelIndex, 0)\n        })\n      )\n    }\n  }\n  private createActivateTabFocusPanelEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.ACTIVATE_TAB),\n        mergeMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n          if (this.ngRedux.getState().activeProject.focusedPanel !== action.meta.panelIndex) {\n            globalStore.next(this.actions.focusPanel(action.meta.panelIndex));\n          }\n        }))\n      )\n    }\n  }\n  private createMoveTabFocusPanelEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.MOVE_TAB),\n        mergeMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n          if (this.ngRedux.getState().activeProject.focusedPanel !== action.meta.currentPanelIndex) {\n            globalStore.next(this.actions.focusPanel(action.meta.currentPanelIndex));\n          }\n        }))\n      )\n    }\n  }\n  private createClosePanelFocusPanelEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.CLOSE_PANEL),\n        mergeMap((action: ActiveProjectAction) => new Observable<Action>((globalStore) => {\n          if (this.ngRedux.getState().activeProject.focusedPanel > (this.ngRedux.getState().activeProject.panels.length - 1)) {\n            globalStore.next(this.actions.focusPanel(0));\n          }\n        }))\n      )\n    }\n  }\n  private createAddTabCloseListEpic(): Epic {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(ActiveProjectActions.ADD_TAB),\n        mapTo(this.actions.setListType(''))\n      )\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { PubAccount } from '@kleiolab/lib-sdk-lb4';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { AccountRole, IAccount } from '../models/account.model';\n\nexport interface AccountActionMeta {\n  accountId?: number;\n  accountRoles?: AccountRole[];\n  account?: PubAccount;\n};\nexport type AccountAction = FluxStandardAction<IAccount, AccountActionMeta>;\n\n\n@Injectable()\nexport class AccountActions {\n  static LOGIN = 'Account::LOGIN';\n  static LOGIN_SUCCEEDED = 'Account::LOGIN_SUCCEEDED';\n  static LOGIN_FAILED = 'Account::LOGIN_FAILED';\n\n  static LOAD_ROLES = 'Account::LOAD_ROLES';\n  static LOAD_ROLES_SUCCEEDED = 'Account::LOAD_ROLES_SUCCEEDED';\n  static LOAD_ROLES_FAILED = 'Account::LOAD_ROLES_FAILED';\n\n  static ACCOUNT_UPDATED = 'Account::ACCOUNT_UPDATED';\n\n\n  login(): AccountAction {\n    return {\n      type: AccountActions.LOGIN,\n      payload: null,\n      meta: null\n    };\n  }\n\n  loginSucceeded(account: PubAccount): AccountAction {\n    return {\n      type: AccountActions.LOGIN_SUCCEEDED,\n      payload: null,\n      meta: { account }\n    };\n  }\n\n  loginFailed(error): AccountAction {\n    return {\n      type: AccountActions.LOGIN_FAILED,\n      payload: null,\n      meta: null,\n      error\n    };\n  }\n\n  accountUpdated(account: PubAccount): AccountAction {\n    return {\n      type: AccountActions.ACCOUNT_UPDATED,\n      payload: null,\n      meta: { account }\n    };\n  }\n\n  // Roles of the account, used to check permissions\n  loadRoles(accountId: number): AccountAction {\n    return {\n      type: AccountActions.LOAD_ROLES,\n      payload: null,\n      meta: { accountId }\n    };\n  }\n\n  loadRolesSucceeded(accountRoles: AccountRole[]): AccountAction {\n    return {\n      type: AccountActions.LOAD_ROLES_SUCCEEDED,\n      payload: null,\n      meta: { accountRoles }\n    };\n  }\n\n  loadRolesFailed(accountRoles: AccountRole[]): AccountAction {\n    return {\n      type: AccountActions.LOAD_ROLES_FAILED,\n      payload: null,\n      meta: null\n    };\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { PubAccountApi } from '@kleiolab/lib-sdk-lb3';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { Action } from 'redux';\nimport { combineEpics, Epic, ofType } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { AccountActions, AccountAction } from '../actions/account.actions';\nimport { AccountRole } from '../models/account.model';\nimport { LoadingBarActions } from '../actions/loading-bar.actions';\nimport { NotificationsAPIActions } from '../actions/notifications.actions';\n\n\n\n@Injectable()\nexport class AccountEpics {\n  constructor(\n    private actions: AccountActions,\n    private loadingBarActions: LoadingBarActions,\n    private accountApi: PubAccountApi,\n    private notificationActions: NotificationsAPIActions,\n  ) { }\n\n  public createEpics(): Epic<FluxStandardAction<any>, FluxStandardAction<any>, void, any> {\n    return combineEpics(\n      this.loadRoles()\n    );\n  }\n\n  private loadRoles(): Epic {\n    return (action$, store) => action$.pipe(\n      ofType(AccountActions.LOAD_ROLES),\n      mergeMap((action: AccountAction) => new Observable<Action>((globalStore) => {\n\n        globalStore.next(this.loadingBarActions.startLoading());\n        this.accountApi.getRoles(action.meta.accountId)\n          .subscribe((data: AccountRole[]) => {\n            globalStore.next(this.loadingBarActions.completeLoading());\n            globalStore.next(this.actions.loadRolesSucceeded(data));\n          }, error => {\n            globalStore.next(this.notificationActions.addToast({\n              type: 'error',\n              options: { title: error }\n            }))\n          })\n      }))\n\n    )\n  }\n\n\n}\n","import { FluxStandardAction } from 'flux-standard-action';\nimport { Action } from 'redux';\nimport { ofType } from 'redux-observable-es6-compat';\nimport { Observable, Subscriber } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\nimport { FluxActionObservable, LoadActionMeta, ModifyActionMeta, SchemaActionsFactory } from './schema-actions-factory';\n\nexport class SchemaEpicsFactory<Payload, Model> {\n  constructor(\n    public actionPrefix: string,\n    public modelName: string,\n    public actions: SchemaActionsFactory<Payload, Model>,\n    public notifications: NotificationsAPIActions) { }\n\n\n  createLoadEpic<T>(apiFn: (meta: T) => Observable<Model[]>, actionSuffix: string, onSuccessHook?: (data: Model[], pk?, initialMeta?: T) => void) {\n    return (action$: FluxActionObservable<Payload, LoadActionMeta>, store) => {\n      return action$.pipe(\n        ofType(this.type('LOAD', actionSuffix)),\n        mergeMap((action) => new Observable<Action>((globalActions) => {\n          const pendingKey = action.meta.addPending;\n          const meta = action.meta as any as T;\n          apiFn(meta).subscribe((data: Model[]) => {\n            if (onSuccessHook) {\n              onSuccessHook(data, action.meta.pk, meta);\n              this.actions.succeeded(data, pendingKey, action.meta.pk);\n            }\n            else {\n              this.actions.loadSucceeded(data, pendingKey, action.meta.pk);\n            }\n          }, error => {\n            this.onError(globalActions, error, pendingKey, action.meta.pk)\n          });\n        })));\n    };\n  }\n  createUpsertEpic<T>(apiFn: (meta: T) => Observable<Model[]>, onSuccessHook?: (data: Model[], pk?) => void) {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(this.actionPrefix + '.' + this.modelName + '::UPSERT'),\n        mergeMap((action: FluxStandardAction<Payload, ModifyActionMeta<Model>>) => new Observable<Action>((globalActions) => {\n          const pendingKey = action.meta.addPending;\n          const meta = action.meta as any as T;\n          apiFn(meta).subscribe((data: Model[]) => {\n            if (onSuccessHook) {\n              onSuccessHook(data, action.meta.pk);\n              this.actions.succeeded(data, pendingKey, action.meta.pk);\n            }\n            else {\n              this.actions.upsertSucceeded(data, pendingKey, action.meta.pk);\n            }\n          }, error => {\n            this.onError(globalActions, error, pendingKey, action.meta.pk)\n          });\n        })));\n    };\n  }\n  createDeleteEpic(apiFn: (meta: ModifyActionMeta<Model>) => Observable<Model[]>) {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(this.actionPrefix + '.' + this.modelName + '::DELETE'),\n        mergeMap((action: FluxStandardAction<Payload, ModifyActionMeta<Model>>) => new Observable<Action>((globalActions) => {\n          const pendingKey = action.meta.addPending;\n          apiFn(action.meta).subscribe((data: Model[]) => {\n            this.actions.deleteSucceeded(action.meta.items, pendingKey, action.meta.pk);\n          }, error => {\n            this.onError(globalActions, error, pendingKey, action.meta.pk)\n          });\n        })));\n    };\n  }\n\n  /**\n   * Create the string used as action.type\n   */\n  type(operation: 'LOAD' | 'UPSERT' | 'Â DELETE', actionSuffix: string): string {\n    return this.actionPrefix + '.' + this.modelName + '::' + operation + (actionSuffix ? '::' + actionSuffix : '')\n  }\n\n  /**\n  * Create the onError logic for standard actions\n  * @param globalActions pass in the subscriber to the action$ stream\n  */\n  onError(globalActions: Subscriber<Action>, error, pendingKey, pkProject) {\n    globalActions.next(this.notifications.addToast({\n      type: 'error',\n      options: { title: error.message }\n    }));\n    this.actions.failed({ status: '' + error.status }, pendingKey, pkProject);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { SysSystemRelevantClass, SysSystemRelevantClassApi } from '@kleiolab/lib-sdk-lb3';\nimport { SysConfigValue, SystemConfigurationService } from '@kleiolab/lib-sdk-lb4';\nimport { combineEpics, Epic } from 'redux-observable-es6-compat';\nimport { map } from 'rxjs/operators';\nimport { NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\nimport { SysActions } from '../actions/sys.actions';\nimport { SysConfigSlice, SysRelevantClassSlice } from '../models/sys.models';\nimport { sysRoot } from '../reducer-configs/sys.config';\nimport { ModifyActionMeta } from '../_helpers/schema-actions-factory';\nimport { SchemaEpicsFactory } from '../_helpers/schema-epics-factory';\n\n\n\n@Injectable()\nexport class SysEpics {\n  constructor(\n    private actions: SysActions,\n    private notification: NotificationsAPIActions,\n    private sysRelevantClassApi: SysSystemRelevantClassApi,\n    // private sysAnalysisTypeApi: SysAnalysisTypeApi,\n    private sysConfigApi: SystemConfigurationService\n  ) { }\n\n  public createEpics(): Epic {\n    const systemRelevantClassEpicsFactory = new SchemaEpicsFactory<SysRelevantClassSlice, SysSystemRelevantClass>\n      (sysRoot, 'system_relevant_class', this.actions.system_relevant_class, this.notification);\n\n    // const analysisTypeEpicsFactory = new StandardEpicsFactory<SysRelevantClassSlice, SysAnalysisType>\n    //   (sysRoot, 'analysis_type', this.actions.analysis_type, this.notification);\n\n    const configEpicsFactory = new SchemaEpicsFactory<SysConfigSlice, SysConfigValue>\n      (sysRoot, 'config', this.actions.config, this.notification);\n\n\n\n    return combineEpics(\n\n      // SystemRelevantClass Epics\n      systemRelevantClassEpicsFactory.createLoadEpic((action) => this.sysRelevantClassApi.find(), ''),\n      systemRelevantClassEpicsFactory.createUpsertEpic<ModifyActionMeta<SysSystemRelevantClass>>((meta) => this.sysRelevantClassApi.bulkReplaceOrCreate(meta.items)),\n\n      // analysisTypeEpicsFactory.createLoadEpic(() => this.sysAnalysisTypeApi.find(), ''),\n\n      configEpicsFactory.createLoadEpic(\n        () => this.sysConfigApi.sysConfigControllerGetSystemConfig().pipe(map(x => [x])),\n        '')\n    );\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { DfhLabel, DfhLabelApi, DfhProfile, DfhProfileApi } from '@kleiolab/lib-sdk-lb3';\nimport { DfhClass, DfhClassControllerService, DfhProperty, DfhPropertyControllerService } from '@kleiolab/lib-sdk-lb4';\nimport { combineEpics, Epic } from 'redux-observable-es6-compat';\nimport { DfhActions, DfhClassActionFactory, DfhLabelActionFactory, DfhProfileActionFactory, DfhPropertyActionFactory } from '../actions/dfh.actions';\nimport { DfhClassSlice, DfhLabelSlice, DfhProfileSlice, DfhPropertySlice } from '../models/dfh.models';\nimport { NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\nimport { LoadActionMeta } from '../_helpers/schema-actions-factory';\nimport { SchemaEpicsFactory } from '../_helpers/schema-epics-factory';\n\n\n@Injectable()\nexport class DfhEpics {\n  constructor(\n    private actions: DfhActions,\n    private notification: NotificationsAPIActions,\n    private profileApi: DfhProfileApi,\n    private classApi: DfhClassControllerService,\n    private propertyApi: DfhPropertyControllerService,\n    private labelApi: DfhLabelApi,\n  ) { }\n\n  public createEpics(): Epic {\n    const dfhProfileEpicsFactory = new SchemaEpicsFactory<DfhProfileSlice, DfhProfile>('dfh', 'profile', this.actions.profile, this.notification);\n    const dfhClassEpicsFactory = new SchemaEpicsFactory<DfhClassSlice, DfhClass>('dfh', 'klass', this.actions.klass, this.notification);\n    const dfhLabelEpicsFactory = new SchemaEpicsFactory<DfhLabelSlice, DfhLabel>('dfh', 'label', this.actions.label, this.notification);\n    const dfhPropertyEpicsFactory = new SchemaEpicsFactory<DfhPropertySlice, DfhProperty>('dfh', 'property', this.actions.property, this.notification);\n\n    return combineEpics(\n      // Profile Loaders\n      dfhProfileEpicsFactory.createLoadEpic<LoadActionMeta>((meta) => this.profileApi.ofProject(meta.pk),\n        DfhProfileActionFactory.OF_PROJECT\n      ),\n      // Property Loaders\n      dfhPropertyEpicsFactory.createLoadEpic<LoadActionMeta>((meta) => this.propertyApi.dfhPropertyControllerOfProject(meta.pk),\n        DfhPropertyActionFactory.OF_PROJECT\n      ),\n      // Class Loaders\n      dfhClassEpicsFactory.createLoadEpic<LoadActionMeta>((meta) => this.classApi.dfhClassControllerOfProject(meta.pk),\n        DfhClassActionFactory.OF_PROJECT\n      ),\n      // Label Loaders\n      dfhLabelEpicsFactory.createLoadEpic<LoadActionMeta>((meta) => this.labelApi.ofProject(meta.pk),\n        DfhLabelActionFactory.OF_PROJECT\n      )\n    )\n\n  }\n\n\n}\n","import { ReducerConfigCollection } from '../_helpers/reducer-factory';\nimport { TabCell } from '@kleiolab/lib-sdk-lb4';\n\nexport const tabRoot = 'tab';\n\nexport const tabDefinitions: ReducerConfigCollection = {\n  cell: {\n    indexBy: {\n      keyInStore: 'pk_cell',\n      indexByFn: (item: TabCell) => item.pk_cell.toString()\n    },\n    groupBy: [\n      {\n        keyInStore: 'fk_column_fk_row',\n        groupByFn: (item: TabCell): string => item.fk_column + '_' + item.fk_row\n      }\n    ]\n  }\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { TabCell } from '@kleiolab/lib-sdk-lb4';\nimport { IAppState } from '../../root/models/model';\nimport { TabCellSlice } from '../models/tab.models';\nimport { SchemaActionsFactory } from '../_helpers/schema-actions-factory';\nimport { tabRoot } from '../reducer-configs/tab.config';\n\n\n@Injectable()\nexport class TabActions {\n\n  cell = new SchemaActionsFactory<TabCellSlice, TabCell>(this.ngRedux).createCrudActions(tabRoot, 'cell')\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n\n}\n","import { ReducerConfigCollection } from '../_helpers/reducer-factory';\nimport { WarEntityPreview } from '@kleiolab/lib-sdk-lb4';\n\nexport const warRoot = 'war';\n\nexport const warDefinitions: ReducerConfigCollection = {\n  entity_preview: {\n    indexBy: {\n      keyInStore: 'pk_entity',\n      indexByFn: (item: WarEntityPreview) => item.pk_entity.toString()\n    }\n  }\n}\n","\nimport { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { WarEntityPreview } from '@kleiolab/lib-sdk-lb4';\nimport { IAppState } from '../../root/models/model';\nimport { WarEntityPreviewSlice } from '../models/war.models';\nimport { warRoot } from '../reducer-configs/war.config';\nimport { SchemaActionsFactory } from '../_helpers/schema-actions-factory';\n\n@Injectable()\nexport class WarActions {\n  entity_preview = new SchemaActionsFactory<WarEntityPreviewSlice, WarEntityPreview>(this.ngRedux).createCrudActions(warRoot, 'entity_preview')\n\n  constructor(public ngRedux: NgRedux<IAppState>) { }\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaObjectApi } from '@kleiolab/lib-sdk-lb3';\nimport { GvSchemaObject } from '@kleiolab/lib-sdk-lb4';\nimport { Observable, Subject } from 'rxjs';\nimport { SchemaObject } from '../../root/models/model';\nimport { NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\nimport { DatActions } from '../actions/dat.actions';\nimport { DfhActions } from '../actions/dfh.actions';\nimport { InfActions } from '../actions/inf.actions';\nimport { ProActions } from '../actions/pro.actions';\nimport { SysActions } from '../actions/sys.actions';\nimport { TabActions } from '../actions/tab.actions';\nimport { WarActions } from '../actions/war.actions';\n\n@Injectable()\n/**\n * Class to put schema objects into store\n */\nexport class SchemaObjectService {\n\n  constructor(\n    public api: SchemaObjectApi,\n    public infActions: InfActions,\n    public proActions: ProActions,\n    public datActions: DatActions,\n    public warActions: WarActions,\n    public tabActions: TabActions,\n    public dfhActions: DfhActions,\n    public sysActions: SysActions,\n    public notifications: NotificationsAPIActions,\n  ) { }\n\n\n  /**\n   * watches an Observable<SchemaObject>\n   * on success stores the parts of the object at right place of store\n   * on error emits error message\n   *\n   * @param apiCall$\n   * @param pkProject primary key of project or 'ofRepo', if repo versions\n   */\n  store(apiCall$: Observable<SchemaObject>, pkProject: number | 'ofRepo'): Observable<SchemaObject> {\n\n\n    const s$ = new Subject<SchemaObject>()\n    apiCall$.subscribe(\n      result => {\n        this.storeSchemaObject(result, pkProject === 'ofRepo' ? null : pkProject)\n        s$.next(result)\n      },\n      error => {\n        this.notifications.addToast({\n          type: 'error',\n          options: { title: error.message }\n        })\n        s$.error(error)\n      }\n    )\n    return s$\n  }\n\n  /**\n   * watches an Observable<SchemaObject>\n   * on success stores the parts of the object at right place of store\n   * on error emits error message\n   *\n   * @param apiCall$\n   * @param pkProject primary key of project or 'ofRepo', if repo versions\n   */\n  storeGv(apiCall$: Observable<GvSchemaObject>, pkProject: number | 'ofRepo'): Observable<GvSchemaObject> {\n\n    const s$ = new Subject<GvSchemaObject>()\n    apiCall$.subscribe(\n      result => {\n        this.storeSchemaObjectGv(result, pkProject === 'ofRepo' ? null : pkProject)\n        s$.next(result)\n      },\n      error => {\n        this.notifications.addToast({\n          type: 'error',\n          options: { title: error.message }\n        })\n        s$.error(error)\n      }\n    )\n    return s$\n  }\n\n  /**\n   *\n   * @param object\n   * @param pkProject primary key of project or null, if repo versions\n   */\n  storeSchemaObject(object: SchemaObject, pkProject: number | null) {\n    if (object && Object.keys(object).length > 0) {\n      Object.keys(object).forEach(schema => {\n        let actions;\n        if (schema === 'inf') actions = this.infActions;\n        else if (schema === 'pro') actions = this.proActions;\n        else if (schema === 'dat') actions = this.datActions;\n        else if (schema === 'war') actions = this.warActions;\n        if (actions) {\n          Object.keys(object[schema]).forEach(model => {\n            actions[model].loadSucceeded(object[schema][model], undefined, pkProject);\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   *\n   * @param object\n   * @param pkProject primary key of project or null, if repo versions\n   */\n  storeSchemaObjectGv(object: GvSchemaObject, pkProject: number | null) {\n    if (object && Object.keys(object).length > 0) {\n      Object.keys(object).forEach(schema => {\n        let actions;\n        if (schema === 'inf') actions = this.infActions;\n        else if (schema === 'pro') actions = this.proActions;\n        else if (schema === 'dat') actions = this.datActions;\n        else if (schema === 'war') actions = this.warActions;\n        else if (schema === 'tab') actions = this.tabActions;\n        else if (schema === 'dfh') actions = this.dfhActions;\n        else if (schema === 'sys') actions = this.sysActions;\n        if (actions) {\n          Object.keys(object[schema]).forEach(model => {\n            actions[model].loadSucceeded(object[schema][model], undefined, pkProject);\n          });\n        }\n      });\n      // this.extendEntityPreviewStream(object, pkProject);\n      console.warn('!!!!!!!! Need to call this.extendEntityPreviewStream(object, pkProject);')\n    }\n  }\n\n  // /**\n  //  * Adds the entity previews to the streamed entity previews (for ws communication)\n  //  * @param object\n  //  * @param pkProject\n  //  */\n  // private extendEntityPreviewStream(object: GvSchemaObject, pkProject: number) {\n  //   if (object && object.war && object.war.entity_preview && object.war.entity_preview.length) {\n  //     this.entityPreviewSocket.emit('extendStream', {\n  //       pkProject,\n  //       pks: object.war.entity_preview.map(p => p.pk_entity)\n  //     });\n  //   }\n  // }\n}\n","import { DatChunk, DatDigital, InfAppellation, InfDimension, InfLangString, InfLanguage, InfPersistentItem, InfPlace, InfStatement, InfTemporalEntity, InfTextProperty, InfTimePrimitive, ProClassFieldConfig, ProDfhClassProjRel, ProDfhProfileProjRel, ProInfoProjRel, ProProject, ProTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { ProAnalysis } from '@kleiolab/lib-sdk-lb4';\nimport { keys, omit, values } from 'ramda';\nimport { DatActions } from '../actions/dat.actions';\nimport { InfActions } from '../actions/inf.actions';\nimport { ProActions } from '../actions/pro.actions';\nimport { ChunkSlice, DigitalSlice } from '../models/dat.models';\nimport { InfAppellationSlice, InfDimensionSlice, InfLangStringSlice, InfLanguageSlice, InfPersistentItemSlice, InfPlaceSlice, InfTextPropertySlice, InfTimePrimitiveSlice } from '../models/inf.models';\nimport { ProAnalysisSlice, ProClassFieldConfigSlice, ProDfhClassProjRelSlice, ProDfhProfileProjRelSlice, ProInfoProjRelSlice, ProProjectSlice, ProTextPropertySlice } from '../models/pro.models';\nimport { SchemaActionsFactory } from './schema-actions-factory';\n\nclass ModelFlattener<Payload, Model> {\n  items: Model[]\n  constructor(\n    public actions: SchemaActionsFactory<Payload, Model>,\n    public modelDefinition: any,\n    public flattenCb: (items: Model[]) => void,\n  ) { }\n\n  flatten(items: Model[]) {\n    if (items && items.length > 0) {\n\n      this.flattenCb(items);\n      // todo remove properties of those objects, using getModelDefinition()\n      const keysToOmit = keys(this.modelDefinition.relations).map(item => item.toString())\n      this.items = [\n        ...(this.items || []),\n        ...items.filter(item => !!item && Object.keys(item).length > 0)\n          .map(item => omit(keysToOmit, item)) as Model[]\n      ]\n    }\n    return true;\n  }\n\n}\n\ninterface FlattenerInterface {\n  [key: string]: ModelFlattener<any, any>\n}\n\n/**\n * Flattener is the class used to flatten nested objects.\n * Use storeFlattened() to call all actions to put the\n * flattened items into the store.\n */\nexport class Flattener {\n\n\n\n  info_proj_rel = new ModelFlattener<ProInfoProjRelSlice, ProInfoProjRel>(\n    this.proActions.info_proj_rel,\n    ProInfoProjRel.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new ProInfoProjRel(item);\n      })\n    })\n\n  pro_dfh_class_proj_rel = new ModelFlattener<ProDfhClassProjRelSlice, ProDfhClassProjRel>(\n    this.proActions.dfh_class_proj_rel,\n    ProDfhClassProjRel.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new ProDfhClassProjRel(item);\n      })\n    })\n\n  pro_dfh_profile_proj_rel = new ModelFlattener<ProDfhProfileProjRelSlice, ProDfhProfileProjRel>(\n    this.proActions.dfh_profile_proj_rel,\n    ProDfhProfileProjRel.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new ProDfhProfileProjRel(item);\n      })\n    })\n\n\n  persistent_item = new ModelFlattener<InfPersistentItemSlice, InfPersistentItem>(\n    this.infActions.persistent_item,\n    InfPersistentItem.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfPersistentItem(item);\n        this.statement.flatten(item.incoming_statements)\n        this.statement.flatten(item.outgoing_statements)\n        this.text_property.flatten(item.text_properties)\n        this.info_proj_rel.flatten(item.entity_version_project_rels)\n      })\n    })\n\n  temporal_entity = new ModelFlattener<InfPersistentItemSlice, InfTemporalEntity>(\n    this.infActions.temporal_entity,\n    InfTemporalEntity.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfTemporalEntity(item);\n        this.statement.flatten(item.outgoing_statements)\n        this.statement.flatten(item.incoming_statements)\n        this.text_property.flatten(item.text_properties)\n        this.info_proj_rel.flatten(item.entity_version_project_rels)\n      })\n    })\n\n\n  statement = new ModelFlattener<InfPersistentItemSlice, InfStatement>(\n    this.infActions.statement,\n    InfStatement.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfStatement(item);\n        this.info_proj_rel.flatten(item.entity_version_project_rels)\n\n        // Subject\n        if (item.subject_temporal_entity) this.temporal_entity.flatten([item.subject_temporal_entity])\n        else if (item.subject_statement) this.statement.flatten([item.subject_statement])\n\n        // Object\n        if (item.object_persistent_item) this.persistent_item.flatten([item.object_persistent_item])\n        else if (item.object_appellation) this.appellation.flatten([item.object_appellation])\n        else if (item.object_place) this.place.flatten([item.object_place])\n        else if (item.object_time_primitive) this.time_primitive.flatten([item.object_time_primitive])\n        else if (item.object_language) this.language.flatten([item.object_language])\n        else if (item.subject_chunk) this.chunk.flatten([item.subject_chunk])\n        else if (item.object_lang_string) this.lang_string.flatten([item.object_lang_string])\n        else if (item.object_dimension) this.dimension.flatten([item.object_dimension])\n      })\n    })\n\n  appellation = new ModelFlattener<InfAppellationSlice, InfAppellation>(\n    this.infActions.appellation,\n    InfAppellation.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfAppellation(item);\n      })\n    })\n\n\n  place = new ModelFlattener<InfPlaceSlice, InfPlace>(\n    this.infActions.place,\n    InfPlace.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfPlace(item);\n      })\n    })\n\n  time_primitive = new ModelFlattener<InfTimePrimitiveSlice, InfTimePrimitive>(\n    this.infActions.time_primitive,\n    InfTimePrimitive.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfTimePrimitive(item);\n      })\n    })\n\n  language = new ModelFlattener<InfLanguageSlice, InfLanguage>(\n    this.infActions.language,\n    InfLanguage.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfLanguage(item);\n      })\n    })\n\n  lang_string = new ModelFlattener<InfLangStringSlice, InfLangString>(\n    this.infActions.lang_string,\n    InfLangString.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfLangString(item);\n        this.language.flatten([item.language])\n        this.info_proj_rel.flatten(item.entity_version_project_rels)\n      })\n    })\n\n  dimension = new ModelFlattener<InfDimensionSlice, InfDimension>(\n    this.infActions.dimension,\n    InfDimension.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfDimension(item);\n        this.info_proj_rel.flatten(item.entity_version_project_rels)\n      })\n    })\n\n  text_property = new ModelFlattener<InfTextPropertySlice, InfTextProperty>(\n    this.infActions.text_property,\n    InfTextProperty.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new InfTextProperty(item);\n        this.language.flatten([item.language])\n        this.info_proj_rel.flatten(item.entity_version_project_rels)\n      })\n    })\n\n  digital = new ModelFlattener<DigitalSlice, DatDigital>(\n    this.datActions.digital,\n    DatDigital.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new DatDigital(item);\n      })\n    })\n\n  chunk = new ModelFlattener<ChunkSlice, DatChunk>(\n    this.datActions.chunk,\n    DatChunk.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new DatChunk(item);\n        this.statement.flatten(item.outgoing_statements)\n      })\n    })\n\n  pro_project = new ModelFlattener<ProProjectSlice, ProProject>(\n    this.proActions.project,\n    ProProject.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new ProProject(item);\n        this.language.flatten([item.default_language])\n      })\n    })\n\n  pro_text_property = new ModelFlattener<ProTextPropertySlice, ProTextProperty>(\n    this.proActions.text_property,\n    ProTextProperty.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new ProTextProperty(item);\n        this.language.flatten([item.language])\n      })\n    })\n\n\n  pro_class_field_config = new ModelFlattener<ProClassFieldConfigSlice, ProClassFieldConfig>(\n    this.proActions.class_field_config,\n    ProClassFieldConfig.getModelDefinition(),\n    (items) => {\n      items.forEach(item => {\n        item = new ProClassFieldConfig(item);\n      })\n    })\n\n\n  analysis = new ModelFlattener<ProAnalysisSlice, ProAnalysis>(\n    this.proActions.analysis,\n    { relations: [] },\n    (items) => {\n      items.forEach(item => { })\n    })\n  constructor(\n    public infActions: InfActions,\n    public datActions: DatActions,\n    public proActions: ProActions\n  ) { }\n  getFlattened(): FlattenerInterface {\n    return {\n      pro_project: this.pro_project,\n      pro_text_property: this.pro_text_property,\n      pro_class_field_config: this.pro_class_field_config,\n      pro_dfh_profile_proj_rel: this.pro_dfh_profile_proj_rel,\n      pro_dfh_class_proj_rel: this.pro_dfh_class_proj_rel,\n\n      info_proj_rel: this.info_proj_rel,\n      analysis: this.analysis,\n\n      persistent_item: this.persistent_item,\n      temporal_entity: this.temporal_entity,\n      statement: this.statement,\n      appellation: this.appellation,\n      place: this.place,\n      time_primitive: this.time_primitive,\n      language: this.language,\n      text_property: this.text_property,\n      lang_string: this.lang_string,\n      dimension: this.dimension,\n\n      digital: this.digital,\n      chunk: this.chunk,\n    }\n  }\n}\n\nexport const storeFlattened = (flattened: FlattenerInterface, pk?, type?: 'LOAD' | 'UPSERT') => {\n  values(flattened).forEach(model => {\n    if (model.items) {\n      if (type === 'UPSERT') {\n        model.actions.upsertSucceeded(model.items, undefined, pk)\n      } else {\n        model.actions.loadSucceeded(model.items, undefined, pk)\n      }\n    }\n  })\n}\n","import { ProInfoProjRel, ProInfoProjRelApi } from '@kleiolab/lib-sdk-lb3';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { pathOr } from 'ramda';\nimport { Action } from 'redux';\nimport { ofType } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { ProActions } from '../actions/pro.actions';\nimport { NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\nimport { InfActionFactory } from './inf-action-factory';\nimport { ModifyActionMeta } from './schema-actions-factory';\nimport { SchemaEpicsFactory } from './schema-epics-factory';\n\nexport class InfEpicsFactory<Payload, Model> extends SchemaEpicsFactory<Payload, Model> {\n  constructor(\n    public actionPrefix: string,\n    public modelName: string,\n    public actions: InfActionFactory<Payload, Model>,\n    public notifications: NotificationsAPIActions,\n    public infoProjRelApi: ProInfoProjRelApi,\n    public proActions: ProActions\n  ) {\n    super(actionPrefix, modelName, actions, notifications)\n  }\n\n  /**\n   * This upsert epic overrides the standard upsert.\n   * In addition to the standard, it extends the items to upsert, so that\n   * they are added to the project.\n   */\n  createUpsertEpic<T>(apiFn: (meta: T) => Observable<Model[]>, onSuccessHook?: (data: Model[], pk?) => void) {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(this.actionPrefix + '.' + this.modelName + '::UPSERT'),\n        mergeMap((action: FluxStandardAction<Payload, ModifyActionMeta<Model>>) => new Observable<Action>((globalActions) => {\n          const pendingKey = action.meta.addPending;\n\n          const meta = action.meta as any;\n          // add is_in_project true\n\n          meta.items = meta.items.map(i => ({\n            ...i, entity_version_project_rels: [{\n              ...pathOr({}, ['entity_version_project_rels', 0], i),\n              is_in_project: true,\n            }]\n          }))\n\n          apiFn(meta).subscribe((data: Model[]) => {\n            if (onSuccessHook) {\n              onSuccessHook(data, action.meta.pk);\n              this.actions.succeeded(data, pendingKey, action.meta.pk);\n            }\n            else {\n              this.actions.upsertSucceeded(data, pendingKey, action.meta.pk);\n            }\n          }, error => {\n            globalActions.next(this.notifications.addToast({\n              type: 'error',\n              options: { title: error.message }\n            }));\n            this.actions.failed({ status: '' + error.status }, pendingKey, action.meta.pk);\n          });\n        })));\n    };\n  }\n\n  /**\n   * This epic maps the items to remove in minimalisic instances of\n   * InfoProjRel, containing only the fk_entity and is_in_project=false.\n   * The pk of the project, that removes the items, is transported in meta.pk.\n   */\n  createRemoveEpic() {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(this.actionPrefix + '.' + this.modelName + '::REMOVE'),\n        mergeMap((action: FluxStandardAction<Payload, ModifyActionMeta<Model>>) => new Observable<Action>((globalActions) => {\n          const pendingKey = action.meta.addPending;\n\n          this.infoProjRelApi.bulkUpdateEprAttributes(\n            action.meta.pk,\n            action.meta.items.map((item: any) => ({\n              fk_entity: item.pk_entity,\n              is_in_project: false\n            }))\n          )\n            .subscribe((infoProjRels: ProInfoProjRel[]) => {\n              if (infoProjRels.length) {\n                this.proActions.info_proj_rel.upsertSucceeded(infoProjRels, undefined, action.meta.pk)\n              }\n              this.actions.removeSucceeded(action.meta.items, pendingKey, action.meta.pk)\n            }, error => {\n              globalActions.next(this.notifications.addToast({\n                type: 'error',\n                options: { title: error.message }\n              }));\n              this.actions.failed({ status: '' + error.status }, pendingKey, action.meta.pk)\n            })\n        }))\n\n      )\n    }\n  }\n\n\n\n  /**\n   * This upsert epic overrides the standard upsert.\n   * In addition to the standard, it extends the items to upsert, so that\n   * they are added to the project.\n   */\n  createCustomUpsertEpic<T>(apiFn: (meta: T) => Observable<Model[]>, actionSuffix: string, onSuccessHook?: (data: Model[], pk?) => void) {\n    return (action$, store) => {\n      return action$.pipe(\n        ofType(this.actionPrefix + '.' + this.modelName + '::UPSERT' + (actionSuffix ? '::' + actionSuffix : '')),\n        mergeMap((action: FluxStandardAction<Payload, ModifyActionMeta<Model>>) => new Observable<Action>((globalActions) => {\n          const pendingKey = action.meta.addPending;\n          const meta = action.meta as any;\n          apiFn(meta).subscribe((data: Model[]) => {\n            if (onSuccessHook) {\n              onSuccessHook(data, action.meta.pk);\n              this.actions.upsertSucceeded([], pendingKey, action.meta.pk);\n            }\n            else {\n              this.actions.upsertSucceeded(data, pendingKey, action.meta.pk);\n            }\n          }, error => {\n            globalActions.next(this.notifications.addToast({\n              type: 'error',\n              options: { title: error.message }\n            }));\n            this.actions.failed({ status: '' + error.status }, pendingKey, action.meta.pk);\n          });\n        })));\n    };\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfPersistentItem, InfPersistentItemApi, InfStatement, InfStatementApi, InfTemporalEntity, InfTemporalEntityApi, InfTextProperty, InfTextPropertyApi, ProInfoProjRelApi } from '@kleiolab/lib-sdk-lb3';\nimport { Action } from 'redux';\nimport { combineEpics, Epic, ofType } from 'redux-observable-es6-compat';\nimport { Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { SchemaObject } from '../../root/models/model';\nimport { NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\nimport { DatActions } from '../actions/dat.actions';\nimport { FindStatementByParams, InfActions, InfPersistentItemActionFactory, InfStatementActionFactory, InfTemporalEntityActionFactory, InfTextPropertyActionFactory, LoadAlternativeTextProperties, LoadByPkMeta, LoadIngoingAlternativeStatements, LoadPaginatedStatementListMeta, PaginatedStatementList, SourcesAndDigitalsOfEntity, SourcesAndDigitalsOfEntityResult } from '../actions/inf.actions';\nimport { ProActions } from '../actions/pro.actions';\nimport { InfPersistentItemSlice, InfStatementSlice, InfTemporalEntitySlice, InfTextPropertySlice } from '../models/inf.models';\nimport { infRoot } from '../reducer-configs/inf.config';\nimport { SchemaObjectService } from '../services/schema-object.service';\nimport { Flattener, storeFlattened } from '../_helpers/flattener';\nimport { InfEpicsFactory } from '../_helpers/inf-epic-factory';\nimport { FluxActionObservable, PaginateByParam, ModifyActionMeta } from '../_helpers/schema-actions-factory';\n\n@Injectable()\nexport class InfEpics {\n  constructor(\n    public notification: NotificationsAPIActions,\n    public peItApi: InfPersistentItemApi,\n    public teEnApi: InfTemporalEntityApi,\n    public statementApi: InfStatementApi,\n    public textPropertyApi: InfTextPropertyApi,\n    public infActions: InfActions,\n    public proActions: ProActions,\n    public datActions: DatActions,\n    public infoProjRelApi: ProInfoProjRelApi,\n    private schemaObjectService: SchemaObjectService\n  ) { }\n\n  public createEpics(): Epic {\n    const infPersistentItemEpicsFactory = new InfEpicsFactory<InfPersistentItemSlice, InfPersistentItem>\n      (infRoot, 'persistent_item', this.infActions.persistent_item, this.notification, this.infoProjRelApi, this.proActions);\n\n    const infTemporalEntityEpicsFactory = new InfEpicsFactory<InfTemporalEntitySlice, InfTemporalEntity>\n      (infRoot, 'temporal_entity', this.infActions.temporal_entity, this.notification, this.infoProjRelApi, this.proActions);\n\n    const infStatementEpicsFactory = new InfEpicsFactory<InfStatementSlice, InfStatement>\n      (infRoot, 'statement', this.infActions.statement, this.notification, this.infoProjRelApi, this.proActions);\n\n    const infTextPropertyEpicsFactory = new InfEpicsFactory<InfTextPropertySlice, InfTextProperty>\n      (infRoot, 'text_property', this.infActions.text_property, this.notification, this.infoProjRelApi, this.proActions);\n\n    return combineEpics(\n      /**\n       * Perstistent Item\n       *\n       */\n      infPersistentItemEpicsFactory.createLoadEpic<LoadByPkMeta>(\n        (meta) => this.peItApi.ownProperties(meta.pk, meta.pkEntity),\n        InfPersistentItemActionFactory.MINIMAL_BY_PK,\n        (results, pk) => {\n          const schemas = results as any as SchemaObject;\n          // call action to store records\n          Object.keys(schemas).forEach(schema => {\n            let actions;\n            if (schema === 'inf') actions = this.infActions;\n            else if (schema === 'pro') actions = this.proActions;\n            if (actions) {\n              Object.keys(schemas[schema]).forEach(model => {\n                actions[model].loadSucceeded(schemas[schema][model], undefined, pk)\n              })\n            }\n          })\n        }\n      ),\n      infPersistentItemEpicsFactory.createLoadEpic<LoadByPkMeta>(\n        (meta) => this.peItApi.typesOfProject(meta.pk),\n        InfPersistentItemActionFactory.TYPES_OF_PROJECT,\n        (results, pk) => {\n          const schemaObject = results as SchemaObject;\n          this.schemaObjectService.storeSchemaObject(schemaObject, pk)\n        }\n      ),\n      // infPersistentItemEpicsFactory.createLoadEpic<LoadTypeOfProjectAction>(\n      //   (meta) => this.peItApi.typeOfProject(meta.pk, meta.pkEntity),\n      //   InfPersistentItemActionFactory.TYPE_OF_PROJECT,\n      //   (results, pk) => {\n      //     const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n      //     flattener.persistent_item.flatten(results);\n      //     storeFlattened(flattener.getFlattened(), pk);\n      //   }\n      // ),\n      infPersistentItemEpicsFactory.createUpsertEpic<ModifyActionMeta<InfPersistentItem>>((meta) => this.peItApi\n        .findOrCreateInfPersistentItems(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.persistent_item.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n      infPersistentItemEpicsFactory.createRemoveEpic(),\n\n\n      /**\n       * Temporal Entity\n       *\n       */\n      infTemporalEntityEpicsFactory.createLoadEpic<LoadByPkMeta>(\n        (meta) => this.teEnApi.ownProperties(meta.pk, meta.pkEntity),\n        InfTemporalEntityActionFactory.OWN_PROPERTIES,\n        (results, pk) => {\n          const schemaObject = results as SchemaObject;\n          this.schemaObjectService.storeSchemaObject(schemaObject, pk)\n        }\n      ),\n      /**\n       * Epic to load paginated Temporal Entity List\n       */\n      (action$: FluxActionObservable<any, LoadPaginatedStatementListMeta>, store) => action$.pipe(\n        ofType(infTemporalEntityEpicsFactory.type('LOAD', InfTemporalEntityActionFactory.PAGINATED_LIST)),\n        mergeMap(action => new Observable<Action>((globalActions) => {\n          const meta = action.meta;\n          const apiCal$ = this.teEnApi.temporalEntityList(\n            meta.pk, meta.pkSourceEntity, meta.pkProperty, meta.fkTargetClass, meta.isOutgoing, meta.limit, meta.offset\n          )\n          const pkProject = meta.pk;\n          this.handleTemporalEntityListAction(action, infTemporalEntityEpicsFactory, globalActions, apiCal$, pkProject);\n        }))\n      ),\n      /**\n       * Epic to load paginated Alternative Temporal Entity List\n       */\n      (action$: FluxActionObservable<any, LoadPaginatedStatementListMeta>, store) => action$.pipe(\n        ofType(infTemporalEntityEpicsFactory.type('LOAD', InfTemporalEntityActionFactory.PAGINATED_ALTERNATIVE_LIST)),\n        mergeMap(action => new Observable<Action>((globalActions) => {\n          const meta = action.meta;\n          const apiCal$ = this.teEnApi.alternativeTemporalEntityList(\n            meta.pk, meta.pkSourceEntity, meta.pkProperty, meta.fkTargetClass, meta.isOutgoing, meta.limit, meta.offset\n          )\n          const pkProject = null;\n          this.handleTemporalEntityListAction(action, infTemporalEntityEpicsFactory, globalActions, apiCal$, pkProject);\n        }))\n      ),\n      infTemporalEntityEpicsFactory.createUpsertEpic<ModifyActionMeta<InfTemporalEntity>>((meta) => this.teEnApi\n        .findOrCreateInfTemporalEntities(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.temporal_entity.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n      infTemporalEntityEpicsFactory.createRemoveEpic(),\n\n\n      /**\n       * Statement\n       *\n       */\n      infStatementEpicsFactory.createLoadEpic<LoadIngoingAlternativeStatements>(\n        (meta) => this.statementApi.alternativesNotInProjectByEntityPk(meta.pkEntity, meta.pkProperty, meta.pk),\n        InfStatementActionFactory.ALTERNATIVES_INGOING,\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.statement.flatten(results);\n          storeFlattened(flattener.getFlattened(), null);\n        }\n      ),\n      infStatementEpicsFactory.createUpsertEpic<ModifyActionMeta<InfStatement>>((meta) => this.statementApi\n        .findOrCreateInfStatements(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.statement.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n\n      (action$: FluxActionObservable<any, LoadPaginatedStatementListMeta>, store) => action$.pipe(\n        ofType(infStatementEpicsFactory.type('LOAD', InfTemporalEntityActionFactory.PAGINATED_LIST)),\n        mergeMap(action => new Observable<Action>((globalActions) => {\n          const meta = action.meta;\n          const apiCal$ = this.statementApi.paginatedListTargetingEntityPreviews(\n            meta.pk, meta.pkSourceEntity, meta.pkProperty, meta.fkTargetClass, meta.isOutgoing, meta.limit, meta.offset\n          )\n          const pkProject = meta.pk;\n          this.handleTemporalEntityListAction(action, infStatementEpicsFactory, globalActions, apiCal$, pkProject);\n        }))\n      ),\n\n      infStatementEpicsFactory.createRemoveEpic(),\n\n\n      infStatementEpicsFactory.createLoadEpic<FindStatementByParams>(\n        (meta) => this.statementApi.queryByParams(meta.ofProject, meta.pk, meta.pkEntity, meta.pkInfoRange, meta.pkInfoDomain, meta.pkProperty),\n        InfStatementActionFactory.BY_PARAMS,\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.statement.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'LOAD');\n        }\n      ),\n\n      infStatementEpicsFactory.createLoadEpic<SourcesAndDigitalsOfEntity>(\n        (meta) => this.statementApi.sourcesAndDigitalsOfEntity(meta.ofProject, meta.pk, meta.pkEntity),\n        InfStatementActionFactory.SOURCES_AND_DIGITALS_OF_ENTITY,\n        (results, pk) => {\n          const res = results as any as SourcesAndDigitalsOfEntityResult;\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.statement.flatten(res.statements);\n          storeFlattened(flattener.getFlattened(), pk);\n\n          const flattener2 = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener2.digital.flatten(res.digitals);\n          storeFlattened(flattener2.getFlattened(), pk);\n\n        }\n      ),\n\n\n\n      /**\n       * Text Property\n       *\n       */\n      infTextPropertyEpicsFactory.createLoadEpic<LoadAlternativeTextProperties>((meta) => this.textPropertyApi\n        .findAlternativeTextProperties(meta.pk, meta.fkEntity, meta.fkClassField),\n        InfTextPropertyActionFactory.ALTERNATIVES,\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.text_property.flatten(results);\n          storeFlattened(flattener.getFlattened(), null);\n        }\n      ),\n\n      infTextPropertyEpicsFactory.createUpsertEpic<ModifyActionMeta<InfTextProperty>>((meta) => this.textPropertyApi\n        .findOrCreateInfTextProperties(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.text_property.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk);\n        }\n      ),\n      infTextPropertyEpicsFactory.createRemoveEpic(),\n\n    );\n  }\n\n\n  /**\n   * handles the update of store for paginated temporal entity lists.\n   * @param pkProject if null, list is handled as 'repo' list\n   */\n  private handleTemporalEntityListAction<M>(\n    action,\n    epicsFactory: InfEpicsFactory<InfTemporalEntitySlice, InfTemporalEntity> | InfEpicsFactory<InfStatementSlice, InfStatement>,\n    globalActions,\n    apiCall$: Observable<any>,\n    pkProject) {\n    const meta: LoadPaginatedStatementListMeta = action.meta;\n    const pendingKey = meta.addPending;\n    const paginateBy: PaginateByParam[] = [\n      { fk_property: meta.pkProperty },\n      { fk_target_class: meta.fkTargetClass },\n      { [meta.isOutgoing ? 'fk_subject_info' : 'fk_object_info']: meta.pkSourceEntity },\n      { [meta.alternatives ? 'alternatives' : 'ofProject']: meta.alternatives }\n    ];\n    // call action to set pagination loading on true\n    this.infActions.statement.loadPage(paginateBy, meta.limit, meta.offset, pkProject);\n    // call api to load data\n    apiCall$.subscribe((data: PaginatedStatementList) => {\n      // call action to store records\n      this.schemaObjectService.storeSchemaObject(data.schemas, pkProject);\n      // call action to store pagination\n      this.infActions.statement.loadPageSucceeded(data.paginatedStatements, data.count, paginateBy, meta.limit, meta.offset, pkProject);\n      // call action to conclude the pending request\n      epicsFactory.actions.loadSucceeded([], pendingKey, pkProject);\n    }, error => {\n      // call action to handle error\n      epicsFactory.onError(globalActions, error, pendingKey, pkProject);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DatChunk, DatChunkApi, DatColumn, DatDigital, DatDigitalApi, DatNamespace, DatNamespaceApi, SchemaObject, DatColumnApi } from '@kleiolab/lib-sdk-lb3';\nimport { combineEpics, Epic } from 'redux-observable-es6-compat';\nimport { ChunkActionsFactory, ColumnActionsFactory, DatActions, DigitalActionsFactory, LoadChunksOfDigitalAction, LoadColumnsOfTableAction } from '../actions/dat.actions';\nimport { ChunkSlice, ColumnSlice, DigitalSlice, NamespaceSlice } from '../models/dat.models';\nimport { NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\nimport { datRoot } from '../reducer-configs/dat.config';\nimport { LoadActionMeta, ModifyActionMeta, } from '../_helpers/schema-actions-factory';\nimport { LoadVersionAction } from '../_helpers/schema-actions-factory';\nimport { InfActions } from '../actions/inf.actions';\nimport { ProActions } from '../actions/pro.actions';\nimport { SchemaObjectService } from '../services/schema-object.service';\nimport { SchemaEpicsFactory } from '../_helpers/schema-epics-factory';\nimport { Flattener, storeFlattened } from '../_helpers/flattener';\n\n\n@Injectable()\nexport class DatEpics {\n  constructor(\n    public notification: NotificationsAPIActions,\n    public datActions: DatActions,\n    public infActions: InfActions,\n    public proActions: ProActions,\n    public digitalApi: DatDigitalApi,\n    public chunkApi: DatChunkApi,\n    public columnApi: DatColumnApi,\n    public namespaceApi: DatNamespaceApi,\n    private schemaObjectService: SchemaObjectService\n  ) { }\n\n  public createEpics(): Epic {\n    const digitalEpicsFactory = new SchemaEpicsFactory<DigitalSlice, DatDigital>\n      (datRoot, 'digital', this.datActions.digital, this.notification);\n\n    const chunkEpicsFactory = new SchemaEpicsFactory<ChunkSlice, DatChunk>\n      (datRoot, 'chunk', this.datActions.chunk, this.notification);\n\n    const namespaceEpicsFactory = new SchemaEpicsFactory<NamespaceSlice, DatNamespace>\n      (datRoot, 'namespace', this.datActions.namespace, this.notification);\n\n    const columnEpicsFactory = new SchemaEpicsFactory<ColumnSlice, DatColumn>\n      (datRoot, 'column', this.datActions.column, this.notification);\n\n    return combineEpics(\n\n      // Digital\n      digitalEpicsFactory.createLoadEpic<LoadVersionAction>(\n        (meta) => this.digitalApi.getVersion(meta.pkEntity, meta.entityVersion ? meta.entityVersion : null),\n        DigitalActionsFactory.LOAD_VERSION\n      ),\n      digitalEpicsFactory.createUpsertEpic<ModifyActionMeta<DatDigital>>(\n        (meta) => this.digitalApi.bulkUpsert(meta.pk, meta.items)\n      ),\n      digitalEpicsFactory.createDeleteEpic(\n        (meta) => this.digitalApi.bulkDelete(meta.items.map(item => item.pk_entity))\n      ),\n\n      // Chunk\n      chunkEpicsFactory.createLoadEpic<LoadChunksOfDigitalAction>(\n        (meta) => this.chunkApi.ofDigital(meta.pk, meta.pkDigital),\n        ChunkActionsFactory.CHUNKS_OF_DIGITAL,\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.chunk.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk);\n        }\n      ),\n\n      // Namespace\n      namespaceEpicsFactory.createLoadEpic<LoadActionMeta>(\n        (meta) => this.namespaceApi.byProject(meta.pk), ''\n      ),\n\n      columnEpicsFactory.createLoadEpic<LoadColumnsOfTableAction>(\n        (meta) => this.columnApi.ofDigital(meta.pk, meta.pkDigital),\n        ColumnActionsFactory.COLUMNS_OF_TABLE,\n        (results, pk) => {\n          const schemaObject = results as unknown as SchemaObject;\n\n          this.schemaObjectService.storeSchemaObject(schemaObject, pk)\n        }\n      ),\n\n    )\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { ProClassFieldConfig, ProClassFieldConfigApi, ProDfhClassProjRel, ProDfhClassProjRelApi, ProDfhProfileProjRel, ProDfhProfileProjRelApi, ProInfoProjRel, ProInfoProjRelApi, ProProject, ProProjectApi, ProTextProperty, ProTextPropertyApi } from '@kleiolab/lib-sdk-lb3';\nimport { AnalysisService, ProAnalysis } from '@kleiolab/lib-sdk-lb4';\nimport { combineEpics, Epic } from 'redux-observable-es6-compat';\nimport { SchemaObject } from '../../root/models/model';\nimport { NotificationsAPIActions } from '../../state-gui/actions/notifications.actions';\nimport { DatActions } from '../actions/dat.actions';\nimport { InfActions } from '../actions/inf.actions';\nimport { MarkStatementAsFavoriteActionMeta, ProActions, ProClassFieldConfigActionFactory, ProDfhClassProjRelActionFactory, ProDfhProfileProjRelActionFactory, ProInfoProjRelActionFactory, ProProjectActionFactory, ProTextPropertyActionFactory } from '../actions/pro.actions';\nimport { ProAnalysisSlice, ProClassFieldConfigSlice, ProDfhClassProjRelSlice, ProDfhProfileProjRelSlice, ProInfoProjRelSlice, ProProjectSlice, ProTextPropertySlice } from '../models/pro.models';\nimport { proRoot } from '../reducer-configs/pro.config';\nimport { SchemaObjectService } from '../services/schema-object.service';\nimport { Flattener, storeFlattened } from '../_helpers/flattener';\nimport { ModifyActionMeta, LoadActionMeta } from '../_helpers/schema-actions-factory';\nimport { SchemaEpicsFactory } from '../_helpers/schema-epics-factory';\n\n\n\n@Injectable()\nexport class ProEpics {\n  constructor(\n    public notification: NotificationsAPIActions,\n    public infActions: InfActions,\n    public proActions: ProActions,\n    public datActions: DatActions,\n    public projectApi: ProProjectApi,\n    public infoProjRelApi: ProInfoProjRelApi,\n    public classProjRelApi: ProDfhClassProjRelApi,\n    public profileProjRelApi: ProDfhProfileProjRelApi,\n    public classFieldConfApi: ProClassFieldConfigApi,\n    public textPropertyApi: ProTextPropertyApi,\n    public analysisApi: AnalysisService,\n    private schemaObjectService: SchemaObjectService\n  ) { }\n\n  public createEpics(): Epic {\n    const proProjectEpicsFactory = new SchemaEpicsFactory<ProProjectSlice, ProProject>\n      (proRoot, 'project', this.proActions.project, this.notification);\n\n    const proInfoProjRelEpicsFactory = new SchemaEpicsFactory<ProInfoProjRelSlice, ProInfoProjRel>\n      (proRoot, 'info_proj_rel', this.proActions.info_proj_rel, this.notification);\n\n    const proDfhClassProjRelEpicsFactory = new SchemaEpicsFactory<ProDfhClassProjRelSlice, ProDfhClassProjRel>\n      (proRoot, 'dfh_class_proj_rel', this.proActions.dfh_class_proj_rel, this.notification);\n\n    const proDfhProfileProjRelEpicsFactory = new SchemaEpicsFactory<ProDfhProfileProjRelSlice, ProDfhProfileProjRel>\n      (proRoot, 'dfh_profile_proj_rel', this.proActions.dfh_profile_proj_rel, this.notification);\n\n    const proClassFieldConfigEpicsFactory = new SchemaEpicsFactory<ProClassFieldConfigSlice, ProClassFieldConfig>\n      (proRoot, 'class_field_config', this.proActions.class_field_config, this.notification);\n\n    const proTextPropertyEpicsFactory = new SchemaEpicsFactory<ProTextPropertySlice, ProTextProperty>\n      (proRoot, 'text_property', this.proActions.text_property, this.notification);\n\n    const proAnalysisEpicsFactory = new SchemaEpicsFactory<ProAnalysisSlice, ProAnalysis>\n      (proRoot, 'analysis', this.proActions.analysis, this.notification);\n\n\n\n    return combineEpics(\n      /**\n      * ProProject\n      */\n      proProjectEpicsFactory.createLoadEpic<LoadActionMeta>((meta) => this.projectApi\n        .ofAccount(meta.pk),\n        ProProjectActionFactory.OF_ACCOUNT,\n        (results) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_project.flatten(results);\n          storeFlattened(flattener.getFlattened());\n        }\n      ),\n      proProjectEpicsFactory.createLoadEpic<LoadActionMeta>((meta) => this.projectApi\n        .getBasics(meta.pk),\n        ProProjectActionFactory.LOAD_BASICS,\n        (results) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_project.flatten(results);\n          storeFlattened(flattener.getFlattened());\n        }\n      ),\n      /**\n       * ProInfoProjRel\n       */\n      proInfoProjRelEpicsFactory.createUpsertEpic<ModifyActionMeta<ProInfoProjRel>>((meta) => this.infoProjRelApi\n        .bulkUpdateEprAttributes(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.info_proj_rel.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n      proInfoProjRelEpicsFactory.createLoadEpic<MarkStatementAsFavoriteActionMeta>((meta) => this.infoProjRelApi\n        .markStatementAsFavorite(meta.pk, meta.pkStatement, meta.isOutgoing),\n        ProInfoProjRelActionFactory.MARK_ROLE_AS_FAVORITE,\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.info_proj_rel.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n      /**\n       * ProClassFieldConfig\n       */\n      proClassFieldConfigEpicsFactory.createLoadEpic<LoadActionMeta>(\n        (meta) => this.classFieldConfApi.ofProject(meta.pk),\n        ProClassFieldConfigActionFactory.OF_PROJECT,\n        (results) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_class_field_config.flatten(results);\n          storeFlattened(flattener.getFlattened());\n        }\n      ),\n      proClassFieldConfigEpicsFactory.createUpsertEpic<ModifyActionMeta<ProClassFieldConfig>>((meta) => this.classFieldConfApi\n        .bulkUpsert(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_class_field_config.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n      /**\n       * ProProDfhClassProjRel\n       */\n      proDfhClassProjRelEpicsFactory.createLoadEpic<LoadActionMeta>(\n        (meta) => this.classProjRelApi.ofProject(meta.pk),\n        ProDfhClassProjRelActionFactory.OF_PROJECT,\n        (results) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_dfh_class_proj_rel.flatten(results);\n          storeFlattened(flattener.getFlattened());\n        }\n      ),\n      proDfhClassProjRelEpicsFactory.createUpsertEpic<ModifyActionMeta<ProDfhClassProjRel>>((meta) => this.classProjRelApi\n        .bulkUpsert(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_dfh_class_proj_rel.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n      /**\n      * ProDfhProfileProjRel\n      */\n      proDfhProfileProjRelEpicsFactory.createLoadEpic<LoadActionMeta>(\n        (meta) => this.profileProjRelApi.ofProject(meta.pk),\n        ProDfhProfileProjRelActionFactory.OF_PROJECT,\n        (results) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_dfh_profile_proj_rel.flatten(results);\n          storeFlattened(flattener.getFlattened());\n        }\n      ),\n      proDfhProfileProjRelEpicsFactory.createUpsertEpic<ModifyActionMeta<ProDfhProfileProjRel>>((meta) => this.profileProjRelApi\n        .bulkUpsert(meta.pk, meta.items),\n        (results, pk) => {\n          const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n          flattener.pro_dfh_profile_proj_rel.flatten(results);\n          storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n        }\n      ),\n      /**\n      * ProTextProperty\n      */\n      proTextPropertyEpicsFactory.createLoadEpic<LoadActionMeta>(\n        (meta) => this.textPropertyApi.ofProject(meta.pk),\n        ProTextPropertyActionFactory.OF_PROJECT,\n        (results, pk) => {\n          const schemas = results as any as SchemaObject;\n          this.schemaObjectService.storeSchemaObject(schemas, pk)\n        }\n      ),\n      proTextPropertyEpicsFactory.createUpsertEpic<ModifyActionMeta<ProTextProperty>>((meta) => this.textPropertyApi\n        .bulkUpsert(meta.pk, meta.items),\n        (results, pk) => {\n          const schemas = results as any as SchemaObject;\n          this.schemaObjectService.storeSchemaObject(schemas, pk)\n        }\n      ),\n      proTextPropertyEpicsFactory.createDeleteEpic((meta) => this.textPropertyApi.bulkDelete(meta.pk, meta.items)),\n      /**\n      * ProAnalysis\n      */\n      // proAnalysisEpicsFactory.createLoadEpic<LoadByPkANsVersionActionMeta>(\n      //   (meta) => this.analysisApi.analysisControllerGetVersion(meta.pk, meta.pkEntity, meta.version).pipe(map(x => [x])),\n      //   ProAnalysisActionFactory.BY_PK_AND_VERSION,\n      //   (results) => {\n      //     const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n      //     flattener.analysis.flatten(results);\n      //     storeFlattened(flattener.getFlattened());\n      //   }\n      // ),\n      // proAnalysisEpicsFactory.createUpsertEpic<ModifyActionMeta<ProAnalysis>>(\n      //   (meta) => this.analysisApi.analysisControllerBulkUpsert(meta.pk, meta.items),\n      //   (results, pk) => {\n      //     const flattener = new Flattener(this.infActions, this.datActions, this.proActions);\n      //     flattener.analysis.flatten(results);\n      //     storeFlattened(flattener.getFlattened(), pk, 'UPSERT');\n      //   }\n      // ),\n      proAnalysisEpicsFactory.createDeleteEpic(\n        (meta) => this.analysisApi.analysisControllerBulkDelete(meta.pk, meta.items.map(item => item.pk_entity)),\n      ),\n    )\n  }\n  // private storeSchemaObject(schemas: SchemaObject, pkProject) {\n  //   if (schemas && Object.keys(schemas).length > 0) {\n  //     Object.keys(schemas).forEach(schema => {\n  //       let actions;\n  //       if (schema === 'inf') actions = this.infActions;\n  //       else if (schema === 'pro') actions = this.proActions;\n  //       if (actions) {\n  //         Object.keys(schemas[schema]).forEach(model => {\n  //           actions[model].loadSucceeded(schemas[schema][model], undefined, pkProject);\n  //         });\n  //       }\n  //     });\n  //   }\n  // }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActionsObservable, combineEpics, Epic } from 'redux-observable-es6-compat';\nimport { of } from 'rxjs';\nimport { filter, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionResolverEpics {\n\n  // requestMap: { [uuid: string]: ActionResultObservable<any> } = {};\n\n  constructor() { }\n\n  createEpics = () => combineEpics(this.createResolveEpic());\n  private createResolveEpic(): Epic {\n    return (action$: ActionsObservable<any>, store) => action$.pipe(\n      filter(action => !!action && !!action.meta && !!action.meta.removePending),\n\n      switchMap(action => (of({ type: 'CLEAN_UP_RESOLVED', meta: { uuid: action.meta.removePending } }))),\n    )\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Action } from 'redux';\nimport { ActionsObservable, combineEpics, Epic, StateObservable } from 'redux-observable-es6-compat';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { LoadingBarEpics } from '../state-gui/epics/loading-bar.epics';\nimport { NotificationsAPIEpics } from '../state-gui/epics/notifications.epics';\nimport { ActiveProjectEpics } from '../state-gui/epics/active-project.epics';\nimport { AccountEpics } from '../state-gui/epics/account.epics';\nimport { SysEpics } from '../state-schema/epics/sys.epics';\nimport { DfhEpics } from '../state-schema/epics/dfh.epics';\nimport { InfEpics } from '../state-schema/epics/inf.epics';\nimport { DatEpics } from '../state-schema/epics/dat.epics';\nimport { ProEpics } from '../state-schema/epics/pro.epics';\nimport { ActionResolverEpics } from '../state-schema/epics/action-resolver.epics';\nimport { IAppState } from './models/model';\n\n\n@Injectable()\nexport class RootEpics {\n\n  private rootEpicStream$;\n  private rootEpic;\n\n  constructor(\n    private loadingBarEpics: LoadingBarEpics,\n    private notificationEpics: NotificationsAPIEpics,\n    private activeProjectEpics: ActiveProjectEpics,\n    private accountEpics: AccountEpics,\n    private systemEpics: SysEpics,\n    private dfhEpics: DfhEpics,\n    private infEpics: InfEpics,\n    private datEpics: DatEpics,\n    private proEpics: ProEpics,\n    private actionResolver: ActionResolverEpics\n  ) {\n\n    this.rootEpicStream$ = new BehaviorSubject(combineEpics(\n      this.loadingBarEpics.createEpics(),\n      this.notificationEpics.createEpics(),\n      this.systemEpics.createEpics(),\n      this.activeProjectEpics.createEpics(),\n      this.accountEpics.createEpics(),\n      this.dfhEpics.createEpics(),\n      this.infEpics.createEpics(),\n      this.datEpics.createEpics(),\n      this.proEpics.createEpics(),\n      // important: this needs to be the last epic in\n      this.actionResolver.createEpics()\n    ));\n\n    this.rootEpic = (\n      action$: ActionsObservable<Action>,\n      state$: StateObservable<IAppState>,\n      dependencies = undefined\n    ): Observable<Action> => {\n      return this.rootEpicStream$.pipe(\n        mergeMap((epic: Epic) => epic(action$, state$, dependencies))\n      );\n    }\n  }\n\n  public getRootEpic(): Epic<Action<any>, Action<any>, void, any> {\n    return this.rootEpic;\n  }\n\n  /**\n   * Adds an epic to the RootEpic middleware\n   * @param epic that will be added to the RootEpics\n   */\n  public addEpic(epic: Epic<Action<any>, Action<any>, void, any>) {\n    this.rootEpicStream$.next(epic);\n  }\n}\n","import { AccountActions, AccountAction } from '../../state-gui/actions/account.actions';\nimport { IAccount } from '../models/account.model';\n\n\nconst INITIAL_STATE: IAccount = {\n  account: undefined,\n  roles: undefined\n};\n\nexport const accountRootReducer = (lastState: IAccount = INITIAL_STATE, action: AccountAction): IAccount => {\n  switch (action.type) {\n    case AccountActions.LOGIN_SUCCEEDED:\n      lastState = {\n        ...lastState,\n        account: action.meta.account\n      };\n      break;\n\n\n    case AccountActions.ACCOUNT_UPDATED:\n      lastState = {\n        ...lastState,\n        account: action.meta.account\n      };\n      break;\n\n    case AccountActions.LOAD_ROLES_SUCCEEDED:\n      lastState = {\n        ...lastState,\n        roles: action.meta.accountRoles\n      };\n      break;\n\n    case AccountActions.LOAD_ROLES_FAILED:\n      lastState = {\n        ...lastState,\n        roles: []\n      };\n      break;\n\n\n\n  }\n  return lastState;\n}\n\n","import { Action } from 'redux';\nimport { LoadingBarAction, LoadingBarActions } from '../actions/loading-bar.actions';\nimport { LoadingBar } from '../models/loading-bar.models';\n\nconst INITIAL_STATE: LoadingBar = {\n  loading: false,\n  progress: 0,\n};\n\n\nexport function loadingBarReducer(state: LoadingBar = INITIAL_STATE, a: Action): LoadingBar {\n\n  const action = a as LoadingBarAction;\n\n\n  switch (action.type) {\n\n    case LoadingBarActions.START:\n      return {\n        ...state,\n        loading: true\n      };\n\n    case LoadingBarActions.STOP:\n      return {\n        ...state,\n        loading: false,\n      };\n\n    case LoadingBarActions.COPMLETE:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n\n  return state;\n};\n\n","import { moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { omit } from 'ramda';\nimport { ActiveProjectActions, ActiveProjectAction } from '../../state-gui/actions/active-project.action';\nimport { ProjectDetail } from '../models/active-project.models';\n\n\nconst INITIAL_STATE: ProjectDetail = {\n  label: '',\n  list: '',\n  uiIdSerial: 0,\n  panelSerial: 0,\n  focusedPanel: 0,\n  panels: []\n};\nexport const activeProjectReducer = (state: ProjectDetail = INITIAL_STATE, action: ActiveProjectAction): ProjectDetail => {\n  let pi, ti, ppi, cpi, pti, cti;\n  switch (action.type) {\n    /************************************************************************************\n     * Load project data (metadata, crm)\n    ************************************************************************************/\n    case ActiveProjectActions.LOAD_PROJECT_BASICS_SUCCEEDED:\n      state = {\n        ...state,\n        ...action.meta.projectPreview\n      };\n      break;\n    case ActiveProjectActions.LOAD_PROJECT_CONFIG:\n      state = {\n        ...state,\n        loadingConfigData: true\n      }\n      break;\n    case ActiveProjectActions.LOAD_PROJECT_CONFIG_SUCCEEDED:\n      state = {\n        ...state,\n        // crm: action.payload.crm,\n        configDataInitialized: true,\n        loadingConfigData: false\n      }\n      break;\n\n    /************************************************************************************\n     * Layout -- Tabs\n    ************************************************************************************/\n    case ActiveProjectActions.SET_PANELS:\n      state = {\n        ...state,\n        panels: action.meta.panels,\n        uiIdSerial: action.meta.uiIdSerial,\n        panelSerial: action.meta.panelSerial,\n        focusedPanel: action.meta.focusedPanel\n      }\n      break;\n    case ActiveProjectActions.SET_LIST_TYPE:\n      state = {\n        ...state,\n        list: action.meta.list\n      }\n      break;\n    case ActiveProjectActions.ACTIVATE_TAB:\n      pi = action.meta.panelIndex;\n      ti = action.meta.tabIndex;\n      state = {\n        ...state,\n        panels: Object.assign([...state.panels], {\n          [pi]: {\n            ...state.panels[pi],\n            tabs: [...state.panels[pi].tabs].map((tab, index) => {\n              tab.active = (index === ti);\n              return tab;\n            })\n          }\n        })\n      }\n      break;\n    case ActiveProjectActions.MOVE_TAB:\n      ppi = action.meta.previousPanelIndex;\n      cpi = action.meta.currentPanelIndex;\n      pti = action.meta.previousTabIndex;\n      cti = action.meta.currentTabIndex;\n\n      if (ppi === cpi) {\n        const tabs = [...state.panels[cpi].tabs];\n        moveItemInArray(tabs, pti, cti);\n        state = {\n          ...state,\n          panels: Object.assign([...state.panels], {\n            [cpi]: {\n              ...state.panels[cpi],\n              tabs\n            }\n          })\n        }\n      } else {\n        const pTabs = [...state.panels[ppi].tabs];\n        const cTabs = [...state.panels[cpi].tabs];\n        transferArrayItem(pTabs, cTabs, pti, cti);\n        state = {\n          ...state,\n          panels: Object.assign([...state.panels], {\n            [ppi]: {\n              ...state.panels[ppi],\n              tabs: pTabs.map((tab, index) => {\n                tab.active = (index === (pti < pTabs.length ? pti : (pti - 1)));\n                return tab;\n              })\n            },\n            [cpi]: {\n              ...state.panels[cpi],\n              tabs: cTabs.map((tab, index) => {\n                tab.active = (index === cti);\n                return tab;\n              })\n            }\n          })\n        }\n      }\n\n      break;\n    case ActiveProjectActions.ADD_TAB:\n      if (state.panels.length === 0) {\n        state = {\n          ...state,\n          panels: [\n            {\n              id: state.panelSerial,\n              tabs: []\n            }\n          ],\n          focusedPanel: 0,\n          panelSerial: state.panelSerial + 1\n        }\n      }\n      pi = state.focusedPanel;\n      state = {\n        ...state,\n        panels: Object.assign([...state.panels], {\n          [pi]: {\n            ...state.panels[pi],\n            tabs: [\n              ...state.panels[pi].tabs.map(t => {\n                t.active = false;\n                return t;\n              }),\n              {\n                ...omit(['pathSegment'], action.meta.tab),\n                // panelIndex: pi,\n                path: ['activeProject', action.meta.tab.pathSegment, state.uiIdSerial.toString()]\n              }\n            ]\n          }\n        }),\n        uiIdSerial: (state.uiIdSerial + 1)\n      }\n      break;\n    case ActiveProjectActions.CLOSE_TAB:\n      pi = action.meta.panelIndex;\n      ti = action.meta.tabIndex;\n      // remove the closing tab\n      state = {\n        ...state,\n        panels: Object.assign([...state.panels], {\n          [pi]: {\n            ...state.panels[pi],\n            tabs: [...state.panels[pi].tabs]\n              .filter((tab, index) => index !== ti)\n\n          }\n        })\n      }\n      // activate a sibling tab, if needed and possible\n      if (!state.panels[pi].tabs.find(t => t.active)) {\n        state = {\n          ...state,\n          panels: Object.assign([...state.panels], {\n            [pi]: {\n              ...state.panels[pi],\n              tabs: [...state.panels[pi].tabs]\n                .map((tab, index) => {\n                  tab.active = (index === (ti < state.panels[pi].tabs.length ? ti : (ti - 1)));\n                  return tab;\n                })\n            }\n          })\n\n        }\n      }\n      break;\n    case ActiveProjectActions.CLOSE_PANEL:\n      pi = action.meta.panelIndex;\n      const panels = [...state.panels];\n      panels.splice(pi, 1);\n      state = {\n        ...state,\n        panels\n      }\n      break;\n\n    case ActiveProjectActions.FOCUS_PANEL:\n      state = {\n        ...state,\n        focusedPanel: action.meta.panelIndex\n      }\n      break;\n    case ActiveProjectActions.SPLIT_PANEL:\n      ppi = action.meta.previousPanelIndex;\n      ti = action.meta.tabIndex;\n      cpi = action.meta.currentPanelIndex;\n      const moveTab = state.panels[ppi].tabs[ti];\n      // removes tab from old panel\n      state = {\n        ...state,\n        panels: Object.assign([...state.panels], {\n          [ppi]: {\n            ...state.panels[ppi],\n            tabs: [...state.panels[ppi].tabs]\n              .filter((tab, index) => index !== ti)\n              .map((tab, index) => {\n                if (index === 0) tab.active = true;\n                return tab;\n              })\n          }\n        })\n      }\n      // insert a new panel at position of cpi\n      const newPanels = [...state.panels];\n      newPanels.splice(cpi, 0, {\n        id: state.panelSerial,\n        tabs: [moveTab]\n      })\n      state = {\n        ...state,\n        panels: newPanels,\n        // increase panel id sequence\n        panelSerial: state.panelSerial + 1\n      }\n\n      break;\n\n\n    case ActiveProjectActions.SET_REFINING_CHUNK:\n      state = {\n        ...state,\n        refiningChunk: action.payload.refiningChunk\n      };\n      break;\n    case ActiveProjectActions.SET_CREATING_MENTIONING:\n      state = {\n        ...state,\n        creatingMentioning: action.payload.creatingMentioning\n      };\n      break;\n\n    /************************************************************************************\n    * Highlighting of mentionings in the gui\n    ************************************************************************************/\n    case ActiveProjectActions.SET_MENTIONINGS_FOCUSED_IN_TEXT:\n      state = {\n        ...state,\n        mentioningsFocusedInText: action.payload.mentioningsFocusedInText\n      };\n      break;\n\n    case ActiveProjectActions.SET_MENTIONINGS_FOCUSED_IN_TABLE:\n      state = {\n        ...state,\n        mentioningsFocusedInTable: action.payload.mentioningsFocusedInTable\n      };\n      break;\n\n\n    /************************************************************************************\n     * Destroy the active project state (on closing a project)\n    ************************************************************************************/\n    case ActiveProjectActions.DESTROY:\n      state = INITIAL_STATE;\n      break;\n  }\n\n  return state;\n}\n","import { List } from './list';\n\nexport class Information {\n\n  // search results\n  items?: List;\n\n  loading?: boolean;\n\n  constructor(data?: Information) {\n    Object.assign(this, data);\n  }\n}\n","import { dispatch } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { Information } from '../models/entity-list.models';\n\ntype Payload = Information;\nexport type InformationAPIAction = FluxStandardAction<Payload, {}>;\n\n@Injectable()\nexport class InformationAPIActions {\n\n\n\n  static readonly DESTROY = 'Information::DESTROY';\n\n\n  /*********************************************************************\n  *  Method to distroy the slice of store\n  *********************************************************************/\n  @dispatch() destroy = (): InformationAPIAction => ({\n    type: InformationAPIActions.DESTROY,\n    meta: null,\n    payload: null\n  })\n}\n","import { Action } from 'redux';\nimport { Information } from '../models/entity-list.models';\nimport { InformationAPIAction, InformationAPIActions } from '../actions/entity-list.actions';\n\n\nconst INITIAL_STATE = new Information();\n\nexport function informationReducer(state: Information = INITIAL_STATE, a: Action): Information {\n\n  const action = a as InformationAPIAction;\n\n  switch (action.type) {\n\n\n    /*****************************************************\n    * Reducers called on destroy of component\n    *****************************************************/\n    case InformationAPIActions.DESTROY:\n      state = {};\n      break;\n\n  }\n\n  return state;\n};\n\n","import { dispatch } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { SourceList } from '../models/source-list.models';\n\ntype Payload = SourceList;\ninterface MetaData {\n  // pkEntity?: number;\n  // pkSource?: number;\n  // pkProject?: number;\n  // crm?: ProjectCrm;\n\n  // sourceDetail?: PeItDetail;\n  // sectionDetail?: PeItDetail;\n\n  // classAndTypePk?: ClassAndTypePk;\n  // pkUiContext?: number;\n  pkAllowedClasses?: number[];\n};\nexport type SourceListAPIAction = FluxStandardAction<Payload, MetaData>;\n\n@Injectable()\nexport class SourceListAPIActions {\n\n  static readonly INITIALIZE_LIST = 'SourceList::INITIALIZE_LIST';\n\n  static readonly DESTROY = 'SourceList::DESTROY';\n\n\n  /*********************************************************************\n  *  Actions to manage the list\n  *********************************************************************/\n\n  @dispatch() initializeList = (pkAllowedClasses: number[]): SourceListAPIAction => ({\n    type: SourceListAPIActions.INITIALIZE_LIST,\n    meta: { pkAllowedClasses },\n    payload: null\n  })\n\n\n\n\n  /*********************************************************************\n  *  Method to distroy the slice of store\n  *********************************************************************/\n  @dispatch()\n  destroy = (): SourceListAPIAction => ({\n    type: SourceListAPIActions.DESTROY,\n    meta: null,\n    payload: null\n  })\n\n}\n","import { List } from './list';\n\n// Class of this slice of store\nexport class SourceList {\n\n  // the list of sources (search result)\n  list?: List;\n\n  // // class and type selector\n  // classAndTypeSelector?: ClassAndTypeSelector;\n\n  loading?: boolean;\n\n  constructor(data?: SourceList) {\n    Object.assign(this, data);\n  }\n}\n","import { Action } from 'redux';\nimport { SourceListAPIAction, SourceListAPIActions } from '../actions/source-list.actions';\nimport { SourceList } from '../models/source-list.models';\n\nconst INITIAL_STATE = new SourceList();\n\nexport function sourceListReducer(state: SourceList = INITIAL_STATE, a: Action): SourceList {\n\n  const action = a as SourceListAPIAction;\n\n  switch (action.type) {\n\n    case SourceListAPIActions.INITIALIZE_LIST:\n      state = {\n        ...state,\n        list: {\n          pkAllowedClasses: action.meta.pkAllowedClasses\n        }\n      }\n      break;\n\n\n    /*****************************************************\n    * Reducers called on destroy of component\n    *****************************************************/\n    case SourceListAPIActions.DESTROY:\n      state = {};\n      break;\n\n  }\n\n  return state;\n};\n\n","import { Injectable } from '@angular/core';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { ProjectPreview } from '../models/active-project.models';\nexport type ProjectsAction = FluxStandardAction<ProjectPreview[], {}>;\n\n\n@Injectable()\nexport class ProjectsActions {\n  static LOAD_PROJECTS_SUCCEEDED = 'LOAD_PROJECTS_SUCCEEDED';\n\n  loadProjectsSucceeded(payload: ProjectPreview[]): ProjectsAction {\n    return {\n      type: ProjectsActions.LOAD_PROJECTS_SUCCEEDED,\n      payload,\n      meta: null\n    };\n  }\n\n}\n","import { ProjectsAction, ProjectsActions } from '../actions/projects.actions';\nimport { IProjectList } from '../models/projects.model';\nimport { ProjectPreview } from '../models/active-project.models';\n\nconst INITIAL_STATE: IProjectList = {\n  records: []\n};\n\nconst projectListReducer = (lastState: IProjectList = INITIAL_STATE, action: ProjectsAction): IProjectList => {\n  switch (action.type) {\n    case ProjectsActions.LOAD_PROJECTS_SUCCEEDED: return {\n      ...lastState, records: action.payload.map((record: ProjectPreview) => ({ record: record }))\n    };\n  }\n\n  return lastState;\n}\n\nexport const createProjectsReducer = () => {\n  return projectListReducer;\n}\n","import { composeReducers } from '@angular-redux/form';\nimport { U } from '@kleiolab/lib-utils';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { equals, indexBy, keys, omit, values } from 'ramda';\nimport { combineReducers, Reducer } from 'redux';\nimport { LoadPageMeta, LoadPageSucceededMeta, PaginateByParam } from './schema-actions-factory';\n\nexport const PR_ENTITY_MODEL_MAP = 'pkEntityModelMap'\nexport interface EntityModelAndClass<ModelName> {\n  modelName: ModelName,\n  fkClass: number\n}\n\nexport interface ReducerConfigCollection {\n  [key: string]: ReducerConfig\n}\n\nexport interface ReducerConfig {\n  // wraps everything in facette named by facetteByPk and grouped by action.meta.pk\n  facetteByPk?: string,\n  indexBy?: {\n    keyInStore: string;\n    indexByFn: (item) => string;\n  },\n  groupBy?: {\n    keyInStore: string;\n    groupByFn: (item) => string;\n  }[],\n  equals?: (itemA, itemB) => boolean\n}\n\nexport interface Meta<Model> { items: Model[], pk?: number }\n\n\nexport const by = (name: string) => 'by_' + name;\nexport const paginateName = (pagBy: PaginateByParam[]) => pagBy.map(p => Object.keys(p)[0]).join('__');\n\nexport const pag = (name: string) => 'pag_' + name;\nexport const paginatedBy = (name: string) => pag(by(name));\n\nexport const paginateKey = (pagBy: PaginateByParam[]) => pagBy.map(p => values(p)[0]).join('_');\n\nexport function getFromTo(limit: number, offset: number) {\n  return getStart(limit, offset) + '_' + getEnd(limit, offset);\n}\n\nexport function getEnd(limit: number, offset: number) {\n  return getStart(limit, offset) + limit;\n}\n\nexport function getStart(limit: number, offset: number) {\n  return offset;\n}\n\n/**\n * Creates standard reducers for the given model.\n *\n * Adds indexes according to config.\n *\n * S: Interface of the state (slice of store)\n */\nexport class ReducerFactory<Payload, Model> {\n\n  constructor(public actionPrefix: string, public configs: ReducerConfigCollection) { }\n\n  public createReducers() {\n\n    const reducers = {}\n    U.obj2KeyValueArr(this.configs).forEach(x => {\n      reducers[x.key] = this.createModelReducers(x.key, x.value);\n    });\n\n    const entityModelMapReducers = keys(this.configs).map(modelName => this.createEntityModelMapReducers(modelName))\n    reducers[PR_ENTITY_MODEL_MAP] = composeReducers(...entityModelMapReducers)\n\n    return combineReducers(reducers)\n  }\n\n  private createModelReducers(modelName, config: ReducerConfig) {\n    const actionPrefix = this.actionPrefix;\n    const reducer = (state = {}, action: FluxStandardAction<Payload, Meta<Model>>) => {\n\n      const facette = this.facette(modelName, config)\n\n      if (action.type === actionPrefix + '.' + modelName + '::LOAD') {\n\n        state = facette(action, state, (innerState) => ({\n          // TODO refactor this for partial lodings\n          ...omit([by(config.indexBy.keyInStore)], innerState),\n          loading: true\n        }));\n\n      }\n\n\n      else if (action.type === actionPrefix + '.' + modelName + '::LOAD_SUCCEEDED') {\n        // If action state differs from\n        state = facette(action, state, (innerState) => (\n          {\n            ...this.mergeItemsInState(config, innerState, action),\n            loading: false\n          }))\n      }\n\n\n      else if (action.type === actionPrefix + '.' + modelName + '::UPSERT') {\n        state = facette(action, state, (innerState) => ({\n          ...innerState,\n          [this.updatingBy(config.indexBy.keyInStore)]: this.indexKeyObject(action, config)\n        }))\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::UPSERT_SUCCEEDED') {\n        state = facette(action, state, (innerState) => ({\n          ... this.mergeItemsInState(config, innerState, action\n            // , true\n          ),\n          [this.updatingBy(config.indexBy.keyInStore)]:\n            omit(values(this.indexKeyObject(action, config)), innerState[this.updatingBy(config.indexBy.keyInStore)])\n        }))\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::DELETE') {\n        state = facette(action, state, (innerState) => ({\n          ...innerState,\n          [this.deletingBy(config.indexBy.keyInStore)]: this.indexKeyObject(action, config)\n        }));\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::DELETE_SUCCEEDED') {\n\n        const deletingKey = this.deletingBy(config.indexBy.keyInStore)\n        state = facette(action, state, (innerState) => {\n          innerState = {\n            ...this.deleteItemsFromState(config, action, innerState),\n            [deletingKey]: omit(values(this.indexKeyObject(action, config)), innerState[this.deletingBy(config.indexBy.keyInStore)])\n          }\n          if (!Object.keys(innerState[deletingKey]).length) innerState = omit([deletingKey], innerState);\n          return innerState;\n        })\n\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::REMOVE') {\n        state = facette(action, state, (innerState) => ({\n          ...innerState,\n          [this.removingBy(config.indexBy.keyInStore)]: this.indexKeyObject(action, config)\n        }));\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::REMOVE_SUCCEEDED') {\n\n        const removingKey = this.removingBy(config.indexBy.keyInStore)\n        state = facette(action, state, (innerState) => {\n          innerState = {\n            ...this.deleteItemsFromState(config, action, innerState),\n            [removingKey]: omit(values(this.indexKeyObject(action, config)), innerState[this.removingBy(config.indexBy.keyInStore)])\n          }\n          if (!Object.keys(innerState[removingKey]).length) innerState = omit([removingKey], innerState);\n          return innerState;\n        })\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::FAILED') {\n\n        state = facette(action, state, (innerState) => ({\n          ...innerState,\n          ...omit([by(config.indexBy.keyInStore)], innerState),\n          loading: false\n        }));\n\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::LOAD_PAGE') {\n        const meta = action.meta as any as LoadPageMeta;\n        const paginateBy = paginatedBy(paginateName(meta.paginateBy))\n        const key = meta.paginateBy.map(p => values(p)[0]).join('_')\n        const fromTo = getFromTo(meta.limit, meta.offset);\n\n        state = facette(action, state, (innerState) => ({\n          ...innerState,\n          [paginateBy]: {\n            ...innerState[paginateBy],\n            [key]: {\n              ...(innerState[paginateBy] || {})[key],\n              loading: {\n                ...((innerState[paginateBy] || {})[key] || {}).loading,\n                [fromTo]: true\n              }\n            }\n          }\n        }));\n      }\n      else if (action.type === actionPrefix + '.' + modelName + '::LOAD_PAGE_FAILED') {\n        const meta = action.meta as any as LoadPageMeta;\n        const paginateBy = paginatedBy(paginateName(meta.paginateBy))\n        const key = paginateKey(meta.paginateBy)\n        const fromTo = getFromTo(meta.limit, meta.offset);\n\n        state = facette(action, state, (innerState) => ({\n          ...innerState,\n          [paginateBy]: {\n            ...innerState[paginateBy],\n            [key]: {\n              ...(innerState[paginateBy] || {})[key],\n              loading: {\n                ...((innerState[paginateBy] || {})[key] || {}).loading,\n                [fromTo]: false\n              }\n            }\n          }\n        }));\n      }\n\n      else if (action.type === actionPrefix + '.' + modelName + '::LOAD_PAGE_SUCCEEDED') {\n        const meta = action.meta as any as LoadPageSucceededMeta;\n        const paginateBy = paginatedBy(paginateName(meta.paginateBy))\n        const key = paginateKey(meta.paginateBy)\n        const start = getStart(meta.limit, meta.offset);\n        const fromTo = getFromTo(meta.limit, meta.offset);\n        const rows = {}\n        if (meta.pks) {\n          meta.pks.forEach((pk, i) => {\n            rows[start + i] = pk;\n          })\n        }\n        state = facette(action, state, (innerState) => ({\n          ...innerState,\n          [paginateBy]: {\n            ...innerState[paginateBy],\n            [key]: {\n              ...(innerState[paginateBy] || {})[key],\n              count: meta.count || 0,\n              rows: {\n                ...((innerState[paginateBy] || {})[key] || {}).rows,\n                ...rows\n              },\n              loading: {\n                ...((innerState[paginateBy] || {})[key] || {}).loading,\n                [fromTo]: false\n              }\n            }\n          }\n        }));\n\n      }\n\n      return state;\n    };\n\n\n    return reducer;\n  }\n\n  /**\n   * Creates an map for pk_entity -> modelName on the level of the schema:\n   * example:\n   */\n  private createEntityModelMapReducers(modelName): Reducer<unknown, FluxStandardAction<Payload, Meta<Model>>> {\n    const actionPrefix = this.actionPrefix;\n    const reducer = (state = {}, action: FluxStandardAction<Payload, Meta<Model>>) => {\n      const modelPath = actionPrefix + '.' + modelName;\n\n      if (!action || !action.meta || !action.meta.items || !action.meta.items.length) return state;\n      const items = action.meta.items;\n\n      switch (action.type) {\n        case modelPath + '::LOAD_SUCCEEDED':\n        case modelPath + '::UPSERT_SUCCEEDED':\n          const idx = {}\n          for (let i = 0; i < items.length; i++) {\n            const item = items[i] as any;\n            if (item.pk_entity) {\n              idx[item.pk_entity] = {\n                modelName,\n                fkClass: item.fkClass\n              }\n            }\n          }\n          state = {\n            ...state,\n            ...idx\n          }\n          break;\n\n        case modelPath + '::DELETE_SUCCEEDED':\n        case modelPath + '::REMOVE_SUCCEEDED':\n          const pkEntities = []\n          for (let i = 0; i < items.length; i++) {\n            const item = items[i] as any;\n            if (item.pk_entity) {\n              pkEntities.push(item.pk_entity);\n            }\n          }\n          state = omit(pkEntities, state)\n          break;\n\n        default:\n          break;\n      }\n      return state;\n    };\n    return reducer;\n  }\n\n\n  updatingBy = (name: string) => 'updating_' + by(name);\n  deletingBy = (name: string) => 'deleting_' + by(name);\n  removingBy = (name: string) => 'removing_' + by(name);\n\n\n\n  private facette(modelName: any, config: ReducerConfig) {\n    return (action, state, cb: (innerState) => any) => {\n      let outerState;\n      ({ outerState, state } = this.deFacette(modelName, config, action, outerState, state));\n      const innerState = cb(state);\n      return this.enFacette(modelName, config, action, innerState, outerState);\n    };\n  }\n\n  private deFacette(modelName: string, config: ReducerConfig, action: FluxStandardAction<Payload, { items: Model[]; pk?: number; }>, outerState: any, state: {}) {\n    if (this.isFacetteByPk(config, action)) {\n      // outerState = clone(state);\n      const pk = action.meta.pk || 'repo'\n      // state = !state[config.facetteByPk] ? {} : state[config.facetteByPk][pk] || {};\n      const innerState = !state[config.facetteByPk] ? {} : state[config.facetteByPk][pk] || {};\n      return {\n        outerState: state,\n        state: innerState\n      }\n    }\n    return { outerState, state };\n  }\n\n  private enFacette(modelName: string, config: ReducerConfig, action: FluxStandardAction<Payload, { items: Model[]; pk?: number; }>, state: {}, outerState: any) {\n    if (this.isFacetteByPk(config, action)) {\n      const pk = action.meta.pk || 'repo'\n      state = {\n        ...outerState,\n        [config.facetteByPk]: {\n          ...outerState[config.facetteByPk],\n          [pk]: state\n        }\n      };\n    }\n    return state;\n  }\n\n\n  private isFacetteByPk(config: ReducerConfig, action: FluxStandardAction<Payload, { items: Model[]; pk?: number; }>) {\n    if (config.facetteByPk) {\n      if (!action.meta || action.meta.pk === undefined) throw Error('Facette actionÂ must provide pk for facette');\n      else return true;\n    }\n    else return false;\n  }\n\n\n\n  deleteItemsFromState(config: ReducerConfig, action: FluxStandardAction<Payload, { items: Model[]; }>, state) {\n    const items = action.meta.items;\n    // let state = {}\n    const groupBys = !(config.groupBy && config.groupBy.length) ? [] : config.groupBy;\n    const groups = groupBys.map(i => ({\n      groupByKey: by(i.keyInStore),\n      groupByFn: i.groupByFn,\n    }))\n    const mainIndexKey = by(config.indexBy.keyInStore); // first segment e.g. 'by_pk_entity'\n\n    items.forEach((removedItem) => {\n      // get path segments of new item\n      const itemKey = config.indexBy.indexByFn(removedItem); // second segment e.g. '807060'\n\n      // get old item, if exists\n      const oldItem = state[mainIndexKey] ? state[mainIndexKey][itemKey] : undefined;\n\n      // Q: Does the item exists?\n      if (oldItem) {\n        // A: Yes. use old item does exist\n\n        // remove the removedItem at path in main index\n        state = {\n          ...state,\n          [mainIndexKey]: {\n            ...omit([itemKey], state[mainIndexKey]),\n          }\n        }\n\n        // delete the removedItem at path in the group index\n        groups.forEach(g => {\n          const groupKey = this.getGroupKeyOfItem(g.groupByFn, removedItem)\n          state = {\n            ...state,\n            [g.groupByKey]: {\n              ...state[g.groupByKey],\n              [groupKey]: {\n                ...omit([itemKey], (state[g.groupByKey] || {})[groupKey])\n              }\n            }\n          }\n          // // cleanup paginations\n          // state = this.resetPaginationsByGroup(g.groupByKey, state, groupKey);\n\n        })\n      }\n\n\n    })\n\n    // cleanup main index\n    if (Object.keys(state[mainIndexKey]).length < 1) {\n      state = { ...omit([mainIndexKey], state) }\n    }\n    // cleanup group indices\n    groups.forEach(g => {\n\n      // cleanup groups in group index\n      Object.keys(state[g.groupByKey]).forEach(groupKey => {\n\n        if (Object.keys(state[g.groupByKey][groupKey]).length < 1) {\n          state = {\n            ...state,\n            [g.groupByKey]: omit([groupKey], state[g.groupByKey])\n          }\n        }\n      })\n\n      // cleanup group index\n      if (Object.keys(state[g.groupByKey]).length < 1) {\n        state = { ...omit([g.groupByKey], state) }\n      }\n    })\n\n\n    return state;\n  }\n\n  mergeItemsInState(config: ReducerConfig, state, action: FluxStandardAction<Payload, { items: Model[]; }>\n    // , resetPaginations = false\n  ) {\n    const items = action.meta.items;\n    const groupBys = !(config.groupBy && config.groupBy.length) ? [] : config.groupBy;\n    const groups = groupBys.map(i => ({\n      groupByKey: by(i.keyInStore),\n      groupByFn: i.groupByFn,\n    }))\n\n    const mainIndexKey = by(config.indexBy.keyInStore); // first segment e.g. 'by_pk_entity'\n\n    items.forEach((newItem) => {\n      // get path segments of new item\n      const itemKey = config.indexBy.indexByFn(newItem); // second segment e.g. '807060'\n\n      // get old item, if exists\n      const oldItem = state[mainIndexKey] ? state[mainIndexKey][itemKey] : undefined;\n\n      let itemToSet;\n\n      // Q: Does the item exists, and is it deeply-equal to the new item?\n      const equalsFn = config.equals || equals\n      if (oldItem && equalsFn(newItem, oldItem)) {\n        // A: Yes. use old item as itemToSet\n        itemToSet = oldItem;\n      }\n      else {\n        // A: No. use new item as itemToSet\n        itemToSet = newItem;\n\n        // put the itemToSet at path in main index\n        state = {\n          ...state,\n          [mainIndexKey]: {\n            ...state[mainIndexKey],\n            [itemKey]: itemToSet\n          }\n        }\n\n        // iterate over the group indexes\n        groups.forEach(g => {\n          // remove the oldItem from all group indexes\n          const oldGroupKey = this.getGroupKeyOfItem(g.groupByFn, oldItem)\n          state = {\n            ...state,\n            [g.groupByKey]: {\n              ...state[g.groupByKey],\n              [oldGroupKey]: {\n                ...omit([itemKey], (state[g.groupByKey] || {})[oldGroupKey])\n              }\n            }\n          }\n\n          // add the itemToSet to all group indexes, if not undefined\n          const newGroupKey = this.getGroupKeyOfItem(g.groupByFn, itemToSet)\n          if (newGroupKey !== undefined) {\n            state = {\n              ...state,\n              [g.groupByKey]: {\n                ...state[g.groupByKey],\n                [newGroupKey]: {\n                  ...(state[g.groupByKey] || {})[newGroupKey],\n                  [itemKey]: itemToSet\n                }\n              }\n            }\n          }\n\n        })\n      }\n    })\n\n\n    return state;\n  }\n\n\n  // /**\n  //  * resets pagination within a group, e.g. 'pag_by_fk_property'\n  //  * TODO: check if can be deleted\n  //  */\n  // private resetPaginationsByGroup(groupByKey: string, state: any, groupKey: any, isUpsert = false) {\n  //   const paginateBy = pag(groupByKey);\n  //   if (state[paginateBy] && state[paginateBy][groupKey] && state[paginateBy][groupKey].count !== undefined) {\n  //     state = {\n  //       ...state,\n  //       [paginateBy]: {\n  //         ...state[paginateBy],\n  //         [groupKey]: {\n  //           ...state[paginateBy][groupKey],\n  //           ...(!isUpsert ? {} : { count: state[paginateBy][groupKey].count + 1 }),\n  //           rows: {},\n  //           loading: {}\n  //         }\n  //       }\n  //     };\n  //   }\n  //   return state;\n  // }\n\n  /**\n   * Creates object where the key returned by the configured indexByFn\n   */\n  private indexKeyObject(action: FluxStandardAction<Payload, { items: Model[]; }>, config: ReducerConfig) {\n    return indexBy((i) => (i), action.meta.items\n      // filter items that are not (yet) indexable. This is normally the case, when creating new items that have no pk yet.\n      .filter(item => {\n        try {\n          config.indexBy.indexByFn(item);\n          return true;\n        } catch (error) {\n          return false;\n        }\n      })\n      .map(item => config.indexBy.indexByFn(item)));\n  }\n\n  groupBy(items: any[], groupByFn: (item) => string, indexByFn: (item) => string) {\n    const groups = {}\n    items.forEach(item => {\n      // if the group by key is not possible to create, the item won't be added to the index\n      const groupKey = this.getGroupKeyOfItem(groupByFn, item);\n\n      if (groupKey) {\n        const indexKey = indexByFn(item);\n        groups[groupKey] = { ...groups[groupKey], ...{ [indexKey]: item } }\n      }\n    })\n    return groups;\n  }\n\n\n\n\n  private getGroupKeyOfItem(groupByFn: (item: any) => string, item: any): string {\n    let groupKey\n    try {\n      groupKey = groupByFn(item);\n    } catch (error) {\n\n    }\n    return groupKey;\n  }\n}\n","import { sysDefinitions, sysRoot } from '../reducer-configs/sys.config';\nimport { ReducerFactory } from '../_helpers/reducer-factory';\nexport function createSysReducer() {\n  return new ReducerFactory(sysRoot, sysDefinitions).createReducers()\n}\n","\nimport { ReducerFactory } from '../_helpers/reducer-factory';\nimport { dfhDefinitions } from '../reducer-configs/dfh.config';\n\nexport function createDfhReducer() {\n  return new ReducerFactory('dfh', dfhDefinitions).createReducers()\n}\n","import { ReducerFactory } from '../_helpers/reducer-factory';\nimport { infDefinitions, infRoot } from '../reducer-configs/inf.config';\n\n\n\nexport function createInfReducer() {\n  return new ReducerFactory(infRoot, infDefinitions).createReducers()\n}\n\n\n","import { ReducerFactory } from '../_helpers/reducer-factory';\nimport { datDefinitions, datRoot } from '../reducer-configs/dat.config';\n\nexport function createDatReducer() {\n  return new ReducerFactory(datRoot, datDefinitions).createReducers()\n}\n","import { ReducerFactory } from '../_helpers/reducer-factory';\nimport { proDefinitions, proRoot } from '../reducer-configs/pro.config';\n\n\n\n\nexport function createProReducer() {\n  return new ReducerFactory(proRoot, proDefinitions).createReducers()\n}\n\n\n","import { warDefinitions, warRoot } from '../reducer-configs/war.config';\nimport { ReducerFactory } from '../_helpers/reducer-factory';\n\nexport function createWarReducer() {\n  return new ReducerFactory(warRoot, warDefinitions).createReducers()\n}\n\n\n","import { tabDefinitions, tabRoot } from '../reducer-configs/tab.config';\nimport { ReducerFactory } from '../_helpers/reducer-factory';\n\nexport function createTabReducer() {\n  return new ReducerFactory(tabRoot, tabDefinitions).createReducers()\n}\n","import { composeReducers, defaultFormReducer } from '@angular-redux/form';\nimport { routerReducer } from '@angular-redux/router';\nimport { FluxStandardAction } from 'flux-standard-action';\nimport { omit } from 'ramda';\nimport { combineReducers } from 'redux';\nimport { accountRootReducer } from '../state-gui/reducers/account.reducers';\nimport { loadingBarReducer } from '../state-gui/reducers/loading-bar.reducer';\nimport { activeProjectReducer } from '../state-gui/reducers/active-project.reducer';\nimport { informationReducer } from '../state-gui/reducers/entity-list.reducer';\nimport { sourceListReducer } from '../state-gui/reducers/source-list.reducer';\nimport { createProjectsReducer } from '../state-gui/reducers/projects.reducers';\nimport { createSysReducer } from '../state-schema/reducers/sys.reducer';\nimport { createDfhReducer } from '../state-schema/reducers/dfh.reducer';\nimport { createInfReducer } from '../state-schema/reducers/inf.reducer';\nimport { createDatReducer } from '../state-schema/reducers/dat.reducer';\nimport { createProReducer } from '../state-schema/reducers/pro.reducer';\nimport { createWarReducer } from '../state-schema/reducers/war.reducer';\nimport { createTabReducer } from '../state-schema/reducers/tab.reducer';\n\n\nexport const INIT_SANDBOX_STATE = 'INIT_SANDBOX_STATE';\nexport const sandboxStateReducer = (lastState = {}, action: FluxStandardAction<any>) => {\n  if (action.type === INIT_SANDBOX_STATE) {\n    lastState = {\n      ...lastState,\n      ...action.payload\n    };\n  }\n  return lastState;\n};\n\n\nexport const pendingRequestReducer = (state = {}, action) => {\n\n  if (action && action.meta && action.meta.addPending) {\n    const uuid = action.meta.addPending;\n    state = {\n      ...state,\n      [uuid]: true\n    }\n    // console.log('add ' + uuid + ' ' + Date.now())\n  }\n\n  if (action && action.meta && action.meta.removePending) {\n    const uuid = action.meta.removePending;\n    state = {\n      ...omit([uuid], state)\n    }\n  }\n  return state;\n}\n\n\nexport const resolvedRequestReducer = (state = {}, action) => {\n\n  if (action && action.meta && action.meta.removePending) {\n    const uuid = action.meta.removePending;\n    state = {\n      ...state,\n      [uuid]: action.meta\n    }\n  }\n  return state;\n}\n\nexport const cleanupResolved = (state = {}, action) => {\n\n  if (action && action.type === 'CLEAN_UP_RESOLVED') {\n    const uuid = action.meta.uuid;\n    state = {\n      ...omit([uuid], state)\n    }\n    // console.log('resolve ' + uuid + ' ' + Date.now().toString())\n  }\n  return state;\n}\nexport const SET_APP_STATE = 'SET_APP_STATE';\nexport const setAppState = (state = {}, action) => {\n  if (action && action.type === SET_APP_STATE) {\n    state = action.payload\n  }\n  return state;\n}\n\nexport const rootReducer = composeReducers(\n  defaultFormReducer(),\n  combineReducers({\n    account: accountRootReducer,\n    loadingBar: loadingBarReducer,\n    activeProject: activeProjectReducer,\n    routes: routerReducer,\n    information: informationReducer,\n    sources: sourceListReducer,\n    sandboxState: sandboxStateReducer,\n    projects: createProjectsReducer(),\n    sys: createSysReducer(),\n    dfh: createDfhReducer(),\n    inf: createInfReducer(),\n    dat: createDatReducer(),\n    pro: createProReducer(),\n    war: createWarReducer(),\n    tab: createTabReducer(),\n    pending: pendingRequestReducer,\n    resolved: composeReducers(resolvedRequestReducer, cleanupResolved),\n  }),\n  setAppState\n)\n","import { Injectable } from '@angular/core';\nimport { combineEpics, Epic } from 'redux-observable-es6-compat';\n\n\n\n@Injectable()\nexport class TabEpics {\n  constructor() { }\n  public createEpics(): Epic {\n    return combineEpics()\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { combineEpics, Epic } from 'redux-observable-es6-compat';\n\n\n\n@Injectable()\nexport class WarEpics {\n  constructor() { }\n\n  public createEpics(): Epic {\n    return combineEpics()\n  }\n\n}\n","// Angular-redux ecosystem stuff.\n// @angular-redux/form and @angular-redux/router are optional\n// extensions that sync form and route location state between\n// our store and Angular.\nimport { DevToolsExtension, NgRedux, NgReduxModule } from '@angular-redux/store';\nimport { Inject, InjectionToken, NgModule } from '@angular/core';\nimport { SlimLoadingBarModule } from '@cime/ngx-slim-loading-bar';\nimport { ToastyModule } from '@cime/ngx-toasty';\nimport { SDKBrowserModule } from '@kleiolab/lib-sdk-lb3';\nimport { ApiModule } from '@kleiolab/lib-sdk-lb4';\nimport { equals } from 'ramda';\nimport dynamicMiddlewares from 'redux-dynamic-middlewares';\nimport { createEpicMiddleware } from 'redux-observable-es6-compat';\nimport { IAppState } from '../root/models/model';\nimport { RootEpics } from '../root/root-epics';\nimport { rootReducer } from '../root/root-reducer';\nimport { AccountActions } from '../state-gui/actions/account.actions';\nimport { ActiveProjectActions } from '../state-gui/actions/active-project.action';\nimport { LoadingBarActions } from '../state-gui/actions/loading-bar.actions';\nimport { NotificationsAPIActions } from '../state-gui/actions/notifications.actions';\nimport { AccountEpics } from '../state-gui/epics/account.epics';\nimport { ActiveProjectEpics } from '../state-gui/epics/active-project.epics';\nimport { LoadingBarEpics } from '../state-gui/epics/loading-bar.epics';\nimport { NotificationsAPIEpics } from '../state-gui/epics/notifications.epics';\nimport { DatActions } from '../state-schema/actions/dat.actions';\nimport { DfhActions } from '../state-schema/actions/dfh.actions';\nimport { InfActions } from '../state-schema/actions/inf.actions';\nimport { ProActions } from '../state-schema/actions/pro.actions';\nimport { SysActions } from '../state-schema/actions/sys.actions';\nimport { TabActions } from '../state-schema/actions/tab.actions';\nimport { WarActions } from '../state-schema/actions/war.actions';\nimport { DatEpics } from '../state-schema/epics/dat.epics';\nimport { DfhEpics } from '../state-schema/epics/dfh.epics';\nimport { InfEpics } from '../state-schema/epics/inf.epics';\nimport { ProEpics } from '../state-schema/epics/pro.epics';\nimport { SysEpics } from '../state-schema/epics/sys.epics';\nimport { TabEpics } from '../state-schema/epics/tab.epics';\nimport { WarEpics } from '../state-schema/epics/war.epics';\nimport { SchemaObjectService } from '../state-schema/services/schema-object.service';\n\n\n\n\n/**\n * Function to use in combination with rxjs/operator .filter()\n * in order to get only actions dispached with a fractalkey\n * equal to the provided path.\n *\n * example:\n * pipe(\n *    filter(action => ofSubstore(c.basePath)(action)),\n *    ofType('Foo')\n * )\n * @param path\n */\nexport const ofSubstore = (path: string[]) => (action): boolean => {\n  if (!('@angular-redux::fractalkey' in action)) return false;\n\n  const actionPath = JSON.parse(action['@angular-redux::fractalkey']);\n  const bool = equals(actionPath, path);\n  return bool;\n}\n\nexport const APP_INITIAL_STATE = new InjectionToken<IAppState>('app.INITIAL_STATE');\n\n@NgModule({\n  imports: [\n    NgReduxModule,\n\n    // for gui-state epics\n    SlimLoadingBarModule,\n    ToastyModule.forRoot(),\n\n    // for schema-state epics\n    SDKBrowserModule.forRoot(), // lib-sdk-lb3\n    ApiModule, // lib-sdk-lb4\n\n  ],\n  providers: [\n\n    AccountActions,\n    ActiveProjectActions,\n    LoadingBarActions,\n    NotificationsAPIActions,\n\n    AccountEpics,\n    ActiveProjectEpics,\n    LoadingBarEpics,\n    NotificationsAPIEpics,\n\n\n    DatActions,\n    DfhActions,\n    InfActions,\n    ProActions,\n    SysActions,\n    TabActions,\n    WarActions,\n\n    DatEpics,\n    DfhEpics,\n    InfEpics,\n    ProEpics,\n    SysEpics,\n    TabEpics,\n    WarEpics,\n\n    RootEpics,\n    // SchemaActionsFactory,\n    SchemaObjectService,\n    { provide: APP_INITIAL_STATE, useValue: {} }\n  ]\n})\nexport class ReduxStoreModule {\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    devTools: DevToolsExtension,\n    // ngReduxRouter: NgReduxRouter,\n    rootEpics: RootEpics,\n    @Inject(APP_INITIAL_STATE) initialState: IAppState\n  ) {\n\n    const epicMiddleware = createEpicMiddleware();\n\n    // Tell Redux about our reducers and epics. If the Redux DevTools\n    // chrome extension is available in the browser, tell Redux about\n    // it too.\n    ngRedux.configureStore(\n      // RootReducer\n      rootReducer,\n\n      // Initial state\n      initialState,\n\n      // Middleware\n      [\n        // createLogger(),\n        epicMiddleware,\n        dynamicMiddlewares,\n      ],\n      // Enhancers\n      devTools.isEnabled() ? [devTools.enhancer()] : []\n    );\n\n    // Apply rootEpic\n    epicMiddleware.run(rootEpics.getRootEpic());\n\n\n    // // Enable syncing of Angular router state with our Redux store.\n    // if (ngReduxRouter) {\n    //     ngReduxRouter.initialize();\n    // }\n\n    // Enable syncing of Angular form state with our Redux store.\n    // provideReduxForms(ngRedux);\n  }\n}\n","import { ToastOptions } from '@cime/ngx-toasty';\n\n// Interface of this slice of store\nexport interface NotificationsI {\n    type: 'info' | Â 'success' | Â 'wait' | 'error' | 'warning';\n    options: ToastOptions;\n}\n\n// Class of this slice of store\nexport class Notifications implements NotificationsI {\n    type: 'info' | Â 'success' | Â 'wait' | 'error' | 'warning';\n    options: ToastOptions;\n\n    constructor(data?: NotificationsI) {\n        Object.assign(this, data);\n    }\n}\n","import { EntitySearchHit } from '@kleiolab/lib-sdk-lb4';\n// Class of this slice of store\nexport class List {\n    searchString?: string;\n    // Array of dfh_pk_class of those classes that may appear in the list\n    pkAllowedClasses?: number[];\n    collectionSize?: number;\n    items?: EntitySearchHit[];\n    loading?: boolean;\n    error?: any;\n    constructor(data?: List) {\n        Object.assign(this, data);\n        if (true) {\n        }\n        else {\n        }\n    }\n}\n","export type RightPanelTab = 'linked-sources' | 'linked-digitals' | 'content-tree';\n\nexport interface PeItDetailList { [pk_entity: number]: EntityDetail };\n\n\nexport class EntityDetail {\n\n\n  // _fields?: FieldList;\n\n  pkEntity?: number;\n\n  /** Left Panel Visibility */\n\n  // the properties with information about the peIt\n  showProperties?= false;\n\n  // the right area\n  showRightArea?= true;\n\n  /** Right panel */\n  rightPanelTabs?: RightPanelTab[] = []\n  rightPanelActiveTab?= 0; // index of the active tab\n\n  // the bar to above the properties\n  // showPropertiesHeader?= true;\n\n  // the header with name of peIt\n  showHeader?= true;\n\n\n  constructor(data?: EntityDetail) {\n    Object.assign(this, data);\n  }\n\n\n}\n","import { ClassConfig } from '../active-project.models';\n\nexport type EntityType = 'teEnt' | 'peIt' | 'other';\n\n\n// Class of this slice of store\nexport class ProjectSettingsData {\n  items?: ClassConfig[];\n  // profiles?: DfhClassProfileView[];\n  tabTitle?: string;\n  loading?: boolean;\n  error?: any;\n\n  constructor(data?: ProjectSettingsData) {\n    Object.assign(this, data);\n  }\n}\n","export type TabLayoutMode = 'left-only' | 'right-only' | 'both';\n\n// Class of this slice of store\nexport class TabBase {\n\n  pkEntity?: number;\n\n  tabTitle?: string;\n\n  tabTooltip?: string;\n\n  loading?: boolean;\n\n  layoutMode?: TabLayoutMode;\n\n  constructor(data?: TabBase) {\n    Object.assign(this, data);\n  }\n}\n","\n\n// Class of this slice of store\nexport class Types {\n  items?: {};\n  edit?: boolean;\n  loading?: boolean;\n  error?: any;\n\n  // title in the tab\n  tabTitle?: string;\n\n  constructor(data?: Types) {\n    Object.assign(this, data);\n  }\n}\n","import { DatColumn, DatNamespace, DatTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { DatClassColumnMapping, DatDigital } from '@kleiolab/lib-sdk-lb4';\nimport { ByPk } from '../../root/models/model';\n\n\n\n\nexport class DigitalSlice {\n  by_pk_entity__entity_version?: ByPk<DatDigital>;\n  by_pk_entity?: ByPk<ByPk<DatDigital>>;\n  by_pk_text?: ByPk<ByPk<DatDigital>>;\n  loading?: boolean\n}\nexport class ChunkSlice {\n  by_pk_entity?: ByPk<DatDigital>;\n  by_fk_text?: ByPk<ByPk<DatDigital>>;\n  loading?: boolean\n}\n\nexport class ColumnSlice {\n  by_pk_entity?: ByPk<DatColumn>;\n  by_fk_digital?: ByPk<ByPk<DatColumn>>;\n}\n\nexport class ClassColumnMappingSlice {\n  by_pk_entity?: ByPk<DatClassColumnMapping>;\n  by_fk_column?: ByPk<ByPk<DatClassColumnMapping>>;\n}\n\nexport class TextPropertySlice {\n  by_pk_entity?: ByPk<DatTextProperty>;\n  by_fk_digital?: ByPk<ByPk<DatTextProperty>>;\n}\n\nexport class NamespaceSlice {\n  by_pk_entity?: ByPk<DatNamespace>;\n  by_fk_project?: ByPk<ByPk<DatNamespace>>;\n  loading?: boolean\n}\n\nexport interface Dat {\n  digital?: DigitalSlice;\n  chunk?: ChunkSlice;\n  column?: ColumnSlice;\n  text_property?: TextPropertySlice;\n}\n\n\n\n\n","import { DfhLabel, DfhProfile } from '@kleiolab/lib-sdk-lb3';\nimport { DfhClass, DfhProperty } from '@kleiolab/lib-sdk-lb4';\nimport { ByPk } from '../../root/models/model';\n\n\nexport class DfhProfileSlice {\n  by_pk_profile?: ByPk<DfhProfile>;\n\n  loading?: boolean; // todo remove in reducer factory then here\n}\n\nexport class DfhClassSlice {\n  by_pk_class?: ByPk<DfhClass>;\n  by_basic_type?: ByPk<ByPk<DfhClass>>;\n  loading?: boolean; // todo remove in reducer factory then here\n}\n\nexport class DfhPropertySlice {\n  by_pk_property?: ByPk<ByPk<DfhProperty>>;\n  by_has_domain__fk_property?: ByPk<ByPk<DfhProperty>>;\n  by_has_range__fk_property?: ByPk<ByPk<DfhProperty>>;\n  by_has_domain?: ByPk<ByPk<DfhProperty>>;\n  by_has_range?: ByPk<ByPk<DfhProperty>>;\n  by_pk_property__has_domain__has_range?: ByPk<DfhProperty>;\n  by_is_has_type_subproperty?: ByPk<ByPk<DfhProperty>>;\n\n  loading?: boolean; // todo remove in reducer factory then here\n}\n\nexport class DfhLabelSlice {\n  by_fks?: ByPk<DfhLabel>;\n  by_fk_class__type?: ByPk<ByPk<DfhLabel>>;\n  by_fk_property__type?: ByPk<ByPk<DfhLabel>>;\n  by_fk_profile__type?: ByPk<ByPk<DfhLabel>>;\n\n  loading?: boolean; // todo remove in reducer factory then here\n}\n\nexport interface Dfh {\n  profile?: DfhProfileSlice;\n  klass?: DfhClassSlice;\n  property?: DfhPropertySlice;\n  label?: DfhLabelSlice;\n\n  pkEntityModelMap: ByPk<{ modelName: string }>\n}\n","import { InfAppellation, InfDimension, InfLangString, InfLanguage, InfPersistentItem, InfPlace, InfTemporalEntity, InfTextProperty, InfTimePrimitive } from '@kleiolab/lib-sdk-lb3';\nimport { InfStatement } from '@kleiolab/lib-sdk-lb4';\nimport { ByPk } from '../../root/models/model';\n\ninterface PaginationInfo {\n  loading: {\n    [key: string]: boolean\n  },\n  count: number,\n  rows: {\n    [key: string]: number\n  }\n}\nexport class InfPersistentItemSlice {\n  by_pk_entity?: ByPk<InfPersistentItem>;\n  by_fk_class?: ByPk<ByPk<InfPersistentItem>>;\n  loading?: boolean\n}\n\nexport class InfTemporalEntitySlice {\n  by_pk_entity?: ByPk<InfTemporalEntity>;\n  by_fk_class?: ByPk<ByPk<InfPersistentItem>>;\n  loading?: boolean\n}\n\nexport class InfStatementSlice {\n  by_pk_entity?: ByPk<InfStatement>;\n  by_subject?: ByPk<ByPk<InfStatement>>;\n  by_object?: ByPk<ByPk<InfStatement>>;\n  'by_subject+property'?: ByPk<ByPk<InfStatement>>;\n  'by_object+property'?: ByPk<ByPk<InfStatement>>;\n  by_fk_subject_data?: ByPk<ByPk<InfStatement>>;\n  pag_by_fk_property__fk_target_class__fk_object_info__ofProject?: ByPk<PaginationInfo>\n  pag_by_fk_property__fk_target_class__fk_subject_info__ofProject?: ByPk<PaginationInfo>\n  loading?: boolean\n}\n\nexport class InfPlaceSlice {\n  by_pk_entity?: ByPk<InfPlace>;\n  loading?: boolean\n}\n\nexport class InfTimePrimitiveSlice {\n  by_pk_entity?: ByPk<InfTimePrimitive>;\n  loading?: boolean\n}\n\nexport class InfLanguageSlice {\n  by_pk_entity?: ByPk<InfLanguage>;\n  loading?: boolean\n}\n\nexport class InfAppellationSlice {\n  by_pk_entity?: ByPk<InfAppellation>;\n  loading?: boolean\n}\n\n\nexport class InfLangStringSlice {\n  by_pk_entity?: ByPk<InfLangString>;\n  loading?: boolean\n}\n\n\nexport class InfDimensionSlice {\n  by_pk_entity?: ByPk<InfDimension>;\n  loading?: boolean\n}\n\nexport class InfTextPropertySlice {\n  by_pk_entity?: ByPk<InfTextProperty>;\n  by_fk_concerned_entity__fk_class_field?: ByPk<ByPk<InfTextProperty>>;\n  by_fk_concerned_entity?: ByPk<ByPk<InfTextProperty>>;\n  loading?: boolean\n}\n\n\nexport interface Inf {\n  persistent_item?: InfPersistentItemSlice;\n  temporal_entity?: InfTemporalEntitySlice;\n  statement?: InfStatementSlice;\n  place?: InfPlaceSlice;\n  time_primitive?: InfTimePrimitiveSlice;\n  language?: InfLanguageSlice;\n  appellation?: InfAppellationSlice;\n  lang_string?: InfLangStringSlice;\n  dimension?: InfDimensionSlice;\n  text_property?: InfTextPropertySlice;\n\n  pkEntityModelMap?: ByPk<{ modelName: string }>\n}\n\n\n\n\n","import { TabCell } from '@kleiolab/lib-sdk-lb4';\nimport { ByPk } from '../../root/models/model';\n\nexport class TabCellSlice {\n  by_pk_cell?: ByPk<TabCell>;\n  by_fk_column_fk_row?: ByPk<ByPk<TabCell>>;\n}\n\nexport interface Tab {\n  cell?: TabCellSlice;\n}\n\n\n\n\n"]}