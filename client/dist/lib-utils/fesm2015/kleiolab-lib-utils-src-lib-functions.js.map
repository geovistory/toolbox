{"version":3,"file":"kleiolab-lib-utils-src-lib-functions.js","sources":["ng://@kleiolab/lib-utils/src/lib/functions/util.ts","ng://@kleiolab/lib-utils/src/lib/functions/combineLatestOrEmpty.ts","ng://@kleiolab/lib-utils/src/lib/functions/custom-rxjs-operators.ts","ng://@kleiolab/lib-utils/src/lib/functions/switchMapOr.ts"],"sourcesContent":["import { FormArray, FormGroup } from '@angular/forms';\nimport { ProTextProperty } from '@kleiolab/lib-sdk-lb3';\n\n\nexport interface LabelGeneratorSettings {\n  // maximum number of data unit children that are taken into account for the label generator\n  // e.g.: for a AppeForLanguage it will take only label and language, when you put it to 2\n  fieldsMax?: number;\n\n  // maximum number of statements per propertyField taken into account for the label generator\n  statementsMax?: number;\n\n  // path of that element in the store. useful to attatch leaf-pe-it-view\n  path: string[];\n}/**\n * Utilities class for static functions\n */\n\nexport class U {\n\n  static obj2Arr<T>(obj: { [key: string]: T }): T[] {\n    const arr = [];\n\n    if (obj == undefined) return arr;\n\n    Object.keys(obj).forEach(key => {\n      arr.push(obj[key]);\n    });\n\n    return arr;\n  }\n\n  static objNr2Arr<T>(obj: { [key: number]: T }): T[] {\n    const arr = [];\n\n    if (obj == undefined) return arr;\n\n    Object.keys(obj).forEach(key => {\n      arr.push(obj[key]);\n    });\n\n    return arr;\n  }\n\n  /**\n   * converts object to array with {key: value} objects, e.g.:\n   * {'a': 12, 'b': 99} --> [{key: 'a', value: 12, key: 'b', value: 99}]\n   *\n   * @param obj\n   */\n  static obj2KeyValueArr<T>(obj: { [key: string]: T }): { key: string, value: T }[] {\n    const keys = [];\n    for (const key in obj) {\n      if (obj[key]) {\n        keys.push({ key: key, value: obj[key] });\n      }\n    }\n    return keys;\n  }\n\n\n\n  static firstProTextPropStringOfType(textProperties: ProTextProperty[], fkSystemType): string {\n    return (textProperties.find(t => t.fk_system_type === fkSystemType) || { string: '' }).string\n  }\n\n  /**\n  * Erzeugt eine UUID nach RFC 4122\n  */\n  static uuid(): string {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (char) => {\n      const random = Math.random() * 16 | 0; // Nachkommastellen abschneiden\n      const value = char === 'x' ? random : (random % 4 + 8); // Bei x Random 0-15 (0-F), bei y Random 0-3 + 8 = 8-11 (8-b) gemÃ¤ss RFC 4122\n      return value.toString(16); // Hexadezimales Zeichen zurÃ¼ckgeben\n    });\n  }\n\n\n\n  static recursiveMarkAsTouched = (f: FormArray | FormGroup) => {\n\n    if (f.controls) {\n      if (Array.isArray(f.controls)) {\n        // in this case it is a formArray\n        f.controls.forEach((c: FormArray) => {\n          c.markAsTouched()\n          if (c.controls) U.recursiveMarkAsTouched(c)\n        })\n      }\n      else {\n        // in this case it is a formGroup\n        if (f.controls['childControl']) {\n          const c = f.controls['childControl'] as FormArray;\n          c.markAsTouched()\n          if (c.controls) U.recursiveMarkAsTouched(c)\n\n        }\n      }\n    }\n  }\n\n  static propertyFieldKeyFromParams(fkProp: number, isOutgoing: boolean) {\n    return '_' + fkProp + '_' + (isOutgoing ? 'outgoing' : 'ingoing')\n  }\n\n\n  /**\n   * Helper function that converts given number to string\n   * but zero (=0) values return undefined.\n   */\n  static toStr0undef(val: number): string | undefined {\n    if (val === 0) return undefined\n    else if (val === undefined) return undefined\n    else if (val === null) return undefined\n    else return val.toString();\n  }\n  /**\n   * Helper function that converts given array to string\n   *\n   * If array contains 0, null or undefined, return underfined\n   */\n  static toStrContains0undef(vals: (number | boolean | string | object)[]): string | undefined {\n    let string = '';\n    for (let i = 0; i < vals.length; i++) {\n      const val = vals[i];\n\n      if (val === 0) return undefined;\n      else if (val === undefined) return undefined;\n      else if (val === null) return undefined\n      else if (i === 0) {\n        string = val.toString()\n      } else {\n        string = `${string}_${val.toString()}`\n      }\n    }\n\n    return string;\n  }\n}\n","// TODO DELETE UNUSED\nimport { Observable, combineLatest, of } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\n/**\n * Combine Latest or, if input is an empty array, emit empty array\n */\nexport function combineLatestOrEmpty<I>(obs: Observable<I>[]) {\n  obs = [of(null), ...obs];\n  return combineLatest(obs).pipe(\n    map((values) => {\n      values.shift();\n      return values;\n    })\n  );\n}\n","import { concat, sort, values } from 'ramda';\nimport { OperatorFunction, pipe } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { U } from './util';\n\nexport interface ByPk<T> {\n  [pk: string]: T\n}\nexport interface VersionEntity<T> {\n  _latestVersion: number, // version number of the latest version\n  [v: number]: T\n}\nexport interface EntityVersionsByPk<T> {\n  [pk_entity: number]: VersionEntity<T>\n}\n\n\n\n/*****************************************************************************\n * Generic operators\n *****************************************************************************/\n\n/**\n * Returns an Observable that emits an flatened array consisting of the items of the arrays returned by getArrayFromItemFn.\n */\nexport function mapConcat<T, R>(getArrayFromItemFn: (value: T) => R[]): OperatorFunction<T[], R[]> {\n  return map((source: T[]) => {\n\n    if (typeof getArrayFromItemFn !== 'function') {\n      throw new TypeError('argument is not a function.');\n    }\n\n    let concatenatedArray: R[] = [];\n    source.forEach(item => {\n      if (item) concatenatedArray = concat(concatenatedArray, getArrayFromItemFn(item))\n    })\n\n    return concatenatedArray\n  })\n}\n\n\n/**\n * Takes an object with EntityVersions indexed by pk\n * Returns an array containing the latest versions for each indexed entity\n */\nexport function latestEntityVersions<T>(): OperatorFunction<EntityVersionsByPk<T>, T[]> {\n  return pipe(\n    map(d => U.objNr2Arr(d)),\n    map(a => a.map(q => q[q._latestVersion]))\n  )\n}\n\n\n/**\n * Takes an object with EntityVersions indexed by pk\n * Returns an the latest versions for entity with given pkEntity\n */\nexport function latestEntityVersion<T>(pkEntity: number): OperatorFunction<EntityVersionsByPk<T>, T> {\n  return pipe(\n    map(byPkEntity => byPkEntity[pkEntity]),\n    filter(entityVersions => entityVersions && entityVersions._latestVersion !== undefined),\n    map(entityVersions => entityVersions[entityVersions._latestVersion])\n  )\n}\n\nexport function latestVersion<T>(versions: ByPk<T>): T {\n  let latestVersion = 0\n  let latest;\n  values(versions).forEach((v: any) => {\n    if (v.entity_version > latestVersion) {\n      latestVersion = v.entity_version;\n      latest = v;\n    }\n  })\n  return latest;\n}\n\nexport function getSpecificVersion<T>(versions: ByPk<T>, version): T {\n  const ver = values(versions).find((v: any) => v.entity_version === version)\n  return ver\n}\n\n\n/**\n * limits the number of items in array\n */\nexport function limitTo<T>(limit?: number) {\n  return map((items: T[]) => {\n    if (!limit) return items\n    return items.slice(0, limit)\n  })\n}\n\n/**\n * limits the number of items in array\n */\nexport function limitOffset<T>(limit?: number, offset?: number) {\n  return map((items: T[]) => {\n    if (!limit) return items\n    offset = offset ? offset : 0;\n    const start = limit * offset;\n    const end = start + limit;\n    return items.slice(start, end)\n  })\n}\n\n\n\nexport function sortAbc<T>(stringFn: (x: T) => string) {\n  return map((l: T[]) => sort((a, b) => {\n    let textA = stringFn(a)\n    let textB = stringFn(b)\n\n    if (!textA) return -1;\n    if (!textB) return 1;\n\n    textA = textA.toUpperCase(); // ignore upper and lowercase\n    textB = textB.toUpperCase(); // ignore upper and lowercase\n    if (textA < textB) {\n      return -1;\n    }\n    if (textA > textB) {\n      return 1;\n    }\n    // names are equal\n    return 0;\n  }, l)\n  )\n}\n\n\n","import { iif, Observable, of } from 'rxjs';\nimport { tag } from 'rxjs-spy/operators';\nimport { switchMap } from 'rxjs/operators';\n\n\n/**\n * switchMaps to the default, if condition is true, else to provided elseOutput\n *\n */\nexport function switchMapOr<I, O>(defaultValue: O, elseOutput: (s: I) => Observable<O>, conditionForDefault?: (x: I) => boolean) {\n  return function (source: Observable<I>): Observable<O> {\n\n    conditionForDefault = conditionForDefault ? conditionForDefault : (x) => (!x || Object.keys(x).length < 1)\n\n    return source.pipe(\n      // auditTime(1),\n      switchMap(value => {\n        return iif(() => conditionForDefault(value), of(defaultValue), elseOutput(value))\n      }),\n      tag(`switchMapOr`)\n    )\n\n  }\n}\n"],"names":[],"mappings":"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"}