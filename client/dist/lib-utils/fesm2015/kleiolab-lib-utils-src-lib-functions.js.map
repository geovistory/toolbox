{"version":3,"file":"kleiolab-lib-utils-src-lib-functions.js","sources":["ng://@kleiolab/lib-utils/src/lib/functions/util.ts"],"sourcesContent":["import { FormArray, FormGroup } from '@angular/forms';\nimport { ProTextProperty } from '@kleiolab/lib-sdk-lb3';\n\n\nexport interface LabelGeneratorSettings {\n  // maximum number of data unit children that are taken into account for the label generator\n  // e.g.: for a AppeForLanguage it will take only label and language, when you put it to 2\n  fieldsMax?: number;\n\n  // maximum number of statements per propertyField taken into account for the label generator\n  statementsMax?: number;\n\n  // path of that element in the store. useful to attatch leaf-pe-it-view\n  path: string[];\n}/**\n * Utilities class for static functions\n */\n\nexport class U {\n\n  static obj2Arr<T>(obj: { [key: string]: T }): T[] {\n    const arr = [];\n\n    if (obj == undefined) return arr;\n\n    Object.keys(obj).forEach(key => {\n      arr.push(obj[key]);\n    });\n\n    return arr;\n  }\n\n  static objNr2Arr<T>(obj: { [key: number]: T }): T[] {\n    const arr = [];\n\n    if (obj == undefined) return arr;\n\n    Object.keys(obj).forEach(key => {\n      arr.push(obj[key]);\n    });\n\n    return arr;\n  }\n\n  /**\n   * converts object to array with {key: value} objects, e.g.:\n   * {'a': 12, 'b': 99} --> [{key: 'a', value: 12, key: 'b', value: 99}]\n   *\n   * @param obj\n   */\n  static obj2KeyValueArr<T>(obj: { [key: string]: T }): { key: string, value: T }[] {\n    const keys = [];\n    for (const key in obj) {\n      if (obj[key]) {\n        keys.push({ key: key, value: obj[key] });\n      }\n    }\n    return keys;\n  }\n\n\n\n  static firstProTextPropStringOfType(textProperties: ProTextProperty[], fkSystemType): string {\n    return (textProperties.find(t => t.fk_system_type === fkSystemType) || { string: '' }).string\n  }\n\n  /**\n  * Erzeugt eine UUID nach RFC 4122\n  */\n  static uuid(): string {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (char) => {\n      const random = Math.random() * 16 | 0; // Nachkommastellen abschneiden\n      const value = char === 'x' ? random : (random % 4 + 8); // Bei x Random 0-15 (0-F), bei y Random 0-3 + 8 = 8-11 (8-b) gemÃ¤ss RFC 4122\n      return value.toString(16); // Hexadezimales Zeichen zurÃ¼ckgeben\n    });\n  }\n\n\n\n  static recursiveMarkAsTouched = (f: FormArray | FormGroup) => {\n\n    if (f.controls) {\n      if (Array.isArray(f.controls)) {\n        // in this case it is a formArray\n        f.controls.forEach((c: FormArray) => {\n          c.markAsTouched()\n          if (c.controls) U.recursiveMarkAsTouched(c)\n        })\n      }\n      else {\n        // in this case it is a formGroup\n        if (f.controls['childControl']) {\n          const c = f.controls['childControl'] as FormArray;\n          c.markAsTouched()\n          if (c.controls) U.recursiveMarkAsTouched(c)\n\n        }\n      }\n    }\n  }\n\n  static propertyFieldKeyFromParams(fkProp: number, isOutgoing: boolean) {\n    return '_' + fkProp + '_' + (isOutgoing ? 'outgoing' : 'ingoing')\n  }\n\n\n  /**\n   * Helper function that converts given number to string\n   * but zero (=0) values return undefined.\n   */\n  static toStr0undef(val: number): string | undefined {\n    if (val === 0) return undefined\n    else if (val === undefined) return undefined\n    else if (val === null) return undefined\n    else return val.toString();\n  }\n  /**\n   * Helper function that converts given array to string\n   *\n   * If array contains 0, null or undefined, return underfined\n   */\n  static toStrContains0undef(vals: (number | boolean | string | object)[]): string | undefined {\n    let string = '';\n    for (let i = 0; i < vals.length; i++) {\n      const val = vals[i];\n\n      if (val === 0) return undefined;\n      else if (val === undefined) return undefined;\n      else if (val === null) return undefined\n      else if (i === 0) {\n        string = val.toString()\n      } else {\n        string = `${string}_${val.toString()}`\n      }\n    }\n\n    return string;\n  }\n}\n"],"names":[],"mappings":"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"}