{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@kleiolab/lib-utils/lib/date-time/classes/date-time-commons.ts","ng://@kleiolab/lib-utils/lib/date-time/classes/julian-date-time.ts","ng://@kleiolab/lib-utils/lib/date-time/classes/gregorian-date-time.ts","ng://@kleiolab/lib-utils/lib/date-time/classes/time-primitive.ts","ng://@kleiolab/lib-utils/lib/date-time/pipes/time-primitive.pipe.ts","ng://@kleiolab/lib-utils/lib/date-time/classes/time-span-util.ts","ng://@kleiolab/lib-utils/lib/date-time/pipes/time-span.pipe.ts","ng://@kleiolab/lib-utils/lib/date-time/date-time.module.ts","ng://@kleiolab/lib-utils/lib/functions/util.ts","ng://@kleiolab/lib-utils/lib/functions/combineLatestOrEmpty.ts","ng://@kleiolab/lib-utils/lib/functions/custom-rxjs-operators.ts","ng://@kleiolab/lib-utils/lib/functions/switchMapOr.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","DateTimeCommons","data","onDateChange","EventEmitter","assign","defineProperty","_year","val","emitDateChange","_month","_day","_hours","_minutes","_seconds","calcRunningDay","month","day","isLeap","lc","calcDateByRunningDay","runningDay","monthCorrenctions","Math","floor","mc","emit","year","getGranularity","duration","hours","minutes","seconds","getTimeStamp","timestamp","pad","abs","getDate","date","Date","setFullYear","setMonth","setDate","setHours","setMinutes","setSeconds","number","width","z","toString","length","join","addYear","lengthOfMonth","addMonth","addDay","addHour","addMinute","addSecond","removeYear","removeMonth","removeDay","removeHour","removeMinute","removeSecond","addDays","quantity","addMonths","addYears","add","toLastSecondOf","JulianDateTime","tslib_1.__extends","getEndOf","dt","y","daysInMonth","getJulianDay","runningYear","isLeapYear","fromJulianDay","julianDay","parseInt","n4","r4","n1","dayOfYear","monthDay","getJulianSecond","fromJulianSecond","julianSecond","secsOfDay","secsOfHour","GregorianDateTime","r400","r100","jdt","n400","n100","TimePrimitive","LAST_DAY_BC","julian_day","getGregorianDateTime","g","getJulianDateTime","j","getDateTime","calendar","getDateFormatString","granularity","getShortesDateFormatString","getLastSecond","TimePrimitivePipe","datePipe","transform","timePrimitive","tp","Pipe","args","name","DatePipe","TimeSpanUtil","_this","tpKeys","keys","forEach","key","undefined","isEmpty","min","Number","POSITIVE_INFINITY","current","getMinMaxTimePrimitveOfArray","tps","max","fromTimeSpanDialogData","x","isNotEmpty","p82","p81","p82a","p82b","p81a","p81b","getMinMaxTimePrimitive","getArrayOfTimePrimitives","array","getPrimitivesForPreview","single","begin","end","TimeSpanPipe","timePrimitivePipe","timeSpan","ts","getString","t","s","DateTimeModule","NgModule","imports","CommonModule","providers","declarations","exports","U","obj2Arr","obj","arr","objNr2Arr","obj2KeyValueArr","firstProTextPropStringOfType","textProperties","fkSystemType","find","fk_system_type","string","uuid","replace","char","random","propertyFieldKeyFromParams","fkProp","isOutgoing","toStr0undef","toStrContains0undef","vals","recursiveMarkAsTouched","f","controls","isArray","c","markAsTouched","obs","arguments","concat","__spread","of","combineLatest","pipe","map","values","shift","versions","version","v","entity_version","pkEntity","byPkEntity","filter","entityVersions","_latestVersion","a","q","latest","latestVersion","limit","offset","items","start","slice","getArrayFromItemFn","source","TypeError","concatenatedArray","item","stringFn","l","sort","textA","textB","toUpperCase","defaultValue","elseOutput","conditionForDefault","switchMap","iif","tag"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { EventEmitter } from '@angular/core';\nimport { YearMonthDay } from '../interfaces';\n\nexport type Granularity =\n  '1 century' |\n  '1 decade' |\n  '1 year' |\n  '1 month' |\n  '1 day' |\n  '1 hour' |\n  '1 minute' |\n  '1 second';\n\nexport abstract class DateTimeCommons {\n\n  /**\n   * Properties\n   */\n  onDateChange: EventEmitter<YearMonthDay> = new EventEmitter();\n\n  private _year?: number;\n\n  set year(val: number) {\n    this._year = val;\n    this.emitDateChange();\n  }\n\n  get year(): number {\n    return this._year;\n  }\n\n  private _month?: number;\n\n  set month(val: number) {\n    this._month = val;\n    this.emitDateChange();\n  }\n\n  get month(): number {\n    return this._month;\n  }\n\n  private _day?: number;\n\n  set day(val: number) {\n    this._day = val;\n    this.emitDateChange();\n  }\n\n  get day(): number {\n    return this._day;\n  }\n\n  private _hours?: number;\n\n  set hours(val: number) {\n    this._hours = val;\n  }\n\n  get hours(): number {\n    return this._hours;\n  }\n\n  private _minutes?: number;\n\n  set minutes(val: number) {\n    this._minutes = val;\n  }\n\n  get minutes(): number {\n    return this._minutes;\n  }\n\n  private _seconds?: number;\n\n  set seconds(val: number) {\n    this._seconds = val;\n  }\n\n  get seconds(): number {\n    return this._seconds;\n  }\n\n\n  constructor(data?) {\n    Object.assign(this, data);\n  }\n\n  abstract lengthOfMonth(): number;\n\n  /**\n  * Returns the running day for given month and day with consideration of the\n  * isLeap boolean that indicates leap years. Inspired by:\n  * https://de.wikipedia.org/wiki/Umrechnung_zwischen_julianischem_Datum_und_julianischem_Kalender\n  *\n  * @param month 1=january .. 12=december\n  * @param day 1, 2 .. 31\n  * @param isLeap if true, this is a leap year\n  */\n  calcRunningDay(month: number, day: number, isLeap: boolean): number {\n\n    // if no month or day provided, let's start at 1\n    day = (day === undefined || day === null) ? 1 : day;\n    month = (month === undefined || month === null) ? 1 : month;\n\n    // month corrections (note that january has index 0)\n    const monthCorrenctions = [-1, 0, -2, -1, -1, 0, 0, 1, +2, +2, +3, +3];\n\n    // leap year correction\n    let lc = 0;\n\n    if (isLeap && month > 2) {\n      lc = 1;\n    }\n\n    // month correction\n    const mc = monthCorrenctions[month - 1];\n\n    return day + (30 * (month - 1)) + (lc + mc);\n  }\n\n\n  /**\n  * Returns the month and day for given running day with consideration of the\n  * isLeap boolean that indicates leap years. Inspired by:\n  * https://de.wikipedia.org/wiki/Umrechnung_zwischen_julianischem_Datum_und_julianischem_Kalender\n  *\n  * @param runningDay 1, 2 .. 365\n  * @param isLeap if true, this is a leap year\n  *\n  */\n  calcDateByRunningDay(runningDay: number, isLeap: boolean): { day: number, month: number } {\n\n    // month corrections (note that january has index 0)\n    const monthCorrenctions = [-1, 0, -2, -1, -1, 0, 0, 1, +2, +2, +3, +3];\n\n    // resulting month\n    let month = Math.floor((runningDay + 1) / 30) + 1;\n\n    // month correction\n    let mc = monthCorrenctions[month - 1];\n\n    // leap year correction\n    let lc = 0;\n\n    if (isLeap && month > 2) {\n      lc = 1;\n    }\n\n    // resulting day\n    let day = runningDay - 30 * (month - 1) - (lc + mc);\n\n    // check if month and day still valid\n    if (month > 12 || day < 1) {\n\n      month--;\n\n      if (month < 1) {\n        isLeap = !isLeap;\n      }\n\n      // leap year correction\n      lc = 0;\n\n      if (isLeap && month > 2) {\n        lc = 1;\n      }\n\n      // month correction\n      mc = monthCorrenctions[month - 1];\n\n      // resulting day\n      day = runningDay - 30 * (month - 1) - (lc + mc);\n\n    }\n\n    return { day: day, month: month };\n  }\n\n  emitDateChange() {\n    this.onDateChange.emit({\n      year: this.year,\n      month: this.month,\n      day: this.day\n    });\n  }\n\n  getGranularity(): Granularity {\n    let duration: Granularity;\n    if (this.year) { duration = '1 year' }\n    if (this.month) { duration = '1 month' }\n    if (this.day) { duration = '1 day' }\n    if (this.hours) { duration = '1 hour' }\n    if (this.minutes) { duration = '1 minute' }\n    if (this.seconds) { duration = '1 second' }\n    return duration;\n  }\n\n  getTimeStamp(): string {\n\n    let timestamp = '';\n    timestamp = this.year ? this.pad(Math.abs(this.year), 4) : '01';\n    timestamp += '-';\n    timestamp += this.month ? this.pad(this.month, 2) : '01';\n    timestamp += '-';\n    timestamp += this.day ? this.pad(this.day, 2) : '01';\n    timestamp += ' ';\n    timestamp += this.hours ? this.pad(this.hours, 2) : '00';\n    timestamp += ':';\n    timestamp += this.minutes ? this.pad(this.minutes, 2) : '00';\n    timestamp += ':';\n    timestamp += this.seconds ? this.pad(this.seconds, 2) : '00';\n\n    timestamp += this.year < 0 ? ' BC' : '';\n\n    return timestamp;\n  }\n\n  getDate(): Date | null {\n\n    // validate\n    if (!this.year && this.year !== 0) return null;\n    if (this.day && !this.month) return null;\n    if (this.hours && !this.day) return null;\n    if (this.minutes && !this.hours) return null;\n    if (this.seconds && !this.hours) return null;\n\n    // creat date\n    const date = new Date()\n\n    date.setFullYear(this.year < 0 ? this.year + 1 : this.year);\n\n    date.setMonth((this.month ? (this.month - 1) : 0));\n\n    date.setDate((this.day ? this.day : 1));\n\n    date.setHours(this.hours ? this.hours : 0)\n\n    date.setMinutes(this.minutes ? this.minutes : 0)\n\n    date.setSeconds(this.seconds ? this.seconds : 0)\n\n    return date;\n  }\n\n  pad(number: number, width: number, z: string = '0'): string {\n    const n = number.toString();\n    return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n  }\n\n\n  addYear() {\n    this.year++;\n    if (this.year === 0) this.year++;\n    if (this.day > this.lengthOfMonth()) {\n      this.day = this.lengthOfMonth()\n    }\n  }\n\n  addMonth() {\n    this.month++;\n\n\n    if (this.month > 12) {\n      this.month = 1\n      this.addYear();\n    }\n    else if (this.day > this.lengthOfMonth()) {\n      this.day = this.lengthOfMonth()\n    }\n  }\n\n  addDay() {\n    this.day++;\n    if (this.day > this.lengthOfMonth()) {\n      this.day = 1;\n      this.addMonth()\n    }\n  }\n\n  addHour() {\n    this.hours++;\n    if (this.hours > 23) {\n      this.hours = 0;\n      this.addDay()\n    }\n  }\n\n  addMinute() {\n    this.minutes++;\n    if (this.minutes > 59) {\n      this.minutes = 0;\n      this.addHour()\n    }\n  }\n\n  addSecond() {\n    this.seconds++;\n    if (this.seconds > 59) {\n      this.seconds = 0;\n      this.addMinute()\n    }\n  }\n\n\n\n\n  removeYear() {\n    this.year--;\n    if (this.year === 0) {\n      this.year = -1;\n    }\n    if (this.day > this.lengthOfMonth()) {\n      this.day = this.lengthOfMonth()\n    }\n  }\n\n  removeMonth() {\n    this.month--;\n\n    if (this.month < 1) {\n      this.month = 12;\n      this.removeYear();\n    }\n    else if (this.day > this.lengthOfMonth()) {\n      this.day = this.lengthOfMonth()\n    }\n  }\n\n  removeDay() {\n    this.day--;\n    if (this.day < 1) {\n      this.removeMonth()\n      this.day = this.lengthOfMonth();\n    }\n  }\n\n\n  removeHour() {\n    this.hours--;\n    if (this.hours < 0 || !this.hours) {\n      this.hours = 23;\n      this.removeDay()\n    }\n  }\n\n  removeMinute() {\n    this.minutes--;\n    if (this.minutes < 0 || !this.minutes) {\n      this.minutes = 59;\n      this.removeHour()\n    }\n  }\n\n  removeSecond() {\n    this.seconds--;\n    if (this.seconds < 0 || !this.seconds) {\n      this.seconds = 59;\n      this.removeMinute()\n    }\n  }\n\n\n  addDays(quantity: number) {\n    for (let i = 0; i < quantity; i++) {\n      this.addDay();\n    };\n  }\n\n  addMonths(quantity: number) {\n    for (let i = 0; i < quantity; i++) {\n      this.addMonth();\n    };\n  }\n\n  addYears(quantity: number) {\n    for (let i = 0; i < quantity; i++) {\n      this.addYear();\n    };\n  }\n\n  add(duration: Granularity) {\n    if (duration === '1 year') {\n      this.addYear()\n    }\n    else if (duration === '1 month') {\n      this.addMonth()\n    }\n    else if (duration === '1 day') {\n      this.addDay()\n    }\n    else if (duration === '1 hour') {\n      this.addHour()\n    }\n    else if (duration === '1 minute') {\n      this.addMinute()\n    }\n    else if (duration === '1 second') {\n      this.addSecond()\n    }\n  }\n\n\n\n  toLastSecondOf(duration: Granularity) {\n    this.add(duration);\n    this.removeSecond();\n  }\n\n\n}\n","import { DateTimeCommons, Granularity } from './date-time-commons';\nimport { DateTime } from '../interfaces';\n\n\n\n/**\n* Class to represent a Julian Date and Time\n* TODO: Move this class to common folder as it is needed by server and client\n*/\nexport class JulianDateTime extends DateTimeCommons implements DateTime {\n\n\n  /**\n  * Methods\n  */\n\n  getEndOf(duration: Granularity = this.getGranularity()): JulianDateTime {\n\n    const dt = new JulianDateTime(this);\n    dt.toLastSecondOf(duration);\n\n    return dt;\n  }\n\n\n  lengthOfMonth() {\n    const y = this.year;\n    let m = this.month;\n\n    // Assume not leap year by default (note zero index for Jan)\n    const daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n    // If evenly divisible by 4 and not one of the years 5 BC, 1 BC or 4 AD,\n    // when Augustus dropped the leap year\n    if (!(y % 4) && !(y == -5) && !(y == -1) && !(y == 4)) {\n      daysInMonth[1] = 29;\n    }\n    return daysInMonth[--m]\n  }\n\n\n\n  /**\n  * Convert the year, month, day of julian calendar to julian day\n  *\n  * @return  description\n  */\n  getJulianDay() {\n\n    // running day (conut of days that year)\n    const runningDay = this.calcRunningDay(this.month, this.day, this.isLeapYear());\n    let runningYear;\n    if (this.year < 0) {\n      // running year\n      runningYear = 4716 + this.year;\n    } else {\n      // running year\n      runningYear = 4715 + this.year;\n    }\n\n    // number of full 4 year cycles\n    const n4 = Math.floor(runningYear / 4)\n\n    // rest of division: number of full years of the last uncomplete 4 years cycle\n    const n1 = runningYear % 4;\n\n\n    return 1461 * n4 + 365 * (n1 - 3) + runningDay;\n  }\n\n\n  fromJulianDay(julianDay: number) {\n\n    if (typeof julianDay === 'string') {\n      julianDay = parseInt(julianDay, 10)\n    }\n\n    // number of full 4 year cycles\n    const n4 = Math.floor((julianDay + (3 * 365)) / 1461);\n\n    // number of days of the last uncomplete 4 years cycle\n    const r4 = (julianDay + (3 * 365)) % 1461;\n\n    // number of full years of the last uncomplete 4 years cycle\n    let n1 = Math.floor(r4 / 365);\n\n    // number of days in the last year\n    let dayOfYear = r4 % 365;\n\n    if (n1 === 4) {\n      n1 = 3;\n      dayOfYear = 365;\n    }\n\n    // running year\n    const runningYear = 4 * n4 + n1;\n\n    // if BC\n    if (runningYear <= 4715) {\n      // resulting year\n      this.year = runningYear - 4716;\n\n      // if AD\n    } else {\n      this.year = runningYear - 4715;\n\n    }\n\n    const monthDay = this.calcDateByRunningDay(dayOfYear, this.isLeapYear())\n\n    // resulting month\n    this.month = monthDay.month;\n\n    // resulting day\n    this.day = monthDay.day;\n\n\n    return this;\n\n  }\n\n\n  /**\n  * Returns true if given year is a leap year\n  */\n  isLeapYear(): boolean {\n\n    // Return true if evenly divisible by 4\n    return !(this.year % 4) ? true : false;\n  }\n\n\n  getJulianSecond() {\n    let seconds = this.getJulianDay() * 60 * 60 * 24; // first second of the day\n    if (this.seconds > 0) seconds = seconds + this.seconds;\n    if (this.minutes > 0) seconds = seconds + this.minutes * 60;\n    if (this.hours > 0) seconds = seconds + this.hours * 60 * 60;\n    return seconds;\n  }\n\n  /**\n   * Set this JulianDateTime from given julian second\n   * @param julianSecond julian second\n   */\n  fromJulianSecond(julianSecond) {\n\n    const secsPerDay = 60 * 60 * 24;\n\n    // number of full days\n    const julianDay = Math.floor(julianSecond / secsPerDay);\n\n    // number of seconds of the julian day\n    const secsOfDay = julianSecond % secsPerDay;\n\n    // number of ours of the day\n    this.hours = Math.floor(secsOfDay / (60 * 60))\n\n    // number of seconds of the last hour\n    const secsOfHour = this.hours % (60 * 60);\n\n    // number of ours of the day\n    this.minutes = Math.floor(secsOfHour / 60)\n\n    // secs of the last minute\n    this.seconds = this.minutes % 60;\n\n    return this.fromJulianDay(julianDay);\n\n  }\n\n\n}\n","import { DateTimeCommons, Granularity } from './date-time-commons';\nimport { DateTime } from '../interfaces';\nimport { JulianDateTime } from './julian-date-time';\n\n\n/**\n * Class to represent a Julian Date and Time\n * TODO: Move this class to common folder as it is needed by server and client\n */\nexport class GregorianDateTime extends DateTimeCommons implements DateTime {\n\n\n\n  lengthOfMonth() {\n    let y = this.year, m = this.month;\n\n    if (!(m > 0) && !(m <= 12)) {\n      return undefined;\n    }\n\n    // Assume not leap year by default (note zero index for Jan)\n    const daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n    // If evenly divisible by 4 and not evenly divisible by 100,\n    // or is evenly divisible by 400, then a leap year\n    if (this.isLeapYear()) {\n      daysInMonth[1] = 29;\n    }\n    return daysInMonth[--m];\n  }\n\n  getEndOf(duration: Granularity = this.getGranularity()): GregorianDateTime {\n\n    const dt = new GregorianDateTime(this);\n    dt.toLastSecondOf(duration);\n\n    return dt;\n  }\n\n\n  /**\n   * getJulianDay - Implemented according to this page [2018-03-12]:\n   * https://de.wikipedia.org/wiki/Umrechnung_zwischen_julianischem_Datum_und_gregorianischem_Kalender\n   *\n   * @return  description\n   */\n  getJulianDay() {\n    // running day (conut of days that year)\n    const runningDay = this.calcRunningDay(this.month, this.day, this.isLeapYear());\n\n    // running year\n    const runningYear = this.year - 1;\n\n    // julian day of year 1 AD\n    const julianDay0 = 1721426;\n\n    // number of full 400 year cycles\n    const n400 = Math.floor(runningYear / 400);\n\n    // rest of division: number of years of the last uncomplete 400 years cycle\n    const r400 = runningYear % 400;\n\n    // number of full 100 year cycles\n    const n100 = Math.floor(r400 / 100)\n\n    // rest of division: number of years of the last uncomplete 100 years cycle\n    const r100 = r400 % 100;\n\n    // number of full 4 year cycles\n    const n4 = Math.floor(r100 / 4)\n\n    // rest of division: number of full years of the last uncomplete 4 years cycle\n    const n1 = r100 % 4;\n\n    return julianDay0 + n400 * 146097 + n100 * 36524 + n4 * 1461 + n1 * 365 + runningDay;\n  }\n\n\n  fromJulianDay(julianDay: number) {\n\n    if (typeof julianDay === 'string') {\n      julianDay = parseInt(julianDay)\n    }\n\n    // julian day of year 1 AD\n    const julianDay0 = 1721426;\n\n    const firstDayOfGregorianCal = 2299161;\n\n    // conversion of julian day earlier than the introduction of\n    // the gregorian calendar October 15th of 1582 are calculated\n    // with the julian calendar algoritms\n    if (julianDay < firstDayOfGregorianCal) {\n\n      const jdt = new JulianDateTime().fromJulianDay(julianDay);\n      this.year = jdt.year;\n      this.month = jdt.month;\n      this.day = jdt.day;\n\n    }\n    else {\n\n      // number of full 400 year cycles\n      const n400 = Math.floor((julianDay - julianDay0) / 146097);\n\n      // number of days of the last uncomplete 400 years cycle\n      const r400 = (julianDay - julianDay0) % 146097;\n\n      // number of full 100 year cycles\n      let n100 = Math.floor(r400 / 36524);\n\n      // number of days of the last uncomplete 100 years cycle\n      let r100 = r400 % 36524;\n\n\n      if (n100 === 4) {\n        n100 = 3;\n        r100 = 36524;\n      }\n\n      // number of full 4 year cycles\n      const n4 = Math.floor(r100 / 1461);\n\n      // number of days of the last uncomplete 4 years cycle\n      const r4 = r100 % 1461;\n\n      // number of full years of the last uncomplete 4 years cycle\n      let n1 = Math.floor(r4 / 365);\n\n      // number of days in the last year\n      let runningDay = r4 % 365;\n\n      if (n1 === 4) {\n        n1 = 3;\n        runningDay = 365;\n      }\n\n      // running year\n      const runningYear = 400 * n400 + 100 * n100 + 4 * n4 + n1;\n\n      // resulting year\n      this.year = runningYear + 1;\n\n      const monthDay = this.calcDateByRunningDay(runningDay, this.isLeapYear())\n\n      // resulting month\n      this.month = monthDay.month;\n\n      // resulting day\n      this.day = monthDay.day;\n    }\n\n    return this;\n  }\n\n\n\n  /**\n   * Returns true if given year is a leap year\n   */\n  isLeapYear(): boolean {\n    const year = this.year;\n    // Return true if evenly divisible by 4 and not evenly divisible by 100,\n    // or is evenly divisible by 400, then a leap year\n    return ((!(year % 4) && year % 100) || !(year % 400)) ? true : false;\n  }\n\n  /**\n   * returns julian day in seconds\n   *\n   * TODO: return julian day plus time in seconds\n   */\n  getJulianSecond() {\n    let seconds = this.getJulianDay() * 60 * 60 * 24; // first second of the day\n    if (this.seconds > 0) seconds = seconds + this.seconds;\n    if (this.minutes > 0) seconds = seconds + this.minutes * 60;\n    if (this.hours > 0) seconds = seconds + this.hours * 60 * 60;\n    return seconds;\n  }\n\n  /**\n   * Set this JulianDateTime from given julian second\n   * @param julianSecond julian second\n   */\n  fromJulianSecond(julianSecond) {\n\n    const secsPerDay = 60 * 60 * 24;\n\n    // number of full days\n    const julianDay = Math.floor(julianSecond / secsPerDay);\n\n    // number of seconds of the julian day\n    const secsOfDay = julianSecond % secsPerDay;\n\n    // number of ours of the day\n    this.hours = Math.floor(secsOfDay / (60 * 60))\n\n    // number of seconds of the last hour\n    const secsOfHour = this.hours % (60 * 60);\n\n    // number of ours of the day\n    this.minutes = Math.floor(secsOfHour / 60)\n\n    // secs of the last minute\n    this.seconds = this.minutes % 60;\n\n    return this.fromJulianDay(julianDay);\n\n  }\n\n\n}\n","\nimport { Granularity } from './date-time-commons';\nimport { GregorianDateTime } from './gregorian-date-time';\nimport { JulianDateTime } from './julian-date-time';\n\nexport type CalendarType = 'gregorian' | 'julian';\n\ninterface ITimePrimitive {\n  julianDay?: number;\n  duration?: Granularity;\n  calendar?: CalendarType;\n}\n\nexport class TimePrimitive {\n\n  // Last day of the era before christ\n  readonly LAST_DAY_BC = 1721422;\n\n  julianDay: number;\n  duration: Granularity;\n  calendar: CalendarType; // the calendar initialy used by user to create time primitive\n\n  constructor(data?: ITimePrimitive) {\n    Object.assign(this, data);\n    if ((data as any).julian_day) this.julianDay = (data as any).julian_day\n  }\n\n  getGregorianDateTime(): GregorianDateTime {\n    const g = new GregorianDateTime()\n    g.fromJulianDay(this.julianDay);\n    return g;\n  }\n\n  getJulianDateTime(): JulianDateTime {\n    const j = new JulianDateTime()\n    j.fromJulianDay(this.julianDay);\n    return j;\n  }\n\n\n\n  /**\n   * Get a DateTime object according to the given calendar.\n   *\n   */\n  getDateTime(calendar: CalendarType = this.calendar): GregorianDateTime | JulianDateTime | null {\n\n    if (!calendar) return null;\n\n    if (calendar === 'gregorian') return this.getGregorianDateTime();\n\n    if (calendar === 'julian') return this.getJulianDateTime();\n  }\n\n\n  /**\n   * Get a Date object according to the given calendar.\n   *\n   */\n  getDate(calendar: CalendarType = this.calendar): Date | null {\n    return this.getDateTime(calendar).getDate();\n  }\n  /**\n   * Get a string that defines the format usable with the DatePipe,\n   * a according to the given granularity\n   */\n  getDateFormatString(granularity: Granularity): string {\n\n    if (this.julianDay <= this.LAST_DAY_BC) {\n      switch (granularity) {\n        case '1 year':\n          return 'y GG';\n        case '1 month':\n          return 'MMM, y GG';\n        case '1 day':\n          return 'MMM d, y GG';\n        case '1 hour':\n          return 'MMM d, y GG, HH';\n        case '1 minute':\n          return 'MMM d, y GG, HH:mm';\n        case '1 second':\n          return 'MMM d, y GG, HH:mm:ss';\n        default:\n          return '';\n      }\n    } else {\n      switch (granularity) {\n        case '1 year':\n          return 'y';\n        case '1 month':\n          return 'MMM, y';\n        case '1 day':\n          return 'MMM d, y';\n        case '1 hour':\n          return 'MMM d, y, HH';\n        case '1 minute':\n          return 'MMM d, y, HH:mm';\n        case '1 second':\n          return 'MMM d, y, HH:mm:ss';\n        default:\n          return '';\n      }\n    }\n  }\n\n  /**\n   * Get a display label of the current TimePrimitive.\n   */\n  getShortesDateFormatString(): string {\n\n    return this.getDateFormatString(this.duration);\n  }\n\n\n  /**\n   * Get the julian day in seconds\n   * TODO: integrate time\n  */\n  getJulianSecond(): number {\n    return this.julianDay * 60 * 60 * 24;\n  }\n\n\n  /**\n   * Get the last second of this TimePrimitive. This depends on the calendar,\n   * since the month february and leap years differ from one calendar to the other\n   *\n   */\n  getLastSecond(calendar: CalendarType = this.calendar): number | null {\n    const dt = this.getDateTime()\n    return dt.getEndOf(this.duration).getJulianSecond();\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { TimePrimitive } from '../classes/time-primitive';\n\n@Pipe({\n  name: 'timePrimitive'\n})\nexport class TimePrimitivePipe implements PipeTransform {\n\n  constructor(private datePipe: DatePipe) { }\n\n  transform(timePrimitive: TimePrimitive): string {\n    if (!timePrimitive) return null;\n\n    const tp = new TimePrimitive(timePrimitive)\n\n    if (!tp) return null;\n\n    const dt = tp.getDateTime();\n\n    if (!dt) return null;\n\n    // This is a hack for dataPipe, because datePipe subtracts 1 year from BC\n    // Probably to avoid the year 0\n    if (dt.year < 0) dt.year = dt.year + 1;\n\n    if (!dt.day) dt.day = 31;\n\n    const date = dt.getDate()\n\n    return this.datePipe.transform(date, tp.getShortesDateFormatString());\n\n  }\n\n}\n\n","import { InfTimePrimitive } from '@kleiolab/lib-sdk-lb3';\nimport { WarEntityPreviewTimeSpan } from '@kleiolab/lib-sdk-lb4';\nimport { TimePrimitive, CalendarType } from './time-primitive';\nexport const x: TimePrimitive = undefined\nexport interface InfTimePrimitiveWithCalendar extends InfTimePrimitive {\n  calendar: CalendarType\n}\nexport interface TimeSpanWithNumberProps {\n  // key is the dfh_pk_property, expressing what the time primitive means for the time span\n  72?: InfTimePrimitiveWithCalendar; // p82 | At some time within | outer bounds | not before â not after\n  152?: InfTimePrimitiveWithCalendar; // p82a | begin of the begin | left outer bound | not before\n  153?: InfTimePrimitiveWithCalendar; // p82b | end of the end |Â right outer bound |Â not after\n  71?: InfTimePrimitiveWithCalendar; // p81 | Ongoing throughout | inner bounds | surely from â surely to\n  150?: InfTimePrimitiveWithCalendar; // p81a | end of the begin | left inner bound | surely from\n  151?: InfTimePrimitiveWithCalendar; // p81b | begin of the end | right inner bound | surely to\n}\nexport class TimeSpanUtil {\n\n  readonly tpKeys = ['p82', 'p81', 'p82a', 'p82b', 'p81a', 'p81b']\n\n  p82?: TimePrimitive; // At some time within | outer bounds | not before â not after\n  p81?: TimePrimitive; // Ongoing throughout | inner bounds | surely from â surely to\n  p82a?: TimePrimitive; // begin of the begin | left outer bound | not before\n  p81a?: TimePrimitive; // end of the begin | left inner bound | surely from\n  p81b?: TimePrimitive; // begin of the end | right inner bound | surely to\n  p82b?: TimePrimitive; // end of the end |Â right outer bound |Â not after\n\n\n  get earliestDay() {\n\n    if (this.isEmpty()) return null;\n\n    let min = Number.POSITIVE_INFINITY;\n\n    this.tpKeys.forEach(key => {\n      if (this[key]) {\n        const current = this[key].julianDay;\n        // if this timePrimitive is earlier than min, set this as new min\n        min = current < min ? current : min;\n      }\n    })\n\n    return min;\n  }\n\n  /**\n  * get the earliest and latest TimePrimitive of given array of TimePrimitives\n  *\n  * For earliest it compares the begin of TimePrimitive duration\n  * For latest it compares the last second of TimePrimitive duration\n  *\n  * @returns object with min Date and max Date or null, if no TimePrimitive available\n  */\n  static getMinMaxTimePrimitveOfArray(tps: TimePrimitive[]) {\n\n    if (!tps || tps.length < 1) return null;\n\n    let min = tps[0];\n    let max = tps[0];\n\n    tps.forEach(tp => {\n\n      // if this timePrimitive is earlier than min, set this as new min\n      min = tp.getJulianSecond() < min.getJulianSecond() ? tp : min;\n\n      // if this timePrimitive is later than max, set this as new max\n      max = tp.getJulianSecond() > max.getJulianSecond() ? tp : max;\n      //  check if we would need the latest second here?\n      // max = tp.getLastSecond() > max.getLastSecond() ? tp : max;\n\n\n    })\n\n    return { min: min, max: max };\n  }\n\n  static fromTimeSpanDialogData(d: TimeSpanWithNumberProps = {}): TimeSpanUtil {\n    if (!d) d = {};\n    const x = {}\n    if (d['72']) x['p82'] = d['72'];\n    if (d['71']) x['p81'] = d['71'];\n    if (d['152']) x['p82a'] = d['152'];\n    if (d['150']) x['p81a'] = d['150'];\n    if (d['151']) x['p81b'] = d['151'];\n    if (d['153']) x['p82b'] = d['153'];\n    return new TimeSpanUtil(x)\n  }\n\n  constructor(data?: WarEntityPreviewTimeSpan) {\n    if (data) {\n      Object.keys(data).forEach(key => data[key] === undefined ? delete data[key] : '');\n      Object.assign(this, data);\n      this.tpKeys.forEach(key => {\n        if (this[key]) this[key] = new TimePrimitive(this[key]);\n      })\n    }\n  }\n\n\n  /**\n   * returns true if no TimePrimitive is there\n   */\n  isEmpty(): boolean {\n    return !this.isNotEmpty()\n  }\n  /**\n   * returns true if at least one TimePrimitive is there\n   */\n  isNotEmpty(): boolean {\n    if (this.p82 || this.p81 || this.p82a || this.p82b || this.p81a || this.p81b) return true\n    else return false\n  }\n\n\n  /**\n  * get the earliest and latest TimePrimitive of this TimeSpan\n  *\n  * For earliest it compares the begin of TimePrimitive duration\n  * For latest it compares the last second of TimePrimitive duration\n  *\n  * @returns object with min Date and max Date or null, if no TimePrimitive available\n  */\n  getMinMaxTimePrimitive(): { min: TimePrimitive, max: TimePrimitive } | null {\n    return TimeSpanUtil.getMinMaxTimePrimitveOfArray(this.getArrayOfTimePrimitives());\n  }\n\n  /**\n   * @returns array of TimePrimitives of this TimeSpan\n   */\n  getArrayOfTimePrimitives(): TimePrimitive[] {\n    const array = [];\n\n    this.tpKeys.forEach(key => {\n      if (this[key]) {\n        array.push(this[key]);\n      }\n    })\n\n    return array;\n  }\n\n  getPrimitivesForPreview(): { single?: TimePrimitive, begin?: TimePrimitive, end?: TimePrimitive } {\n    const single = this.p82 || this.p81;\n    const begin = this.p82a || this.p81a;\n    const end = this.p82b || this.p81b;\n    return { single, begin, end };\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TimePrimitivePipe } from './time-primitive.pipe';\nimport { TimeSpanUtil } from '../classes/time-span-util';\n\n@Pipe({\n  name: 'timeSpan'\n})\nexport class TimeSpanPipe implements PipeTransform {\n\n  constructor(private timePrimitivePipe: TimePrimitivePipe) { }\n\n  transform(timeSpan: TimeSpanUtil): string {\n    if (!timeSpan) return null;\n\n    const ts = new TimeSpanUtil(timeSpan).getPrimitivesForPreview();\n    // nothing\n    if (!ts.single && !ts.begin && !ts.end) return '';\n\n    // only sinlge\n    if (ts.single && !(ts.begin || ts.end)) return this.getString(ts.single);\n\n    // only begin and end\n    if (ts.begin && ts.end && !ts.single) return this.getString(ts.begin) + ' â ' + this.getString(ts.end);\n\n    // only sinlge and end\n    if (ts.single && ts.end && !ts.begin) return this.getString(ts.single) + ' â ' + this.getString(ts.end);\n\n    // only begin and sinlge\n    if (ts.begin && ts.single && !ts.end) return this.getString(ts.begin) + ' â ' + this.getString(ts.single);\n\n    // all three\n    return this.getString(ts.begin) + ' â ' + this.getString(ts.end);\n  }\n  getString(t: any): string {\n    const s = this.timePrimitivePipe.transform(t);\n    return s ? s : '(?)';\n  }\n\n}\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TimePrimitivePipe } from './pipes/time-primitive.pipe';\nimport { TimeSpanPipe } from './pipes/time-span.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    TimePrimitivePipe,\n    TimeSpanPipe\n  ],\n  declarations: [\n    TimeSpanPipe,\n    TimePrimitivePipe,\n  ],\n  exports: [\n    TimeSpanPipe,\n    TimePrimitivePipe,\n  ]\n})\nexport class DateTimeModule { }\n","import { FormArray, FormGroup } from '@angular/forms';\nimport { ProTextProperty } from '@kleiolab/lib-sdk-lb3';\n\n\nexport interface LabelGeneratorSettings {\n  // maximum number of data unit children that are taken into account for the label generator\n  // e.g.: for a AppeForLanguage it will take only label and language, when you put it to 2\n  fieldsMax?: number;\n\n  // maximum number of statements per propertyField taken into account for the label generator\n  statementsMax?: number;\n\n  // path of that element in the store. useful to attatch leaf-pe-it-view\n  path: string[];\n}/**\n * Utilities class for static functions\n */\n\nexport class U {\n\n  static obj2Arr<T>(obj: { [key: string]: T }): T[] {\n    const arr = [];\n\n    if (obj == undefined) return arr;\n\n    Object.keys(obj).forEach(key => {\n      arr.push(obj[key]);\n    });\n\n    return arr;\n  }\n\n  static objNr2Arr<T>(obj: { [key: number]: T }): T[] {\n    const arr = [];\n\n    if (obj == undefined) return arr;\n\n    Object.keys(obj).forEach(key => {\n      arr.push(obj[key]);\n    });\n\n    return arr;\n  }\n\n  /**\n   * converts object to array with {key: value} objects, e.g.:\n   * {'a': 12, 'b': 99} --> [{key: 'a', value: 12, key: 'b', value: 99}]\n   *\n   * @param obj\n   */\n  static obj2KeyValueArr<T>(obj: { [key: string]: T }): { key: string, value: T }[] {\n    const keys = [];\n    for (const key in obj) {\n      if (obj[key]) {\n        keys.push({ key: key, value: obj[key] });\n      }\n    }\n    return keys;\n  }\n\n\n\n  static firstProTextPropStringOfType(textProperties: ProTextProperty[], fkSystemType): string {\n    return (textProperties.find(t => t.fk_system_type === fkSystemType) || { string: '' }).string\n  }\n\n  /**\n  * Erzeugt eine UUID nach RFC 4122\n  */\n  static uuid(): string {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (char) => {\n      const random = Math.random() * 16 | 0; // Nachkommastellen abschneiden\n      const value = char === 'x' ? random : (random % 4 + 8); // Bei x Random 0-15 (0-F), bei y Random 0-3 + 8 = 8-11 (8-b) gemÃ¤ss RFC 4122\n      return value.toString(16); // Hexadezimales Zeichen zurÃ¼ckgeben\n    });\n  }\n\n\n\n  static recursiveMarkAsTouched = (f: FormArray | FormGroup) => {\n\n    if (f.controls) {\n      if (Array.isArray(f.controls)) {\n        // in this case it is a formArray\n        f.controls.forEach((c: FormArray) => {\n          c.markAsTouched()\n          if (c.controls) U.recursiveMarkAsTouched(c)\n        })\n      }\n      else {\n        // in this case it is a formGroup\n        if (f.controls['childControl']) {\n          const c = f.controls['childControl'] as FormArray;\n          c.markAsTouched()\n          if (c.controls) U.recursiveMarkAsTouched(c)\n\n        }\n      }\n    }\n  }\n\n  static propertyFieldKeyFromParams(fkProp: number, isOutgoing: boolean) {\n    return '_' + fkProp + '_' + (isOutgoing ? 'outgoing' : 'ingoing')\n  }\n\n\n  /**\n   * Helper function that converts given number to string\n   * but zero (=0) values return undefined.\n   */\n  static toStr0undef(val: number): string | undefined {\n    if (val === 0) return undefined\n    else if (val === undefined) return undefined\n    else if (val === null) return undefined\n    else return val.toString();\n  }\n  /**\n   * Helper function that converts given array to string\n   *\n   * If array contains 0, null or undefined, return underfined\n   */\n  static toStrContains0undef(vals: (number | boolean | string | object)[]): string | undefined {\n    let string = '';\n    for (let i = 0; i < vals.length; i++) {\n      const val = vals[i];\n\n      if (val === 0) return undefined;\n      else if (val === undefined) return undefined;\n      else if (val === null) return undefined\n      else if (i === 0) {\n        string = val.toString()\n      } else {\n        string = `${string}_${val.toString()}`\n      }\n    }\n\n    return string;\n  }\n}\n","// TODO DELETE UNUSED\nimport { Observable, combineLatest, of } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\n/**\n * Combine Latest or, if input is an empty array, emit empty array\n */\nexport function combineLatestOrEmpty<I>(obs: Observable<I>[]) {\n  obs = [of(null), ...obs];\n  return combineLatest(obs).pipe(\n    map((values) => {\n      values.shift();\n      return values;\n    })\n  );\n}\n","import { concat, sort, values } from 'ramda';\nimport { OperatorFunction, pipe } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { U } from './util';\n\nexport interface ByPk<T> {\n  [pk: string]: T\n}\nexport interface VersionEntity<T> {\n  _latestVersion: number, // version number of the latest version\n  [v: number]: T\n}\nexport interface EntityVersionsByPk<T> {\n  [pk_entity: number]: VersionEntity<T>\n}\n\n\n\n/*****************************************************************************\n * Generic operators\n *****************************************************************************/\n\n/**\n * Returns an Observable that emits an flatened array consisting of the items of the arrays returned by getArrayFromItemFn.\n */\nexport function mapConcat<T, R>(getArrayFromItemFn: (value: T) => R[]): OperatorFunction<T[], R[]> {\n  return map((source: T[]) => {\n\n    if (typeof getArrayFromItemFn !== 'function') {\n      throw new TypeError('argument is not a function.');\n    }\n\n    let concatenatedArray: R[] = [];\n    source.forEach(item => {\n      if (item) concatenatedArray = concat(concatenatedArray, getArrayFromItemFn(item))\n    })\n\n    return concatenatedArray\n  })\n}\n\n\n/**\n * Takes an object with EntityVersions indexed by pk\n * Returns an array containing the latest versions for each indexed entity\n */\nexport function latestEntityVersions<T>(): OperatorFunction<EntityVersionsByPk<T>, T[]> {\n  return pipe(\n    map(d => U.objNr2Arr(d)),\n    map(a => a.map(q => q[q._latestVersion]))\n  )\n}\n\n\n/**\n * Takes an object with EntityVersions indexed by pk\n * Returns an the latest versions for entity with given pkEntity\n */\nexport function latestEntityVersion<T>(pkEntity: number): OperatorFunction<EntityVersionsByPk<T>, T> {\n  return pipe(\n    map(byPkEntity => byPkEntity[pkEntity]),\n    filter(entityVersions => entityVersions && entityVersions._latestVersion !== undefined),\n    map(entityVersions => entityVersions[entityVersions._latestVersion])\n  )\n}\n\nexport function latestVersion<T>(versions: ByPk<T>): T {\n  let latestVersion = 0\n  let latest;\n  values(versions).forEach((v: any) => {\n    if (v.entity_version > latestVersion) {\n      latestVersion = v.entity_version;\n      latest = v;\n    }\n  })\n  return latest;\n}\n\nexport function getSpecificVersion<T>(versions: ByPk<T>, version): T {\n  const ver = values(versions).find((v: any) => v.entity_version === version)\n  return ver\n}\n\n\n/**\n * limits the number of items in array\n */\nexport function limitTo<T>(limit?: number) {\n  return map((items: T[]) => {\n    if (!limit) return items\n    return items.slice(0, limit)\n  })\n}\n\n/**\n * limits the number of items in array\n */\nexport function limitOffset<T>(limit?: number, offset?: number) {\n  return map((items: T[]) => {\n    if (!limit) return items\n    offset = offset ? offset : 0;\n    const start = limit * offset;\n    const end = start + limit;\n    return items.slice(start, end)\n  })\n}\n\n\n\nexport function sortAbc<T>(stringFn: (x: T) => string) {\n  return map((l: T[]) => sort((a, b) => {\n    let textA = stringFn(a)\n    let textB = stringFn(b)\n\n    if (!textA) return -1;\n    if (!textB) return 1;\n\n    textA = textA.toUpperCase(); // ignore upper and lowercase\n    textB = textB.toUpperCase(); // ignore upper and lowercase\n    if (textA < textB) {\n      return -1;\n    }\n    if (textA > textB) {\n      return 1;\n    }\n    // names are equal\n    return 0;\n  }, l)\n  )\n}\n\n\n","import { iif, Observable, of } from 'rxjs';\nimport { tag } from 'rxjs-spy/operators';\nimport { switchMap } from 'rxjs/operators';\n\n\n/**\n * switchMaps to the default, if condition is true, else to provided elseOutput\n *\n */\nexport function switchMapOr<I, O>(defaultValue: O, elseOutput: (s: I) => Observable<O>, conditionForDefault?: (x: I) => boolean) {\n  return function (source: Observable<I>): Observable<O> {\n\n    conditionForDefault = conditionForDefault ? conditionForDefault : (x) => (!x || Object.keys(x).length < 1)\n\n    return source.pipe(\n      // auditTime(1),\n      switchMap(value => {\n        return iif(() => conditionForDefault(value), of(defaultValue), elseOutput(value))\n      }),\n      tag(`switchMapOr`)\n    )\n\n  }\n}\n"]}