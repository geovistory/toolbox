{"version":3,"file":"kleiolab-lib-sockets.js","sources":["ng://@kleiolab/lib-sockets/lib/sockets/models/SocketsConfig.ts","ng://@kleiolab/lib-sockets/lib/sockets/services/entity-preview-socket.service.ts","ng://@kleiolab/lib-sockets/lib/sockets/services/import-table-socket-socket.service.ts","ng://@kleiolab/lib-sockets/lib/sockets/services/sys-status-socket.service.ts"],"sourcesContent":["export class SocketsConfig {\n  baseUrl = '';\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\nimport { WarEntityPreview } from \"@kleiolab/lib-sdk-lb4\";\nimport { SocketsConfig } from \"../models/SocketsConfig\";\nimport { WarActions } from '@kleiolab/lib-redux';\n@Injectable()\nexport class EntityPreviewSocket extends Socket {\n\n  constructor(\n    warActions: WarActions,\n    @Optional() config?: SocketsConfig\n  ) {\n\n    super({ url: config.baseUrl + '/WarEntityPreview' });\n\n    // dispatch a method to put the EntityPreview to the store\n    this.fromEvent<WarEntityPreview>('entityPreview').subscribe(data => {\n      warActions.entity_preview.loadSucceeded([data], '');\n    });\n\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\nimport { SocketsConfig } from '../models';\n@Injectable()\nexport class ImportTableSocket extends Socket {\n  connected = false;\n\n  constructor(\n    @Optional() config?: SocketsConfig\n  ) {\n\n    super({ url: config.baseUrl + '/ImportTable' });\n\n    this.connected = true;\n\n  }\n\n  cleanConnect() {\n    if (!this.connected) this.connect();\n  }\n\n  cleanDisconnect() {\n    this.disconnect();\n    this.connected = false;\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\nimport { SocketsConfig } from '../models';\n@Injectable()\nexport class SysStatusSocket extends Socket {\n\n  constructor(\n    @Optional() config?: SocketsConfig\n  ) {\n\n    super({ url: config.baseUrl + '/SysStatus' });\n\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;AAAA,MAAa,aAAa;IAA1B;QACE,YAAO,GAAG,EAAE,CAAC;KACd;CAAA;;;IADC,gCAAa;;;;;;;;;;;;;;ACDf,MAMa,mBAAoB,SAAQ,MAAM;;;;;IAE7C,YACE,UAAsB,EACV,MAAsB;QAGlC,KAAK,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,OAAO,GAAG,mBAAmB,EAAE,CAAC,CAAC;;QAGrD,IAAI,CAAC,SAAS,CAAmB,eAAe,CAAC,CAAC,SAAS;;;;QAAC,IAAI;YAC9D,UAAU,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;SACrD,EAAC,CAAC;KAEJ;;;YAfF,UAAU;;;;YADF,UAAU;YADV,aAAa,uBAOjB,QAAQ;;;;;;;;ACVb,MAIa,iBAAkB,SAAQ,MAAM;;;;IAG3C,YACc,MAAsB;QAGlC,KAAK,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,OAAO,GAAG,cAAc,EAAE,CAAC,CAAC;QANlD,cAAS,GAAG,KAAK,CAAC;QAQhB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KAEvB;;;;IAED,YAAY;QACV,IAAI,CAAC,IAAI,CAAC,SAAS;YAAE,IAAI,CAAC,OAAO,EAAE,CAAC;KACrC;;;;IAED,eAAe;QACb,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;KACxB;;;YArBF,UAAU;;;;YADF,aAAa,uBAMjB,QAAQ;;;;IAHX,sCAAkB;;;;;;;;ACLpB,MAIa,eAAgB,SAAQ,MAAM;;;;IAEzC,YACc,MAAsB;QAGlC,KAAK,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,OAAO,GAAG,YAAY,EAAE,CAAC,CAAC;KAE/C;;;YATF,UAAU;;;;YADF,aAAa,uBAKjB,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}