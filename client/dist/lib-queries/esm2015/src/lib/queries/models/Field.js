/**
 * @fileoverview added by tsickle
 * Generated from: models/Field.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * A Field contains all information to create the different GUI's to display and edit
 * statements of an entity.
 *
 * The Fields of an entity depend on the properties of its class. Each Field contains or represents
 * the properties that have the given class as as domain or range and share the same pk_property.
 *
 * Explanation:
 * The identity (uniqueness) of a property is defined by its domain, pk_propery and its range,
 * It is possible that one class has two outgoing properties with the same pk_property but different
 * ranges. The Field then contains both of them.
 *
 * The Subfields (listDefinitions) are then representing only one property with a uniqur domain, pk_propery and range
 * All Subfields of a Field share all properties defined in FieldBase.
 *
 * In practice the Field a wrapper for SubFileds containing all information that is equal amongst all Subfields.
 * @record
 */
export function Field() { }
if (false) {
    /** @type {?} */
    Field.prototype.placeOfDisplay;
    /** @type {?|undefined} */
    Field.prototype.fieldConfig;
    /** @type {?} */
    Field.prototype.targetClasses;
    /** @type {?} */
    Field.prototype.allSubfieldsRemovedFromAllProfiles;
    /** @type {?} */
    Field.prototype.isSpecialField;
    /** @type {?} */
    Field.prototype.targets;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmllbGQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Aa2xlaW9sYWIvbGliLXF1ZXJpZXMvc3JjL2xpYi9xdWVyaWVzLyIsInNvdXJjZXMiOlsibW9kZWxzL0ZpZWxkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBc0JBLDJCQWVDOzs7SUFiQywrQkFBb0M7O0lBRXBDLDRCQUFrQzs7SUFFbEMsOEJBQXdCOztJQUl4QixtREFBNEM7O0lBRTVDLCtCQUFpQzs7SUFFakMsd0JBQWdEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvQ2xhc3NGaWVsZENvbmZpZyB9IGZyb20gJ0BrbGVpb2xhYi9saWItc2RrLWxiNCc7XG5pbXBvcnQgeyBGaWVsZEJhc2UgfSBmcm9tICcuL0ZpZWxkQmFzZSc7XG5pbXBvcnQgeyBGaWVsZFBsYWNlT2ZEaXNwbGF5IH0gZnJvbSAnLi9GaWVsZFBvc2l0aW9uJztcbmltcG9ydCB7IEZpZWxkVGFyZ2V0Q2xhc3MgfSBmcm9tICcuL0ZpZWxkVGFyZ2V0Q2xhc3MnO1xuaW1wb3J0IHsgU3BlY2lhbEZpZWxkVHlwZSB9IGZyb20gJy4vU3BlY2lhbEZpZWxkVHlwZSc7XG4vKipcbiAqIEEgRmllbGQgY29udGFpbnMgYWxsIGluZm9ybWF0aW9uIHRvIGNyZWF0ZSB0aGUgZGlmZmVyZW50IEdVSSdzIHRvIGRpc3BsYXkgYW5kIGVkaXRcbiAqIHN0YXRlbWVudHMgb2YgYW4gZW50aXR5LlxuICpcbiAqIFRoZSBGaWVsZHMgb2YgYW4gZW50aXR5IGRlcGVuZCBvbiB0aGUgcHJvcGVydGllcyBvZiBpdHMgY2xhc3MuIEVhY2ggRmllbGQgY29udGFpbnMgb3IgcmVwcmVzZW50c1xuICogdGhlIHByb3BlcnRpZXMgdGhhdCBoYXZlIHRoZSBnaXZlbiBjbGFzcyBhcyBhcyBkb21haW4gb3IgcmFuZ2UgYW5kIHNoYXJlIHRoZSBzYW1lIHBrX3Byb3BlcnR5LlxuICpcbiAqIEV4cGxhbmF0aW9uOlxuICogVGhlIGlkZW50aXR5ICh1bmlxdWVuZXNzKSBvZiBhIHByb3BlcnR5IGlzIGRlZmluZWQgYnkgaXRzIGRvbWFpbiwgcGtfcHJvcGVyeSBhbmQgaXRzIHJhbmdlLFxuICogSXQgaXMgcG9zc2libGUgdGhhdCBvbmUgY2xhc3MgaGFzIHR3byBvdXRnb2luZyBwcm9wZXJ0aWVzIHdpdGggdGhlIHNhbWUgcGtfcHJvcGVydHkgYnV0IGRpZmZlcmVudFxuICogcmFuZ2VzLiBUaGUgRmllbGQgdGhlbiBjb250YWlucyBib3RoIG9mIHRoZW0uXG4gKlxuICogVGhlIFN1YmZpZWxkcyAobGlzdERlZmluaXRpb25zKSBhcmUgdGhlbiByZXByZXNlbnRpbmcgb25seSBvbmUgcHJvcGVydHkgd2l0aCBhIHVuaXF1ciBkb21haW4sIHBrX3Byb3BlcnkgYW5kIHJhbmdlXG4gKiBBbGwgU3ViZmllbGRzIG9mIGEgRmllbGQgc2hhcmUgYWxsIHByb3BlcnRpZXMgZGVmaW5lZCBpbiBGaWVsZEJhc2UuXG4gKlxuICogSW4gcHJhY3RpY2UgdGhlIEZpZWxkIGEgd3JhcHBlciBmb3IgU3ViRmlsZWRzIGNvbnRhaW5pbmcgYWxsIGluZm9ybWF0aW9uIHRoYXQgaXMgZXF1YWwgYW1vbmdzdCBhbGwgU3ViZmllbGRzLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIEZpZWxkIGV4dGVuZHMgRmllbGRCYXNlIHtcbiAgLy8gZGVmaW5lcyB3aGVyZSB0aGUgZmllbGQgaXMgYmVpbmcgZGlzcGxheWVkXG4gIHBsYWNlT2ZEaXNwbGF5OiBGaWVsZFBsYWNlT2ZEaXNwbGF5O1xuICAvLyBjb25maWd1cmF0aW9uIG9mIHRoZSBmaWVsZCAoY29udGFpbmluZyBwb3NpdGlvbiBpbiBsaXN0KSwgZ2l2ZW4gYnkgdGhlIHByb2plY3Qgb3IgdGhlIGRlZmF1bHQtY29uZmlndXJhdGlvbi1wcm9qZWN0XG4gIGZpZWxkQ29uZmlnPzogUHJvQ2xhc3NGaWVsZENvbmZpZztcbiAgLy8gdGhlIHRhcmdldCBjbGFzc2VzIG9mIHRoZSBmaWVsZCAoaWYgaXMgb3V0Z29pbmcgcmFuZ2UgZWxzZSBkb21haW4pXG4gIHRhcmdldENsYXNzZXM6IG51bWJlcltdO1xuICAvLyAvLyBzdWJmaWVsZHMgKHRoZXkgc2hhcmUgdGhlIHNvdXJjZSBjbGFzcyBhbmQgcHJvcGVydHkgYnV0IGhhdmUgZGlmZmVyZW50IHRhcmdldCBjbGFzcyBhbmQgdGh1cyBsaXN0IHR5cGUpXG4gIC8vIGxpc3REZWZpbml0aW9uczogU3ViZmllbGRbXTtcbiAgLy8gdHJ1ZSBpZiBhbGwgc3ViZmllbGRzIGFyZSByZW1vdmVkIGZyb20gYWxsIHByb2ZpbGVzIGFjdGl2YXRlZCBieSB0aGUgcHJvamVjdFxuICBhbGxTdWJmaWVsZHNSZW1vdmVkRnJvbUFsbFByb2ZpbGVzOiBib29sZWFuO1xuICAvLyBzcGVjaWFsIGZpZWxkcyBhcmUgbm90IHVzaW5nIHRoZSBkZWZhdWx0IHN1YmZpZWxkIGFwcHJvYWNoIHRvIHNob3cvZWRpdCBkYXRhXG4gIGlzU3BlY2lhbEZpZWxkOiBTcGVjaWFsRmllbGRUeXBlO1xuICAvLyBpbmRleCBvZiBtZXRhZGF0YSBhYm91dCB0aGUgdGFyZ2V0IGNsYXNzZXMgb2YgdGhhdCBmaWVsZFxuICB0YXJnZXRzOiB7IFtma0NsYXNzOiBudW1iZXJdOiBGaWVsZFRhcmdldENsYXNzIH1cbn1cbiJdfQ==