{"version":3,"file":"kleiolab-lib-queries.js","sources":["ng://@kleiolab/lib-queries/lib/queries/decorators/method-decorators.ts","ng://@kleiolab/lib-queries/lib/queries/functions/functions.ts","ng://@kleiolab/lib-queries/lib/queries/models/AppellationItem.ts","ng://@kleiolab/lib-queries/lib/queries/models/BasicStatementItem.ts","ng://@kleiolab/lib-queries/lib/queries/models/ClassAndTypeNode.ts","ng://@kleiolab/lib-queries/lib/queries/models/ClassAndTypePk.ts","ng://@kleiolab/lib-queries/lib/queries/models/ClassAndTypeSelectModel.ts","ng://@kleiolab/lib-queries/lib/queries/models/CtrlTimeSpanDialogData.ts","ng://@kleiolab/lib-queries/lib/queries/models/CtrlTimeSpanDialogResult.ts","ng://@kleiolab/lib-queries/lib/queries/models/DimensionItem.ts","ng://@kleiolab/lib-queries/lib/queries/models/EntityPreviewItem.ts","ng://@kleiolab/lib-queries/lib/queries/models/EntityProperties.ts","ng://@kleiolab/lib-queries/lib/queries/models/Field.ts","ng://@kleiolab/lib-queries/lib/queries/models/FieldBase.ts","ng://@kleiolab/lib-queries/lib/queries/models/FieldPosition.ts","ng://@kleiolab/lib-queries/lib/queries/models/FieldTargetClass.ts","ng://@kleiolab/lib-queries/lib/queries/models/ItemBasics.ts","ng://@kleiolab/lib-queries/lib/queries/models/LangStringItem.ts","ng://@kleiolab/lib-queries/lib/queries/models/LanguageItem.ts","ng://@kleiolab/lib-queries/lib/queries/models/PlaceItem.ts","ng://@kleiolab/lib-queries/lib/queries/models/PropertyItemTypeMap.ts","ng://@kleiolab/lib-queries/lib/queries/models/PropertyOption.ts","ng://@kleiolab/lib-queries/lib/queries/models/PropertySelectModel.ts","ng://@kleiolab/lib-queries/lib/queries/models/StatementWithTarget.ts","ng://@kleiolab/lib-queries/lib/queries/models/Subfield.ts","ng://@kleiolab/lib-queries/lib/queries/models/TemporalEntityCell.ts","ng://@kleiolab/lib-queries/lib/queries/models/TemporalEntityItem.ts","ng://@kleiolab/lib-queries/lib/queries/models/TemporalEntityRemoveProperties.ts","ng://@kleiolab/lib-queries/lib/queries/models/TemporalEntityRow.ts","ng://@kleiolab/lib-queries/lib/queries/models/TemporalEntityTableI.ts","ng://@kleiolab/lib-queries/lib/queries/models/TextPropertyItem.ts","ng://@kleiolab/lib-queries/lib/queries/models/TimePrimitiveItem.ts","ng://@kleiolab/lib-queries/lib/queries/models/TimeSpanItem.ts","ng://@kleiolab/lib-queries/lib/queries/models/TimeSpanProperty.ts","ng://@kleiolab/lib-queries/lib/queries/module/redux-queries.module.ts","ng://@kleiolab/lib-queries/lib/queries/selectors/dat.service.ts","ng://@kleiolab/lib-queries/lib/queries/services/should-pause.service.ts","ng://@kleiolab/lib-queries/lib/queries/selectors/dfh.service.ts","ng://@kleiolab/lib-queries/lib/queries/selectors/inf.service.ts","ng://@kleiolab/lib-queries/lib/queries/selectors/pro.service.ts","ng://@kleiolab/lib-queries/lib/queries/selectors/sys.service.ts","ng://@kleiolab/lib-queries/lib/queries/selectors/tab.service.ts","ng://@kleiolab/lib-queries/lib/queries/selectors/war.service.ts","ng://@kleiolab/lib-queries/lib/queries/services/schema-selectors.service.ts","ng://@kleiolab/lib-queries/lib/queries/services/active-project-pipes.service.ts","ng://@kleiolab/lib-queries/lib/queries/services/configuration-pipes.service.ts","ng://@kleiolab/lib-queries/lib/queries/services/information-basic-pipes.service.ts","ng://@kleiolab/lib-queries/lib/queries/services/information-pipes.service.ts"],"sourcesContent":["// TODO DELETE\nimport { shareReplay } from 'rxjs/operators';\nimport { tag } from 'rxjs-spy/operators';\n\nexport interface CacheOptions {\n  refCount: boolean\n}\n/**\n * Decorator function for methods that take any argument and return an\n * obsevable. Decorated Methods will be extended by a cache:\n * For each call to the method with the same input arguments a cache\n * shareReplay operator is added, acting as a middleman subcribing to\n * the Source (the observable returned by the decorated function) and\n * emtting the latest value. Read more about shareReplay here:\n * https://itnext.io/the-magic-of-rxjs-sharing-operators-and-their-differences-3a03d699d255\n *\n * @options:\n */\n\nexport const cache = (options?: CacheOptions) => (target, propertyKey, descriptor) => {\n  const o: CacheOptions = {\n    // default option\n    refCount: true,\n    // override with custom options\n    ...options\n  }\n  const c = new Map()\n  const originalFunction = descriptor.value;\n  descriptor.value = function (...request) {\n    const uniq = JSON.stringify(request)\n    if (!c.has(uniq)) {\n      const boundOriginalFunction = originalFunction.bind(this)\n      // const x = target, y = propertyKey;\n      c.set(uniq, boundOriginalFunction(...request).pipe(\n        shareReplay({ refCount: o.refCount, bufferSize: 1 }),\n        tag(`FROM-CACHE-${target.constructor.name}::${propertyKey}::${request.join(':')}`)\n      ))\n    }\n    return c.get(uniq)\n  };\n  return descriptor;\n}\n\n\nexport function spyTag(target, propertyKey, descriptor) {\n  const originalFunction = descriptor.value;\n  descriptor.value = function (...request) {\n    const boundOriginalFunction = originalFunction.bind(this)\n    return boundOriginalFunction(...request).pipe(\n      tag(`${target.constructor.name}::${propertyKey}::${request.join(':')}`)\n    )\n  };\n  return descriptor;\n}\n","import { DfhConfig } from '@kleiolab/lib-config';\nimport { InfTimePrimitive, TimePrimitiveWithCal } from '@kleiolab/lib-sdk-lb4';\nimport { TimeSpanUtil } from '@kleiolab/lib-utils';\nimport { TimeSpanItem } from '../models/TimeSpanItem';\n\nexport function timeSpanItemToTimeSpan(timeSpanItem: TimeSpanItem): TimeSpanUtil {\n  const t = new TimeSpanUtil();\n\n  timeSpanItem.properties.forEach(p => {\n    const key = DfhConfig.PROPERTY_PK_TO_EXISTENCE_TIME_KEY[p.listDefinition.property.fkProperty]\n    if (p.items && p.items.length) t[key] = p.items[0].timePrimitive\n  })\n  return t;\n}\n\nexport function infTimePrimToTimePrimWithCal(infTimePrim: InfTimePrimitive, cal: TimePrimitiveWithCal.CalendarEnum): TimePrimitiveWithCal {\n  return {\n    julianDay: infTimePrim.julian_day,\n    duration: infTimePrim.duration as TimePrimitiveWithCal.DurationEnum,\n    calendar: cal,\n  }\n}\n","import { BasicStatementItem } from './BasicStatementItem';\nexport interface AppellationItem extends BasicStatementItem {\n    fkClass: number;\n    label: string;\n}\n","import { InfStatement } from '@kleiolab/lib-sdk-lb4';\nimport { ItemBasics } from './ItemBasics';\n// Items connected through a statement\nexport interface BasicStatementItem extends ItemBasics {\n  statement: InfStatement;\n  isOutgoing?: boolean;\n  error?: string;\n}\n\n\n\n","import { ClassAndTypePk } from './ClassAndTypePk';\n// end:ng42.barrel\nexport interface ClassAndTypeNode {\n    label: string;\n    data: ClassAndTypePk;\n    children?: ClassAndTypeNode[];\n}\n","export interface ClassAndTypePk {\n    pkClass: number;\n    pkType: number;\n}\n","// end:ng42.barrel\nexport interface ClassAndTypeSelectModel {\n  classes?: number[];\n  types?: number[];\n}\n","import { Observable } from 'rxjs';\nimport { CtrlTimeSpanDialogResult } from './CtrlTimeSpanDialogResult';\nexport interface CtrlTimeSpanDialogData {\n  timePrimitives: CtrlTimeSpanDialogResult;\n  beforeCloseCallback?: (timePrimitives: CtrlTimeSpanDialogResult) => Observable<boolean>;\n}\n","import { InfTimePrimitiveWithCalendar } from '@kleiolab/lib-utils';\n\nexport interface CtrlTimeSpanDialogResult {\n  // key is the dfh_pk_property, expressing what the time primitive means for the time span\n  72?: InfTimePrimitiveWithCalendar; // p82 | At some time within | outer bounds | not before â not after\n  152?: InfTimePrimitiveWithCalendar; // p82a | begin of the begin | left outer bound | not before\n  153?: InfTimePrimitiveWithCalendar; // p82b | end of the end |Â right outer bound |Â not after\n  71?: InfTimePrimitiveWithCalendar; // p81 | Ongoing throughout | inner bounds | surely from â surely to\n  150?: InfTimePrimitiveWithCalendar; // p81a | end of the begin | left inner bound | surely from\n  151?: InfTimePrimitiveWithCalendar; // p81b | begin of the end | right inner bound | surely to\n}\n","import { BasicStatementItem } from './BasicStatementItem';\nexport interface DimensionItem extends BasicStatementItem {\n    fkClass: number;\n    label: string;\n}\n","import { WarEntityPreview } from '@kleiolab/lib-sdk-lb4';\nimport { BasicStatementItem } from './BasicStatementItem';\nexport interface EntityPreviewItem extends BasicStatementItem {\n    preview: WarEntityPreview;\n    fkClass: number;\n}\n","import { Subfield } from './Subfield';\nimport { ItemList } from './ItemList';\nexport interface EntityProperties {\n    listDefinition: Subfield;\n    items: ItemList;\n}\n","import { ProClassFieldConfig } from '@kleiolab/lib-sdk-lb4';\nimport { FieldBase } from './FieldBase';\nimport { FieldPlaceOfDisplay } from './FieldPosition';\nimport { FieldTargetClass } from './FieldTargetClass';\nimport { SpecialFieldType } from './SpecialFieldType';\n/**\n * A Field contains all information to create the different GUI's to display and edit\n * statements of an entity.\n *\n * The Fields of an entity depend on the properties of its class. Each Field contains or represents\n * the properties that have the given class as as domain or range and share the same pk_property.\n *\n * Explanation:\n * The identity (uniqueness) of a property is defined by its domain, pk_propery and its range,\n * It is possible that one class has two outgoing properties with the same pk_property but different\n * ranges. The Field then contains both of them.\n *\n * The Subfields (listDefinitions) are then representing only one property with a uniqur domain, pk_propery and range\n * All Subfields of a Field share all properties defined in FieldBase.\n *\n * In practice the Field a wrapper for SubFileds containing all information that is equal amongst all Subfields.\n */\nexport interface Field extends FieldBase {\n  // defines where the field is being displayed\n  placeOfDisplay: FieldPlaceOfDisplay;\n  // configuration of the field (containing position in list), given by the project or the default-configuration-project\n  fieldConfig?: ProClassFieldConfig;\n  // the target classes of the field (if is outgoing range else domain)\n  targetClasses: number[];\n  // // subfields (they share the source class and property but have different target class and thus list type)\n  // listDefinitions: Subfield[];\n  // true if all subfields are removed from all profiles activated by the project\n  allSubfieldsRemovedFromAllProfiles: boolean;\n  // special fields are not using the default subfield approach to show/edit data\n  isSpecialField: SpecialFieldType;\n  // index of metadata about the target classes of that field\n  targets: { [fkClass: number]: FieldTargetClass }\n}\n","import { GvFieldProperty } from '@kleiolab/lib-sdk-lb4';\nexport interface FieldBase {\n  // the label of the field (taken from the corresponding property label)\n  label: string;\n  // url to property on ontome\n  ontoInfoUrl: string;\n  // short label (= ontome identifier in namespace)\n  ontoInfoLabel: string;\n  // reference to the dfh_property or dfh_property_of_property\n  property: GvFieldProperty;\n  // true if the property of that field has dfh_has_type_subproperty\n  isHasTypeField: boolean;\n  // direction of the property in this field (true if sourceClass = property domain)\n  isOutgoing: boolean;\n  // the source class of the field (if is outgoing domain else range)\n  sourceClass: number;\n  // label of the source class\n  sourceClassLabel: string;\n  // minimum number of statements having the property of this field and the same entity as source\n  // (and thus different targets)\n  targetMinQuantity: number;\n  // maximum number of statements having the property of this field and the same entity as source\n  // (and thus different targets). Value -1 stands for n (infinit)\n  targetMaxQuantity: number;\n  // minimum number of statements having the property of this field and the same entity as target\n  // (and thus different sources)\n  sourceMinQuantity: number;\n  // maximum number of statements having the property of this field and the same entity as target\n  // (and thus different sources). Value -1 stands for n (infinit)\n  sourceMaxQuantity: number;\n  // if true, the identity of the source entity is defined by the statement(s) of this field\n  identityDefiningForSource: boolean;\n  // if true, the identity of the target entity is defined by the statement(s) of this field\n  identityDefiningForTarget: boolean;\n}\n","interface FieldPosition {\n    position?: number;\n}\nexport interface FieldPlaceOfDisplay {\n    basicFields?: FieldPosition;\n    specificFields?: FieldPosition;\n    hidden?: true;\n}\n","import { GvTargetType } from '@kleiolab/lib-sdk-lb4';\nexport interface FieldTargetClass {\n  // determines what components are used to create, edit or display\n  // the statement and its target.\n  listType: GvTargetType;\n  // the target class of the sub-field (if is outgoing range else domain)\n  targetClass: number;\n  // label of the target class\n  targetClassLabel: string;\n  // true if the property is removed from all profiles activated by the project\n  removedFromAllProfiles: boolean;\n}\n","import { ProInfoProjRel } from '@kleiolab/lib-sdk-lb4';\nexport interface ItemBasics {\n    projRel: ProInfoProjRel;\n    ordNum: number;\n    label: string;\n}\n","import { InfLanguage } from '@kleiolab/lib-sdk-lb4';\nimport { BasicStatementItem } from './BasicStatementItem';\nexport interface LangStringItem extends BasicStatementItem {\n    fkClass: number;\n    label: string;\n    fkLanguage: number;\n    language: InfLanguage;\n}\n","import { BasicStatementItem } from './BasicStatementItem';\nexport interface LanguageItem extends BasicStatementItem {\n    fkClass: number;\n    label: string;\n}\n","import { BasicStatementItem } from './BasicStatementItem';\nexport interface PlaceItem extends BasicStatementItem {\n    fkClass: number;\n    label: string;\n}\n","import { ItemType } from './ItemType';\nexport interface PropertyItemTypeMap {\n    [key: string]: {\n        listType: ItemType;\n        isOutgoing: boolean;\n    };\n}\n","// end:ng42.barrel\nexport interface PropertyOption {\n  propertyFieldKey: string;\n  isOutgoing: boolean;\n  pk: number;\n  label: string;\n}\n","export interface PropertySelectModel {\n  outgoingProperties?: number[];\n  ingoingProperties?: number[];\n}\n","import { GvFieldId, InfAppellation, InfDimension, InfLangString, InfLanguage, InfPlace, InfStatement, ProInfoProjRel, TimePrimitiveWithCal, WarEntityPreview, WarEntityPreviewTimeSpan } from '@kleiolab/lib-sdk-lb4';\nexport interface SubentitySubfieldPage {\n  subfield: GvFieldId;\n  count: number;\n  statements: Array<StatementWithTarget>\n}\nexport interface StatementTargetTimeSpan {\n  subfields: SubentitySubfieldPage[],\n  preview: WarEntityPreviewTimeSpan\n}\nexport interface StatementTargetEntity {\n  pkEntity: number;\n  fkClass: number;\n}\nexport interface StatementTarget {\n  statement: InfStatement;\n  isOutgoing: boolean;\n  targetLabel: string;\n  targetClass: number;\n  target: {\n    entityPreview?: WarEntityPreview;\n    appellation?: InfAppellation;\n    dimension?: InfDimension;\n    langString?: InfLangString;\n    language?: InfLanguage;\n    timePrimitive?: TimePrimitiveWithCal;\n    place?: InfPlace;\n    timeSpan?: StatementTargetTimeSpan\n    entity?: StatementTargetEntity;\n  };\n}\nexport interface StatementProjRel {\n  projRel?: ProInfoProjRel;\n  ordNum: number;\n}\n\nexport type StatementWithTarget = StatementTarget & StatementProjRel;\n\nexport interface SubfieldPage {\n  statements: StatementWithTarget[]\n  count: number\n}\n","import { GvTargetType } from '@kleiolab/lib-sdk-lb4';\nimport { FieldBase } from './FieldBase';\n/**\n * A Subfiel contains contains information to create the different GUI's to display and edit\n * statements of an entity.\n *\n * Each Subfield stands for one property with a unique domain, pk_propery and range.\n *\n * Since the display of the statement and its target value depends on the target class, the Subfield\n * has a SubfieldType. This SubfieldType determines what components are used to create, edit or display\n * the statement and its target.\n */\nexport interface Subfield extends FieldBase {\n  // determines what components are used to create, edit or display\n  // the statement and its target.\n  listType: GvTargetType;\n  // the target class of the sub-field (if is outgoing range else domain)\n  targetClass: number;\n  // label of the target class\n  targetClassLabel: string;\n  // true if the property is removed from all profiles activated by the project\n  removedFromAllProfiles: boolean;\n}\n","import { WarEntityPreview } from '@kleiolab/lib-sdk-lb4';\nimport { StatementItem } from './StatementItem';\nexport interface TemporalEntityCell {\n    pkProperty: number;\n    isOutgoing: boolean;\n    label: string;\n    entityPreview: WarEntityPreview;\n    items?: StatementItem[];\n    firstItem?: StatementItem;\n    itemsCount: number;\n    isTimeSpan?: boolean;\n}\n","import { ProInfoProjRel } from '@kleiolab/lib-sdk-lb4';\nimport { BasicStatementItem } from './BasicStatementItem';\nimport { TemporalEntityRow } from './TemporalEntityRow';\nexport interface TemporalEntityItem extends BasicStatementItem {\n    // fkClass: number; // fk_class of TemporalEntity\n    row: TemporalEntityRow;\n    pkEntity: number; // pk of TemporalEntity\n    teEnProjRel: ProInfoProjRel;\n}\n","import { InfTemporalEntity } from '@kleiolab/lib-sdk-lb4';\nimport { InfTextProperty } from '@kleiolab/lib-sdk-lb4';\nimport { InfStatement } from '@kleiolab/lib-sdk-lb4';\n/**\n * This interface is used for creating objects containing all the\n * information related to a temporal entity that should be removed\n * from project, when the temporal entity is removed\n */\nexport interface TemporalEntityRemoveProperties {\n    temporalEntity: InfTemporalEntity;\n    statements: InfStatement[];\n    textProperties: InfTextProperty[];\n}\n","import { TemporalEntityCell } from './TemporalEntityCell';\nexport interface TemporalEntityRow {\n    [key: string]: TemporalEntityCell;\n}\n","import { Observable } from 'rxjs';\nimport { Field } from './Field';\nimport { TemporalEntityItem } from './TemporalEntityItem';\nexport interface TemporalEntityTableI {\n    rows$: Observable<TemporalEntityItem[]>;\n    columns$: Observable<Field[]>;\n}\n","import { InfLanguage } from '@kleiolab/lib-sdk-lb4';\nimport { InfTextProperty } from '@kleiolab/lib-sdk-lb4';\nimport { ItemBasics } from './ItemBasics';\nexport interface TextPropertyItem extends ItemBasics {\n    textProperty: InfTextProperty;\n    language: InfLanguage;\n}\n","import { TimePrimitive } from '@kleiolab/lib-utils';\nimport { BasicStatementItem } from './BasicStatementItem';\nexport interface TimePrimitiveItem extends BasicStatementItem {\n    fkClass: number;\n    label: string;\n    timePrimitive: TimePrimitive;\n}\n","import { TimeSpanProperty } from './TimeSpanProperty';\nexport interface TimeSpanItem {\n    label: string;\n    properties: TimeSpanProperty[];\n}\n","import { Subfield } from './Subfield';\nimport { TimePrimitiveItem } from './TimePrimitiveItem';\nexport interface TimeSpanProperty {\n    listDefinition: Subfield;\n    items: TimePrimitiveItem[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { ReduxModule } from '@kleiolab/lib-redux';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n\n  ]\n})\nexport class ReduxQueriesModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule: ReduxQueriesModule,\n    @Optional() reduxModule: ReduxModule,\n  ) {\n    const errors: string[] = []\n    if (parentModule) errors.push('ReduxQueriesModule is already loaded. Import in your base AppModule only.');\n    if (!reduxModule) errors.push('You need to import the ReduxModule in your AppModule!');\n    if (errors.length) throw new Error(errors.join('\\n'));\n  }\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { ByPk, DatActions, datDefinitions, datRoot, IAppState, ReducerConfigCollection } from '@kleiolab/lib-redux';\nimport { DatChunk, DatColumn, DatDigital, DatNamespace, DatTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { DatClassColumnMapping } from '@kleiolab/lib-sdk-lb4';\nimport { latestVersion } from '@kleiolab/lib-utils';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nclass Selector {\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { }\n\n  selector<M>(indexKey: string): { all$: Observable<ByPk<M>>, key: (x) => Observable<M> } {\n\n    const all$ = this.ngRedux.select<ByPk<M>>([datRoot, this.model, indexKey])\n    // .pipe(\n    //   distinctUntilChanged<M>(equals)\n    // )\n\n    const key = (x): Observable<M> => this.ngRedux.select<M>([datRoot, this.model, indexKey, x])\n    // .pipe(\n    //   distinctUntilChanged<M>(equals)\n    // )\n\n    return { all$, key }\n  }\n}\n\nclass DatDigitalSelections extends Selector {\n  public by_pk_entity__entity_version$ = this.selector<DatDigital>('by_pk_entity__entity_version')\n  public by_pk_entity$ = this.selector<ByPk<DatDigital>>('by_pk_entity')\n  public by_pk_text$ = this.selector<ByPk<DatDigital>>('by_pk_text')\n\n\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n\n  latestVersion(pkDigital: number): Observable<DatDigital> {\n    return this.by_pk_entity$.key(pkDigital).pipe(\n      map(versions => latestVersion(versions)),\n    )\n  }\n}\n\nclass DatNamespaceSelections extends Selector {\n  public by_pk_entity$ = this.selector<DatNamespace>('by_pk_entity')\n  public by_fk_project$ = this.selector<ByPk<DatNamespace>>('by_fk_project')\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\nclass DatChunkSelections extends Selector {\n  public by_pk_entity$ = this.selector<DatChunk>('by_pk_entity')\n  public by_fk_text$ = this.selector<ByPk<DatChunk>>('by_fk_text')\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\nclass DatClassColumnMappingSelections extends Selector {\n  public by_pk_entity$ = this.selector<DatClassColumnMapping>('by_pk_entity')\n  public by_fk_column$ = this.selector<ByPk<DatClassColumnMapping>>('by_fk_column')\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\nclass DatColumnSelections extends Selector {\n  public by_pk_entity$ = this.selector<DatColumn>('by_pk_entity')\n  public by_fk_digital$ = this.selector<ByPk<DatColumn>>('by_fk_digital')\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\nclass DatTextPropertySelections extends Selector {\n  public by_pk_entity$ = this.selector<DatTextProperty>('by_pk_entity')\n  public by_fk_entity__fk_system_type$ = this.selector<ByPk<DatTextProperty>>('by_fk_entity__fk_system_type')\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatSelector extends DatActions {\n\n  digital$ = new DatDigitalSelections(this.ngRedux, datDefinitions, 'digital');\n  namespace$ = new DatNamespaceSelections(this.ngRedux, datDefinitions, 'namespace');\n  chunk$ = new DatChunkSelections(this.ngRedux, datDefinitions, 'chunk');\n  column$ = new DatColumnSelections(this.ngRedux, datDefinitions, 'column');\n  class_column_mapping$ = new DatClassColumnMappingSelections(this.ngRedux, datDefinitions, 'class_column_mapping');\n  text_property$ = new DatTextPropertySelections(this.ngRedux, datDefinitions, 'text_property');\n\n  constructor(public ngRedux: NgRedux<IAppState>) {\n    super(ngRedux)\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShouldPauseService {\n  shouldPause$ = new BehaviorSubject(false)\n  constructor() { }\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { ByPk, DfhActions, DfhClassSlice, dfhDefinitions, DfhLabelSlice, DfhProfileSlice, DfhPropertySlice, dfhRoot, IAppState, ReducerConfigCollection } from '@kleiolab/lib-redux';\nimport { DfhClass, DfhLabel, DfhProfile, DfhProperty } from '@kleiolab/lib-sdk-lb4';\nimport { empty, Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { ShouldPauseService } from '../services/should-pause.service';\nclass Selector<Slice> {\n\n  slice$ = this.ngRedux.select<Slice>([dfhRoot, this.model])\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string,\n    public shouldPause$: Observable<boolean>\n  ) {\n  }\n\n  selector<M>(indexKey: string): { all$: Observable<ByPk<M>>, key: (x) => Observable<M>, noPause: { all$: Observable<ByPk<M>>, key: (x) => Observable<M> } } {\n\n    const allNoPause$ = this.ngRedux.select<ByPk<M>>([dfhRoot, this.model, indexKey]);\n    const all$ = this.shouldPause$.pipe(\n      switchMap(shouldPause => shouldPause ?\n        empty() :\n        allNoPause$\n      )\n    );\n\n    const keyNoPause = (x) => this.ngRedux.select<M>([dfhRoot, this.model, indexKey, x]);\n    const key = (x): Observable<M> => this.shouldPause$.pipe(\n      switchMap(shouldPause => shouldPause ?\n        empty() :\n        this.ngRedux.select<M>([dfhRoot, this.model, indexKey, x])\n      )\n    )\n\n    return { all$, key, noPause: { all$: allNoPause$, key: keyNoPause } }\n  }\n}\n// Profile Selectors\nclass DfhProfileSelections extends Selector<DfhProfileSlice> {\n  public by_pk_profile$ = this.selector<DfhProfile>('by_pk_profile');\n}\n\n// Class Selectors\nclass DfhClassSelections extends Selector<DfhClassSlice> {\n  public by_pk_class$ = this.selector<DfhClass>('by_pk_class');\n  public by_basic_type$ = this.selector<ByPk<DfhClass>>('by_basic_type');\n}\n\n// Property Selectors\nclass DfhPropertySelections extends Selector<DfhPropertySlice> {\n  public pk_property__has_domain__has_range$ = this.selector<DfhProperty>('by_pk_property__has_domain__has_range');\n  public by_pk_property$ = this.selector<ByPk<DfhProperty>>('by_pk_property');\n  // public by_has_domain__pk_property$ = this.selector<ByPk<DfhProperty>>('by_has_domain__fk_property');\n  // public by_has_range__pk_property$ = this.selector<ByPk<DfhProperty>>('by_has_range__fk_property');\n  public by_has_domain$ = this.selector<ByPk<DfhProperty>>('by_has_domain');\n  public by_has_range$ = this.selector<ByPk<DfhProperty>>('by_has_range');\n  public by_is_has_type_subproperty$ = this.selector<ByPk<DfhProperty>>('by_is_has_type_subproperty');\n}\n\n// Label Selectors\nclass DfhLabelSelections extends Selector<DfhLabelSlice> {\n  public by_fks$ = this.selector<DfhLabel>('by_fks');\n  public by_fk_class__type$ = this.selector<ByPk<DfhLabel>>('by_fk_class__type');\n  public by_fk_property__type$ = this.selector<ByPk<DfhLabel>>('by_fk_property__type');\n  public by_fk_profile__type$ = this.selector<ByPk<DfhLabel>>('by_fk_profile__type');\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DfhSelector extends DfhActions {\n\n  profile$ = new DfhProfileSelections(this.ngRedux, dfhDefinitions, 'profile', this.pause.shouldPause$)\n  class$ = new DfhClassSelections(this.ngRedux, dfhDefinitions, 'klass', this.pause.shouldPause$)\n  property$ = new DfhPropertySelections(this.ngRedux, dfhDefinitions, 'property', this.pause.shouldPause$)\n  label$ = new DfhLabelSelections(this.ngRedux, dfhDefinitions, 'label', this.pause.shouldPause$)\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public pause: ShouldPauseService\n  ) {\n    super(ngRedux)\n  }\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { ByPk, EntityModelAndClass, getFromTo, IAppState, IndexStatementByObject, indexStatementByObject, IndexStatementByObjectProperty, indexStatementByObjectProperty, IndexStatementBySubject, indexStatementBySubject, IndexStatementBySubjectProperty, indexStatementBySubjectProperty, infDefinitions, infRoot, paginateBy, PR_ENTITY_MODEL_MAP, ReducerConfigCollection, subfieldIdToString } from '@kleiolab/lib-redux';\nimport { InfAppellation, InfDimension, InfLangString, InfLanguage, InfPersistentItem, InfPlace, InfStatement, InfTemporalEntity, InfTextProperty, InfTimePrimitive, ProInfoProjRel } from '@kleiolab/lib-sdk-lb3';\nimport { GvFieldId, GvFieldPage } from '@kleiolab/lib-sdk-lb4';\nimport { combineLatestOrEmpty } from '@kleiolab/lib-utils';\nimport { values } from 'd3';\nimport { equals } from 'ramda';\nimport { Observable, of, pipe } from 'rxjs';\nimport { filter, first, map, switchMap, throttleTime } from 'rxjs/operators';\nexport type InfModelName = 'persistent_item' | 'temporal_entity' | 'statement' | 'text_property' | 'appellation' | 'language' | 'place' | 'dimension' | 'lang_string' | 'time_primitive';\n\nclass Selector {\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public pkProject$: Observable<number | string>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { }\n\n  selector<M>(indexKey: string): { all$: Observable<ByPk<M>>, key: (x) => Observable<M> } {\n\n    const all$ = this.ngRedux.select<ByPk<M>>([infRoot, this.model, indexKey])\n    const key = (x): Observable<M> => {\n      // REMARK: 'equals' comparator is very very important for performance !\n      return this.ngRedux.select<M>([infRoot, this.model, indexKey, x], equals)\n    }\n    return { all$, key }\n  }\n\n  paginationSelector<M>() {\n\n    const pipePage = (page: GvFieldPage): Observable<M[]> => {\n      let path: any[];\n      const pagBy = paginateBy\n      const key = subfieldIdToString(page)\n      path = [infRoot, this.model, pagBy, key];\n      return this.ngRedux.select<number>([...path, 'count'])\n        .pipe(\n          filter(count => count !== undefined),\n          switchMap(count => {\n            const start = page.offset;\n            const end = count <= (start + page.limit) ? count : (start + page.limit);\n            const obs$: Observable<M>[] = [];\n            for (let i = start; i < end; i++) {\n              obs$.push(\n                this.ngRedux.select<M>([...path, 'rows', i]).pipe(filter(x => !!x))\n              )\n            }\n            return combineLatestOrEmpty(obs$)\n          })\n        )\n    }\n\n\n    const pipePageLoadNeeded = (page: GvFieldPage, trigger$: Observable<any>): Observable<boolean> => {\n      let path: any[];\n      const pagBy = paginateBy\n      const key = subfieldIdToString(page)\n\n      path = [infRoot, this.model, pagBy, key];\n      const fromToString = getFromTo(page.limit, page.offset)\n      // return this.ngRedux.select<boolean>([...path, 'loading', fromToString])\n      //   .pipe(\n      //     // map(loading => !loading),\n      //     switchMap((loading) => {\n      //       if (loading) return of(false)\n      //       else return trigger$.pipe(mapTo(true))\n      //     }),\n      //     // first(),\n      //   )\n\n      return trigger$.pipe(\n        switchMap(() => this.ngRedux.select<boolean>([...path, 'loading', fromToString])\n          .pipe(\n            first(),\n            map(loading => !loading)\n          )\n        ))\n\n    }\n\n\n    const pipeCount = (page: GvFieldId): Observable<number | undefined> => {\n      let path: any[];\n      const pagBy = paginateBy\n      const key = subfieldIdToString(page)\n\n      path = [infRoot, this.model, pagBy, key];\n      return this.ngRedux.select<number>([...path, 'count'])\n    }\n\n\n    return { pipePage, pipeCount, pipePageLoadNeeded }\n\n  }\n\n\n  pipeItemsInProject<M>(pkProject$: Observable<number | string>, getFkEntity: (item: M) => number) {\n\n    return pipe(\n      switchMap((items: ByPk<M>) => {\n        return pkProject$.pipe(\n          switchMap(pkProject => {\n            const proRelsAndKey$: Observable<{ key: string, rel: ProInfoProjRel }>[] = [];\n            for (const k in items) {\n              if (items.hasOwnProperty(k)) {\n                const item = items[k];\n                proRelsAndKey$.push(\n                  this.ngRedux.select<ProInfoProjRel>(['pro', 'info_proj_rel', 'by_fk_project__fk_entity', pkProject + '_' + getFkEntity(item)])\n                    .pipe(map(rel => ({ key: k, rel })))\n                )\n              }\n            }\n            return combineLatestOrEmpty(proRelsAndKey$).pipe(\n              throttleTime(0),\n              map(proRels => {\n                const itemsInProject: ByPk<M> = {};\n                for (let i = 0; i < proRels.length; i++) {\n                  const proRel = proRels[i];\n                  if (proRel.rel && proRel.rel.is_in_project) {\n                    itemsInProject[proRel.key] = items[proRel.key]\n                  }\n                }\n                return itemsInProject;\n              })\n            )\n          })\n        )\n\n      })\n    )\n\n  }\n\n  pipeItemInProject<M>(pkProject$: Observable<number | string>, getFkEntity: (item: M) => number) {\n    return pipe(\n      switchMap((item: M) => {\n        if (!item) return of(undefined);\n        return pkProject$.pipe(\n          switchMap(pkProject => {\n            const proRel$ = this.ngRedux.select<ProInfoProjRel>(['pro', 'info_proj_rel', 'by_fk_project__fk_entity', pkProject + '_' + getFkEntity(item)])\n            return proRel$.pipe(\n              // filter(proRel => proRel.is_in_project == true),\n              map((proRel) => proRel && proRel.is_in_project == true ? item : undefined)\n            )\n          })\n        )\n      })\n    )\n  }\n}\n\nclass InfPersistentItemSelections extends Selector {\n  private _by_pk_entity$ = this.selector<InfPersistentItem>('by_pk_entity')\n  private _by_fk_class$ = this.selector<ByPk<InfPersistentItem>>('by_fk_class')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public pkProject$: Observable<number | string>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, pkProject$, configs, model) }\n\n  by_pk_entity_key$(key: string | number, ofProject = true) {\n    const selection$ = this._by_pk_entity$.key(key)\n    if (ofProject) return selection$.pipe(this.pipeItemInProject(this.pkProject$, (i) => i.pk_entity))\n    return selection$\n  }\n  by_pk_entity_all$(ofProject = true) {\n    const selection$ = this._by_pk_entity$.all$\n    if (ofProject) return selection$.pipe(this.pipeItemsInProject(this.pkProject$, (i) => i.pk_entity))\n    return selection$\n  }\n  by_fk_class_key$(key: string | number, ofProject = true) {\n    const selection$ = this._by_fk_class$.key(key)\n    if (ofProject) return selection$.pipe(this.pipeItemsInProject(this.pkProject$, (i) => i.pk_entity))\n    return selection$\n  }\n}\n\nclass InfTemporalEntitySelections extends Selector {\n  _by_pk_entity$ = this.selector<InfTemporalEntity>('by_pk_entity')\n  // public by_fk_class$ = this.selector<ByPk<InfTemporalEntity>>('by_fk_class')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public pkProject$: Observable<number | string>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, pkProject$, configs, model) }\n\n  by_pk_entity_key$(key: string | number, ofProject = true) {\n    const selection$ = this._by_pk_entity$.key(key)\n    if (ofProject) return selection$.pipe(this.pipeItemInProject(this.pkProject$, (i) => i.pk_entity))\n    return selection$\n  }\n}\n\n\nclass InfStatementSelections extends Selector {\n\n  public by_pk_entity$ = this.selector<InfStatement>('by_pk_entity')\n  public by_fk_subject_data$ = this.selector<ByPk<InfStatement>>('by_fk_subject_data')\n\n  public pagination$ = this.paginationSelector<number>()\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public pkProject$: Observable<number | string>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, pkProject$, configs, model) }\n\n  by_pk_entity_key$(key: string | number, ofProject = true) {\n    const selection$ = this.by_pk_entity$.key(key)\n    if (ofProject) return selection$.pipe(this.pipeItemInProject(this.pkProject$, (i) => i.pk_entity))\n    return selection$\n  }\n\n  by_subject$(foreignKeys: IndexStatementBySubject, ofProject = true): Observable<InfStatement[]> {\n    const key = indexStatementBySubject(foreignKeys);\n    const selection$ = this.selector<ByPk<InfStatement>>('by_subject').key(key)\n    if (ofProject) {\n      return selection$.pipe(\n        this.pipeItemsInProject(this.pkProject$, (item) => item.pk_entity),\n        map(items => values(items))\n      )\n    }\n    return selection$.pipe(\n      map(items => values(items))\n    );\n  }\n\n  by_subject_and_property$(foreignKeys: IndexStatementBySubjectProperty, ofProject = true): Observable<InfStatement[]> {\n    return this.by_subject_and_property_indexed$(foreignKeys, ofProject).pipe(\n      map(statementIdx => values(statementIdx))\n    )\n  }\n  by_subject_and_property_indexed$(foreignKeys: IndexStatementBySubjectProperty, ofProject = true): Observable<ByPk<InfStatement>> {\n    const key = indexStatementBySubjectProperty(foreignKeys);\n    const selection$ = this.selector<ByPk<InfStatement>>('by_subject+property').key(key)\n    if (ofProject) {\n      return selection$.pipe(this.pipeItemsInProject(this.pkProject$, (item) => item.pk_entity))\n    }\n    return selection$\n  }\n\n  by_object$(foreignKeys: IndexStatementByObject, ofProject = true): Observable<InfStatement[]> {\n    const key = indexStatementByObject(foreignKeys);\n    const selection$ = this.selector<ByPk<InfStatement>>('by_object').key(key)\n    if (ofProject) {\n      return selection$.pipe(\n        this.pipeItemsInProject(this.pkProject$, (item) => item.pk_entity),\n        map(items => values(items))\n      )\n    }\n    return selection$.pipe(\n      map(items => values(items))\n    );\n  }\n\n  by_object_and_property$(foreignKeys: IndexStatementByObjectProperty, ofProject = true): Observable<InfStatement[]> {\n    return this.by_object_and_property_indexed$(foreignKeys, ofProject).pipe(\n      map(statementIdx => values(statementIdx))\n    )\n  }\n\n  by_object_and_property_indexed$(foreignKeys: IndexStatementByObjectProperty, ofProject = true): Observable<ByPk<InfStatement>> {\n    const key = indexStatementByObjectProperty(foreignKeys);\n    const selection$ = this.selector<ByPk<InfStatement>>('by_object+property').key(key)\n    if (ofProject) {\n      return selection$.pipe(\n        this.pipeItemsInProject(this.pkProject$, (item) => item.pk_entity),\n      )\n    }\n    return selection$\n  }\n\n}\n\n\nclass InfTextPropertySelections extends Selector {\n  private _by_pk_entity$ = this.selector<InfTextProperty>('by_pk_entity')\n  private _by_fk_concerned_entity__fk_class_field$ = this.selector<ByPk<InfTextProperty>>('by_fk_concerned_entity__fk_class_field')\n  private _by_fk_concerned_entity$ = this.selector<ByPk<InfTextProperty>>('by_fk_concerned_entity')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public pkProject$: Observable<number | string>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, pkProject$, configs, model) }\n\n  by_pk_entity_key$(key: string | number, ofProject = true) {\n    const selection$ = this._by_pk_entity$.key(key)\n    if (ofProject) return selection$.pipe(this.pipeItemInProject(this.pkProject$, (i) => i.pk_entity))\n    return selection$\n  }\n\n  by_fk_concerned_entity__fk_class_field_indexed$(key: string, ofProject = true): Observable<ByPk<InfTextProperty>> {\n    const selection$ = this._by_fk_concerned_entity__fk_class_field$.key(key)\n    if (ofProject) {\n      return selection$.pipe(\n        this.pipeItemsInProject(this.pkProject$, (item) => item.pk_entity),\n      )\n    }\n    return selection$\n  }\n\n\n  by_fk_concerned_entity_indexed$(key: string | number, ofProject = true): Observable<ByPk<InfTextProperty>> {\n    const selection$ = this._by_fk_concerned_entity$.key(key)\n    if (ofProject) {\n      return selection$.pipe(\n        this.pipeItemsInProject(this.pkProject$, (item) => item.pk_entity),\n      )\n    }\n    return selection$\n  }\n\n}\n\n\nclass InfAppellationSelections extends Selector {\n  public by_pk_entity$ = this.selector<InfAppellation>('by_pk_entity')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public pkProject$: Observable<number | string>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, pkProject$, configs, model) }\n}\n\nclass InfLangStringSelections extends Selector {\n  public by_pk_entity$ = this.selector<InfLangString>('by_pk_entity')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public pkProject$: Observable<number | string>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, pkProject$, configs, model) }\n}\n\nclass InfPlaceSelections extends Selector {\n  public by_pk_entity$ = this.selector<InfPlace>('by_pk_entity')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public pkProject$: Observable<number | string>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, pkProject$, configs, model) }\n}\n\nclass InfTimePrimitiveSelections extends Selector {\n  public by_pk_entity$ = this.selector<InfTimePrimitive>('by_pk_entity')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public pkProject$: Observable<number | string>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, pkProject$, configs, model) }\n}\n\nclass InfLanguageSelections extends Selector {\n  public by_pk_entity$ = this.selector<InfLanguage>('by_pk_entity')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public pkProject$: Observable<number | string>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, pkProject$, configs, model) }\n}\n\nclass InfDimensionSelections extends Selector {\n  public by_pk_entity$ = this.selector<InfDimension>('by_pk_entity')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public pkProject$: Observable<number | string>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, pkProject$, configs, model) }\n}\n\nexport class InfSelector {\n\n  persistent_item$ = new InfPersistentItemSelections(this.ngRedux, this.pkProject$, infDefinitions, 'persistent_item');\n  temporal_entity$ = new InfTemporalEntitySelections(this.ngRedux, this.pkProject$, infDefinitions, 'temporal_entity');\n  statement$ = new InfStatementSelections(this.ngRedux, this.pkProject$, infDefinitions, 'statement');\n  appellation$ = new InfAppellationSelections(this.ngRedux, this.pkProject$, infDefinitions, 'appellation');\n  place$ = new InfPlaceSelections(this.ngRedux, this.pkProject$, infDefinitions, 'place');\n  text_property$ = new InfTextPropertySelections(this.ngRedux, this.pkProject$, infDefinitions, 'text_property');\n  lang_string$ = new InfLangStringSelections(this.ngRedux, this.pkProject$, infDefinitions, 'lang_string');\n  time_primitive$ = new InfTimePrimitiveSelections(this.ngRedux, this.pkProject$, infDefinitions, 'time_primitive');\n  language$ = new InfLanguageSelections(this.ngRedux, this.pkProject$, infDefinitions, 'language');\n  dimension$ = new InfDimensionSelections(this.ngRedux, this.pkProject$, infDefinitions, 'dimension');\n\n  pkEntityModelMap$ = this.ngRedux.select([infRoot, PR_ENTITY_MODEL_MAP]);\n  constructor(public ngRedux: NgRedux<IAppState>, public pkProject$: Observable<number | string>) { }\n\n  getModelOfEntity$(pkEntity: number) {\n    return this.ngRedux.select<EntityModelAndClass<InfModelName>>([infRoot, PR_ENTITY_MODEL_MAP, pkEntity]);\n  }\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { ByPk, IAppState, ProActions, proDefinitions, proRoot, ReducerConfigCollection } from '@kleiolab/lib-redux';\nimport { ProDfhClassProjRel, ProDfhProfileProjRel, ProInfoProjRel, ProTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { ProAnalysis, ProClassFieldConfig, ProProject } from '@kleiolab/lib-sdk-lb4';\nimport { toString } from 'ramda';\nimport { Observable } from 'rxjs';\n\n\n\n\nclass Selector {\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { }\n\n  selector<M>(indexKey: string): { all$: Observable<ByPk<M>>, key: (x: string | (string | number)[]) => Observable<M> } {\n\n    const all$ = this.ngRedux.select<ByPk<M>>([proRoot, this.model, indexKey])\n\n    const key = (x: string | (string | number)[]): Observable<M> => {\n      const k = typeof x === 'string' ? x : x.map((part: string | number) => toString(part)).join('_');;\n\n      return this.ngRedux.select<M>([proRoot, this.model, indexKey, k])\n    }\n\n    return { all$, key }\n  }\n}\n\nclass ProProjectSelector extends Selector {\n  public by_pk_entity$ = this.selector<ProProject>('by_pk_entity')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\n\nclass ProInfoProjRelSelector extends Selector {\n  public by_fk_project__fk_entity$ = this.selector<ProInfoProjRel>('by_fk_project__fk_entity')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\n\nclass ProDfhClassProjRelSelector extends Selector {\n  public by_fk_project__enabled_in_entities$ = this.selector<ByPk<ProDfhClassProjRel>>('by_fk_project__enabled_in_entities')\n  public by_fk_project__fk_class$ = this.selector<ProDfhClassProjRel>('by_fk_project__fk_class')\n  public by_fk_project$ = this.selector<ProDfhClassProjRel>('by_fk_project')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\nclass ProDfhProfileProjRelSelector extends Selector {\n  public by_fk_project__enabled$ = this.selector<ByPk<ProDfhProfileProjRel>>('by_fk_project__enabled')\n  public by_fk_project__fk_profile$ = this.selector<ProDfhProfileProjRel>('by_fk_project__fk_profile')\n  public by_fk_project$ = this.selector<ProDfhProfileProjRel>('by_fk_project')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\nclass ProClassFieldConfigSelector extends Selector {\n  public by_fk_project__fk_class$ = this.selector<ByPk<ProClassFieldConfig>>('by_fk_project__fk_class')\n  public by_pk_entity$ = this.selector<ProClassFieldConfig>('by_pk_entity')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\n\nclass ProTextPropertySelector extends Selector {\n  public by_fks$ = this.selector<ProTextProperty>('by_fks')\n  public by_fks_without_lang$ = this.selector<ByPk<ProTextProperty>>('by_fks_without_lang')\n  // public fk_project__fk_dfh_property__fk_dfh_property_domain__fk_system_type__fk_language$ = this.selector<ByPk<ProTextProperty>>('fk_project__fk_dfh_property__fk_dfh_property_domain__fk_system_type__fk_language')\n  // public fk_project__fk_dfh_property__fk_dfh_property_range__fk_system_type__fk_language$ = this.selector<ByPk<ProTextProperty>>('fk_project__fk_dfh_property__fk_dfh_property_range__fk_system_type__fk_language')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\n\nclass ProAnalysisSelector extends Selector {\n\n  public by_pk_entity$ = this.selector<ProAnalysis>('by_pk_entity')\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProSelector extends ProActions {\n\n  project$ = new ProProjectSelector(this.ngRedux, proDefinitions, 'project');\n  info_proj_rel$ = new ProInfoProjRelSelector(this.ngRedux, proDefinitions, 'info_proj_rel');\n  dfh_class_proj_rel$ = new ProDfhClassProjRelSelector(this.ngRedux, proDefinitions, 'dfh_class_proj_rel');\n  dfh_profile_proj_rel$ = new ProDfhProfileProjRelSelector(this.ngRedux, proDefinitions, 'dfh_profile_proj_rel');\n  class_field_config$ = new ProClassFieldConfigSelector(this.ngRedux, proDefinitions, 'class_field_config');\n  text_property$ = new ProTextPropertySelector(this.ngRedux, proDefinitions, 'text_property');\n  analysis$ = new ProAnalysisSelector(this.ngRedux, proDefinitions, 'analysis');\n\n  constructor(public ngRedux: NgRedux<IAppState>) {\n    super(ngRedux)\n  }\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { ByPk, IAppState, ReducerConfigCollection, SysActions, SysConfigSlice, sysDefinitions, SysRelevantClassSlice, sysRoot } from '@kleiolab/lib-redux';\nimport { SysSystemRelevantClass } from '@kleiolab/lib-sdk-lb3';\nimport { SysConfigValue } from '@kleiolab/lib-sdk-lb4';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\nclass Selector<Slice> {\n\n  slice$ = this.ngRedux.select<Slice>([sysRoot, this.model])\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { }\n\n  selector<M>(indexKey: string): { all$: Observable<ByPk<M>>, key: (x) => Observable<M> } {\n\n    const all$ = this.ngRedux.select<ByPk<M>>([sysRoot, this.model, indexKey])\n\n    const key = (x): Observable<M> => this.ngRedux.select<M>([sysRoot, this.model, indexKey, x])\n\n    return { all$, key }\n  }\n}\n\n// SystemRelevantClass Selectors\nclass SysSystemRelevantClassSelections extends Selector<SysRelevantClassSlice> {\n  public by_pk_entity$ = this.selector<SysSystemRelevantClass>('by_pk_entity');\n  public by_fk_class$ = this.selector<ByPk<SysSystemRelevantClass>>('by_fk_class');\n  public by_required_by_sources$ = this.selector<ByPk<SysSystemRelevantClass>>('by_required_by_sources');\n  public by_required$ = this.selector<ByPk<SysSystemRelevantClass>>('by_required');\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\n// // AnalysisType Selectors\n// class SysAnalysisTypeSelections extends Selector<SysAnalysisTypeSlice> {\n//   public by_pk_entity$ = this.selector<SysAnalysisType>('by_pk_entity');\n//   constructor(\n//     public ngRedux: NgRedux<IAppState>,\n//     public configs: ReducerConfigCollection,\n//     public model: string\n//   ) { super(ngRedux, configs, model) }\n// }\n\n\n// Config Selectors\nclass SysConfigSelections extends Selector<SysConfigSlice> {\n  public main$ = this.ngRedux.select<SysConfigValue>([sysRoot, this.model, 'by_main', 'main'])\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SysSelector extends SysActions {\n  system_relevant_class$ = new SysSystemRelevantClassSelections(this.ngRedux, sysDefinitions, 'system_relevant_class')\n  // analysis_type$ = new SysAnalysisTypeSelections(this.ngRedux, sysDefinitions, 'analysis_type')\n\n  config$ = new SysConfigSelections(this.ngRedux, sysDefinitions, 'config')\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { ByPk, IAppState, ReducerConfigCollection, TabActions, tabDefinitions, tabRoot } from '@kleiolab/lib-redux';\nimport { TabCell } from '@kleiolab/lib-sdk-lb4';\nimport { Observable } from 'rxjs';\n\nclass Selector {\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { }\n\n  selector<M>(indexKey: string): { all$: Observable<ByPk<M>>, key: (x) => Observable<M> } {\n\n    const all$ = this.ngRedux.select<ByPk<M>>([tabRoot, this.model, indexKey])\n\n    const key = (x): Observable<M> => this.ngRedux.select<M>([tabRoot, this.model, indexKey, x])\n\n    return { all$, key }\n  }\n}\n\nclass TabCellSelections extends Selector {\n  public by_pk_cell$ = this.selector<TabCell>('by_pk_cell')\n  public by_fk_column_fk_row$ = this.selector<ByPk<TabCell>>('by_fk_column_fk_row')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TabSelector extends TabActions {\n\n  cell$ = new TabCellSelections(this.ngRedux, tabDefinitions, 'cell');\n\n  constructor(public ngRedux: NgRedux<IAppState>) {\n    super(ngRedux)\n  }\n\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { ByPk, IAppState, ReducerConfigCollection, WarActions, warDefinitions, warRoot } from '@kleiolab/lib-redux';\nimport { WarEntityPreview } from '@kleiolab/lib-sdk-lb4';\nimport { toString } from 'ramda';\nimport { Observable } from 'rxjs';\n\n\nclass Selector {\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { }\n\n  selector<M>(indexKey: string): { all$: Observable<ByPk<M>>, key: (x: string | (string | number)[]) => Observable<M> } {\n\n    const all$ = this.ngRedux.select<ByPk<M>>([warRoot, this.model, indexKey])\n\n    const key = (x: string | (string | number)[]): Observable<M> => {\n      const k = typeof x === 'string' ? x : x.map((part: string | number) => toString(part)).join('_');;\n\n      return this.ngRedux.select<M>([warRoot, this.model, indexKey, k])\n    }\n\n    return { all$, key }\n  }\n}\n\nclass WarEntityPreviewSelector extends Selector {\n  public by_pk_entity$ = this.selector<WarEntityPreview>('by_pk_entity')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WarSelector extends WarActions {\n\n  entity_preview$ = new WarEntityPreviewSelector(this.ngRedux, warDefinitions, 'entity_preview');\n\n  constructor(public ngRedux: NgRedux<IAppState>) {\n    super(ngRedux)\n  }\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { IAppState } from '@kleiolab/lib-redux';\nimport { distinctUntilChanged, filter } from 'rxjs/operators';\nimport { InfSelector } from '../selectors/inf.service';\nimport { DatSelector } from '../selectors/dat.service';\nimport { TabSelector } from '../selectors/tab.service';\nimport { ProSelector } from '../selectors/pro.service';\nimport { DfhSelector } from '../selectors/dfh.service';\nimport { SysSelector } from '../selectors/sys.service';\n\n/**\n * This class provides access to the part of the redux store\n * that mirrors the geovistory schema (inf, dat, sys, etc.)\n *\n * The selecors of inf are wrapped into helpers that select\n * the items that are in the current project (redux.activeProject)\n * using pro.info_proj_rel\n *\n * All other selectors (dat, sys, tab, pro, dfh) are directly\n * accessing the store.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SchemaSelectorsService {\n  inf$: InfSelector;\n\n  constructor(\n    ngRedux: NgRedux<IAppState>,\n    public dat$: DatSelector,\n    public tab$: TabSelector,\n    public pro$: ProSelector,\n    public dfh$: DfhSelector,\n    public sys$: SysSelector,\n  ) {\n    const pkProject$ = ngRedux.select<number>(['activeProject', 'pk_project']).pipe(\n      filter(p => p !== undefined),\n      distinctUntilChanged((x, y) => {\n        return x === y\n      })\n    );\n    this.inf$ = new InfSelector(ngRedux, pkProject$);\n  }\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { IAppState, SchemaService } from '@kleiolab/lib-redux';\nimport { GvSchemaObject, InfLanguage, ProProject, WarEntityPreview } from '@kleiolab/lib-sdk-lb4';\nimport { EntityPreviewSocket } from '@kleiolab/lib-sockets';\nimport { equals } from 'ramda';\nimport { combineLatest, Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, first, switchMap } from 'rxjs/operators';\nimport { cache } from '../decorators/method-decorators';\nimport { SchemaSelectorsService } from './schema-selectors.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActiveProjectPipesService {\n  public pkProject$: Observable<number>;\n\n  requestedEntityPreviews: { [pkEntity: number]: boolean } = {}\n\n\n  constructor(\n    private ngRedux: NgRedux<IAppState>,\n    private s: SchemaSelectorsService,\n    private entityPreviewSocket: EntityPreviewSocket,\n    private schemaService: SchemaService\n\n  ) {\n    this.pkProject$ = ngRedux.select<number>(['activeProject', 'pk_project'])\n      .pipe(\n        filter(p => p !== undefined),\n        distinctUntilChanged((x, y) => {\n          return x === y\n        })\n      );\n\n\n\n    this.entityPreviewSocket.fromEvent('reconnect').subscribe(disconnect => {\n      // get all EntityPreview keys from state and send them to the\n      // server so that they will be streamed. This is important for\n      // when connection was lost.\n      this.pkProject$.pipe(first())\n        .subscribe((pkProject) => {\n          const pks = Object.keys({\n            ...this.ngRedux.getState().war.entity_preview,\n            ...this.requestedEntityPreviews\n          });\n          if (pks.length) {\n            this.entityPreviewSocket.emit('addToStream', {\n              pkProject,\n              pks\n            })\n          }\n        })\n    })\n\n    combineLatest(this.schemaService.schemaObjectStored$, this.pkProject$).subscribe(([object, pkProject]) => {\n      this.extendEntityPreviewStream(object, pkProject)\n    })\n\n  }\n  @cache({ refCount: false }) pipeActiveProject(): Observable<ProProject> {\n    return this.pkProject$.pipe(\n      switchMap(pkProject => this.s.pro$.project$.by_pk_entity$.key(pkProject.toString()))\n    ).pipe(filter(l => !!l))\n  }\n  @cache({ refCount: false }) pipeActiveDefaultLanguage(): Observable<InfLanguage> {\n\n    return this.pipeActiveProject().pipe(\n      filter(p => !!p),\n      switchMap(project => {\n\n        return this.s.inf$.language$.by_pk_entity$.key(project.fk_language.toString())\n      })\n    ).pipe(filter(l => !!l))\n  }\n\n\n\n  /**\n   * Loads a data unit preview, if it is not yet available in state or if\n   * forceReload is true;\n   *\n   * @param pkEntity\n   * @param forceReload\n   */\n  streamEntityPreview(pkEntity: number, forceReload?: boolean): Observable<WarEntityPreview> {\n    const state = this.ngRedux.getState();\n\n    if (\n      (\n        !(((state.war || {}).entity_preview || {}).by_pk_entity || {})[pkEntity] &&\n        !this.requestedEntityPreviews[pkEntity]\n      ) || forceReload) {\n      this.pkProject$.pipe(first(pk => !!pk)).subscribe(pkProject => {\n\n        this.entityPreviewSocket.emit('addToStream', {\n          pkProject,\n          pks: [pkEntity]\n        })\n        // const pkUiContext = SysConfig.PK_UI_CONTEXT_DATAUNITS_EDITABLE;\n\n        // this.ngRedux.dispatch(this.actions.loadEntityPreview(pkProject, pkEntity, pkUiContext))\n        this.requestedEntityPreviews[pkEntity] = true;\n      })\n    }\n\n    return this.ngRedux.select<WarEntityPreview>(['war', 'entity_preview', 'by_pk_entity', pkEntity])\n      .pipe(\n        distinctUntilChanged<WarEntityPreview>(equals),\n        filter(prev => (!!prev))\n      )\n  }\n\n  /**\n   * Adds the entity previews to the streamed entity previews (for ws communication)\n   * @param object\n   * @param pkProject\n   */\n  private extendEntityPreviewStream(object: GvSchemaObject, pkProject: number) {\n\n    if (object && object.war && object.war.entity_preview && object.war.entity_preview.length) {\n      this.entityPreviewSocket.emit('extendStream', {\n        pkProject,\n        pks: object.war.entity_preview.map(p => p.pk_entity)\n      });\n    }\n  }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { DfhConfig, ProConfig, SysConfig } from '@kleiolab/lib-config';\nimport { dfhLabelByFksKey, proClassFieldConfgByProjectAndClassKey, textPropertyByFksKey } from '@kleiolab/lib-redux';\nimport { ClassConfig, DfhClass, DfhLabel, DfhProperty, GvSubentitFieldPageReq, GvSubentityFieldTargets, GvSubentityTargetType, GvTargetType, InfLanguage, ProClassFieldConfig, ProTextProperty, RelatedProfile, SysConfigFieldDisplay, SysConfigSpecialFields, SysConfigValue } from '@kleiolab/lib-sdk-lb4';\nimport { combineLatestOrEmpty } from '@kleiolab/lib-utils';\nimport { flatten, indexBy, uniq, values } from 'ramda';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { filter, map, shareReplay, startWith, switchMap, tap } from 'rxjs/operators';\nimport { cache } from '../decorators/method-decorators';\nimport { Field } from '../models/Field';\nimport { FieldPlaceOfDisplay } from '../models/FieldPosition';\nimport { Profiles } from '../models/Profiles';\nimport { SpecialFieldType } from '../models/SpecialFieldType';\nimport { Subfield } from '../models/Subfield';\nimport { ActiveProjectPipesService } from './active-project-pipes.service';\nimport { SchemaSelectorsService } from './schema-selectors.service';\n\n\n// this is the\nexport type TableName = 'appellation' | 'language' | 'place' | 'time_primitive' | 'lang_string' | 'dimension' | 'persistent_item' | 'temporal_entity'\n\nexport interface DfhPropertyStatus extends DfhProperty {\n  // true, if removed from all profiles of the current project\n  removedFromAllProfiles: boolean\n}\n\ntype LabelOrigin = 'of project in project lang' | 'of default project in project lang' | 'of default project in english' | 'of ontome in project lang' | 'of ontome in english'\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * This Service provides a collection of pipes that aggregate or transform configuration data.\n * When talking about configuration, we mean the conceptual reference model and the additional\n * configurations on system and project level.\n * For Example\n * - the fields of a class\n * - the labels of classes and properties\n */\nexport class ConfigurationPipesService {\n\n  constructor(\n    private a: ActiveProjectPipesService,\n    private s: SchemaSelectorsService,\n  ) { }\n\n\n  /**\n  * returns observable number[] wher the numbers are the pk_profile\n  * of all profiles that are enabled by the given project.\n  * The array will always include PK_PROFILE_GEOVISTORY_BASIC\n  */\n  // @spyTag\n  // @cache({ refCount: false })\n  public pipeProfilesEnabledByProject(): Observable<number[]> {\n    return this.a.pkProject$.pipe(\n      switchMap(pkProject => this.s.pro$.dfh_profile_proj_rel$.by_fk_project__enabled$\n        .key(pkProject + '_true').pipe(\n          map(projectProfileRels => values(projectProfileRels)\n            .filter(rel => rel.enabled)\n            .map(rel => rel.fk_profile)\n          ),\n          map(enabled => [...enabled, DfhConfig.PK_PROFILE_GEOVISTORY_BASIC]),\n        )),\n      shareReplay()\n    )\n  }\n\n  /**\n   * Pipe all fields of given class\n   * The Fields are not ordered and not filtered\n   * If you want specific subsets of Fields and/or ordered Fields, use the pipes\n   * that build on this pipe.\n   */\n  @cache({ refCount: false }) public pipeFields(pkClass: number, noNesting = false): Observable<Field[]> {\n\n    return combineLatest(\n      // pipe source class\n      this.s.dfh$.class$.by_pk_class$.key(pkClass),\n      // pipe outgoing properties\n      this.s.dfh$.property$.by_has_domain$.key(pkClass).pipe(map(indexed => values(indexed))),\n      // pipe ingoing properties\n      this.s.dfh$.property$.by_has_range$.key(pkClass).pipe(map(indexed => values(indexed))),\n      // pipe sys config\n      this.s.sys$.config$.main$.pipe(filter(x => !!x)),\n      // pipe enabled profiles\n      this.pipeProfilesEnabledByProject(),\n    ).pipe(\n      switchMap(([sourceKlass, outgoingProps, ingoingProps, sysConfig, enabledProfiles]) => {\n        const isEnabled = (prop: DfhProperty): boolean => enabledProfiles.some(\n          (enabled) => prop.profiles.map(p => p.fk_profile).includes(enabled)\n        );\n        const outP = outgoingProps.filter((prop) => isEnabled(prop))\n        let inP = ingoingProps.filter((prop) => isEnabled(prop))\n\n        if (pkClass === DfhConfig.ClASS_PK_TIME_SPAN) {\n          // remove the has time span property\n          inP = []\n\n        } else {\n          // // if class is not appellation for language, add appellation for language (1111) property\n          // if (pkClass !== DfhConfig.CLASS_PK_APPELLATION_FOR_LANGUAGE) {\n          //   ingoingProps.push(createAppellationProperty(pkClass))\n          // }\n\n          // if is temporal entity, add has time span property\n          if (sourceKlass.basic_type === 9) {\n            outP.push(createHasTimeSpanProperty(pkClass))\n          }\n\n          outP.push(createHasDefinitionProperty(pkClass))\n        }\n        return combineLatest(\n          this.pipePropertiesToSubfields(outP, true, enabledProfiles, sysConfig, noNesting),\n          this.pipePropertiesToSubfields(inP, false, enabledProfiles, sysConfig, noNesting),\n          this.pipeFieldConfigs(pkClass)\n        ).pipe(\n          map(([subfields1, subfields2, fieldConfigs]) => {\n            const subfields = [...subfields1, ...subfields2]\n\n            const fieldConfigIdx = indexBy((x) => [\n              (x.fk_domain_class || x.fk_range_class),\n              x.fk_property,\n              !!x.fk_domain_class\n            ].join('_'), fieldConfigs)\n\n            const uniqFields: { [uid: string]: Field } = {}\n            const uniqSubfieldCache: { [uid: string]: true } = {}\n\n\n            // group by source, pkProperty and isOutgoing\n            for (const s of subfields) {\n              const fieldId = [s.sourceClass, s.property.fkProperty, s.isOutgoing].join('_')\n              const subfieldId = [s.sourceClass, s.property.fkProperty, s.isOutgoing, s.targetClass].join('_')\n              const fieldConfig: ProClassFieldConfig | undefined = fieldConfigIdx[fieldId];\n              // the first time the group is established\n              if (!uniqFields[fieldId]) {\n                let isSpecialField: SpecialFieldType = false;\n                if (s.isHasTypeField) isSpecialField = 'has-type';\n                else if (s.property.fkProperty === DfhConfig.PROPERTY_PK_HAS_TIME_SPAN) isSpecialField = 'time-span';\n                uniqFields[fieldId] = {\n                  sourceClass: s.sourceClass,\n                  sourceClassLabel: s.sourceClassLabel,\n                  sourceMaxQuantity: s.sourceMaxQuantity,\n                  sourceMinQuantity: s.sourceMinQuantity,\n                  targetMinQuantity: s.targetMinQuantity,\n                  targetMaxQuantity: s.targetMaxQuantity,\n                  label: s.label,\n                  isHasTypeField: s.isHasTypeField,\n                  property: s.property,\n                  isOutgoing: s.isOutgoing,\n                  identityDefiningForSource: s.identityDefiningForSource,\n                  identityDefiningForTarget: s.identityDefiningForTarget,\n                  ontoInfoLabel: s.ontoInfoLabel,\n                  ontoInfoUrl: s.ontoInfoUrl,\n                  allSubfieldsRemovedFromAllProfiles: s.removedFromAllProfiles,\n                  targetClasses: [s.targetClass],\n                  fieldConfig,\n                  placeOfDisplay: getPlaceOfDisplay(sysConfig.specialFields, s, fieldConfig),\n                  isSpecialField,\n                  targets: {\n                    [s.targetClass]: {\n                      listType: s.listType,\n                      removedFromAllProfiles: s.removedFromAllProfiles,\n                      targetClass: s.targetClass,\n                      targetClassLabel: s.targetClassLabel\n                    }\n                  }\n                }\n\n                // mark subfield as added\n                uniqSubfieldCache[subfieldId] = true;\n\n\n              }\n              // ignore duplications of subfields\n              else if (!uniqSubfieldCache[subfieldId]) {\n                uniqFields[fieldId].allSubfieldsRemovedFromAllProfiles === false ?\n                  uniqFields[fieldId].allSubfieldsRemovedFromAllProfiles = false :\n                  uniqFields[fieldId].allSubfieldsRemovedFromAllProfiles = s.removedFromAllProfiles;\n                uniqFields[fieldId].targetClasses.push(s.targetClass)\n                uniqFields[fieldId].targets[s.targetClass] = {\n                  listType: s.listType,\n                  removedFromAllProfiles: s.removedFromAllProfiles,\n                  targetClass: s.targetClass,\n                  targetClassLabel: s.targetClassLabel\n                }\n              }\n            }\n\n            return values(uniqFields)\n          })\n        )\n      })\n    )\n  }\n\n\n\n  /**\n   * pipe all the specific fields of a class,\n   * ordered by the position of the field within the specific fields\n   */\n  // @spyTag\n  @cache({ refCount: false }) public pipeSpecificFieldOfClass(pkClass: number, noNesting = false): Observable<Field[]> {\n\n    return this.pipeFields(pkClass, noNesting).pipe(\n      map(fields => fields\n        // filter fields that are displayd in specific fields\n        .filter(field => field.placeOfDisplay.specificFields)\n        // sort fields by the position defined in the specific fields\n        .sort((a, b) => a.placeOfDisplay.specificFields.position - b.placeOfDisplay.specificFields.position)\n      )\n    )\n  }\n\n  /**\n    * pipe all the basic fields of a class,\n    * ordered by the position of the field within the basic fields\n    */\n  // @spyTag\n  @cache({ refCount: false }) public pipeBasicFieldsOfClass(pkClass: number, noNesting = false): Observable<Field[]> {\n    return this.pipeFields(pkClass, noNesting).pipe(\n      map(fields => fields\n        // filter fields that are displayd in basic fields\n        .filter(field => field.placeOfDisplay.basicFields)\n        // sort fields by the position defined in the basic fields\n        .sort((a, b) => a.placeOfDisplay.basicFields.position - b.placeOfDisplay.basicFields.position)\n      )\n    )\n  }\n\n\n\n\n  /**\n     * Pipes the fields for temporal entity forms\n     * - the specific fields\n     * - the when field\n     * - if available: the type field\n     */\n  // @spyTag\n  @cache({ refCount: false }) public pipeFieldsForTeEnForm(pkClass: number, noNesting = false): Observable<Field[]> {\n    return this.pipeFields(pkClass, noNesting).pipe(\n      // filter fields that are displayd in specific fields\n      map(allFields => {\n        const fields = allFields\n          // filter fields that are displayd in specific fields and not removed from all profiles\n          .filter(field => (field.placeOfDisplay.specificFields && field.allSubfieldsRemovedFromAllProfiles === false))\n          // sort fields by the position defined in the specific fields\n          .sort((a, b) => a.placeOfDisplay.specificFields.position - a.placeOfDisplay.specificFields.position)\n\n        const whenField = allFields.find(field => field.property.fkProperty === DfhConfig.PROPERTY_PK_HAS_TIME_SPAN)\n        if (whenField) fields.push(whenField)\n\n        const typeField = allFields.find(field => field.isHasTypeField)\n        if (typeField) fields.push(typeField)\n\n        return fields;\n      })\n    )\n  }\n\n\n\n\n\n\n  /**\n   * Pipes the fields of given class in this order:\n   * - basic fields\n   * - specific fields\n   */\n  // @spyTag\n  @cache({ refCount: false }) pipeBasicAndSpecificFields(pkClass: number, noNesting = false): Observable<Field[]> {\n    return combineLatest(\n      this.pipeBasicFieldsOfClass(pkClass, noNesting),\n      this.pipeSpecificFieldOfClass(pkClass, noNesting)\n    )\n      .pipe(\n        map(([a, b]) => [...a, ...b])\n      )\n  }\n\n  /**\n  * Pipes the fields of given class in this order:\n  * - specific fields\n  * - basic fields\n  */\n  // @spyTag\n  @cache({ refCount: false }) pipeSpecificAndBasicFields(pkClass: number, noNesting = false): Observable<Field[]> {\n    return combineLatest(\n      this.pipeSpecificFieldOfClass(pkClass, noNesting),\n      this.pipeBasicFieldsOfClass(pkClass, noNesting),\n    )\n      .pipe(\n        map(([a, b]) => [...a, ...b])\n      )\n  }\n\n\n  @cache({ refCount: false }) pipePropertiesToSubfields(\n    properties: DfhProperty[],\n    isOutgoing: boolean,\n    enabledProfiles: number[],\n    sysConfig: SysConfigValue,\n    noNesting = false\n  ): Observable<Subfield[]> {\n    return combineLatestOrEmpty(\n      properties.map(p => {\n        return this.pipeSubfield(isOutgoing, p, sysConfig, enabledProfiles, noNesting);\n      })\n    )\n\n  }\n\n\n  @cache({ refCount: false })\n  pipeSubfieldIdToSubfield(sourceClass: number, property: number, targetClass: number, isOutgoing: boolean, noNesting = false): Observable<Subfield> {\n    const domain = isOutgoing ? sourceClass : targetClass;\n    const range = isOutgoing ? targetClass : sourceClass;\n    return combineLatest(\n      this.s.dfh$.property$.pk_property__has_domain__has_range$.key([property, domain, range].join('_'))\n        .pipe(filter(x => {\n          return !!x\n        })),\n      this.s.sys$.config$.main$.pipe(filter(x => {\n        return !!x\n      })),\n      this.pipeProfilesEnabledByProject().pipe(filter(x => {\n        return !!x\n      })),\n    ).pipe(\n      switchMap(([dfhProp, sysConf, enabledProfiles]) => this.pipeSubfield(\n        isOutgoing,\n        dfhProp,\n        sysConf,\n        enabledProfiles,\n        noNesting\n      ))\n    )\n  }\n\n\n  private pipeSubfield(\n    isOutgoing: boolean,\n    p: DfhProperty,\n    sysConfig: SysConfigValue,\n    enabledProfiles: number[],\n    noNesting = false\n  ): Observable<Subfield> {\n    const o = isOutgoing;\n    const targetClass = o ? p.has_range : p.has_domain;\n    const sourceClass = o ? p.has_domain : p.has_range;\n    const targetMaxQuantity = o ?\n      p.range_instances_max_quantifier :\n      p.domain_instances_max_quantifier;\n    const sourceMaxQuantity = o ?\n      p.domain_instances_max_quantifier :\n      p.range_instances_max_quantifier;\n    const targetMinQuantity = o ?\n      p.range_instances_min_quantifier :\n      p.domain_instances_min_quantifier;\n    const sourceMinQuantity = o ?\n      p.domain_instances_min_quantifier :\n      p.range_instances_min_quantifier;\n\n    // console.log('pppp wanted: ', [sourceClass, p.pk_property, targetClass, isOutgoing])\n\n    return combineLatest(\n      this.pipeClassLabel(sourceClass).pipe(tap(x => {\n        // console.log('pppp found sourceClassLabel: ', [sourceClass, p.pk_property, targetClass, isOutgoing])\n\n        return x\n      })),\n      this.pipeClassLabel(targetClass).pipe(tap(x => {\n        // console.log('pppp found targetClassLabel: ', [sourceClass, p.pk_property, targetClass, isOutgoing])\n\n        return x\n      })),\n      this.pipeSubfieldTypeOfClass(sysConfig, targetClass, targetMaxQuantity, p.pk_property, noNesting).pipe(tap(x => {\n        // console.log('pppp found subfieldType: ', [sourceClass, p.pk_property, targetClass, isOutgoing])\n        return x\n      })),\n      this.pipeFieldLabel(p.pk_property, isOutgoing ? p.has_domain : null, isOutgoing ? null : p.has_range).pipe(tap(x => {\n        // console.log('pppp found fieldLabel: ', [sourceClass, p.pk_property, targetClass, isOutgoing])\n        return x\n      })),\n    )\n      .pipe(map(([sourceClassLabel, targetClassLabel, listType, label]\n      ) => {\n\n        // console.log('pppp found: ', [sourceClass, p.pk_property, targetClass, isOutgoing])\n\n        const node: Subfield = {\n          listType,\n          sourceClass,\n          sourceClassLabel,\n          sourceMaxQuantity,\n          sourceMinQuantity,\n          targetClass,\n          targetClassLabel,\n          targetMinQuantity,\n          targetMaxQuantity,\n          label,\n          isHasTypeField: o && p.is_has_type_subproperty,\n          property: { fkProperty: p.pk_property },\n          isOutgoing: o,\n          identityDefiningForSource: o ? p.identity_defining : false,\n          identityDefiningForTarget: o ? false : p.identity_defining,\n          ontoInfoLabel: p.identifier_in_namespace,\n          ontoInfoUrl: 'https://ontome.dataforhistory.org/property/' + p.pk_property,\n          removedFromAllProfiles: isRemovedFromAllProfiles(enabledProfiles, (p.profiles || [])),\n        };\n        return node;\n      }));\n  }\n\n  /**\n   * Pipes the type of Subfield for a given class\n   *\n   * Currently (to be revised if good) sublcasses of E55 Type,\n   * that are the target of a field with targetMaxQantity=1,\n   * get Subfield type 'hasType'.\n   * Therefore targetMaxQuantity is needed.\n   *\n   * If we are nesting subfields, we'll end up with circular fields.\n   * E.g.: Person 21 -> has appellation 1111 -> AppeTeEn 365 -> is appellation of 1111 -> Person 21\n   * In order to detect them, we can additionally pass in the parent property.\n   *\n   * This behavior has to be revised, because it can lead to problems\n   * when the Subfield belongs to a Field with multiple target classes\n   * (and thus Subfields) because the UI then does not allow to choose\n   * the right target class.\n   */\n  // @spyTag\n  @cache({ refCount: false }) pipeSubfieldTypeOfClass(config: SysConfigValue, pkClass: number, targetMaxQuantity: number, parentProperty?: number, noNesting = false): Observable<GvTargetType> {\n    return this.s.dfh$.class$.by_pk_class$.key(pkClass).pipe(\n      filter(i => !!i),\n      switchMap((klass) => this.pipeSubfieldType(config, klass, targetMaxQuantity, parentProperty, noNesting))\n    )\n  }\n\n\n  pipeSubfieldType(config: SysConfigValue, klass: DfhClass, targetMaxQuantity: number, parentProperty?: number, noNesting = false): Observable<GvTargetType> {\n\n    const res = (x: GvTargetType) => new BehaviorSubject(x)\n    let classConfig: ClassConfig\n    if (config) classConfig = config.classes[klass.pk_class];\n    if (classConfig && classConfig.valueObjectType) {\n      return res(classConfig.valueObjectType)\n    }\n\n\n    else if (klass.basic_type === 30 && targetMaxQuantity == 1) {\n      return res({ typeItem: 'true' })\n    }\n    // TODO add this to sysConfigValue\n    else if (klass.pk_class === DfhConfig.ClASS_PK_TIME_SPAN) {\n      return res({ timeSpan: 'true' })\n    }\n    else if (klass.basic_type === 8 || klass.basic_type === 30 || noNesting) {\n      return res({ entityPreview: 'true' })\n    }\n    else {\n      // pipe the subfields of the temporalEntity class\n      const noNest = true;\n      return this.pipeSpecificAndBasicFields(klass.pk_class, noNest).pipe(\n        map(fields => {\n          const subentitySubfieldPage: GvSubentitFieldPageReq[] = []\n          for (const field of fields) {\n            // for each of these subfields\n            // create page:GvSubfieldPage\n\n            const nestedTargets: GvSubentityFieldTargets = {};\n            for (const key in field.targets) {\n              if (Object.prototype.hasOwnProperty.call(field.targets, key)) {\n                const listType = field.targets[key].listType;\n                // put temporalEntity to entityPreview\n                const subTargetType: GvSubentityTargetType = listType.temporalEntity ?\n                  { entityPreview: 'true' } :\n                  listType\n                nestedTargets[key] = subTargetType\n              }\n            }\n            let isCircular = false;\n            if (\n              parentProperty &&\n              field.property.fkProperty == parentProperty &&\n              field.targetMaxQuantity === 1\n            ) {\n              isCircular = true\n            }\n            const nestedPage: GvSubentitFieldPageReq = {\n              targets: nestedTargets,\n              page: {\n                property: field.property,\n                isOutgoing: field.isOutgoing,\n                limit: 1,\n                offset: 0,\n                isCircular\n              }\n            }\n            subentitySubfieldPage.push(nestedPage)\n          }\n          return { temporalEntity: subentitySubfieldPage }\n        }),\n\n      )\n    }\n  }\n\n\n  /**\n   * Gets class field configs of given pkClass\n   *\n   * - of active project, if any, else\n   * - of default config project, else\n   * - empty array\n   *\n   */\n  // @spyTag\n  @cache({ refCount: false }) pipeFieldConfigs(pkClass: number): Observable<ProClassFieldConfig[]> {\n    return this.a.pkProject$.pipe(\n      switchMap((fkProject) => {\n\n        const activeProjectkey = proClassFieldConfgByProjectAndClassKey({\n          fk_class_for_class_field: pkClass,\n          fk_project: fkProject\n        })\n        const defaultProjectkey = proClassFieldConfgByProjectAndClassKey({\n          fk_class_for_class_field: pkClass,\n          fk_project: ProConfig.PK_PROJECT_OF_DEFAULT_CONFIG_PROJECT\n        })\n        return combineLatest(\n          this.s.pro$.class_field_config$.by_fk_project__fk_class$.key(activeProjectkey),\n          this.s.pro$.class_field_config$.by_fk_project__fk_class$.key(defaultProjectkey)\n        )\n          .pipe(\n            map(([activeProjectFields, defaultProjectFields]) => {\n              if (activeProjectFields && values(activeProjectFields).length) return activeProjectFields;\n\n              return defaultProjectFields\n            }),\n            map((items) => values(items).sort((a, b) => (a.ord_num > b.ord_num ? 1 : -1))),\n          )\n      })\n    )\n  }\n\n  /********************************************** */\n\n\n  /**\n   * Delivers class label for active project\n   */\n  // @spyTag\n  @cache({ refCount: false }) pipeClassLabel(pkClass?: number): Observable<string> {\n\n    return combineLatest(\n      this.a.pkProject$,\n      this.a.pipeActiveDefaultLanguage()\n    ).pipe(\n      switchMap(([fkProject, language]) => this.pipeLabels({ pkClass, fkProject, language, type: 'label' })\n        .pipe(\n          map(items => {\n\n            const i = items.find(item => !!item)\n            return i ? i.text : `* no label (id: ${pkClass}) *`\n          })\n        ))\n    )\n  }\n\n\n  /**\n   * Delivers array of objects with\n   * text ~ the text of the property\n   * origin, in this order:\n   * - origin == 'of project in project lang'         (from projects.text_property)\n   * - origin == 'of default project in project lang' (from projects.text_property)\n   * - origin == 'of default project in english'      (from projects.text_property)\n   * - origin == 'of ontome in project lang'          (from data_for_history.label)\n   * - origin == 'of ontome in english'               (from data_for_history.label)\n   */\n  // @spyTag\n  @cache({ refCount: false }) pipeLabels(d: {\n    fkProject: number,\n    type: 'label' | 'definition' | 'scopeNote',\n    language: InfLanguage,\n    pkClass?: number,\n    fkProperty?: number,\n    fkPropertyDomain?: number,\n    fkPropertyRange?: number,\n  }): Observable<{\n    origin: LabelOrigin\n    text: string\n  }[]> {\n    let fk_system_type: number;\n\n    if (d.pkClass) {\n      switch (d.type) {\n        case 'label':\n          fk_system_type = SysConfig.PK_SYSTEM_TYPE__TEXT_PROPERTY__LABEL\n          break;\n        default:\n          console.warn('fk_system_type not found')\n          break;\n      }\n    }\n    else if (d.fkProperty) {\n      switch (d.type) {\n        case 'label':\n          fk_system_type = SysConfig.PK_SYSTEM_TYPE__TEXT_PROPERTY__LABEL\n          break;\n        default:\n          console.warn('fk_system_type not found')\n          break;\n      }\n    }\n\n\n    return combineLatest(\n      // label of project in default language of project\n      this.pipeProTextProperty({\n        fk_project: d.fkProject,\n        fk_language: d.language.pk_entity,\n        fk_system_type,\n        fk_dfh_class: d.pkClass,\n        fk_dfh_property: d.fkProperty,\n        fk_dfh_property_domain: d.fkPropertyDomain,\n        fk_dfh_property_range: d.fkPropertyRange\n      }).pipe(map((item) => {\n        if (!item) return undefined;\n        const origin: LabelOrigin = 'of project in project lang';\n        return { origin, text: item.string }\n      })),\n\n      // label of default project\n      this.pipeProTextProperty({\n        fk_project: ProConfig.PK_PROJECT_OF_DEFAULT_CONFIG_PROJECT,\n        fk_language: d.language.pk_entity,\n        fk_system_type,\n        fk_dfh_class: d.pkClass,\n        fk_dfh_property: d.fkProperty,\n        fk_dfh_property_domain: d.fkPropertyDomain,\n        fk_dfh_property_range: d.fkPropertyRange\n      }).pipe(map((item) => {\n        if (!item) return undefined;\n        const origin: LabelOrigin = 'of default project in project lang';\n        return { origin, text: item.string }\n      })),\n\n      // label of default project\n      this.pipeProTextProperty({\n        fk_project: ProConfig.PK_PROJECT_OF_DEFAULT_CONFIG_PROJECT,\n        fk_language: 18889,\n        fk_system_type,\n        fk_dfh_class: d.pkClass,\n        fk_dfh_property: d.fkProperty,\n        fk_dfh_property_domain: d.fkPropertyDomain,\n        fk_dfh_property_range: d.fkPropertyRange\n      }).pipe(map((item) => {\n        if (!item) return undefined;\n        const origin: LabelOrigin = 'of default project in english';\n        return { origin, text: item.string }\n      })),\n\n      // label from ontome in default language of project\n      this.pipeDfhLabel({\n        language: d.language.iso6391.trim(),\n        type: 'label',\n        fk_class: d.pkClass,\n        fk_property: d.fkProperty\n      }).pipe(map((item) => {\n        if (!item) return undefined;\n        const origin: LabelOrigin = 'of ontome in project lang';\n        return { origin, text: item.label }\n      })),\n\n      // label from ontome in english\n      this.pipeDfhLabel({\n        language: 'en',\n        type: 'label',\n        fk_class: d.pkClass,\n        fk_property: d.fkProperty\n      }).pipe(map((item) => {\n        if (!item) return undefined;\n        const origin: LabelOrigin = 'of ontome in english';\n        return { origin, text: item.label }\n      })),\n    )\n  }\n\n  /**\n   * Pipes ProTextProperty\n   */\n  // @spyTag\n  @cache({ refCount: false }) pipeProTextProperty(d: {\n    fk_project: number,\n    fk_system_type: number,\n    fk_language: number,\n    fk_dfh_class?: number,\n    fk_dfh_property?: number,\n    fk_dfh_property_domain?: number,\n    fk_dfh_property_range?: number,\n  }): Observable<ProTextProperty> {\n    const key = textPropertyByFksKey(d)\n    return this.s.pro$.text_property$.by_fks$.key(key)\n  }\n\n  /**\n   * Pipes DfhLabel\n   */\n  // @spyTag\n  @cache({ refCount: false }) pipeDfhLabel(d: {\n    type: 'label' | 'definition' | 'scopeNote',\n    language: string,\n    fk_class?: number,\n    fk_profile?: number,\n    fk_property?: number,\n    fk_project?: number,\n  }): Observable<DfhLabel> {\n    const key = dfhLabelByFksKey(d)\n    return this.s.dfh$.label$.by_fks$.key(key)\n  }\n\n  /**\n   * Delivers best fitting field label for active project\n  */\n  // @spyTag\n  @cache({ refCount: false }) pipeFieldLabel(fkProperty: number, fkPropertyDomain: number, fkPropertyRange: number): Observable<string> {\n    const isOutgoing = !!fkPropertyDomain;\n    // const system_type = isOutgoing ? (singular ? 180 : 181) : (singular ? 182 : 183)\n\n    return combineLatest(\n      this.a.pkProject$,\n      this.a.pipeActiveDefaultLanguage()\n    ).pipe(\n      switchMap(([fkProject, language]) => this.pipeLabels(\n        {\n          fkProject,\n          type: 'label',\n          language,\n          fkProperty,\n          fkPropertyDomain,\n          fkPropertyRange\n        }\n      )\n        .pipe(\n          map(items => {\n            let label = `* no label (id: ${fkProperty}) *`;\n            items.some((item) => {\n              if (\n                item &&\n                (\n                  item.origin === 'of project in project lang' ||\n                  item.origin === 'of default project in project lang' ||\n                  item.origin === 'of default project in english'\n                )\n              ) {\n                label = item.text\n                return true\n              }\n              else if (\n                item &&\n                (\n                  item.origin === 'of ontome in project lang' ||\n                  item.origin === 'of ontome in english'\n                )\n              ) {\n                label = isOutgoing ? item.text : '* reverse of: ' + item.text + '*'\n                return true\n              }\n            })\n            return label\n          })\n        ))\n    )\n\n  }\n\n\n  /**\n   * maps the class to the corresponding model (database table)\n   * this is used by Forms to create new data in the shape of\n   * the data model\n   */\n  // @spyTag\n  @cache({ refCount: false }) pipeTableNameOfClass(targetClassPk: number): Observable<TableName> {\n    return combineLatest(\n      this.s.sys$.config$.main$,\n      this.s.dfh$.class$.by_pk_class$.key(targetClassPk)\n    ).pipe(\n      filter(i => !i.includes(undefined)),\n      map(([config, klass]) => {\n        const classConfig: ClassConfig = config.classes[targetClassPk];\n        if (classConfig && classConfig.valueObjectType) {\n\n          const keys = Object.keys(classConfig.valueObjectType)\n          if (classConfig.valueObjectType.appellation) return\n          const key = keys[0];\n          if (classConfig.valueObjectType.appellation) return 'appellation';\n          else if (classConfig.valueObjectType.language) return 'language';\n          else if (classConfig.valueObjectType.place) return 'place';\n          else if (classConfig.valueObjectType.timePrimitive) return 'time_primitive';\n          else if (classConfig.valueObjectType.langString) return 'lang_string';\n          else if (classConfig.valueObjectType.dimension) return 'dimension';\n          else {\n            console.warn('unsupported list type')\n          }\n        }\n        else if (klass.basic_type === 8 || klass.basic_type === 30) {\n          return 'persistent_item'\n        }\n        else {\n          return 'temporal_entity'\n        }\n      })\n    )\n  }\n\n\n  /**\n   * returns an object where the keys are the pks of the Classes\n   * used by the given project:\n   * - or because the class is enabled by class_proj_rel\n   * - or because the class is required by sources\n   *\n   * This is usefull to create select dropdowns of classes users will know\n   */\n  // @spyTag\n  @cache({ refCount: false }) pipeClassesInEntitiesOrSources(): Observable<{ [key: string]: number }> {\n    return combineLatest(\n      this.pipeClassesEnabledInEntities(),\n      this.pipeClassesRequiredBySources()\n    ).pipe(\n      map(([a, b]) => indexBy((x) => x.toString(), uniq([...a, ...b]))),\n      startWith({})\n    )\n  }\n\n  // @spyTag\n  @cache({ refCount: false }) pipeClassesRequiredBySources() {\n    return this.s.sys$.system_relevant_class$.by_required_by_sources$.key('true')\n      .pipe(map(c => values(c).map(k => k.fk_class)))\n  }\n\n  /**\n   * returns observable number[] wher the numbers are the pk_class\n   * of all classes that are enabled by at least one of the activated profiles\n   * of thte given project\n   */\n  // @spyTag\n  @cache({ refCount: false }) pipeClassesEnabledByProjectProfiles(): Observable<DfhClass[]> {\n    return this.a.pkProject$.pipe(switchMap(pkProject => combineLatest([\n      this.s.dfh$.class$.by_pk_class$.all$,\n      this.pipeProfilesEnabledByProject()\n    ]).pipe(\n      map(([classesByPk, enabledProfiles]) => {\n        const profilesMap = indexBy((k) => k.toString(), values(enabledProfiles))\n        return values(classesByPk)\n          .filter(klass => klass.profiles.some(profile => profilesMap[profile.fk_profile]))\n      })\n    )\n    ))\n  }\n\n  /**\n  * returns observable number[] wher the numbers are the pk_class\n  * of all type classes that are enabled by at least one of the activated profiles\n  * of thte given project\n  */\n  // @spyTag\n  @cache({ refCount: false }) pipeTypeClassesEnabledByProjectProfiles(): Observable<DfhClass[]> {\n    return combineLatest([\n      this.s.dfh$.class$.by_basic_type$.key(30),\n      this.pipeProfilesEnabledByProject()\n    ]).pipe(\n      map(([classesByPk, enabledProfiles]) => {\n        const profilesMap = indexBy((k) => k.toString(), values(enabledProfiles))\n        return values(classesByPk)\n          .filter(klass => {\n            return klass.profiles.some(profile => profilesMap[profile.fk_profile]) &&\n              // Exclude Manifestation product type and language\n              ![\n                DfhConfig.CLASS_PK_LANGUAGE,\n                DfhConfig.CLASS_PK_MANIFESTATION_PRODUCT_TYPE\n              ].includes(klass.pk_class)\n          })\n      })\n    )\n  }\n\n\n\n  /**\n   * returns observable number[] where the numbers are the pk_class\n   * of all classes that are enabled by active project (using class_proj_rel)\n   */\n  // @spyTag\n  @cache({ refCount: false }) pipeClassesEnabledInEntities() {\n    return this.a.pkProject$.pipe(switchMap(pkProject => this.s.pro$.dfh_class_proj_rel$.by_fk_project__enabled_in_entities$.key(pkProject + '_true')\n      .pipe(\n        map((rels) => values(rels).map(rel => rel.fk_class))\n      )\n    ))\n  }\n\n  /**\n  * returns an object where the keys are the pks of the TeEn Classes\n  * used by the given project\n  */\n  // @spyTag\n  @cache({ refCount: false }) pipeSelectedTeEnClassesInProject(): Observable<{ [key: string]: number }> {\n    return combineLatest(\n      this.pipeTeEnClassesEnabledInEntities(),\n      this.pipeTeEnClassesRequiredBySources()\n    ).pipe(\n      map(([a, b]) => indexBy((x) => x.toString(), uniq([...a, ...b]))),\n      startWith({})\n    )\n  }\n\n  /**\n   * Gets array of pk_class with teEn classes enabled in entities\n   */\n  // @spyTag\n  @cache({ refCount: false }) pipeTeEnClassesEnabledInEntities() {\n    return this.a.pkProject$.pipe(switchMap(pkProject => this.s.pro$.dfh_class_proj_rel$.by_fk_project__enabled_in_entities$.key(pkProject + '_true')\n      .pipe(\n        switchMap((cs) => combineLatest(\n          values(cs).map(c => this.s.dfh$.class$.by_pk_class$.key(c.fk_class).pipe(\n            filter(item => !!item)\n          ))\n        ).pipe(\n          map(dfhClasses => this.filterTeEnCasses(dfhClasses))\n        ))\n      )\n    ))\n  }\n\n  /**\n   * Filters array of DfhClass for TeEn Classes and returns array of pk_class\n   * @param dfhClasses array of DfhClass\n   * @returns returns array of pk_class where class is TeEn class\n   */\n  private filterTeEnCasses(dfhClasses: DfhClass[]): number[] {\n    const pks: number[] = [];\n    for (let i = 0; i < dfhClasses.length; i++) {\n      const c = dfhClasses[i];\n      if (c.basic_type === 9) pks.push(c.pk_class);\n    }\n    return pks;\n  }\n\n  /**\n   * Gets array of pk_class with teEn classes required by sources\n   */\n  // @spyTag\n  @cache({ refCount: false }) pipeTeEnClassesRequiredBySources() {\n    return this.s.sys$.system_relevant_class$.by_required_by_sources$.key('true')\n      .pipe(\n        switchMap((cs) => combineLatest(\n          values(cs).map(c => this.s.dfh$.class$.by_pk_class$.key(c.fk_class).pipe(\n            filter(item => !!item)\n          ))\n        ).pipe(\n          map(dfhClasses => {\n            return this.filterTeEnCasses(dfhClasses)\n          })\n        ))\n      )\n  }\n\n\n\n\n\n\n  /**\n   *\n   */\n  // @spyTag\n  @cache({ refCount: false }) pipeTypeAndTypedClasses(enabledIn?: 'entities' | 'sources'): Observable<{ typedClass: number, typeClass: number }[]> {\n\n    let pks$: Observable<number[]>[];\n\n    const fromSources$ = this.s.sys$.system_relevant_class$.by_required_by_sources$.key('true').pipe(\n      map(classes => values(classes).map(k => k.fk_class)),\n    )\n\n    const fromEntities$ = this.pipeClassesEnabledInEntities()\n\n    if (enabledIn === 'sources') {\n      pks$ = [fromSources$];\n    } else if (enabledIn === 'entities') {\n      pks$ = [fromEntities$];\n    } else {\n      pks$ = [fromSources$, fromEntities$]\n    }\n\n    return combineLatest(pks$).pipe(\n      map(arrayOfPkArrays => uniq(flatten<number>(arrayOfPkArrays))),\n      switchMap(pks => this.pipeTypeAndTypedClassesOfTypedClasses(pks))\n    )\n  }\n\n  // @spyTag\n  @cache({ refCount: false }) pipeTypeAndTypedClassesOfTypedClasses(pkTypedClasses: number[]): Observable<{ typedClass: number, typeClass: number }[]> {\n\n    return this.s.dfh$.property$.by_is_has_type_subproperty$.key('true').pipe(\n      map((allHasTypeProps) => {\n        const byDomain = indexBy(k => k.has_domain.toString(), values(allHasTypeProps));\n        return pkTypedClasses.map(pk => ({\n          typedClass: pk,\n          typeClass: byDomain[pk] ? byDomain[pk].has_range : undefined\n        }))\n      }))\n  }\n\n  // @spyTag\n  @cache({ refCount: false }) pipeTypeClassOfTypedClass(pkTypedClass): Observable<number> {\n    return this.s.dfh$.property$.by_is_has_type_subproperty$.key('true').pipe(\n      map((allHasTypeProps) => {\n        const byDomain = indexBy(k => k.has_domain.toString(), values(allHasTypeProps));\n        return byDomain[pkTypedClass] ? byDomain[pkTypedClass].has_range : undefined\n      }))\n  }\n\n  // @spyTag\n  @cache({ refCount: false }) pipeTypedClassesOfTypeClasses(pkTypeClasses: number[]): Observable<number[]> {\n\n    return this.s.dfh$.property$.by_is_has_type_subproperty$.key('true').pipe(\n      map((allHasTypeProps) => {\n        const byDomain = indexBy(k => k.has_range.toString(), values(allHasTypeProps));\n        return pkTypeClasses.map(pk => byDomain[pk] ? byDomain[pk].has_domain : undefined)\n      }))\n  }\n\n\n  // @spyTag\n  @cache({ refCount: false }) pipeTypePropertyOfTypedClass(pkTypedClass): Observable<number> {\n    return this.s.dfh$.property$.by_is_has_type_subproperty$.key('true').pipe(\n      map((allHasTypeProps) => {\n        const typeProp = values(allHasTypeProps).find(p => p.has_domain === pkTypedClass)\n        return typeProp ? typeProp.pk_property : undefined;\n      }))\n  }\n\n  // @spyTag\n  @cache({ refCount: false }) pipeTargetClassesOfProperties(pkProperties: number[], isOutgoing: boolean): Observable<number[]> {\n    return this.s.dfh$.property$.by_pk_property$.all$.pipe(\n      map(x => {\n        if (!pkProperties || !pkProperties.length) return [];\n\n        const res = []\n        const targetClasses = {};\n        pkProperties.forEach(pkProp => {\n          const props = values(x[pkProp]);\n          props.forEach(prop => {\n            const targetClass = isOutgoing ? prop.has_range : prop.has_domain;\n            if (!targetClasses[targetClass]) {\n              targetClasses[targetClass] = true;\n              res.push(targetClass)\n            }\n          })\n        })\n        return res;\n      })\n    )\n  }\n}\n\n\n\nfunction createHasDefinitionProperty(domainClass: number) {\n  const profiles: Profiles = [\n    {\n      removed_from_api: false,\n      fk_profile: DfhConfig.PK_PROFILE_GEOVISTORY_BASIC\n    }\n  ]\n\n  const hasDefinition: DfhProperty = {\n    has_domain: domainClass,\n    pk_property: DfhConfig.PROPERTY_PK_P18_HAS_DEFINITION,\n    has_range: 785,\n    domain_instances_max_quantifier: -1,\n    domain_instances_min_quantifier: 1,\n    range_instances_max_quantifier: 1,\n    range_instances_min_quantifier: 1,\n    identifier_in_namespace: 'P18',\n    identity_defining: false,\n    is_inherited: true,\n    is_has_type_subproperty: false,\n    profiles\n  }\n  return hasDefinition\n}\n\n\n\nexport function createHasTimeSpanProperty(domainClass: number) {\n  const profiles: Profiles = [\n    {\n      removed_from_api: false,\n      fk_profile: DfhConfig.PK_PROFILE_GEOVISTORY_BASIC\n    }\n  ]\n  const hasAppeProp: DfhProperty = {\n    has_domain: domainClass,\n    pk_property: DfhConfig.PROPERTY_PK_HAS_TIME_SPAN,\n    has_range: DfhConfig.ClASS_PK_TIME_SPAN,\n    domain_instances_max_quantifier: -1,\n    domain_instances_min_quantifier: 1,\n    range_instances_max_quantifier: 1,\n    range_instances_min_quantifier: 1,\n    identifier_in_namespace: 'P4',\n    identity_defining: false,\n    is_inherited: true,\n    is_has_type_subproperty: false,\n    profiles\n  }\n  return hasAppeProp\n}\n\n\nfunction isRemovedFromAllProfiles(enabledProfiles: number[], profiles: RelatedProfile[]): boolean {\n  return !profiles.some(p => p.removed_from_api === false && enabledProfiles.includes(p.fk_profile))\n\n}\n\nfunction getPlaceOfDisplay(specialFields: SysConfigSpecialFields, subfield: Subfield, projectFieldConfig?: ProClassFieldConfig): FieldPlaceOfDisplay {\n  let settings: SysConfigFieldDisplay;\n\n  settings = getSettingsFromSysConfig(subfield, specialFields, settings);\n\n  // if this is a special field, create corresponding display settings and return it\n  if (settings) {\n    if (settings.displayInBasicFields) {\n      return { basicFields: { position: settings.displayInBasicFields.position } }\n    } else if (settings.hidden) {\n      return { hidden: true }\n    }\n  }\n\n  // otherwise display the field in specific fields (default)\n  let position = Number.POSITIVE_INFINITY;\n  if (projectFieldConfig) position = projectFieldConfig.ord_num\n  return { specificFields: { position } }\n\n}\nfunction getSettingsFromSysConfig(\n  subfield: Subfield, specialFields: SysConfigSpecialFields, settings: SysConfigFieldDisplay) {\n  if (subfield.isOutgoing) {\n    // get settings by has-type-subproperty\n    if (subfield.isHasTypeField &&\n      specialFields.hasTypeSubproperties) {\n      settings = specialFields.hasTypeSubproperties;\n    }\n    // get settings by source class and property\n    else if (specialFields.bySourceClass &&\n      specialFields.bySourceClass[subfield.sourceClass] &&\n      specialFields.bySourceClass[subfield.sourceClass].outgoingProperties &&\n      specialFields.bySourceClass[subfield.sourceClass].outgoingProperties[subfield.property.fkProperty]) {\n      settings = specialFields.bySourceClass[subfield.sourceClass].outgoingProperties[subfield.property.fkProperty];\n    }\n    // get seetings by property\n    else if (specialFields.outgoingProperties &&\n      specialFields.outgoingProperties[subfield.property.fkProperty]) {\n      settings = specialFields.outgoingProperties[subfield.property.fkProperty];\n    }\n  }\n  else {\n    // get settings by source class and property\n    if (specialFields.bySourceClass &&\n      specialFields.bySourceClass[subfield.sourceClass] &&\n      specialFields.bySourceClass[subfield.sourceClass].incomingProperties &&\n      specialFields.bySourceClass[subfield.sourceClass].incomingProperties[subfield.property.fkProperty]) {\n      settings = specialFields.bySourceClass[subfield.sourceClass].incomingProperties[subfield.property.fkProperty];\n    }\n    // get seetings by property\n    else if (specialFields.incomingProperties &&\n      specialFields.incomingProperties[subfield.property.fkProperty]) {\n      settings = specialFields.incomingProperties[subfield.property.fkProperty];\n    }\n  }\n  return settings;\n}\n\n\n\n\n\n\n/**\n * Pipes the fields for temporal entity forms\n * - the specific fields\n * - the when field\n * - if available: the type field\n */\n// @spyTag @cache({ refCount: false }) pipeFieldDefinitionsForTeEnForm(pkClass: number): Observable<Field[]> {\n//   return of([])\n// const hasTypeListDef$ = this.pipeHasTypeSubfield(pkClass)\n// return combineLatest(\n//   this.pipeSpecificFieldDefinitions(pkClass)\n//     .pipe(\n//       map(fields => fields.filter(f => f.allSubfieldsRemovedFromAllProfiles === false))\n//     )\n//   ,\n//   hasTypeListDef$,\n// ).pipe(\n//   map(([fields, hasTypeListDefs]) => {\n//     const when = this.getClassFieldDefinition(SysConfig.PK_CLASS_FIELD_WHEN)\n//     return [\n//       ...fields,\n//       when,\n//       ...hasTypeListDefs.map((hasTypeListDef) => {\n//         const typeField: Field = { ...hasTypeListDef, listDefinitions: [hasTypeListDef] }\n//         return typeField;\n//       })\n//     ]\n//   })\n// )\n// }\n\n\n/**\n * Pipe the specific fields of given class\n */\n// @spyTag @cache({ refCount: false }) pipeSpecificFieldDefinitions(pkClass: number): Observable<Field[]> {\n// return combineLatest(\n//   this.pipePropertiesOfClass(pkClass, true).pipe(\n//     // filter out the 'has type' property, since it is part of the default fields\n//     map(outgoing => outgoing.filter(o => !o.is_has_type_subproperty))\n//   ),\n//   this.pipePropertiesOfClass(pkClass, false).pipe(\n//     // filter out the 'has appellation' property, since it is part of the default fields\n//     map(ingoing => ingoing.filter(i =>\n//       i.pk_property !== DfhConfig.PROPERTY_PK_IS_APPELLATION_OF\n//       && i.pk_property !== DfhConfig.PROPERTY_PK_GEOVP1_IS_REPRODUCTION_OF\n//     ))\n//   ),\n//   this.pipeFieldConfigs(pkClass)\n// ).pipe(\n//   switchMap(([outgoing, ingoing, fieldConfigs]) => {\n\n//     const key = (fc: Partial<ProClassFieldConfig>) => `${fc.fk_property}_${fc.fk_domain_class}_${fc.fk_range_class}`;\n//     const indexed = indexBy((fc) => `${fc.fk_property}_${fc.fk_domain_class}_${fc.fk_range_class}`, fieldConfigs)\n//     const getFieldConfig = (listDef: Subfield): ProClassFieldConfig => {\n//       return indexed[key({\n//         fk_property: listDef.property.pkProperty,\n//         fk_domain_class: listDef.isOutgoing ? listDef.sourceClass : null,\n//         fk_range_class: listDef.isOutgoing ? null : listDef.sourceClass,\n//       })]\n//     }\n\n//     // Create list definitions\n//     return combineLatest(\n//       this.pipePropertiesToSubfields(ingoing, false),\n//       this.pipePropertiesToSubfields(outgoing, true)\n//     ).pipe(\n//       map(([ingoingListDefs, outgoingListDefs]) => {\n//         const listDefinitions = [...ingoingListDefs, ...outgoingListDefs];\n\n//         // Create field definitions\n//         const fieldDefs: { [key: string]: Field } = {}\n//         listDefinitions.forEach(listDef => {\n\n//           const k = listDef.property.pkProperty + '_' + listDef.isOutgoing;\n\n//           if (!fieldDefs[k]) {\n//             fieldDefs[k] = {\n//               ...listDef,\n//               placeOfDisplay: {},\n//               allSubfieldsRemovedFromAllProfiles: false,\n//               fieldConfig: getFieldConfig(listDef),\n//               listDefinitions: [listDef],\n//               targetClasses: [listDef.targetClass]\n//             }\n//           } else {\n//             fieldDefs[k].listDefinitions.push(listDef)\n//             fieldDefs[k].targetClasses.push(listDef.targetClass)\n//           }\n\n//           // }\n\n//         })\n//         // Order the fields according to ord_num (from project's config, kleiolab's config) or put it at end of list.\n//         return sort(\n//           (a, b) => {\n//             const getOrdNum = (item: Field) => {\n//               if (item && item.fieldConfig) return item.fieldConfig.ord_num;\n//               return Number.POSITIVE_INFINITY;\n//             }\n//             const ordNumA = getOrdNum(a);\n//             const ordNumB = getOrdNum(b);\n//             return ordNumA - ordNumB;\n//           },\n//           values(fieldDefs))\n//       })\n//     )\n//   })\n// )\n// }\n\n\n/**\n * Pipe the fields for identification of given class\n */\n// @spyTag @cache({ refCount: false }) pipeDefaultFieldDefinitions(pkClass: number): Observable<Field[]> {\n\n\n// /**\n//  * Pipe the generic field has appellation\n//  * with the given class as range\n//  */\n// const hasAppeProp: DfhPropertyStatus = {\n//   has_domain: DfhConfig.CLASS_PK_APPELLATION_FOR_LANGUAGE,\n//   pk_property: DfhConfig.PROPERTY_PK_IS_APPELLATION_OF,\n//   has_range: pkClass,\n//   domain_instances_max_quantifier: -1,\n//   domain_instances_min_quantifier: 0,\n//   range_instances_max_quantifier: 1,\n//   range_instances_min_quantifier: 1,\n//   identifier_in_namespace: 'histP9',\n//   identity_defining: true,\n//   is_inherited: true,\n//   is_has_type_subproperty: false,\n//   removedFromAllProfiles: false,\n//   profiles: []\n// }\n// const hasAppeListDef$ = this.pipePropertiesToSubfields([hasAppeProp], false).pipe(\n//   filter(listDefs => !!listDefs && !!listDefs[0]),\n//   map(listDefs => listDefs[0])\n// );\n\n// /**\n//  * Pipe the generic field has type\n//  * with the given class as range\n//  */\n// const hasTypeListDef$ = this.pipeHasTypeSubfield(pkClass)\n// return combineLatest(\n//   hasAppeListDef$,\n//   hasTypeListDef$,\n//   this.s.dfh$.class$.by_pk_class$.key(pkClass).pipe(filter(c => !!c))\n// ).pipe(\n//   map(([hasAppeListDef, hasTypeListDefs, klass]) => {\n//     const fields: Field[] = []\n\n\n//     // /*\n//     //  * Add 'short title' text-property to\n//     //  *\n//     //  * Manifestation Product Type â F3, 219\n//     //  * Manifestation Singleton â F4, 220\n//     //  * Item â F5, 221\n//     //  * Web Request â geovC4, 502\n//     //  */\n//     // if ([\n//     //   DfhConfig.CLASS_PK_MANIFESTATION_PRODUCT_TYPE,\n//     //   DfhConfig.CLASS_PK_MANIFESTATION_SINGLETON,\n//     //   DfhConfig.CLASS_PK_ITEM,\n//     //   DfhConfig.CLASS_PK_WEB_REQUEST].includes(pkClass)) {\n//     //   fields.push(this.getClassFieldDefinition(SysConfig.PK_CLASS_FIELD_SHORT_TITLE));\n//     // }\n\n//     // /*\n//     // * Add 'has appellation for language â histP9' to\n//     // *\n//     // * all classes except 'Appellation for language â histC10', 365\n//     // */\n//     // if (pkClass !== DfhConfig.CLASS_PK_APPELLATION_FOR_LANGUAGE) {\n//     //   const appeField: Field = { ...hasAppeListDef, listDefinitions: [hasAppeListDef] }\n//     //   fields.push(appeField);\n//     // }\n\n\n//     // /*\n//     // * Add 'hasType' fields\n//     // */\n//     // if (hasTypeListDefs && hasTypeListDefs.length > 0) {\n//     //   hasTypeListDefs.forEach((hasTypeListDef) => {\n//     //     const typeField: Field = { ...hasTypeListDef, listDefinitions: [hasTypeListDef] }\n//     //     fields.push(typeField);\n//     //   })\n//     // }\n\n//     // /*\n//     // * Add 'entity definition' text-property to\n//     // *\n//     // * all classes except 'Appellation for language â histC10', 365\n//     // */\n//     // if (pkClass !== DfhConfig.CLASS_PK_APPELLATION_FOR_LANGUAGE) {\n//     //   fields.push(this.getClassFieldDefinition(SysConfig.PK_CLASS_FIELD_ENTITY_DEFINITION));\n//     // }\n//     // /*\n//     // * Add 'identifier / exact reference / url / ...' text-property to\n//     // *\n//     // * Web Request â geovC4, 502\n//     // */\n//     // if (DfhConfig.CLASS_PK_WEB_REQUEST === pkClass) {\n//     //   fields.push(this.getClassFieldDefinition(SysConfig.PK_CLASS_FIELD_EXACT_REFERENCE));\n//     // }\n\n//     // /*\n//     // * Add 'comment' text-property to\n//     // *\n//     // * Manifestation Product Type â F3, 219\n//     // * Manifestation Singleton â F4, 220\n//     // * Item â F5, 221\n//     // * Web Request â geovC4, 502\n//     // * Expression portion â geovC5, 503\n//     // */\n//     // if ([\n//     //   DfhConfig.CLASS_PK_MANIFESTATION_PRODUCT_TYPE,\n//     //   DfhConfig.CLASS_PK_MANIFESTATION_SINGLETON,\n//     //   DfhConfig.CLASS_PK_ITEM,\n//     //   DfhConfig.CLASS_PK_WEB_REQUEST,\n//     //   DfhConfig.CLASS_PK_EXPRESSION_PORTION].includes(pkClass)) {\n//     //   fields.push(this.getClassFieldDefinition(SysConfig.PK_CLASS_FIELD_COMMENT));\n//     // }\n\n//     // /*\n//     // * Add 'time-span' field to\n//     // *\n//     // * all temporal entity classes\n//     // */\n//     // if (klass.basic_type === 9) {\n//     //   fields.push(this.getClassFieldDefinition(SysConfig.PK_CLASS_FIELD_WHEN));\n//     // }\n\n//     return fields\n\n//   })\n// )\n// }\n\n\n// private pipeHasTypeSubfield(pkClass: number) {\n//   return this.pipePropertiesOfClass(pkClass, true).pipe(\n//     // check if this class has 'has type' subproperty\n//     map(outgoing => {\n//       return outgoing.filter((prop) => prop.is_has_type_subproperty);\n//     }), switchMap(hasTypeProps => combineLatestOrEmpty(hasTypeProps.map(dfhProp => {\n//       return this.pipePropertiesToSubfields([dfhProp], true).pipe(filter(listDefs => !!listDefs && !!listDefs[0]), map(listDefs => {\n//         const listDef = listDefs[0];\n//         listDef.listType = { typeItem: 'true' };\n//         return listDef;\n//       }));\n//     }))));\n// }\n\n// getClassFieldSubfield(pkClassField: number): Subfield {\n//   const template = {\n//     property: {},\n//     sourceClass: undefined,\n//     sourceClassLabel: undefined,\n//     targetClass: undefined,\n//     isOutgoing: undefined,\n//     identityDefiningForSource: undefined,\n//     identityDefiningForTarget: undefined,\n//     targetMaxQuantity: undefined,\n//     targetMinQuantity: undefined,\n//     sourceMaxQuantity: undefined,\n//     sourceMinQuantity: undefined,\n//     removedFromAllProfiles: false\n//   }\n//   switch (pkClassField) {\n//     case SysConfig.PK_CLASS_FIELD_WHEN:\n//       return {\n//         ...template,\n//         listType: { timeSpan: 'true' },\n//         label: 'When',\n//         isOutgoing: true,\n//         // fkClassField: pkClassField,\n//         ontoInfoLabel: 'P4',\n//         ontoInfoUrl: 'https://ontome.dataforhistory.org/property/4',\n//         targetMaxQuantity: 1\n//       }\n//     case SysConfig.PK_CLASS_FIELD_ENTITY_DEFINITION:\n//       return {\n//         ...template,\n//         listType:  { textProperty: 'true' },\n//         label: 'Description',\n//         // fkClassField: pkClassField,\n//         ontoInfoLabel: 'P3',\n//         ontoInfoUrl: 'https://ontome.dataforhistory.org/property/3',\n//         targetMaxQuantity: -1\n//       }\n//     case SysConfig.PK_CLASS_FIELD_COMMENT:\n//       return {\n//         ...template,\n//         // fkClassField: SysConfig.PK_CLASS_FIELD_COMMENT,\n//         listType:  { textProperty: 'true' },\n//         label: 'Comments',\n//         ontoInfoLabel: 'P3',\n//         ontoInfoUrl: 'https://ontome.dataforhistory.org/property/3',\n//         targetMaxQuantity: -1\n//       }\n//     case SysConfig.PK_CLASS_FIELD_EXACT_REFERENCE:\n//       return {\n//         ...template,\n//         listType:  { textProperty: 'true' },\n//         label: 'Exact Reference',\n//         // fkClassField: pkClassField,\n//         ontoInfoLabel: 'P3',\n//         ontoInfoUrl: 'https://ontome.dataforhistory.org/property/3',\n//         targetMaxQuantity: -1\n//       }\n//     case SysConfig.PK_CLASS_FIELD_SHORT_TITLE:\n//       return {\n//         ...template,\n//         listType:  { textProperty: 'true' },\n//         label: 'Short Title',\n//         // fkClassField: pkClassField,\n//         ontoInfoLabel: 'P3',\n//         ontoInfoUrl: 'https://ontome.dataforhistory.org/property/3',\n//         targetMaxQuantity: -1\n//       }\n//     default:\n//       break;\n//   }\n// }\n\n// getClassFieldDefinition(pkClassField: number): Field {\n//   const listDef = this.getClassFieldSubfield(pkClassField)\n//   return { ...listDef, listDefinitions: [listDef] }\n// }\n\n\n// @spyTag @cache({ refCount: false }) pipeClassesRequired() {\n//   return this.s.sys$.system_relevant_class$.by_required$.key('true')\n//     .pipe(map(c => values(c).map(k => k.fk_class)))\n// }\n\n\n\n// /**\n//  * Pipes all the enabled properties of a class\n//  */\n// @spyTag @cache({ refCount: false }) pipePropertiesOfClass(pkClass: number, isOutgoing: boolean): Observable<DfhPropertyStatus[]> {\n\n\n//   let $: Observable<ByPk<DfhProperty>>\n//   if (isOutgoing) {\n//     $ = this.s.dfh$.property$.by_has_domain$.key(pkClass)\n//   }\n//   else {\n//     $ = this.s.dfh$.property$.by_has_range$.key(pkClass)\n//   }\n\n//   // filter properties that are in at least one profile enabled by project\n//   const profiles$ = this.pipeProfilesEnabledByProject()\n\n\n//   // Filter out only the properties for which target class is allowed\n//   return combineLatest($, profiles$)\n//     .pipe(\n//       map(([props, profiles]) => {\n//         const p: DfhPropertyStatus[] = []\n\n//         values(props).forEach(prop => {\n\n\n//           const propProfileRel = prop.profiles as Profiles\n\n//           let enabledInAProfile = false;\n\n//           let removedFromAllProfiles = true;\n\n//           propProfileRel.forEach(item => {\n//             if (profiles.includes(item.fk_profile)) {\n//               enabledInAProfile = true;\n//               if (item.removed_from_api === false) {\n//                 removedFromAllProfiles = false\n//               }\n//             }\n//           })\n\n//           if (enabledInAProfile) {\n//             p.push({\n//               ...prop,\n//               removedFromAllProfiles\n//             })\n//           }\n//         })\n\n//         return p\n//       })\n//     )\n\n// }\n\n\n// /**\n//  * returns an object where the keys are the pks of the Classes\n//  * used by the given project\n//  * - or because the class is enabled by class_proj_rel\n//  * - or because the class is required by sources or by basics\n//  *\n//  * this is usefull to check if a class is available at all\n//  */\n// @spyTag @cache({ refCount: false }) pipeClassesInEntitesOrRequired(): Observable<{ [key: string]: number }> {\n//   return combineLatest(\n//     this.pipeClassesEnabledInEntities(),\n//     this.pipeClassesRequired()\n//   ).pipe(\n//     map(([a, b]) => indexBy((x) => x.toString(), uniq([...a, ...b]))),\n//     startWith({})\n//   )\n// }\n","import { Injectable } from '@angular/core';\nimport { DfhConfig } from '@kleiolab/lib-config';\nimport { IconType } from '@kleiolab/lib-redux';\nimport { InfStatement, InfTimePrimitive } from '@kleiolab/lib-sdk-lb3';\nimport { TimePrimitiveWithCal } from '@kleiolab/lib-sdk-lb4';\nimport { CalendarType, combineLatestOrEmpty, Granularity, TimeSpanUtil } from '@kleiolab/lib-utils';\nimport { omit, values } from 'ramda';\nimport { BehaviorSubject, combineLatest, merge, Observable, of, pipe } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\nimport { spyTag } from '../decorators/method-decorators';\nimport { BasicStatementItem } from '../models/BasicStatementItem';\nimport { ActiveProjectPipesService } from './active-project-pipes.service';\nimport { SchemaSelectorsService } from './schema-selectors.service';\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * This service contains a basic pipes for creating more complex\n * rxjs pipes. Each pipe takes non-observable parameters and\n * returns an observable. The method names are mainly\n * based on the type of the observable data\n */\nexport class InformationBasicPipesService {\n  // infRepo: InfSelector;\n\n  constructor(\n    private p: ActiveProjectPipesService,\n    private s: SchemaSelectorsService,\n  ) { }\n\n  /*********************************************************************\n   * Project\n  *********************************************************************/\n\n  // @spyTag pipeRelatedTemporalEntities(pkEntity: number): Observable<InfTemporalEntity[]> {\n  //   return this.s.inf$.statement$\n  //     .by_object$({ fk_object_info: pkEntity })\n  //     .pipe(\n  //       auditTime(1),\n  //       switchMapOr([], (statements) => combineLatest(\n  //         statements.map(statement => this.s.inf$.temporal_entity$.by_pk_entity_key$(statement.fk_subject_info).pipe(\n  //         ))\n  //       ).pipe(\n  //         map(x => x.filter((y) => !!y)),\n  //       )),\n  //     )\n  // }\n\n\n\n\n  /**\n * Pipe statements of an entity\n */\n  @spyTag pipeStatements(pkEntity: number, isOutgoing): Observable<InfStatement[]> {\n    return isOutgoing ? this.pipeOutgoingStatements(pkEntity) : this.pipeIngoingStatements(pkEntity)\n  }\n\n\n  /**\n  * Pipe outgoing statements of an entity\n  */\n  @spyTag pipeOutgoingStatements(pkEntity): Observable<InfStatement[]> {\n    return this.s.inf$.statement$.by_subject$({ fk_subject_info: pkEntity })\n  }\n\n\n  /**\n   * Pipe ingoing statements of an entity\n   */\n  @spyTag pipeIngoingStatements(pkEntity): Observable<InfStatement[]> {\n    return this.s.inf$.statement$.by_object$({ fk_object_info: pkEntity })\n  }\n\n\n  // pipeStatementsOfList(listDefinition: Subfield, pkEntity): Observable<InfStatement[]> {\n  //   if (listDefinition.isOutgoing) {\n  //     return this.s.inf$.statement$.by_subject_and_property$({\n  //       fk_property: listDefinition.property.pkProperty,\n  //       fk_property_of_property: listDefinition.property.pkPropertyOfProperty,\n  //       fk_subject_info: pkEntity\n  //     })\n  //   } else {\n  //     return this.s.inf$.statement$.by_object_and_property$({\n  //       fk_property: listDefinition.property.pkProperty,\n  //       fk_property_of_property: listDefinition.property.pkPropertyOfProperty,\n  //       fk_object_info: pkEntity\n  //     })\n  //   }\n  // }\n\n  /**\n   * Pipe outgoing statements of temporal entity\n   */\n  @spyTag pipeOutgoingStatementsByProperty(pkProperty, pkEntity): Observable<InfStatement[]> {\n    return this.s.inf$.statement$.by_subject_and_property$({\n      fk_property: pkProperty,\n      fk_subject_info: pkEntity\n    })\n\n  }\n\n\n  /**\n   * Pipe ingoing statements of an entity\n   */\n  @spyTag pipeIngoingStatementsByProperty(pkProperty, pkEntity): Observable<InfStatement[]> {\n    return this.s.inf$.statement$.by_object_and_property$({\n      fk_property: pkProperty,\n      fk_object_info: pkEntity\n    })\n  }\n\n  /**\n * Pipe outgoing statements of temporal entity\n */\n  @spyTag pipeOutgoingBasicStatementItemsByProperty(pkProperty, pkEntity, pkProject: number): Observable<BasicStatementItem[]> {\n    return this.s.inf$.statement$.by_subject_and_property$({\n      fk_property: pkProperty,\n      fk_subject_info: pkEntity\n    }).pipe(\n      switchMap(statements => combineLatestOrEmpty(\n        statements.map(statement => this.pipeBasicStatementItem(pkProject, statement, true))\n      ))\n    )\n  }\n\n\n\n  /**\n   * Pipe ingoing statements of an entity\n   */\n  @spyTag pipeIngoingBasicStatementItemsByProperty(pkProperty, pkEntity, pkProject: number): Observable<BasicStatementItem[]> {\n    return this.s.inf$.statement$.by_object_and_property$({\n      fk_property: pkProperty,\n      fk_object_info: pkEntity\n    }).pipe(\n      switchMap(statements => combineLatestOrEmpty(\n        statements.map(statement => this.pipeBasicStatementItem(pkProject, statement, false))\n      ))\n    )\n  }\n\n  @spyTag private pipeBasicStatementItem(pkProject: number, statement: InfStatement, isOutgoing: boolean): Observable<BasicStatementItem> {\n    return this.s.pro$.info_proj_rel$.by_fk_project__fk_entity$.key(pkProject + '_' + statement.pk_entity).pipe(\n      filter(x => !!x),\n      map(projRel => ({\n        projRel, statement, label: '', ordNum: (isOutgoing ? projRel.ord_num_of_range : projRel.ord_num_of_domain), isOutgoing\n      }))\n    );\n  }\n\n  @spyTag pipeBasicStatementItemByPkStatement(pkProject: number, pkStatement: number, isOutgoing: boolean): Observable<BasicStatementItem> {\n    return this.s.inf$.statement$.by_pk_entity_key$(pkStatement).pipe(\n      switchMap(statement => (!statement) ? of(undefined) : this.pipeBasicStatementItem(pkProject, statement, isOutgoing))\n    )\n  }\n\n\n  @spyTag pipeInfTimePrimitive(pkEntity: number): Observable<InfTimePrimitive> {\n    return this.s.inf$.time_primitive$.by_pk_entity$.key(pkEntity)\n  }\n\n  /**\n   * pipes the TimeSpan of a temporal entity\n   * @param pkEntity the pk_entity of the termporal entity\n   */\n  @spyTag pipeTimeSpan(pkEntity: number): Observable<TimeSpanUtil> {\n    // Get the properties leading to presences\n    return combineLatest(\n      this.pipeOutgoingStatementsByProperty(72, pkEntity).pipe(this.timePrimitiveOfStatements()),\n      this.pipeOutgoingStatementsByProperty(71, pkEntity).pipe(this.timePrimitiveOfStatements()),\n      this.pipeOutgoingStatementsByProperty(150, pkEntity).pipe(this.timePrimitiveOfStatements()),\n      this.pipeOutgoingStatementsByProperty(151, pkEntity).pipe(this.timePrimitiveOfStatements()),\n      this.pipeOutgoingStatementsByProperty(152, pkEntity).pipe(this.timePrimitiveOfStatements()),\n      this.pipeOutgoingStatementsByProperty(153, pkEntity).pipe(this.timePrimitiveOfStatements()),\n\n    ).pipe(\n      map(([_72, _71, _150, _151, _152, _153]) => new TimeSpanUtil({\n        p82: _72,\n        p81: _71,\n        p82a: _152,\n        p81a: _150,\n        p81b: _151,\n        p82b: _153,\n      })),\n    )\n  }\n\n\n\n  /**\n   * Pipes max. one time primitive for an array of statements, assuming that the statements\n   * are of the same properties.\n   */\n  timePrimitiveOfStatements = () => pipe(\n    map((r: InfStatement[]) => r[0]),\n    switchMap((r) => {\n      if (!r) return new BehaviorSubject(undefined)\n      return this.pipeInfTimePrimitive(r.fk_object_info).pipe(\n        switchMap((infTimePrimitive) => this.p.pkProject$.pipe(\n          switchMap((pkProject) => this.s.pro$.info_proj_rel$.by_fk_project__fk_entity$\n            .key(pkProject + '_' + r[0].pk_entity).pipe(\n              filter(statement => !!statement),\n              map(ipr => {\n                const y: TimePrimitiveWithCal = {\n                  calendar: (ipr.calendar ? ipr.calendar : 'gregorian') as CalendarType,\n                  julianDay: infTimePrimitive.julian_day,\n                  duration: infTimePrimitive.duration as Granularity\n                }\n                return y;\n              })\n            ))\n        ))\n      )\n    })\n  )\n\n  /**\n   * Pipes the fk_class of the given entity\n   */\n  @spyTag pipeClassOfEntity(pkEntity: number): Observable<number> {\n    return merge(\n      this.s.inf$.persistent_item$.by_pk_entity_key$(pkEntity).pipe(\n        filter(e => !!e),\n        map(e => e.fk_class)\n      ),\n      this.s.inf$.temporal_entity$.by_pk_entity_key$(pkEntity).pipe(\n        filter(e => !!e),\n        map(e => e.fk_class)\n      )\n    )\n  }\n\n  /**\n   * Pipes distinct fk_classes of the given persistent items\n   */\n  @spyTag pipeClassesOfPersistentItems(pkEntities: number[]): Observable<number[]> {\n    return this.s.inf$.persistent_item$.by_pk_entity_all$().pipe(\n      map((peIts) => {\n        if (!pkEntities || pkEntities.length === 0) {\n          return []\n        }\n        const classes = {};\n        const a = [];\n        pkEntities.forEach(typePk => {\n          if (!classes[peIts[typePk].fk_class]) {\n            classes[peIts[typePk].fk_class] = true;\n            a.push(peIts[typePk].fk_class)\n          }\n        })\n        return a;\n      })\n    )\n\n  }\n\n\n  /*********************************************************************\n   * Repo\n  *********************************************************************/\n\n  /**\n    * Pipe repo outgoing statements.\n    */\n  @spyTag pipeRepoOutgoingStatements(pkEntity): Observable<InfStatement[]> {\n    return this.s.inf$.statement$.by_subject$({ fk_subject_info: pkEntity }, false)\n  }\n\n  /**\n  * Pipe repo ingoing statements.\n  */\n  @spyTag pipeRepoIngoingStatements(pkEntity): Observable<InfStatement[]> {\n    return this.s.inf$.statement$.by_object$({ fk_object_info: pkEntity }, false)\n  }\n\n  /**\n    * Pipe repo outgoing statements.\n    * If max quantity is limited, takes only max allowed number of statements, starting with highest is_in_project_count\n    */\n  @spyTag pipeRepoOutgoingStatementsByProperty(pkProperty, pkEntity): Observable<InfStatement[]> {\n    return combineLatest(\n      this.s.dfh$.property$.by_pk_property$.key(pkProperty)\n        .pipe(filter(x => !!x && Object.keys(x).length > 0), map(p => values(p)[0].range_instances_max_quantifier)),\n      this.s.inf$.statement$\n        .by_subject_and_property$({\n          fk_property: pkProperty,\n          fk_subject_info: pkEntity\n        }, false)\n      // .pipe(filter(x => !!x))\n    ).pipe(\n      map(([m, rs]) => {\n        if (rs.length === 0) return rs;\n        const r = this.sortStatementsByRepoPopularity(rs);\n        return (m === -1 || m === null) ? r : r.slice(0, m);\n      })\n    )\n  }\n\n  /**\n  * Pipe repo ingoing statements.\n  * If max quantity is limited, takes only max allowed number of statements, starting with highest is_in_project_count\n  */\n  @spyTag pipeRepoIngoingStatementsByProperty(pkProperty, pkEntity): Observable<InfStatement[]> {\n    return combineLatest(\n      this.s.dfh$.property$.by_pk_property$.key(pkProperty)\n        .pipe(filter(x => !!x && Object.keys(x).length > 0), map(p => values(p)[0].domain_instances_max_quantifier)),\n      this.s.inf$.statement$\n        .by_object_and_property$({\n          fk_property: pkProperty,\n          fk_object_info: pkEntity\n        }, false)\n      // .pipe(filter(x => !!x))\n    ).pipe(\n      map(([m, rs]) => {\n        if (rs.length === 0) return rs;\n        const r = this.sortStatementsByRepoPopularity(rs);\n        return (m === -1 || m === null) ? r : r.slice(0, m);\n      })\n    )\n  }\n\n\n  /*********************************************************************\n   * Alternatives (Repo minus Project)\n  *********************************************************************/\n\n  @spyTag pipeAlternativeBasicStatementItemByPkStatement(pkStatement: number, isOutgoing: boolean): Observable<BasicStatementItem> {\n    return combineLatest(\n      this.s.inf$.statement$.by_pk_entity_key$(pkStatement, false),\n      this.s.inf$.statement$.by_pk_entity_key$(pkStatement),\n    )\n      .pipe(\n        filter(([inrepo]) => !!inrepo),\n        map(([inrepo, inproject]) => {\n          if (inproject) {\n            return undefined\n          } else {\n            const i: BasicStatementItem = {\n              projRel: undefined,\n              statement: inrepo,\n              ordNum: undefined,\n              isOutgoing,\n              label: ''\n            }\n            return i\n          }\n        })\n      )\n  }\n\n\n  /**\n     * Pipe alternative ingoing statements (= statements not in active project)\n     */\n  @spyTag pipeAlternativeIngoingStatements(pkProperty, pkEntity): Observable<InfStatement[]> {\n    return combineLatest(\n      this.s.inf$.statement$.by_object_and_property_indexed$({\n        fk_property: pkProperty,\n        fk_object_info: pkEntity\n      }, false),\n      this.s.inf$.statement$.by_object_and_property_indexed$({\n        fk_property: pkProperty,\n        fk_object_info: pkEntity\n      }).pipe(\n        map(inproject => inproject ? Object.keys(inproject) : [])\n      )\n    ).pipe(\n      map(([inrepo, inproject]) => omit(inproject, inrepo)),\n      map(statements => values(statements))\n    )\n  }\n\n\n  /**\n   * Pipe alternative outgoing statements (= statements not in active project)\n   */\n  @spyTag pipeAlternativeOutgoingStatements(pkProperty, pkEntity): Observable<InfStatement[]> {\n    return combineLatest(\n      this.s.inf$.statement$.by_subject_and_property_indexed$({\n        fk_property: pkProperty,\n        fk_subject_info: pkEntity\n      }, false),\n      this.s.inf$.statement$.by_subject_and_property_indexed$({\n        fk_property: pkProperty,\n        fk_subject_info: pkEntity\n      }).pipe(\n        map(inproject => inproject ? Object.keys(inproject) : [])\n      ),\n    ).pipe(\n      map(([inrepo, inproject]) => omit(inproject, inrepo)),\n      map(statements => values(statements))\n    )\n  }\n\n\n\n  /**\n   * get array of pks of persistent items of a specific class\n   */\n  @spyTag pipePersistentItemPksByClass(pkClass): Observable<number[]> {\n    return this.s.inf$.persistent_item$.by_fk_class_key$(pkClass).pipe(\n      map(ob => {\n        if (ob) return Object.keys(ob).map(k => parseInt(k, 10));\n        return []\n      }))\n  }\n\n  /**\n   * gets the css classes for that entity\n   * @param pkEntity\n   */\n  pipeIconType(pkEntity: number): Observable<IconType> {\n\n    return this.p.streamEntityPreview(pkEntity).pipe(\n      map(preview => {\n        if (preview.entity_type == 'teEn') {\n          return 'temporal-entity'\n        }\n        if (preview.fk_class === DfhConfig.CLASS_PK_EXPRESSION_PORTION) {\n          return 'expression-portion'\n        } else if (DfhConfig.CLASS_PKS_SOURCE_PE_IT.includes(preview.fk_class)) {\n          return 'source'\n        }\n        return 'persistent-entity'\n      })\n    )\n\n  }\n\n\n  /*********************************************************************\n   * Helpers\n   *********************************************************************/\n  sortStatementsByRepoPopularity(statements: InfStatement[]): InfStatement[] {\n    return statements.sort((a, b) => a.is_in_project_count > b.is_in_project_count ? 1 : -1)\n  }\n\n\n\n}\n","\nimport { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { DfhConfig } from '@kleiolab/lib-config';\nimport { IAppState } from '@kleiolab/lib-redux';\nimport { InfStatement } from '@kleiolab/lib-sdk-lb3';\nimport { GvFieldPage, GvFieldTargets, GvTargetType, TimePrimitiveWithCal, WarEntityPreviewTimeSpan } from '@kleiolab/lib-sdk-lb4';\nimport { combineLatestOrEmpty, sortAbc, TimePrimitivePipe, TimeSpanPipe, TimeSpanUtil } from '@kleiolab/lib-utils';\nimport { equals, flatten, uniq, values } from 'ramda';\nimport { BehaviorSubject, combineLatest, empty, iif, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\nimport { cache, spyTag } from '../decorators/method-decorators';\nimport { infTimePrimToTimePrimWithCal } from '../functions/functions';\nimport { ClassAndTypeNode } from '../models/ClassAndTypeNode';\nimport { ClassAndTypeSelectModel } from '../models/ClassAndTypeSelectModel';\nimport { PropertyOption } from '../models/PropertyOption';\nimport { PropertySelectModel } from '../models/PropertySelectModel';\nimport { StatementProjRel, StatementTarget, StatementWithTarget, SubentitySubfieldPage, SubfieldPage } from '../models/StatementWithTarget';\nimport { InfSelector } from '../selectors/inf.service';\nimport { ActiveProjectPipesService } from './active-project-pipes.service';\nimport { ConfigurationPipesService } from './configuration-pipes.service';\nimport { InformationBasicPipesService } from './information-basic-pipes.service';\nimport { SchemaSelectorsService } from './schema-selectors.service';\n\n\n\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * This Service provides a collecion of pipes that aggregate or transform information.\n * For Example\n * - the lists of text properties, appellaitons, places, time-primitives / time-spans etc.\n * - the label of temporal entity or persistent item\n *\n * This mainly selects data from the information schema and the relation to projects.\n * It combines pipes selecting data from the\n * - activated project\n * - alternatives (not in project but in others)\n * - repo\n *\n */\nexport class InformationPipesService {\n\n  infRepo: InfSelector;\n\n  constructor(\n    private b: InformationBasicPipesService,\n    private p: ActiveProjectPipesService,\n    private s: SchemaSelectorsService,\n    private c: ConfigurationPipesService,\n    public timePrimitivePipe: TimePrimitivePipe,\n    private timeSpanPipe: TimeSpanPipe,\n    ngRedux: NgRedux<IAppState>\n  ) {\n    this.infRepo = new InfSelector(ngRedux, of('repo'))\n  }\n\n\n  /*********************************************************************\n   * Pipe the project entities\n   *********************************************************************/\n\n  //   // @spyTag\n  //   pipeListLength(l: Subfield, pkEntity: number): Observable<number> {\n  //     switch (l.listType) {\n  //       case 'appellation':\n  //       case 'entity-preview':\n  //       case 'language':\n  //       case 'place':\n  //       case 'dimension':\n  //       case 'langString':\n  //       case 'temporal-entity':\n  //         return this.pipeList(l, pkEntity).pipe(map(items => items.length))\n\n  //       case 'time-span':\n  //         return combineLatest(\n  //           this.b.pipeOutgoingStatementsByProperty(72, pkEntity),\n  //           this.b.pipeOutgoingStatementsByProperty(71, pkEntity),\n  //           this.b.pipeOutgoingStatementsByProperty(150, pkEntity),\n  //           this.b.pipeOutgoingStatementsByProperty(151, pkEntity),\n  //           this.b.pipeOutgoingStatementsByProperty(152, pkEntity),\n  //           this.b.pipeOutgoingStatementsByProperty(153, pkEntity)\n  //         ).pipe(\n  //           tap((x) => {\n\n  //           }),\n  //           map(items => items.filter(x => x.length > 0).length))\n\n  //       // case 'text-property':\n  //       //   return this.pipeListTextProperty(l, pkEntity).pipe(map(items => items.length))\n\n  //       default:\n  //         console.warn('unsupported listType')\n  //         return new BehaviorSubject(0);\n  //     }\n  //   }\n\n  //   // @spyTag\n  //   pipeList(l: Subfield, pkEntity, limit?: number): Observable<ItemList> {\n  //     if (l.listType.appellation) return this.pipeListAppellation(l, pkEntity, limit)\n  //     else if (l.listType.entityPreview) return this.pipeListEntityPreview(l, pkEntity, limit)\n  //     else if (l.listType.language) return this.pipeListLanguage(l, pkEntity, limit)\n  //     else if (l.listType.place) return this.pipeListPlace(l, pkEntity, limit)\n  //     else if (l.listType.dimension) return this.pipeListDimension(l, pkEntity, limit)\n  //     else if (l.listType.langString) return this.pipeListLangString(l, pkEntity, limit)\n  //     else if (l.listType.temporalEntity) return this.pipeListEntityPreview(l, pkEntity, limit)\n  //     else if (l.listType.timeSpan) {\n  //       return this.pipeItemTimeSpan(pkEntity).pipe(\n  //         map((ts) => [ts].filter(i => i.properties.length > 0))\n  //       )\n  //     }\n  //     else console.warn('unsupported listType')\n  //   }\n\n  //   // @spyTag\n  //   pipeListBasicStatementItems(listDefinition: Subfield, pkEntity: number, pkProject: number): Observable<BasicStatementItem[]> {\n  //     return (listDefinition.isOutgoing ?\n  //       this.b.pipeOutgoingBasicStatementItemsByProperty(listDefinition.property.pkProperty, pkEntity, pkProject) :\n  //       this.b.pipeIngoingBasicStatementItemsByProperty(listDefinition.property.pkProperty, pkEntity, pkProject)\n  //     )\n  //   }\n\n  //   /**\n  //    * Pipe the items in appellation field\n  //    */\n  //   // @spyTag\n  //   pipeListAppellation<T>(listDefinition: Subfield, pkEntity: number, limit?: number): Observable<AppellationItem[]> {\n  //     return this.b.pipeStatementsOfList(listDefinition, pkEntity)\n  //       .pipe(\n  //         switchMap((statements) => {\n  //           return combineLatest(statements.map((r, i) => this.pipeItemAppellation(r)))\n  //             .pipe(\n  //               map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)),\n  //               limitTo(limit),\n  //               startWith([]))\n  //         }))\n  //   }\n\n  //   /**\n  //  * Pipe the items in entity preview field\n  //  */\n  //   // @spyTag\n  //   pipeListEntityPreview<T>(listDefinition: Subfield, pkEntity: number, limit?: number): Observable<EntityPreviewItem[]> {\n\n  //     return this.b.pipeStatementsOfList(listDefinition, pkEntity)\n  //       .pipe(\n  //         tag(`before-${pkEntity}-${listDefinition.property.pkProperty}-${listDefinition.targetClass}`),\n  //         switchMap((statements) => {\n  //           return combineLatest(statements.map((r, i) => this.pipeItemEntityPreview(r, listDefinition.isOutgoing)))\n  //             .pipe(\n  //               map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)\n  //                 .sort((a, b) => a.ordNum > b.ordNum ? 1 : -1),\n  //                 limitTo(limit),\n  //               ),\n  //               startWith([])\n  //             )\n  //         }),\n  //         tag(`after-${pkEntity}-${listDefinition.property.pkProperty}-${listDefinition.targetClass}`),\n  //       )\n\n  //   }\n\n\n  //   // @spyTag\n  //   pipeListLanguage<T>(listDefinition: Subfield, pkEntity: number, limit?: number): Observable<LanguageItem[]> {\n\n  //     return this.b.pipeStatementsOfList(listDefinition, pkEntity)\n  //       .pipe(\n  //         switchMap((statements) => {\n  //           return combineLatest(statements.map((r, i) => this.pipeItemLanguage(r)))\n  //             .pipe(\n  //               map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)),\n  //               limitTo(limit),\n  //               startWith([]))\n  //         }))\n  //   }\n\n  //   /**\n  //    * Pipe the items in place list\n  //    */\n  //   // @spyTag\n  //   pipeListPlace<T>(listDefinition: Subfield, pkEntity: number, limit?: number): Observable<PlaceItem[]> {\n\n  //     return this.b.pipeStatementsOfList(listDefinition, pkEntity)\n  //       .pipe(\n  //         switchMap((statements) => {\n  //           return combineLatest(statements.map((r, i) => this.pipeItemPlace(r)))\n  //             .pipe(\n  //               map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)),\n  //               limitTo(limit),\n  //               startWith([]))\n  //         }))\n  //   }\n\n  //   /**\n  //    * Pipe the items in place list\n  //    */\n  //   // @spyTag\n  //   pipeListDimension<T>(listDefinition: Subfield, pkEntity: number, limit?: number): Observable<DimensionItem[]> {\n\n  //     return this.b.pipeStatementsOfList(listDefinition, pkEntity)\n  //       .pipe(\n  //         switchMap((statements) => {\n  //           return combineLatest(statements.map((r, i) => this.pipeItemDimension(r)))\n  //             .pipe(\n  //               map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)),\n  //               limitTo(limit),\n  //               startWith([]))\n  //         }))\n  //   }\n\n  //   /**\n  //  * Pipe the items in langString list\n  //  */\n  //   // @spyTag\n  //   pipeListLangString<T>(listDefinition: Subfield, pkEntity: number, limit?: number): Observable<LangStringItem[]> {\n\n  //     return this.b.pipeStatementsOfList(listDefinition, pkEntity)\n  //       .pipe(\n  //         switchMap((statements) => {\n  //           return combineLatest(statements.map((r, i) => this.pipeItemLangString(r)))\n  //             .pipe(\n  //               map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)),\n  //               limitTo(limit),\n  //               startWith([]))\n  //         }))\n\n  //   }\n\n  /**\n   * pipe the project relation of given statment, if the scope of this page is inProject\n   * @param stmt InfStatement to be completed with projRel\n   * @param page page for which we are piping this stuff\n   */\n  pipeProjRelOfStatement(stmt: InfStatement, page: GvFieldPage): Observable<StatementProjRel> {\n    if (page.scope.inProject) {\n      return this.s.pro$.info_proj_rel$.by_fk_project__fk_entity$\n        .key(page.scope.inProject + '_' + stmt.pk_entity).pipe(\n          map(\n            projRel => ({\n              projRel,\n              ordNum: page.isOutgoing ? projRel.ord_num_of_range : projRel.ord_num_of_domain\n            })\n          )\n        )\n    } else {\n      return new BehaviorSubject({\n        projRel: undefined,\n        ordNum: 0\n      })\n    }\n  }\n  /**\n   * pipe the target of given statment\n   * @param stmt InfStatement to be completed with target\n   * @param page page for which we are piping this stuff\n   * @param subfieldType type of subfield for which we pipe this stuff\n   */\n  pipeTargetOfStatement(stmt: InfStatement, page: GvFieldPage, targets: GvFieldTargets): Observable<StatementTarget> {\n    const isOutgoing = page.isOutgoing\n    const targetInfo = isOutgoing ? stmt.fk_object_info : stmt.fk_subject_info;\n    // here you could add targetData or targetCell\n\n\n    return this.s.inf$.getModelOfEntity$(targetInfo).pipe(\n      filter(x => !!x),\n      switchMap(item => {\n        const subfieldType: GvTargetType = targets[item.fkClass]\n        if (subfieldType.appellation) {\n          return this.s.inf$.appellation$.by_pk_entity$.key(targetInfo).pipe(\n            filter(x => !!x),\n            map(appellation => {\n              const stmtTarget: StatementTarget = {\n                statement: stmt,\n                isOutgoing,\n                targetLabel: appellation.string,\n                targetClass: appellation.fk_class,\n                target: {\n                  appellation\n                }\n              }\n              return stmtTarget\n            })\n          )\n        }\n        else if (subfieldType.place) {\n          return this.s.inf$.place$.by_pk_entity$.key(targetInfo).pipe(\n            filter(x => !!x),\n            map(place => {\n              const stmtTarget: StatementTarget = {\n                statement: stmt,\n                isOutgoing,\n                targetLabel: `WGS84: ${place.lat}Â°, ${place.long}Â°`,\n                targetClass: place.fk_class,\n                target: {\n                  place\n                }\n              }\n              return stmtTarget\n            })\n          )\n        }\n        else if (subfieldType.dimension) {\n          return this.s.inf$.dimension$.by_pk_entity$.key(targetInfo).pipe(\n            filter(x => !!x),\n            switchMap(dimension => {\n              return this.p.streamEntityPreview(dimension.fk_measurement_unit)\n                .pipe(\n                  map(\n                    unitPreview => {\n                      const stmtTarget: StatementTarget = {\n                        statement: stmt,\n                        isOutgoing,\n                        targetLabel: `${dimension.numeric_value} ${unitPreview.entity_label}`,\n                        targetClass: dimension.fk_class,\n                        target: {\n                          dimension\n                        }\n                      }\n                      return stmtTarget\n\n                    }\n                  )\n                )\n            })\n          )\n        }\n        else if (subfieldType.langString) {\n          return this.s.inf$.lang_string$.by_pk_entity$.key(targetInfo).pipe(\n            filter(x => !!x),\n            switchMap(langString => {\n              return this.s.inf$.language$.by_pk_entity$.key(langString.fk_language)\n                .pipe(\n                  map(\n                    language => {\n                      const stmtTarget: StatementTarget = {\n                        statement: stmt,\n                        isOutgoing,\n                        targetLabel: `${langString.string} (${language.iso6391})`,\n                        targetClass: langString.fk_class,\n                        target: {\n                          langString\n                        }\n                      }\n                      return stmtTarget\n\n                    }\n                  )\n                )\n            })\n          )\n        }\n        else if (subfieldType.language) {\n          return this.s.inf$.language$.by_pk_entity$.key(targetInfo).pipe(\n            filter(x => !!x),\n            map(language => {\n              const stmtTarget: StatementTarget = {\n                statement: stmt,\n                isOutgoing,\n                targetLabel: `${language.notes || language.iso6391}`,\n                targetClass: language.fk_class,\n                target: {\n                  language\n                }\n              }\n              return stmtTarget\n            })\n          )\n        }\n        else if (subfieldType.entityPreview || subfieldType.typeItem) {\n          return this.p.streamEntityPreview(targetInfo).pipe(\n            filter(x => !!x),\n            map(entityPreview => {\n              const stmtTarget: StatementTarget = {\n                statement: stmt,\n                isOutgoing,\n                targetLabel: `${entityPreview.entity_label}`,\n                targetClass: entityPreview.fk_class,\n                target: {\n                  entityPreview\n                }\n              }\n              return stmtTarget\n            })\n          )\n        }\n\n        else if (subfieldType.temporalEntity) {\n\n          return this.s.inf$.temporal_entity$._by_pk_entity$.key(targetInfo).pipe(\n            filter(x => !!x),\n            map(temporalEntity => {\n              const stmtTarget: StatementTarget = {\n                statement: stmt,\n                isOutgoing,\n                targetLabel: ``,\n                targetClass: temporalEntity.fk_class,\n                target: {\n                  entity: {\n                    pkEntity: temporalEntity.pk_entity,\n                    fkClass: temporalEntity.fk_class\n                  }\n                }\n              }\n              return stmtTarget\n            })\n          )\n          // console.log('subfieldType.temporalEntity.length', subfieldType.temporalEntity.length)\n\n          // // for each of these subfields\n          // const subentityPages$ = subfieldType.temporalEntity.map(subfieldReq => {\n\n          //   // console.log('subentity subfield for targetInfo', targetInfo)\n\n          //   // create page:GvSubfieldPage\n          //   const { isCircular, ...p } = subfieldReq.page\n          //   const scope = page.scope.notInProject ? { inRepo: true } : page.scope\n          //   const nestedPage: GvFieldPage = {\n          //     ...p,\n          //     fkSourceEntity: targetInfo,\n          //     scope,\n          //   }\n\n          //   return this.pipeSubfieldPage(nestedPage, subfieldReq.subfieldType).pipe(\n          //     map(({ count, statements }) => {\n          //       const { limit, offset, ...s } = nestedPage;\n          //       const subentitySubfieldPage: SubentitySubfieldPage = {\n          //         subfield: s,\n          //         count,\n          //         statements\n          //       }\n          //       return subentitySubfieldPage\n          //     }),\n          //     // startWith(undefined) // TODO remove! this is for debugging\n          //   )\n          // })\n\n          // return combineLatestOrEmpty(subentityPages$)\n          //   .pipe(\n          //     // filter(subfields => {\n          //     //   console.log('subfields\\n', subfields.map((item, i) => {\n          //     //     const req = subfieldType.temporalEntity[i]\n          //     //     const fieldInfo = targetInfo + '_' + req.page.fkProperty + '_' + req.page.targetClass + '_' + keys(req.subfieldType)[0]\n          //     //     return `${i}: ${item === undefined ?\n          //     //       `undefined ${fieldInfo}` :\n          //     //       `ok        ${fieldInfo}`\n          //     //       }`\n          //     //   }).join('\\n'))\n          //     //   return !subfields.includes(undefined)\n          //     // }),\n          //     map(\n          //       subfields => {\n          //         const stmtTarget: StatementTarget = {\n          //           statement: stmt,\n          //           isOutgoing,\n          //           targetLabel: '',\n          //           targetClass: page.targetClass,\n          //           target: {\n          //             entity: {\n          //               pkEntity: targetInfo,\n          //               subfields\n          //             }\n          //           }\n          //         }\n          //         return stmtTarget\n          //       }\n          //     )\n          //   )\n        }\n\n        else if (subfieldType.timePrimitive) {\n          return this.s.inf$.time_primitive$.by_pk_entity$.key(targetInfo).pipe(\n            filter(x => !!x),\n            switchMap(timePrimitive => {\n              // get calendar\n              let cal$: Observable<TimePrimitiveWithCal.CalendarEnum>\n              if (page.scope.inProject) {\n                cal$ = this.s.pro$.info_proj_rel$.by_fk_project__fk_entity$.key(page.scope.inProject + '_' + stmt.pk_entity)\n                  .pipe(\n                    map(\n                      infoProjRel => infoProjRel.calendar as TimePrimitiveWithCal.CalendarEnum\n                    )\n                  )\n              }\n              else {\n                cal$ = new BehaviorSubject(stmt.community_favorite_calendar as TimePrimitiveWithCal.CalendarEnum)\n              }\n              // pipe target time primitive of stmt\n              return cal$.pipe(\n                map(\n                  cal => {\n                    const timePrimWithCal = infTimePrimToTimePrimWithCal(timePrimitive, cal)\n                    const stmtTarget: StatementTarget = {\n                      statement: stmt,\n                      isOutgoing,\n                      targetLabel: this.timePrimitivePipe.transform(timePrimWithCal),\n                      targetClass: timePrimitive.fk_class,\n                      target: {\n                        timePrimitive: timePrimWithCal\n                      }\n                    }\n                    return stmtTarget\n\n                  }\n                )\n              )\n            })\n          )\n        }\n\n        throw new Error(`No implementation found for subfieldType ${JSON.stringify(subfieldType)}`);\n      })\n    )\n\n\n  }\n\n  /**\n   * pipe target and projRel of the given statement\n   */\n  pipeStatementWithTarget(stmt: InfStatement, page: GvFieldPage, targets: GvFieldTargets): Observable<StatementWithTarget> {\n\n    return combineLatest(\n      this.pipeTargetOfStatement(stmt, page, targets),\n      this.pipeProjRelOfStatement(stmt, page)\n    ).pipe(\n      map(([target, projRel]) => ({ ...target, ...projRel }))\n    )\n  }\n\n  pipeSubfieldPage(page: GvFieldPage, targets: GvFieldTargets): Observable<SubfieldPage> {\n    if (page.property.fkProperty === DfhConfig.PROPERTY_PK_HAS_TIME_SPAN && page.isOutgoing) {\n      // if timeSpan make a short cut: produce a virtual statementWithTarget from entity to timeSpan\n      return this.pipeTimeSpan(page)\n    }\n    else {\n      // get the statments of that page\n      return combineLatest(\n        this.s.inf$.statement$.pagination$.pipeCount(page),\n        this.s.inf$.statement$.pagination$.pipePage(page)\n          .pipe(\n            switchMap(\n              pkStmts => combineLatestOrEmpty(\n                pkStmts.map(pkStmt => this.s.inf$.statement$.by_pk_entity$.key(pkStmt)\n                  // for each statement, depending on the subfieldType, load the corresponding target\n                  .pipe(\n                    filter(stmt => !!stmt),\n                    switchMap(stmt => this.pipeStatementWithTarget(stmt, page, targets))\n                  )\n                )\n              )\n            ),\n          )\n      ).pipe(\n        map(([count, statements]) => ({ count, statements }))\n      )\n    }\n\n  }\n\n  private pipeTimeSpan(page: GvFieldPage) {\n    const virtualStatementToTimeSpan = { fk_object_info: page.source.fkInfo };\n    // const targets: GvFieldTargets = { [DfhConfig.ClASS_PK_TIME_SPAN]: { timeSpan: 'true' } }\n\n    // console.log('subfieldType.temporalEntity.length', subfieldType.temporalEntity.length)\n\n    // for each of these subfields\n    const subentityPages$ = DfhConfig.PROPERTY_PKS_WHERE_TIME_PRIMITIVE_IS_RANGE\n      .map(fkProperty => {\n\n        // console.log('subentity subfield for targetInfo', targetInfo)\n\n        // create page:GvSubfieldPage\n        const scope = page.scope.notInProject ? { inRepo: true } : page.scope\n\n        const nestedPage: GvFieldPage = {\n          property: { fkProperty },\n          isOutgoing: true,\n          limit: 1,\n          offset: 0,\n          source: page.source,\n          scope,\n        }\n        const subfType: GvTargetType = {\n          timePrimitive: 'true'\n        }\n        const trgts = {\n          [DfhConfig.CLASS_PK_TIME_PRIMITIVE]: subfType\n        }\n        return this.pipeSubfieldPage(nestedPage, trgts).pipe(\n          map(({ count, statements }) => {\n            const { limit, offset, ...s } = nestedPage;\n            const subentitySubfieldPage: SubentitySubfieldPage = {\n              subfield: s,\n              count,\n              statements\n            }\n            return subentitySubfieldPage\n          })\n        )\n      })\n\n\n    return combineLatestOrEmpty(subentityPages$)\n      .pipe(\n        map(\n          subfields => {\n            const timeSpanPreview: WarEntityPreviewTimeSpan = {}\n            subfields.forEach(s => {\n              if (s.statements[0]) {\n                const st = s.statements[0]\n                const key = DfhConfig.PROPERTY_PK_TO_EXISTENCE_TIME_KEY[st.statement.fk_property]\n                timeSpanPreview[key] = st.target.timePrimitive\n              }\n            })\n            const stmtTarget: StatementTarget = {\n              statement: virtualStatementToTimeSpan,\n              isOutgoing: page.isOutgoing,\n              targetLabel: this.timeSpanPipe.transform(new TimeSpanUtil(timeSpanPreview)),\n              targetClass: DfhConfig.ClASS_PK_TIME_SPAN,\n              target: {\n                timeSpan: {\n                  preview: timeSpanPreview,\n                  subfields\n                }\n              }\n            }\n            return stmtTarget\n          }\n        )\n      ).pipe(map(stmtTarget => {\n        const stmtWT: StatementWithTarget = {\n          ...stmtTarget,\n          projRel: undefined,\n          ordNum: undefined\n        };\n        return { count: 1, statements: [stmtWT] };\n      }));\n  }\n\n  // pipeStatementListPage(\n  //   paginateBy: PaginateByParam[],\n  //   limit: number,\n  //   offset: number,\n  //   pkProject: number,\n  //   listDefinition: Subfield,\n  //   alternative = false): Observable<EntityPreviewItem[]> {\n\n  //   // prepare page loader\n  //   const pageLoader$ = alternative ? this.infRepo.statement$.pagination$ : this.s.inf$.statement$.pagination$;\n\n  //   // prepare basic statement item loader\n  //   const basicStatementItemLoader = (pkStatement, isOutgoing, pkProj) => {\n  //     return alternative ?\n  //       this.b.pipeAlternativeBasicStatementItemByPkStatement(pkStatement, isOutgoing) :\n  //       this.b.pipeBasicStatementItemByPkStatement(pkProj, pkStatement, isOutgoing)\n  //   }\n\n  //   const paginatedStatementPks$ = pageLoader$.pipePage(paginateBy, limit, offset)\n\n  //   return paginatedStatementPks$.pipe(\n  //     switchMap((paginatedStatementPks) => combineLatestOrEmpty(\n  //       paginatedStatementPks.map(pkStatement => basicStatementItemLoader(pkStatement, listDefinition.isOutgoing, pkProject)\n  //         .pipe(\n  //           filter(x => !!x),\n  //           switchMap(x => this.p.streamEntityPreview(x.isOutgoing ? x.statement.fk_object_info : x.statement.fk_subject_info)\n  //             .pipe(\n  //               map((preview) => {\n  //                 const item: EntityPreviewItem = {\n  //                   ...x,\n  //                   preview,\n  //                   fkClass: preview.fk_class\n  //                 }\n  //                 return item;\n  //               })\n  //             )\n  //           ))\n\n  //       )\n  //     )\n  //     ))\n\n  // }\n\n\n  // /**\n  //  * Pipe the temporal entities connected to given entity by statements that are in the current project\n  //  */\n  // // @spyTag\n  // // pipeTemporalEntityTableRows(\n  // //   paginateBy: PaginateByParam[],\n  // //   limit: number,\n  // //   offset: number,\n  // //   pkProject: number,\n  // //   listDefinition: Subfield,\n  // //   fieldDefinitions: Field[],\n  // //   alternative = false): Observable<TemporalEntityItem[]> {\n\n  // //   // const propertyItemType = this.propertyItemType(fieldDefinitions)\n\n  // //   const targetEntityOfStatementItem = (r: BasicStatementItem) => r.isOutgoing ? r.statement.fk_object_info : r.statement.fk_subject_info;\n\n  // //   // prepare page loader\n  // //   const pageLoader$ = alternative ? this.infRepo.statement$.pagination$ : this.s.inf$.statement$.pagination$;\n\n  // //   // prepare basic statement item loader\n  // //   const basicStatementItemLoader = (pkStatement, isOutgoing, pkProj) => {\n  // //     return alternative ?\n  // //       this.b.pipeAlternativeBasicStatementItemByPkStatement(pkStatement, isOutgoing) :\n  // //       this.b.pipeBasicStatementItemByPkStatement(pkProj, pkStatement, isOutgoing)\n  // //   }\n\n  // //   // prepare TeEnRow loader\n  // //   const rowLoader = (targetEntityPk, fieldDef, pkProj) => {\n  // //     return alternative ?\n  // //       this.pipeItemTeEnRow(targetEntityPk, fieldDef, null, true) :\n  // //       this.pipeItemTeEnRow(targetEntityPk, fieldDef, pkProj, false)\n  // //   }\n\n  // //   const paginatedStatementPks$ = pageLoader$.pipePage(paginateBy, limit, offset)\n\n  // //   const rows$ = paginatedStatementPks$.pipe(\n  // //     switchMap((paginatedStatementPks) => combineLatestOrEmpty(\n  // //       paginatedStatementPks.map(pkStatement => basicStatementItemLoader(pkStatement, listDefinition.isOutgoing, pkProject)\n  // //         .pipe(filter(x => !!x))\n  // //       )\n  // //     )\n  // //       .pipe(\n  // //         switchMap((teEnStatement) => combineLatestOrEmpty(\n  // //           teEnStatement.map((basicStatementItem) => {\n  // //             const pkTeEn = targetEntityOfStatementItem(basicStatementItem);\n  // //             return combineLatest(\n  // //               rowLoader(\n  // //                 pkTeEn,\n  // //                 fieldDefinitions,\n  // //                 // propertyItemType,\n  // //                 pkProject\n  // //               ),\n  // //               this.s.pro$.info_proj_rel$.by_fk_project__fk_entity$.key(pkProject + '_' + pkTeEn)\n  // //             ).pipe(\n  // //               map(([row, teEnProjRel]) => {\n  // //                 const item: TemporalEntityItem = {\n  // //                   ...basicStatementItem,\n  // //                   row,\n  // //                   pkEntity: pkTeEn,\n  // //                   teEnProjRel\n  // //                 };\n  // //                 return item\n  // //               })\n  // //             )\n  // //           })\n  // //         )),\n  // //       )),\n\n  // //   )\n  // //   return rows$\n  // // }\n\n\n\n  // // @spyTag\n  // pipeItemTeEnRow(pkEntity: number, fieldDefinitions: Field[], pkProject: number, repo: boolean): Observable<TemporalEntityRow> {\n\n  //   // pipe outgoing statements\n  //   const outgoingStatements$ = repo ? this.b.pipeRepoOutgoingStatements(pkEntity) : this.b.pipeOutgoingStatements(pkEntity);\n  //   // pipe ingoing statements\n  //   const ingoingStatements$ = repo ? this.b.pipeRepoIngoingStatements(pkEntity) : this.b.pipeIngoingStatements(pkEntity);\n\n\n  //   // pipe all statements with information leaf items\n\n  //   const outgoingItems$: Observable<StatementItem[]> = outgoingStatements$.pipe(\n  //     switchMap(statements => combineLatestOrEmpty(\n  //       statements\n  //         .filter(statement => !!statement.fk_object_info) // remove statements not pointing to information\n  //         .map(s => {\n  //           const isOutgoing = true;\n  //           return this.pipeItem(s, pkProject, isOutgoing);\n  //         })\n  //     ))\n\n  //   )\n  //   const ingoingItems$: Observable<StatementItem[]> = ingoingStatements$.pipe(\n  //     switchMap(statements => combineLatestOrEmpty(\n  //       statements\n  //         .filter(statement => !!statement.fk_subject_info) // remove statements not pointing to information\n  //         .map(s => {\n  //           const isOutgoing = false;\n  //           return this.pipeItem(s, pkProject, isOutgoing);\n  //         })\n  //     ))\n\n  //   )\n\n  //   const sortItems = repo ?\n  //     (item: StatementItem[]) => item.sort((a, b) => a.statement.is_in_project_count > b.statement.is_in_project_count ? 1 : -1) :\n  //     (item: StatementItem[]) => item;\n\n\n  //   return combineLatest(outgoingItems$, ingoingItems$).pipe(\n\n  //     map(([outgoingItems, ingoingItems]) => {\n  //       const groupedOut = groupBy((i) => (i && i.statement ? i.statement.fk_property.toString() : undefined), outgoingItems);\n  //       const groupedIn = groupBy((i) => (i && i.statement ? i.statement.fk_property.toString() : undefined), ingoingItems);\n  //       return { groupedOut, groupedIn }\n  //     }),\n  //     // auditTime(10),\n  //     map((d) => {\n  //       const row: TemporalEntityRow = {}\n\n  //       fieldDefinitions.forEach(fieldDefinition => {\n\n  //         let cell: TemporalEntityCell;\n  //         fieldDefinition.listDefinitions.forEach(listDefinition => {\n  //           if (listDefinition.listType.timeSpan) {\n\n  //             const t = pick(['71', '72', '150', '151', '152', '153'], d.groupedOut);\n  //             const keys = Object.keys(t);\n  //             const itemsCount = keys.length;\n\n  //             let label;\n  //             if (itemsCount > 0) {\n  //               const timeSpanKeys: CtrlTimeSpanDialogResult = {}\n  //               keys.forEach(key => { timeSpanKeys[key] = t[key][0].timePrimitive })\n  //               const timeSpan = TimeSpanUtil.fromTimeSpanDialogData(timeSpanKeys);\n  //               label = this.timeSpanPipe.transform(timeSpan);\n  //             }\n  //             cell = {\n  //               isOutgoing: listDefinition.isOutgoing,\n  //               itemsCount,\n  //               label,\n  //               entityPreview: undefined,\n  //               pkProperty: undefined,\n  //               isTimeSpan: true\n  //             }\n  //           }\n  //           else {\n  //             if (listDefinition.isOutgoing) {\n  //               if (d.groupedOut[listDefinition.property.pkProperty]) {\n  //                 const items = sortItems(d.groupedOut[listDefinition.property.pkProperty])\n  //                 const firstItem = items[0];\n  //                 cell = {\n  //                   isOutgoing: listDefinition.isOutgoing,\n  //                   itemsCount: items.length,\n  //                   entityPreview: ((firstItem || {}) as EntityPreviewItem).preview,\n  //                   label: firstItem.label,\n  //                   pkProperty: listDefinition.property.pkProperty,\n  //                   firstItem,\n  //                   items\n  //                 }\n  //               }\n  //             } else {\n  //               if (d.groupedIn[listDefinition.property.pkProperty]) {\n  //                 const items = sortItems(d.groupedIn[listDefinition.property.pkProperty])\n  //                 const firstItem = items[0];\n  //                 cell = {\n  //                   isOutgoing: listDefinition.isOutgoing,\n  //                   itemsCount: items.length,\n  //                   entityPreview: ((firstItem || {}) as EntityPreviewItem).preview,\n  //                   label: firstItem.label,\n  //                   pkProperty: listDefinition.property.pkProperty,\n  //                   firstItem,\n  //                   items\n  //                 }\n  //               }\n  //             }\n  //           }\n\n  //         })\n\n\n  //         row[fieldDefinition.label] = cell;\n  //       })\n  //       return row\n  //     })\n\n\n  //   )\n  // }\n\n\n\n  // // @spyTag\n  // private pipeItem(r: InfStatement, pkProject: number, propIsOutgoing: boolean) {\n\n  //   const targetEntity = propIsOutgoing ? r.fk_object_info : r.fk_subject_info;\n  //   return this.s.inf$.getModelOfEntity$(targetEntity).pipe(\n  //     switchMap(m => {\n  //       const modelName: InfModelName = m ? m.modelName : undefined;\n  //       switch (modelName) {\n  //         case 'appellation':\n  //           return this.pipeItemAppellation(r);\n  //         case 'language':\n  //           return this.pipeItemLanguage(r);\n  //         case 'place':\n  //           return this.pipeItemPlace(r);\n  //         case 'dimension':\n  //           return this.pipeItemDimension(r);\n  //         case 'lang_string':\n  //           return this.pipeItemLangString(r);\n  //         case 'time_primitive':\n  //           return this.pipeItemTimePrimitive(r, pkProject); // TODO: emits twice\n  //         default:\n  //           return this.pipeItemEntityPreview(r, propIsOutgoing);\n  //       }\n\n\n  //     })\n  //   )\n\n\n  // }\n\n\n  // // @spyTag\n  // pipeEntityProperties(listDef: Subfield, fkEntity: number, limit?: number): Observable<EntityProperties> {\n\n  //   if (listDef.listType.appellation) {\n  //     return this.pipeListAppellation(listDef, fkEntity, limit)\n  //       .pipe(map((items) => this.getEntityProperties(listDef, items)))\n  //   }\n  //   else if (listDef.listType.language) {\n  //     return this.pipeListLanguage(listDef, fkEntity, limit)\n  //       .pipe(map((items) => this.getEntityProperties(listDef, items)))\n  //   }\n  //   else if (listDef.listType.place) {\n  //     return this.pipeListPlace(listDef, fkEntity, limit)\n  //       .pipe(map((items) => this.getEntityProperties(listDef, items)))\n  //   }\n  //   else if (listDef.listType.dimension) {\n  //     return this.pipeListDimension(listDef, fkEntity, limit)\n  //       .pipe(map((items) => this.getEntityProperties(listDef, items)))\n  //   }\n  //   else if (listDef.listType.langString) {\n  //     return this.pipeListLangString(listDef, fkEntity, limit)\n  //       .pipe(map((items) => this.getEntityProperties(listDef, items)))\n  //   }\n\n\n  //   else if (listDef.listType.entityPreview || listDef.listType.temporalEntity) {\n  //     return this.pipeListEntityPreview(listDef, fkEntity, limit)\n  //       .pipe(map((items) => this.getEntityProperties(listDef, items)))\n  //   }\n  //   else if (listDef.listType.timeSpan) {\n  //     return this.pipeItemTimeSpan(fkEntity)\n  //       .pipe(map((item) => {\n  //         const items = item.properties.find(p => p.items.length > 0) ? [{\n  //           label: this.timeSpanPipe.transform(timeSpanItemToTimeSpan(item)),\n  //           properties: [] // TODO check if the properties or the item are really not needed\n  //         }] : []\n  //         return {\n  //           listDefinition: listDef,\n  //           items\n  //         }\n  //       }))\n  //   }\n  //   else return of(null)\n  // }\n\n  // // @spyTag\n  // pipeTemporalEntityRemoveProperties(pkEntity: number): Observable<TemporalEntityRemoveProperties> {\n  //   return combineLatest(\n  //     this.s.inf$.temporal_entity$.by_pk_entity_key$(pkEntity),\n  //     this.s.inf$.statement$.by_subject$({ fk_subject_info: pkEntity }),\n  //     this.s.inf$.text_property$.by_fk_concerned_entity_indexed$(pkEntity)\n  //   ).pipe(\n  //     map(([temporalEntity, statements, textProperties]) => {\n  //       const res: TemporalEntityRemoveProperties = {\n  //         temporalEntity,\n  //         statements: statements,\n  //         textProperties: values(textProperties)\n  //       }\n  //       return res\n  //     })\n  //   )\n  // }\n\n  // getEntityProperties(listDefinition: Subfield, items): EntityProperties {\n  //   return {\n  //     listDefinition,\n  //     items,\n  //   }\n  // }\n\n  // /**\n  //  * Pipe time span item in version of project\n  //  */\n  // // @spyTag\n  // pipeItemTimeSpan(pkEntity): Observable<TimeSpanItem> {\n\n  //   return this.p.pkProject$.pipe(\n  //     switchMap(pkProject => {\n  //       return this.c.pipeSpecificFieldOfClass(\n  //         DfhConfig.ClASS_PK_TIME_SPAN\n  //       ).pipe(\n  //         switchMap(fieldDefs => {\n  //           return combineLatest(fieldDefs.map(fieldDef => this.s.inf$.statement$.by_subject_and_property$({\n  //             fk_property: fieldDef.property.pkProperty,\n  //             fk_subject_info: pkEntity\n  //           })\n  //             .pipe(\n  //               switchMapOr([], statements => combineLatest(\n  //                 statements.map(statement => combineLatest(\n  //                   this.s.inf$.time_primitive$.by_pk_entity$.key(statement.fk_object_info).pipe(filter(x => !!x)),\n  //                   this.s.pro$.info_proj_rel$.by_fk_project__fk_entity$.key(pkProject + '_' + statement.pk_entity)\n  //                 ).pipe(map(([infTimePrimitive, projRel]) => {\n  //                   const timePrimitive = new TimePrimitive({\n  //                     julianDay: infTimePrimitive.julian_day,\n  //                     calendar: ((projRel.calendar || 'gregorian') as CalendarType),\n  //                     duration: (infTimePrimitive.duration as Granularity)\n  //                   })\n  //                   const item: TimePrimitiveItem = {\n  //                     statement,\n  //                     ordNum: undefined,\n  //                     projRel,\n  //                     timePrimitive,\n  //                     label: this.timePrimitivePipe.transform(timePrimitive),\n  //                     fkClass: infTimePrimitive.fk_class\n  //                   }\n  //                   return item;\n  //                 }))\n  //                 )\n  //               )),\n  //               map(items => {\n  //                 const res: TimeSpanProperty = {\n  //                   listDefinition: fieldDef.listDefinitions[0], items\n  //                 }\n  //                 return res\n  //               })\n  //             )\n  //           )).pipe(\n  //             map((properties) => {\n  //               const props = properties.filter(p => p.items.length > 0);\n  //               const timespanitem: TimeSpanItem = {\n  //                 label: '',\n  //                 properties: props\n  //               }\n  //               return timespanitem\n  //             })\n  //           )\n  //         })\n  //       )\n  //     })\n\n  //   )\n  // }\n\n  // // @spyTag\n  // pipeItemAppellation(statement: InfStatement): Observable<AppellationItem> {\n  //   return this.s.inf$.appellation$.by_pk_entity$.key(statement.fk_object_info).pipe(\n  //     filter(x => !!x),\n  //     map(appellation => {\n  //       if (!appellation) return null;\n  //       const node: AppellationItem = {\n  //         ordNum: undefined,\n  //         projRel: undefined,\n  //         statement,\n  //         label: appellation.string,\n  //         fkClass: appellation.fk_class\n  //       }\n  //       return node\n  //     }))\n  // }\n\n  // // @spyTag\n  // pipeItemLanguage(statement: InfStatement): Observable<LanguageItem> {\n  //   return this.s.inf$.language$.by_pk_entity$.key(statement.fk_object_info).pipe(\n  //     filter(x => !!x),\n  //     map(language => {\n  //       if (!language) return null;\n  //       const node: LanguageItem = {\n  //         ordNum: undefined,\n  //         projRel: undefined,\n  //         statement,\n  //         label: language.notes,\n  //         fkClass: language.fk_class\n  //       }\n  //       return node\n  //     }))\n  // }\n\n  // // @spyTag\n  // pipeItemPlace(statement: InfStatement): Observable<PlaceItem> {\n  //   return this.s.inf$.place$.by_pk_entity$.key(statement.fk_object_info).pipe(\n  //     filter(x => !!x),\n  //     map(place => {\n  //       if (!place) return null;\n  //       const node: PlaceItem = {\n  //         ordNum: undefined,\n  //         projRel: undefined,\n  //         statement,\n  //         label: 'WGS84: ' + place.lat + 'Â°, ' + place.long + 'Â°',\n  //         fkClass: place.fk_class\n  //       }\n  //       return node\n  //     }))\n  // }\n\n  // // @spyTag\n  // pipeItemDimension(statement: InfStatement): Observable<DimensionItem> {\n  //   return this.s.inf$.dimension$.by_pk_entity$.key(statement.fk_object_info).pipe(\n  //     filter(x => !!x),\n  //     switchMap((dimension) => {\n  //       return this.p.streamEntityPreview(dimension.fk_measurement_unit)\n  //         .pipe(\n  //           map(preview => {\n\n  //             const node: DimensionItem = {\n  //               ordNum: undefined,\n  //               projRel: undefined,\n  //               statement,\n  //               label: `${dimension.numeric_value} ${preview.entity_label}`,\n  //               fkClass: dimension.fk_class,\n  //             }\n  //             return node\n  //           })\n  //         )\n  //     })\n  //   )\n  // }\n\n\n  // // @spyTag\n  // pipeItemLangString(statement: InfStatement): Observable<LangStringItem> {\n  //   return this.s.inf$.lang_string$.by_pk_entity$.key(statement.fk_object_info).pipe(\n  //     switchMap(\n  //       (langString) => {\n  //         if (!langString) return new BehaviorSubject(null)\n  //         return this.s.inf$.language$.by_pk_entity$.key(langString.fk_language)\n  //           .pipe(\n  //             map(language => {\n  //               if (!language) return null;\n  //               let label = '';\n  //               if (langString.string) label = langString.string\n  //               else if (langString.quill_doc && langString.quill_doc.ops && langString.quill_doc.ops.length) {\n  //                 label = langString.quill_doc.ops.map(op => op.insert).join('');\n  //               }\n  //               const node: LangStringItem = {\n  //                 ordNum: undefined,\n  //                 projRel: undefined,\n  //                 statement,\n  //                 label,\n  //                 fkClass: langString.fk_class,\n  //                 language,\n  //                 fkLanguage: langString.fk_language\n  //               }\n  //               return node\n  //             })\n  //           )\n  //       })\n  //   )\n  // }\n\n\n  // // @spyTag\n  // pipeItemEntityPreview(statement: InfStatement, isOutgoing: boolean): Observable<EntityPreviewItem> {\n  //   return this.p.streamEntityPreview((isOutgoing ? statement.fk_object_info : statement.fk_subject_info)).pipe(\n  //     // filter(preview => !preview.loading && !!preview && !!preview.entity_type),\n  //     map(preview => {\n  //       if (!preview) {\n  //         return null;\n  //       }\n  //       const node: EntityPreviewItem = {\n  //         ordNum: undefined,\n  //         projRel: undefined,\n  //         statement,\n  //         preview,\n  //         label: preview.entity_label || '',\n  //         fkClass: preview.fk_class\n  //       }\n  //       return node\n  //     }))\n  // }\n\n  // /**\n  //  * @param pk\n  //  */\n  // // @spyTag\n  // pipeItemTimePrimitive(statement: InfStatement, pkProject): Observable<TimePrimitiveItem> {\n  //   if (pkProject) {\n  //     return combineLatest(\n  //       this.s.inf$.time_primitive$.by_pk_entity$.key(statement.fk_object_info).pipe(filter(x => !!x)),\n  //       this.s.pro$.info_proj_rel$.by_fk_project__fk_entity$.key(pkProject + '_' + statement.pk_entity).pipe(filter(x => !!x))\n  //     ).pipe(\n  //       map(([infTimePrimitive, projRel]) => {\n  //         if (!infTimePrimitive) return null;\n  //         const timePrimitive = new TimePrimitive({\n  //           julianDay: infTimePrimitive.julian_day,\n  //           calendar: ((projRel.calendar || 'gregorian') as CalendarType),\n  //           duration: (infTimePrimitive.duration as Granularity)\n  //         })\n  //         const node: TimePrimitiveItem = {\n  //           ordNum: undefined,\n  //           projRel: undefined,\n  //           statement,\n  //           timePrimitive,\n  //           label: this.timePrimitivePipe.transform(timePrimitive),\n  //           fkClass: infTimePrimitive.fk_class\n  //         }\n  //         return node\n  //       }))\n  //   } else {\n  //     return this.infRepo.time_primitive$.by_pk_entity$.key(statement.fk_object_info).pipe(filter(x => !!x)).pipe(\n  //       map(infTimePrimitive => {\n  //         const timePrimitive = new TimePrimitive({\n  //           julianDay: infTimePrimitive.julian_day,\n  //           calendar: ((statement.community_favorite_calendar || 'gregorian') as CalendarType),\n  //           duration: (infTimePrimitive.duration as Granularity)\n  //         })\n  //         const node: TimePrimitiveItem = {\n  //           ordNum: undefined,\n  //           projRel: undefined,\n  //           statement,\n  //           timePrimitive,\n  //           label: this.timePrimitivePipe.transform(timePrimitive),\n  //           fkClass: infTimePrimitive.fk_class\n  //         }\n  //         return node\n  //       })\n  //     )\n  //   }\n  // }\n\n\n  // /*********************************************************************\n  // * Pipe alternatives (not in project)\n  // *********************************************************************/\n  // // @spyTag\n  // pipeAltListLength(l: Subfield, pkEntity: number): Observable<number> {\n  //   switch (l.listType) {\n  //     case 'appellation':\n  //     case 'entity-preview':\n  //     case 'language':\n  //     case 'place':\n  //     case 'langString':\n  //     case 'temporal-entity':\n  //     case 'time-span':\n  //       return this.pipeAltListStatements(l, pkEntity).pipe(map(items => items.length))\n\n  //     default:\n  //       console.warn('unsupported listType')\n  //       break;\n  //   }\n  // }\n\n  // // @spyTag\n  // pipeAltList(l: Subfield, pkEntity): Observable<ItemList> {\n  //   if (l.listType.appellation) return this.pipeAltListAppellation(l, pkEntity)\n  //   else if (l.listType.entityPreview) return this.pipeAltListEntityPreview(l, pkEntity)\n  //   else if (l.listType.language) return this.pipeAltListLanguage(l, pkEntity)\n  //   else if (l.listType.place) return this.pipeAltListPlace(l, pkEntity)\n  //   else if (l.listType.dimension) return this.pipeAltListDimension(l, pkEntity)\n  //   else if (l.listType.langString) return this.pipeAltListLangString(l, pkEntity)\n  //   else if (l.listType.temporalEntity) return this.pipeAltListEntityPreview(l, pkEntity)\n  //   else console.warn('unsupported listType')\n  // }\n\n  // // @spyTag\n  // pipeAltListStatements(listDefinition: Subfield, pkEntity: number): Observable<InfStatement[]> {\n  //   return (listDefinition.isOutgoing ?\n  //     this.b.pipeAlternativeIngoingStatements(listDefinition.property.pkProperty, pkEntity) :\n  //     this.b.pipeAlternativeIngoingStatements(listDefinition.property.pkProperty, pkEntity)\n  //   )\n  // }\n\n  // /**\n  // * Pipe the items in entity preview field\n  // */\n  // // @spyTag\n  // pipeAltListEntityPreview<T>(listDefinition: Subfield, pkEntity): Observable<EntityPreviewItem[]> {\n\n  //   return (listDefinition.isOutgoing ?\n  //     this.b.pipeAlternativeOutgoingStatements(listDefinition.property.pkProperty, pkEntity) :\n  //     this.b.pipeAlternativeIngoingStatements(listDefinition.property.pkProperty, pkEntity)\n  //   ).pipe(\n  //     switchMap((statements) => {\n  //       return combineLatest(statements.map((r, i) => this.pipeItemEntityPreview(r, listDefinition.isOutgoing)))\n  //         .pipe(\n  //           map(nodes => nodes\n  //             .filter(node => !!node)\n  //             .sort((a, b) => a.ordNum > b.ordNum ? 1 : -1)\n  //           ),\n  //           startWith([]))\n  //     }))\n\n  // }\n\n  // /**\n  //  * Pipe the alternative items in place list\n  //  */\n  // // @spyTag\n  // pipeAltListPlace<T>(listDefinition: Subfield, pkEntity): Observable<PlaceItem[]> {\n\n  //   if (listDefinition.isOutgoing) {\n  //     return this.b.pipeAlternativeOutgoingStatements(listDefinition.property.pkProperty, pkEntity).pipe(\n  //       switchMap((statements) => {\n  //         return combineLatest(statements.map((r, i) => this.pipeItemPlace(r)))\n  //           .pipe(\n  //             map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)),\n  //             startWith([]))\n  //       }))\n  //   }\n  // }\n\n\n  // /**\n  //  * Pipe the alternative items in dimension list\n  //  */\n  // // @spyTag\n  // pipeAltListDimension<T>(listDefinition: Subfield, pkEntity): Observable<DimensionItem[]> {\n\n  //   if (listDefinition.isOutgoing) {\n  //     return this.b.pipeAlternativeOutgoingStatements(listDefinition.property.pkProperty, pkEntity).pipe(\n  //       switchMap((statements) => {\n  //         return combineLatest(statements.map((r, i) => this.pipeItemDimension(r)))\n  //           .pipe(\n  //             map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)),\n  //             startWith([]))\n  //       }))\n  //   }\n  // }\n\n\n  // /**\n  //  * Pipe the alternative items in langString list\n  //  */\n  // // @spyTag\n  // pipeAltListLangString<T>(listDefinition: Subfield, pkEntity): Observable<LangStringItem[]> {\n\n  //   if (listDefinition.isOutgoing) {\n  //     return this.b.pipeAlternativeOutgoingStatements(listDefinition.property.pkProperty, pkEntity).pipe(\n  //       switchMap((statements) => {\n  //         return combineLatest(statements.map((r, i) => this.pipeItemLangString(r)))\n  //           .pipe(\n  //             map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)),\n  //             startWith([]))\n  //       }))\n  //   }\n  // }\n\n  // /**\n  //  * Pipe the alternative items in appellation field\n  //  */\n  // // @spyTag\n  // pipeAltListAppellation<T>(listDefinition: Subfield, pkEntity): Observable<AppellationItem[]> {\n\n  //   if (listDefinition.isOutgoing) {\n  //     return this.b.pipeAlternativeOutgoingStatements(listDefinition.property.pkProperty, pkEntity).pipe(\n  //       switchMap((statements) => {\n  //         return combineLatest(statements.map((r, i) => this.pipeItemAppellation(r)))\n  //           .pipe(\n  //             map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)),\n  //             startWith([]))\n  //       }))\n  //   }\n  // }\n\n  // /**\n  //  * Pipe the alternative items in language field\n  //  */\n  // // @spyTag\n  // pipeAltListLanguage<T>(listDefinition: Subfield, pkEntity): Observable<LanguageItem[]> {\n\n  //   if (listDefinition.isOutgoing) {\n  //     return this.b.pipeAlternativeOutgoingStatements(listDefinition.property.pkProperty, pkEntity).pipe(\n  //       switchMap((statements) => {\n  //         return combineLatest(statements.map((r, i) => this.pipeItemLanguage(r)))\n  //           .pipe(\n  //             map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)),\n  //             startWith([]))\n  //       }))\n  //   }\n  // }\n\n  // /*********************************************************************\n  //  * Pipe repo views (community favorites, where restricted by quantifiers)\n  //  *********************************************************************/\n\n  // /**\n  //  * Pipe repository temporal entity item in the way it is defined by the repository\n  //  */\n\n\n  // /**\n  //  * Pipe appellation list in the way it is defined by the repository\n  //  */\n  // // @spyTag\n  // pipeRepoListAppellation<T>(listDefinition: Subfield, pkEntity): Observable<AppellationItem[]> {\n\n  //   if (listDefinition.isOutgoing) {\n  //     return this.b.pipeRepoOutgoingStatementsByProperty(listDefinition.property.pkProperty, pkEntity).pipe(\n  //       switchMap((statements) => {\n  //         return combineLatest(statements.map((r, i) => this.pipeItemAppellation(r)))\n  //           .pipe(\n  //             map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)),\n  //             startWith([]))\n  //       }))\n  //   }\n  // }\n\n  // /**\n  // * Pipe language list in the way it is defined by the repository\n  // */\n  // // @spyTag\n  // pipeRepoListLanguage<T>(listDefinition: Subfield, pkEntity): Observable<LanguageItem[]> {\n\n  //   if (listDefinition.isOutgoing) {\n  //     return this.b.pipeRepoOutgoingStatementsByProperty(listDefinition.property.pkProperty, pkEntity).pipe(\n  //       switchMap((statements) => {\n  //         return combineLatest(statements.map((r, i) => this.pipeItemLanguage(r)))\n  //           .pipe(\n  //             map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)),\n  //             startWith([]))\n  //       }))\n  //   }\n  // }\n\n  // /**\n  //  * Pipe place list in the way it is defined by the repository\n  //  */\n  // // @spyTag\n  // pipeRepoListPlace<T>(listDefinition: Subfield, pkEntity): Observable<PlaceItem[]> {\n\n  //   if (listDefinition.isOutgoing) {\n  //     return this.b.pipeRepoOutgoingStatementsByProperty(listDefinition.property.pkProperty, pkEntity).pipe(\n  //       switchMap((statements) => {\n  //         return combineLatest(statements.map((r, i) => this.pipeItemPlace(r)))\n  //           .pipe(\n  //             map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)),\n  //             startWith([]))\n  //       }))\n  //   }\n  // }\n\n  // /**\n  // * Pipe place list in the way it is defined by the repository\n  // */\n  // // @spyTag\n  // pipeRepoListDimension<T>(listDefinition: Subfield, pkEntity): Observable<DimensionItem[]> {\n\n  //   if (listDefinition.isOutgoing) {\n  //     return this.b.pipeRepoOutgoingStatementsByProperty(listDefinition.property.pkProperty, pkEntity).pipe(\n  //       switchMap((statements) => {\n  //         return combineLatest(statements.map((r, i) => this.pipeItemDimension(r)))\n  //           .pipe(\n  //             map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)),\n  //             startWith([]))\n  //       }))\n  //   }\n  // }\n  // /**\n  // * Pipe the items in entity preview field, connected by community favorite statements\n  // */\n  // // @spyTag\n  // pipeRepoListEntityPreview<T>(listDefinition: Subfield, pkEntity): Observable<EntityPreviewItem[]> {\n\n  //   return (listDefinition.isOutgoing ?\n  //     this.b.pipeRepoOutgoingStatementsByProperty(listDefinition.property.pkProperty, pkEntity) :\n  //     this.b.pipeRepoIngoingStatementsByProperty(listDefinition.property.pkProperty, pkEntity)\n  //   ).pipe(\n  //     switchMap((statements) => {\n  //       return combineLatest(statements.map((r, i) => this.pipeItemEntityPreview(r, listDefinition.isOutgoing)))\n  //         .pipe(\n  //           map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)\n  //             // .sort((a, b) => a.ordNum > b.ordNum ? 1 : -1)\n  //           ))\n  //     }),\n  //     startWith([])\n  //   )\n\n  // }\n\n\n  // /**\n  //  * Pipe repo time span item\n  //  */\n  // // @spyTag\n  // pipeRepoItemTimeSpan(pkEntity): Observable<TimeSpanItem> {\n  //   return this.p.pkProject$.pipe(\n  //     switchMap(pkProject => {\n  //       return this.c.pipeBasicAndSpecificFields(\n  //         DfhConfig.ClASS_PK_TIME_SPAN\n  //       ).pipe(\n  //         switchMap(fieldDefinitions => {\n\n  //           return combineLatest(fieldDefinitions.map(fieldDef =>\n  //             this.b.pipeRepoOutgoingStatementsByProperty(fieldDef.property.pkProperty, pkEntity)\n  //               .pipe(\n  //                 switchMapOr([], statements => combineLatest(\n  //                   statements.map(statement =>\n  //                     this.infRepo.time_primitive$.by_pk_entity$.key(statement.fk_object_info)\n  //                       .pipe(map((infTimePrimitive) => {\n  //                         const timePrimitive = new TimePrimitive({\n  //                           julianDay: infTimePrimitive.julian_day,\n  //                           calendar: ((statement.community_favorite_calendar || 'gregorian') as CalendarType),\n  //                           duration: (infTimePrimitive.duration as Granularity)\n  //                         })\n  //                         const item: TimePrimitiveItem = {\n  //                           statement,\n  //                           ordNum: undefined,\n  //                           projRel: undefined,\n  //                           timePrimitive,\n  //                           label: this.timePrimitivePipe.transform(timePrimitive),\n  //                           fkClass: infTimePrimitive.fk_class\n  //                         }\n  //                         return item;\n  //                       }))\n  //                   )\n  //                 )),\n  //                 map(items => {\n  //                   const res: TimeSpanProperty = {\n  //                     listDefinition: fieldDef.listDefinitions[0], items\n  //                   }\n  //                   return res\n  //                 }),\n  //                 startWith({ listDefinition: fieldDef.listDefinitions[0], items: [] } as TimeSpanProperty)\n  //               )\n  //           )).pipe(\n  //             map((properties) => {\n  //               const timespanitem: TimeSpanItem = {\n  //                 label: '',\n  //                 properties: properties.filter(props => props.items.length > 0)\n  //               }\n  //               return timespanitem\n  //             })\n  //           )\n  //         })\n  //       )\n  //     })\n\n  //   )\n  // }\n\n\n  /**\n   * Pipes the label of given entity\n   * This will use entity previews for getting strings of related temporal entities\n   * So this may take a little while\n   */\n  // @spyTag\n  pipeLabelOfEntity(fkEntity: number): Observable<string> {\n    return this.p.streamEntityPreview(fkEntity).pipe(map(p => p.entity_label))\n    // return this.b.pipeClassOfEntity(fkEntity).pipe(\n\n    //   // get the definition of the first field\n    //   switchMap(fkClass => this.c.pipeBasicAndSpecificFields(fkClass).pipe(\n    //     // get the first item of that field\n    //     switchMap(fields => this.pipeSubfieldPage(field[0],).pipe(\n    //       map(props => {\n    //         props = props.filter(prop => prop.items.length > 0)\n    //         if (props.length && props[0].items.length) {\n    //           return props[0].items[0].label\n    //         }\n    //         return ''\n    //       })\n    //     )))\n    //   ))\n  }\n\n\n  /**\n   * Pipes the class label of given entity\n   */\n  // @spyTag\n  pipeClassLabelOfEntity(fkEntity: number): Observable<string> {\n    return this.b.pipeClassOfEntity(fkEntity).pipe(\n      switchMap(pkClass => this.c.pipeClassLabel(pkClass))\n    )\n  }\n\n  /**\n   * Pipes the pk_entity of the type of an entity\n   */\n  // @spyTag\n  pipeTypeOfEntity(pkEntity: number, hasTypeProperty: number, isOutgoing: boolean): Observable<InfStatement> {\n    if (isOutgoing) {\n      return this.s.inf$.statement$.by_subject_and_property_indexed$({ fk_property: hasTypeProperty, fk_subject_info: pkEntity }).pipe(map(items => {\n        if (!items || Object.keys(items).length < 1) return undefined;\n        else return values(items)[0]\n      })\n      )\n    }\n    else {\n      return this.s.inf$.statement$.by_object_and_property_indexed$({ fk_property: hasTypeProperty, fk_object_info: pkEntity }).pipe(\n        map(items => {\n          if (!items || Object.keys(items).length < 1) return undefined;\n          else return values(items)[0]\n        })\n      )\n    }\n  }\n\n  @spyTag\n  @cache({ refCount: false })\n  pipeClassesAndTypes(enabledIn: 'entities' | 'sources') {\n    return this.c.pipeTypeAndTypedClasses(enabledIn).pipe(\n      switchMap(items => this.pipeClassAndTypeNodes(items)),\n    )\n  }\n\n  @spyTag\n  @cache({ refCount: false })\n  pipeClassesAndTypesOfClasses(classes: number[]) {\n    return this.c.pipeTypeAndTypedClassesOfTypedClasses(classes).pipe(\n      switchMap(items => this.pipeClassAndTypeNodes(items)),\n    )\n  }\n\n  @spyTag\n  @cache({ refCount: false })\n  pipeClassAndTypeNodes(typeAndTypedClasses: { typedClass: number; typeClass: number; }[]): Observable<ClassAndTypeNode[]> {\n    return combineLatestOrEmpty(\n      typeAndTypedClasses.map(item => this.c.pipeClassLabel(item.typedClass).pipe(\n        map(label => ({\n          label,\n          data: { pkClass: item.typedClass, pkType: null }\n        } as ClassAndTypeNode)),\n        switchMap(node => iif(\n          () => !!item.typeClass,\n          this.b.pipePersistentItemPksByClass(item.typeClass).pipe(\n            switchMap(typePks => combineLatestOrEmpty(\n              typePks.map(pkType => this.p.streamEntityPreview(pkType).pipe(\n                map(preview => ({\n                  label: preview.entity_label,\n                  data: { pkClass: item.typedClass, pkType }\n                } as ClassAndTypeNode))\n              ))\n            ).pipe(\n              sortAbc(n => n.label),\n            )),\n            map(children => {\n              node.children = children\n              return node\n            })\n          ),\n          of({ ...node, children: [] } as ClassAndTypeNode)\n        )\n        )\n      ))\n    ).pipe(\n      sortAbc((node) => node.label),\n    )\n  }\n\n  /**\n   * returns array of pk_class of all classes and typed classes.\n   * @param classesAndTypes a object containing {classes: [], types[]}\n   */\n  pipeClassesFromClassesAndTypes(classesAndTypes: ClassAndTypeSelectModel): Observable<number[]> {\n    const typedClasses$ = (!classesAndTypes || !classesAndTypes.types || !classesAndTypes.types.length) ?\n      of([] as number[]) :\n      this.b.pipeClassesOfPersistentItems(classesAndTypes.types)\n        .pipe(\n          filter((pks) => !!pks),\n          switchMap(typeClasses => this.c.pipeTypedClassesOfTypeClasses(typeClasses))\n        )\n    return typedClasses$.pipe(\n      map(typedClasses => uniq([...typedClasses, ...((classesAndTypes || { classes: [] }).classes || [])]))\n    );\n  }\n\n  pipePropertyOptionsFromClassesAndTypes(classesAndTypes: ClassAndTypeSelectModel): Observable<PropertyOption[]> {\n    return this.pipeClassesFromClassesAndTypes(classesAndTypes).pipe(\n      switchMap(classes => this.pipePropertyOptionsFormClasses(classes))\n    )\n  }\n\n  @cache({ refCount: false })\n  pipePropertyOptionsFormClasses(classes: number[]): Observable<PropertyOption[]> {\n    return combineLatestOrEmpty(classes.map(pkClass => this.s.dfh$.class$.by_pk_class$.key(pkClass).pipe(\n      map(c => c.basic_type === 9),\n      switchMap(isTeEn => this.c.pipeSpecificAndBasicFields(pkClass)\n        .pipe(\n          map(classFields => classFields\n            .filter(f => !!f.property.fkProperty)\n            .map(f => ({\n              isOutgoing: f.isOutgoing,\n              fkPropertyDomain: f.isOutgoing ? f.sourceClass : null,\n              fkPropertyRange: f.isOutgoing ? null : f.sourceClass,\n              pkProperty: f.property.fkProperty\n            }))),\n          switchMap(items => {\n            if (isTeEn) {\n              // add time properties (at some time within, ...)\n              DfhConfig.PROPERTY_PKS_WHERE_TIME_PRIMITIVE_IS_RANGE.map(pkProperty => {\n                items.push({\n                  pkProperty,\n                  fkPropertyDomain: pkClass,\n                  fkPropertyRange: DfhConfig.CLASS_PK_TIME_PRIMITIVE,\n                  isOutgoing: true\n                })\n              })\n            }\n\n            return combineLatestOrEmpty(items.map(item => this.c.pipeFieldLabel(\n              item.pkProperty,\n              item.fkPropertyDomain,\n              item.fkPropertyRange,\n            ).pipe(map(label => {\n              const isOutgoing = item.isOutgoing;\n              const o: PropertyOption = {\n                isOutgoing,\n                label,\n                pk: item.pkProperty,\n                propertyFieldKey: propertyOptionFieldKey(item.pkProperty, isOutgoing)\n              };\n              return o;\n            }))));\n          })))\n    )\n\n\n    )).pipe(map(y => flatten<PropertyOption>(y)));\n  }\n\n  @cache({ refCount: false })\n  pipePkClassesFromPropertySelectModel(model: PropertySelectModel): Observable<number[]> {\n    return combineLatestOrEmpty(\n      [\n        this.c.pipeTargetClassesOfProperties(model.outgoingProperties, true),\n        this.c.pipeTargetClassesOfProperties(model.ingoingProperties, false),\n      ]\n    ).pipe(\n      map(([out, ing]) => uniq([...out, ...ing]))\n    )\n  }\n\n  getPkClassesFromPropertySelectModel$(model$: Observable<PropertySelectModel>): Observable<number[]> {\n    return model$.pipe(\n      switchMap(model => combineLatestOrEmpty(\n        [\n          this.c.pipeTargetClassesOfProperties(model.outgoingProperties, true),\n          this.c.pipeTargetClassesOfProperties(model.ingoingProperties, false),\n        ]\n      ).pipe(\n        map(([out, ing]) => uniq([...out, ...ing]))\n      ))\n    )\n  }\n\n\n\n  getPropertyOptions$(classTypes$: Observable<ClassAndTypeSelectModel>): Observable<PropertyOption[]> {\n    return classTypes$.pipe<ClassAndTypeSelectModel, PropertyOption[]>(\n      // make sure only it passes only if data of the arrayClasses are changed (not children)\n      distinctUntilChanged<ClassAndTypeSelectModel>((a, b) => {\n        return equals(a, b);\n      }),\n      switchMap((x) => !x ? empty() : this.b.pipeClassesOfPersistentItems(x.types)\n        .pipe(\n          filter((pks) => !!pks),\n          switchMap(typeClasses => this.c.pipeTypedClassesOfTypeClasses(typeClasses).pipe(\n            switchMap(typedClasses => {\n              const classes = uniq([...typedClasses, ...(x.classes || [])]);\n              return this.pipePropertyOptionsFormClasses(classes)\n            }))\n          )\n        )\n      )\n    );\n  }\n\n}\n\nexport function propertyOptionFieldKey(fkProperty: number, isOutgoing: boolean): string {\n  return '_' + fkProperty + '_' + (isOutgoing ? 'outgoing' : 'ingoing');\n}\n\n"],"names":["Selector","tslib_1.__decorate","values"],"mappings":"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"}