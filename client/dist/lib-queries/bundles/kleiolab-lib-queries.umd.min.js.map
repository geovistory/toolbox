{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@kleiolab/lib-queries/lib/queries/module/redux-queries.module.ts","ng://@kleiolab/lib-queries/lib/queries/decorators/method-decorators.ts","ng://@kleiolab/lib-queries/lib/queries/selectors/dat.service.ts","ng://@kleiolab/lib-queries/lib/queries/services/should-pause.service.ts","ng://@kleiolab/lib-queries/lib/queries/selectors/dfh.service.ts","ng://@kleiolab/lib-queries/lib/queries/selectors/inf.service.ts","ng://@kleiolab/lib-queries/lib/queries/selectors/pro.service.ts","ng://@kleiolab/lib-queries/lib/queries/selectors/sys.service.ts","ng://@kleiolab/lib-queries/lib/queries/selectors/tab.service.ts","ng://@kleiolab/lib-queries/lib/queries/selectors/war.service.ts","ng://@kleiolab/lib-queries/lib/queries/services/schema-selectors.service.ts","ng://@kleiolab/lib-queries/lib/queries/services/active-project-pipes.service.ts","ng://@kleiolab/lib-queries/lib/queries/services/configuration-pipes.service.ts","ng://@kleiolab/lib-queries/lib/queries/services/information-basic-pipes.service.ts","ng://@kleiolab/lib-queries/lib/queries/services/information-pipes.service.ts","ng://@kleiolab/lib-queries/lib/queries/functions/functions.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","ReduxQueriesModule","parentModule","reduxModule","errors","Error","join","NgModule","args","declarations","imports","CommonModule","providers","type","Optional","SkipSelf","ReduxModule","cache","options","propertyKey","descriptor","refCount","Map","originalFunction","request","_i","uniq","JSON","stringify","has","boundOriginalFunction","bind","set","pipe","shareReplay","bufferSize","tag","name","get","spyTag","Selector","ngRedux","configs","model","selector","indexKey","_this","all$","select","datRoot","x","DatDigitalSelections","_super","by_pk_entity__entity_version$","by_pk_entity$","by_pk_text$","tslib_1.__extends","latestVersion","pkDigital","map","versions","DatNamespaceSelections","by_fk_project$","DatChunkSelections","by_fk_text$","DatClassColumnMappingSelections","by_fk_column$","DatColumnSelections","by_fk_digital$","DatTextPropertySelections","by_fk_entity__fk_system_type$","DatSelector","digital$","datDefinitions","namespace$","chunk$","column$","class_column_mapping$","text_property$","Injectable","providedIn","NgRedux","DatActions","ShouldPauseService","shouldPause$","BehaviorSubject","slice$","dfhRoot","allNoPause$","switchMap","shouldPause","empty","noPause","DfhProfileSelections","by_pk_profile$","DfhClassSelections","by_pk_class$","by_basic_type$","DfhPropertySelections","pk_property__has_domain__has_range$","by_pk_property$","by_has_domain__pk_property$","by_has_range__pk_property$","by_has_domain$","by_has_range$","by_is_has_type_subproperty$","DfhLabelSelections","by_fks$","by_fk_class__type$","by_fk_property__type$","by_fk_profile__type$","DfhSelector","pause","profile$","dfhDefinitions","class$","property$","label$","DfhActions","Selector$2","pkProject$","pk","path","facetteByPk","infRoot","paginationSelector","pipePage","by","limit","offset","pagBy","paginatedBy","paginateName","paginateKey","filter","count","undefined","end","obs$","combineLatestOrEmpty","pipePageLoadNeeded","trigger$","getFromTo","first","loading","pipeCount","pipeItemsInProject","getFkEntity","items","pkProject","proRelsAndKey$","k","item","rel","proRels","itemsInProject","proRel","is_in_project","pipeItemInProject","of","InfPersistentItemSelections","_by_pk_entity$","_by_fk_class$","by_pk_entity_key$","ofProject","selection$","pk_entity","by_pk_entity_all$","by_fk_class_key$","InfTemporalEntitySelections","InfStatementSelections","by_fk_subject_data$","pagination$","by_subject$","foreignKeys","indexStatementBySubject","values","by_subject_and_property$","by_subject_and_property_indexed$","statementIdx","indexStatementBySubjectProperty","by_object$","indexStatementByObject","by_object_and_property$","by_object_and_property_indexed$","indexStatementByObjectProperty","InfTextPropertySelections","_by_fk_concerned_entity__fk_class_field$","_by_fk_concerned_entity$","by_fk_concerned_entity__fk_class_field_indexed$","by_fk_concerned_entity_indexed$","InfAppellationSelections","InfLangStringSelections","InfPlaceSelections","InfTimePrimitiveSelections","InfLanguageSelections","InfDimensionSelections","InfSelector","persistent_item$","infDefinitions","temporal_entity$","statement$","appellation$","place$","lang_string$","time_primitive$","language$","dimension$","pkEntityModelMap$","PR_ENTITY_MODEL_MAP","getModelOfEntity$","pkEntity","Selector$3","proRoot","part","toString","ProProjectSelector","ProInfoProjRelSelector","by_fk_project__fk_entity$","ProDfhClassProjRelSelector","by_fk_project__enabled_in_entities$","by_fk_project__fk_class$","ProDfhProfileProjRelSelector","by_fk_project__enabled$","by_fk_project__fk_profile$","ProClassFieldConfigSelector","ProTextPropertySelector","by_fks_without_lang$","ProAnalysisSelector","ProSelector","project$","proDefinitions","info_proj_rel$","dfh_class_proj_rel$","dfh_profile_proj_rel$","class_field_config$","analysis$","ProActions","sysRoot","SysSystemRelevantClassSelections","by_fk_class$","by_required_by_sources$","by_required$","SysConfigSelections","main$","SysSelector","system_relevant_class$","sysDefinitions","config$","SysActions","Selector$5","tabRoot","TabCellSelections","by_pk_cell$","by_fk_column_fk_row$","TabSelector","cell$","tabDefinitions","TabActions","Selector$6","warRoot","WarEntityPreviewSelector","WarSelector","entity_preview$","warDefinitions","WarActions","SchemaSelectorsService","dat$","tab$","pro$","dfh$","sys$","distinctUntilChanged","y","inf$","ActiveProjectPipesService","entityPreviewSocket","requestedEntityPreviews","fromEvent","subscribe","disconnect","pks","keys","getState","war","entity_preview","emit","pipeActiveProject","l","pipeActiveDefaultLanguage","project","fk_language","streamEntityPreview","forceReload","by_pk_entity","equals","prev","EntityPreviewSocket","tslib_1.__decorate","Observable","ConfigurationPipesService","a","pipeProfilesEnabledByProject","projectProfileRels","enabled","fk_profile","DfhConfig","PK_PROFILE_GEOVISTORY_BASIC","pipeFields","pkClass","combineLatest","indexed","_a","rangeClass","profiles","_b","sourceKlass","outgoingProps","ingoingProps","sysConfig","enabledProfiles","CLASS_PK_APPELLATION_FOR_LANGUAGE","removed_from_api","has_domain","pk_property","PROPERTY_PK_IS_APPELLATION_OF","has_range","domain_instances_max_quantifier","domain_instances_min_quantifier","range_instances_max_quantifier","range_instances_min_quantifier","identifier_in_namespace","identity_defining","is_inherited","is_has_type_subproperty","basic_type","domainClass","PROPERTY_PK_HAS_TIME_SPAN","ClASS_PK_TIME_SPAN","createHasTimeSpanProperty","PROPERTY_PK_P18_HAS_DEFINITION","createHasDefinitionProperty","pipePropertiesToSubfields","pipeFieldConfigs","_c","subfields1","subfields2","fieldConfigs","subfields","fieldConfigIdx","indexBy","fk_domain_class","fk_range_class","fk_property","uniqFields","uniqSubfieldCache","subfields_1","tslib_1.__values","subfields_1_1","fieldId","sourceClass","property","pkProperty","isOutgoing","subfieldId","targetClass","fieldConfig","allSubfieldsRemovedFromAllProfiles","removedFromAllProfiles","targetClasses","listDefinitions","isSpecialField","isHasTypeField","sourceClassLabel","sourceMaxQuantity","sourceMinQuantity","targetMinQuantity","targetMaxQuantity","label","identityDefiningForSource","identityDefiningForTarget","ontoInfoLabel","ontoInfoUrl","placeOfDisplay","getPlaceOfDisplay","specialFields","pipeSpecificFieldOfClass","fields","field","specificFields","sort","position","pipeBasicFieldsOfClass","basicFields","pipeFieldsForTeEnForm","allFields","whenField","find","typeField","pipeBasicAndSpecificFields","pipeSpecificAndBasicFields","properties","pipeClassLabel","pipeSubfieldTypeOfClass","pipeFieldLabel","targetClassLabel","listType","isRemovedFromAllProfiles","config","klass","classConfig","classes","pk_class","valueObjectType","typeItem","entityPreview","temporalEntity","getSubfieldType","fkProject","activeProjectkey","proClassFieldConfgByProjectAndClassKey","fk_class_for_class_field","fk_project","defaultProjectkey","ProConfig","PK_PROJECT_OF_DEFAULT_CONFIG_PROJECT","activeProjectFields","defaultProjectFields","ord_num","language","pipeLabels","text","fk_system_type","SysConfig","PK_SYSTEM_TYPE__TEXT_PROPERTY__LABEL","console","warn","fkProperty","pipeProTextProperty","fk_dfh_class","fk_dfh_property","fk_dfh_property_domain","fkPropertyDomain","fk_dfh_property_range","fkPropertyRange","origin","string","pipeDfhLabel","iso6391","trim","fk_class","textPropertyByFksKey","dfhLabelByFksKey","some","pipeTableNameOfClass","targetClassPk","includes","appellation","place","timePrimitive","langString","dimension","pipeClassesInEntitiesOrSources","pipeClassesEnabledInEntities","pipeClassesRequiredBySources","startWith","pipeClassesEnabledByProjectProfiles","classesByPk","profilesMap","profile","pipeTypeClassesEnabledByProjectProfiles","CLASS_PK_LANGUAGE","CLASS_PK_MANIFESTATION_PRODUCT_TYPE","rels","pipeSelectedTeEnClassesInProject","pipeTeEnClassesEnabledInEntities","pipeTeEnClassesRequiredBySources","cs","dfhClasses","filterTeEnCasses","pipeTypeAndTypedClasses","enabledIn","pks$","fromSources$","fromEntities$","arrayOfPkArrays","flatten","pipeTypeAndTypedClassesOfTypedClasses","pkTypedClasses","allHasTypeProps","byDomain","typedClass","typeClass","pipeTypeClassOfTypedClass","pkTypedClass","pipeTypedClassesOfTypeClasses","pkTypeClasses","pipeTypePropertyOfTypedClass","typeProp","pipeTargetClassesOfProperties","pkProperties","res","forEach","pkProp","prop","subfield","projectFieldConfig","settings","hasTypeSubproperties","bySourceClass","outgoingProperties","incomingProperties","getSettingsFromSysConfig","displayInBasicFields","hidden","Number","POSITIVE_INFINITY","InformationBasicPipesService","timePrimitiveOfStatements","pipeInfTimePrimitive","fk_object_info","infTimePrimitive","statement","ipr","calendar","julianDay","julian_day","duration","pipeStatements","pipeOutgoingStatements","pipeIngoingStatements","fk_subject_info","pipeStatementsOfList","listDefinition","fk_property_of_property","pkPropertyOfProperty","pipeOutgoingStatementsByProperty","pipeIngoingStatementsByProperty","pipeOutgoingBasicStatementItemsByProperty","statements","pipeBasicStatementItem","pipeIngoingBasicStatementItemsByProperty","projRel","ordNum","ord_num_of_range","ord_num_of_domain","pipeBasicStatementItemByPkStatement","pkStatement","pipeTimeSpan","_72","_71","_150","_151","_152","_153","TimeSpanUtil","p82","p81","p82a","p81a","p81b","p82b","pipeClassOfEntity","merge","pipeClassesOfPersistentItems","pkEntities","peIts","typePk","pipeRepoOutgoingStatements","pipeRepoIngoingStatements","pipeRepoOutgoingStatementsByProperty","rs","sortStatementsByRepoPopularity","slice","pipeRepoIngoingStatementsByProperty","pipeAlternativeBasicStatementItemByPkStatement","inrepo","pipeAlternativeIngoingStatements","inproject","omit","pipeAlternativeOutgoingStatements","pipePersistentItemPksByClass","ob","parseInt","pipeIconType","preview","entity_type","CLASS_PK_EXPRESSION_PORTION","CLASS_PKS_SOURCE_PE_IT","is_in_project_count","InfStatement","Boolean","InformationPipesService","timePrimitivePipe","timeSpanPipe","infRepo","pipeListLength","pipeList","tap","pipeListAppellation","pipeListEntityPreview","pipeListLanguage","pipeListPlace","pipeListDimension","pipeListLangString","timeSpan","pipeItemTimeSpan","ts","pipeListBasicStatementItems","pipeItemAppellation","nodes","node","fkClass","limitTo","pipeItemEntityPreview","pipeItemLanguage","pipeItemPlace","pipeItemDimension","pipeItemLangString","pipeStatementListPage","paginateBy","alternative","pageLoader$","paginatedStatementPks","pkProj","basicStatementItemLoader","pipeTemporalEntityTableRows","fieldDefinitions","teEnStatement","basicStatementItem","targetEntityPk","fieldDef","pkTeEn","pipeItemTeEnRow","row","teEnProjRel","repo","outgoingStatements$","ingoingStatements$","outgoingItems$","pipeItem","ingoingItems$","sortItems","outgoingItems","ingoingItems","groupedOut","groupBy","groupedIn","fieldDefinition","cell","t_1","pick","itemsCount","timeSpanKeys_1","fromTimeSpanDialogData","transform","isTimeSpan","firstItem","propIsOutgoing","targetEntity","modelName","pipeItemTimePrimitive","pipeEntityProperties","listDef","fkEntity","getEntityProperties","timeSpanItem","PROPERTY_PK_TO_EXISTENCE_TIME_KEY","pipeTemporalEntityRemoveProperties","textProperties","fieldDefs","switchMapOr","TimePrimitive","notes","lat","long","fk_measurement_unit","numeric_value","entity_label","quill_doc","ops","op","insert","fkLanguage","community_favorite_calendar","pipeAltListLength","pipeAltListStatements","pipeAltList","pipeAltListAppellation","pipeAltListEntityPreview","pipeAltListLanguage","pipeAltListPlace","pipeAltListDimension","pipeAltListLangString","pipeRepoListAppellation","pipeRepoListLanguage","pipeRepoListPlace","pipeRepoListDimension","pipeRepoListEntityPreview","pipeRepoItemTimeSpan","props","pipeLabelOfEntity","pipeClassLabelOfEntity","pipeTypeOfEntity","hasTypeProperty","pipeClassesAndTypes","pipeClassAndTypeNodes","pipeClassesAndTypesOfClasses","typeAndTypedClasses","data","pkType","iif","typePks","sortAbc","children","pipeClassesFromClassesAndTypes","classesAndTypes","types","typeClasses","typedClasses","pipePropertyOptionsFromClassesAndTypes","pipePropertyOptionsFormClasses","isTeEn","classFields","f","PROPERTY_PKS_WHERE_TIME_PRIMITIVE_IS_RANGE","CLASS_PK_TIME_PRIMITIVE","propertyFieldKey","propertyOptionFieldKey","pipePkClassesFromPropertySelectModel","ingoingProperties","out","ing","getPkClassesFromPropertySelectModel$","model$","getPropertyOptions$","classTypes$","TimePrimitivePipe","TimeSpanPipe"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { ReduxModule } from '@kleiolab/lib-redux';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n\n  ]\n})\nexport class ReduxQueriesModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule: ReduxQueriesModule,\n    @Optional() reduxModule: ReduxModule,\n  ) {\n    const errors: string[] = []\n    if (parentModule) errors.push('ReduxQueriesModule is already loaded. Import in your base AppModule only.');\n    if (!reduxModule) errors.push('You need to import the ReduxModule in your AppModule!');\n    if (errors.length) throw new Error(errors.join('\\n'));\n  }\n}\n","// TODO DELETE\nimport { shareReplay } from 'rxjs/operators';\nimport { tag } from 'rxjs-spy/operators';\n\nexport interface CacheOptions {\n  refCount: boolean\n}\n/**\n * Decorator function for methods that take any argument and return an\n * obsevable. Decorated Methods will be extended by a cache:\n * For each call to the method with the same input arguments a cache\n * shareReplay operator is added, acting as a middleman subcribing to\n * the Source (the observable returned by the decorated function) and\n * emtting the latest value. Read more about shareReplay here:\n * https://itnext.io/the-magic-of-rxjs-sharing-operators-and-their-differences-3a03d699d255\n *\n * @options:\n */\n\nexport const cache = (options?: CacheOptions) => (target, propertyKey, descriptor) => {\n  const o: CacheOptions = {\n    // default option\n    refCount: true,\n    // override with custom options\n    ...options\n  }\n  const c = new Map()\n  const originalFunction = descriptor.value;\n  descriptor.value = function (...request) {\n    const uniq = JSON.stringify(request)\n    if (!c.has(uniq)) {\n      const boundOriginalFunction = originalFunction.bind(this)\n      // const x = target, y = propertyKey;\n      c.set(uniq, boundOriginalFunction(...request).pipe(\n        shareReplay({ refCount: o.refCount, bufferSize: 1 }),\n        tag(`FROM-CACHE-${target.constructor.name}::${propertyKey}::${request.join(':')}`)\n      ))\n    }\n    return c.get(uniq)\n  };\n  return descriptor;\n}\n\n\nexport function spyTag(target, propertyKey, descriptor) {\n  const originalFunction = descriptor.value;\n  descriptor.value = function (...request) {\n    const boundOriginalFunction = originalFunction.bind(this)\n    return boundOriginalFunction(...request).pipe(\n      tag(`${target.constructor.name}::${propertyKey}::${request.join(':')}`)\n    )\n  };\n  return descriptor;\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { ByPk, DatActions, datDefinitions, datRoot, IAppState, ReducerConfigCollection } from '@kleiolab/lib-redux';\nimport { DatChunk, DatColumn, DatDigital, DatNamespace, DatTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { DatClassColumnMapping } from '@kleiolab/lib-sdk-lb4';\nimport { latestVersion } from '@kleiolab/lib-utils';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nclass Selector {\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { }\n\n  selector<M>(indexKey: string): { all$: Observable<ByPk<M>>, key: (x) => Observable<M> } {\n\n    const all$ = this.ngRedux.select<ByPk<M>>([datRoot, this.model, indexKey])\n    // .pipe(\n    //   distinctUntilChanged<M>(equals)\n    // )\n\n    const key = (x): Observable<M> => this.ngRedux.select<M>([datRoot, this.model, indexKey, x])\n    // .pipe(\n    //   distinctUntilChanged<M>(equals)\n    // )\n\n    return { all$, key }\n  }\n}\n\nclass DatDigitalSelections extends Selector {\n  public by_pk_entity__entity_version$ = this.selector<DatDigital>('by_pk_entity__entity_version')\n  public by_pk_entity$ = this.selector<ByPk<DatDigital>>('by_pk_entity')\n  public by_pk_text$ = this.selector<ByPk<DatDigital>>('by_pk_text')\n\n\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n\n  latestVersion(pkDigital: number): Observable<DatDigital> {\n    return this.by_pk_entity$.key(pkDigital).pipe(\n      map(versions => latestVersion(versions)),\n    )\n  }\n}\n\nclass DatNamespaceSelections extends Selector {\n  public by_pk_entity$ = this.selector<DatNamespace>('by_pk_entity')\n  public by_fk_project$ = this.selector<ByPk<DatNamespace>>('by_fk_project')\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\nclass DatChunkSelections extends Selector {\n  public by_pk_entity$ = this.selector<DatChunk>('by_pk_entity')\n  public by_fk_text$ = this.selector<ByPk<DatChunk>>('by_fk_text')\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\nclass DatClassColumnMappingSelections extends Selector {\n  public by_pk_entity$ = this.selector<DatClassColumnMapping>('by_pk_entity')\n  public by_fk_column$ = this.selector<ByPk<DatClassColumnMapping>>('by_fk_column')\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\nclass DatColumnSelections extends Selector {\n  public by_pk_entity$ = this.selector<DatColumn>('by_pk_entity')\n  public by_fk_digital$ = this.selector<ByPk<DatColumn>>('by_fk_digital')\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\nclass DatTextPropertySelections extends Selector {\n  public by_pk_entity$ = this.selector<DatTextProperty>('by_pk_entity')\n  public by_fk_entity__fk_system_type$ = this.selector<ByPk<DatTextProperty>>('by_fk_entity__fk_system_type')\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatSelector extends DatActions {\n\n  digital$ = new DatDigitalSelections(this.ngRedux, datDefinitions, 'digital');\n  namespace$ = new DatNamespaceSelections(this.ngRedux, datDefinitions, 'namespace');\n  chunk$ = new DatChunkSelections(this.ngRedux, datDefinitions, 'chunk');\n  column$ = new DatColumnSelections(this.ngRedux, datDefinitions, 'column');\n  class_column_mapping$ = new DatClassColumnMappingSelections(this.ngRedux, datDefinitions, 'class_column_mapping');\n  text_property$ = new DatTextPropertySelections(this.ngRedux, datDefinitions, 'text_property');\n\n  constructor(public ngRedux: NgRedux<IAppState>) {\n    super(ngRedux)\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShouldPauseService {\n  shouldPause$ = new BehaviorSubject(false)\n  constructor() { }\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { IAppState } from '@kleiolab/lib-redux';\nimport { ByPk } from '@kleiolab/lib-redux';\nimport { empty, Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { DfhProperty } from '@kleiolab/lib-sdk-lb4';\nimport { DfhProfile } from '@kleiolab/lib-sdk-lb4';\nimport { DfhLabel } from '@kleiolab/lib-sdk-lb4';\nimport { DfhClass } from '@kleiolab/lib-sdk-lb4';\nimport { ReducerConfigCollection } from '@kleiolab/lib-redux';\nimport { DfhActions } from '@kleiolab/lib-redux';\nimport { dfhDefinitions, dfhRoot } from '@kleiolab/lib-redux';\nimport { DfhClassSlice, DfhLabelSlice, DfhProfileSlice, DfhPropertySlice } from '@kleiolab/lib-redux';\nimport { ShouldPauseService } from '../services/should-pause.service';\nclass Selector<Slice> {\n\n  slice$ = this.ngRedux.select<Slice>([dfhRoot, this.model])\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string,\n    public shouldPause$: Observable<boolean>\n  ) {\n  }\n\n  selector<M>(indexKey: string): { all$: Observable<ByPk<M>>, key: (x) => Observable<M>, noPause: { all$: Observable<ByPk<M>>, key: (x) => Observable<M> } } {\n\n    const allNoPause$ = this.ngRedux.select<ByPk<M>>([dfhRoot, this.model, indexKey]);\n    const all$ = this.shouldPause$.pipe(\n      switchMap(shouldPause => shouldPause ?\n        empty() :\n        allNoPause$\n      )\n    );\n\n    const keyNoPause = (x) => this.ngRedux.select<M>([dfhRoot, this.model, indexKey, x]);\n    const key = (x): Observable<M> => this.shouldPause$.pipe(\n      switchMap(shouldPause => shouldPause ?\n        empty() :\n        this.ngRedux.select<M>([dfhRoot, this.model, indexKey, x])\n      )\n    )\n\n    return { all$, key, noPause: { all$: allNoPause$, key: keyNoPause } }\n  }\n}\n// Profile Selectors\nclass DfhProfileSelections extends Selector<DfhProfileSlice> {\n  public by_pk_profile$ = this.selector<DfhProfile>('by_pk_profile');\n}\n\n// Class Selectors\nclass DfhClassSelections extends Selector<DfhClassSlice> {\n  public by_pk_class$ = this.selector<DfhClass>('by_pk_class');\n  public by_basic_type$ = this.selector<ByPk<DfhClass>>('by_basic_type');\n}\n\n// Property Selectors\nclass DfhPropertySelections extends Selector<DfhPropertySlice> {\n  public pk_property__has_domain__has_range$ = this.selector<DfhProperty>('pk_property__has_domain__has_range');\n  public by_pk_property$ = this.selector<ByPk<DfhProperty>>('by_pk_property');\n  public by_has_domain__pk_property$ = this.selector<ByPk<DfhProperty>>('by_has_domain__pk_property');\n  public by_has_range__pk_property$ = this.selector<ByPk<DfhProperty>>('by_has_range__pk_property');\n  public by_has_domain$ = this.selector<ByPk<DfhProperty>>('by_has_domain');\n  public by_has_range$ = this.selector<ByPk<DfhProperty>>('by_has_range');\n  public by_is_has_type_subproperty$ = this.selector<ByPk<DfhProperty>>('by_is_has_type_subproperty');\n}\n\n// Label Selectors\nclass DfhLabelSelections extends Selector<DfhLabelSlice> {\n  public by_fks$ = this.selector<DfhLabel>('by_fks');\n  public by_fk_class__type$ = this.selector<ByPk<DfhLabel>>('by_fk_class__type');\n  public by_fk_property__type$ = this.selector<ByPk<DfhLabel>>('by_fk_property__type');\n  public by_fk_profile__type$ = this.selector<ByPk<DfhLabel>>('by_fk_profile__type');\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DfhSelector extends DfhActions {\n\n  profile$ = new DfhProfileSelections(this.ngRedux, dfhDefinitions, 'profile', this.pause.shouldPause$)\n  class$ = new DfhClassSelections(this.ngRedux, dfhDefinitions, 'klass', this.pause.shouldPause$)\n  property$ = new DfhPropertySelections(this.ngRedux, dfhDefinitions, 'property', this.pause.shouldPause$)\n  label$ = new DfhLabelSelections(this.ngRedux, dfhDefinitions, 'label', this.pause.shouldPause$)\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public pause: ShouldPauseService\n  ) {\n    super(ngRedux)\n  }\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { ByPk, EntityModelAndClass, getFromTo, IAppState, IndexStatementByObject, indexStatementByObject, IndexStatementByObjectProperty, indexStatementByObjectProperty, IndexStatementBySubject, indexStatementBySubject, IndexStatementBySubjectProperty, indexStatementBySubjectProperty, infDefinitions, infRoot, PaginateByParam, paginatedBy, paginateKey, paginateName, PR_ENTITY_MODEL_MAP, ReducerConfigCollection } from '@kleiolab/lib-redux';\nimport { InfAppellation, InfDimension, InfLangString, InfLanguage, InfPersistentItem, InfPlace, InfStatement, InfTemporalEntity, InfTextProperty, InfTimePrimitive, ProInfoProjRel } from '@kleiolab/lib-sdk-lb3';\nimport { combineLatestOrEmpty } from '@kleiolab/lib-utils';\nimport { values } from 'd3';\nimport { Observable, of, pipe } from 'rxjs';\nimport { filter, first, map, switchMap } from 'rxjs/operators';\nexport type InfModelName = 'persistent_item' | 'temporal_entity' | 'statement' | 'text_property' | 'appellation' | 'language' | 'place' | 'dimension' | 'lang_string' | 'time_primitive';\n\nclass Selector {\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public pkProject$: Observable<number | string>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { }\n\n  selector<M>(indexKey: string): { all$: Observable<ByPk<M>>, key: (x) => Observable<M> } {\n\n    const all$ = this.pkProject$.pipe(\n      switchMap(pk => {\n        let path: any[];\n        if (this.configs[this.model].facetteByPk) {\n          path = [infRoot, this.model, this.configs[this.model].facetteByPk, pk, indexKey];\n        } else {\n          path = [infRoot, this.model, indexKey];\n        }\n        return this.ngRedux.select<ByPk<M>>(path)\n      })\n    )\n\n\n    const key = (x): Observable<M> => {\n      return this.pkProject$.pipe(\n        switchMap(pk => {\n          let path: any[];\n          if (this.configs[this.model].facetteByPk) {\n            path = [infRoot, this.model, this.configs[this.model].facetteByPk, pk, indexKey, x];\n          } else {\n            path = [infRoot, this.model, indexKey, x];\n          }\n          return this.ngRedux.select<M>(path)\n        })\n      )\n\n    }\n\n    return { all$, key }\n  }\n\n  paginationSelector<M>() {\n\n    const pipePage = (by: PaginateByParam[], limit: number, offset: number): Observable<M[]> => this.pkProject$.pipe(\n      switchMap(pk => {\n        let path: any[];\n        const pagBy = paginatedBy(paginateName(by))\n        const key = paginateKey(by)\n        if (this.configs[this.model].facetteByPk) {\n          path = [infRoot, this.model, this.configs[this.model].facetteByPk, pk, pagBy, key];\n        } else {\n          path = [infRoot, this.model, pagBy, key];\n        }\n        return this.ngRedux.select<number>([...path, 'count'])\n          .pipe(\n            filter(count => count !== undefined),\n            switchMap(count => {\n              const start = offset;\n              const end = count <= (start + limit) ? count : (start + limit);\n              const obs$: Observable<M>[] = [];\n              for (let i = start; i < end; i++) {\n                obs$.push(\n                  this.ngRedux.select<M>([...path, 'rows', i]).pipe(filter(x => !!x))\n                )\n              }\n              return combineLatestOrEmpty(obs$)\n            })\n          )\n      })\n    )\n\n    const pipePageLoadNeeded = (by: PaginateByParam[], limit: number, offset: number, trigger$?: Observable<any>): Observable<boolean> => this.pkProject$.pipe(\n      switchMap(pk => {\n        let path: any[];\n        const pagBy = paginatedBy(paginateName(by))\n        const key = paginateKey(by)\n        if (this.configs[this.model].facetteByPk) {\n          path = [infRoot, this.model, this.configs[this.model].facetteByPk, pk, pagBy, key];\n        } else {\n          path = [infRoot, this.model, pagBy, key];\n        }\n\n        return trigger$.pipe(\n          switchMap(() => this.ngRedux.select<boolean>([...path, 'loading', getFromTo(limit, offset)])\n            .pipe(\n              first(),\n              map(loading => !loading)\n            )\n          ))\n\n      })\n    )\n\n    const pipeCount = (by: PaginateByParam[]): Observable<number | undefined> => this.pkProject$.pipe(\n      switchMap(pk => {\n        let path: any[];\n        const pagBy = paginatedBy(paginateName(by))\n        const key = paginateKey(by)\n        if (this.configs[this.model].facetteByPk) {\n          path = [infRoot, this.model, this.configs[this.model].facetteByPk, pk, pagBy, key];\n        } else {\n          path = [infRoot, this.model, pagBy, key];\n        }\n        return this.ngRedux.select<number>([...path, 'count'])\n      })\n    )\n\n    return { pipePage, pipePageLoadNeeded, pipeCount }\n\n  }\n\n\n  pipeItemsInProject<M>(pkProject$: Observable<number | string>, getFkEntity: (item: M) => number) {\n    return pipe(\n      switchMap((items: ByPk<M>) => {\n        return pkProject$.pipe(\n          switchMap(pkProject => {\n            const proRelsAndKey$: Observable<{ key: string, rel: ProInfoProjRel }>[] = [];\n            for (const k in items) {\n              if (items.hasOwnProperty(k)) {\n                const item = items[k];\n                proRelsAndKey$.push(\n                  this.ngRedux.select<ProInfoProjRel>(['pro', 'info_proj_rel', 'by_fk_project__fk_entity', pkProject + '_' + getFkEntity(item)])\n                    .pipe(map(rel => ({ key: k, rel })))\n                )\n              }\n            }\n            return combineLatestOrEmpty(proRelsAndKey$).pipe(\n              map(proRels => {\n                const itemsInProject: ByPk<M> = {};\n                for (let i = 0; i < proRels.length; i++) {\n                  const proRel = proRels[i];\n                  if (proRel.rel && proRel.rel.is_in_project) {\n                    itemsInProject[proRel.key] = items[proRel.key]\n                  }\n                }\n                return itemsInProject;\n              })\n            )\n          })\n        )\n\n      })\n    )\n  }\n\n  pipeItemInProject<M>(pkProject$: Observable<number | string>, getFkEntity: (item: M) => number) {\n    return pipe(\n      switchMap((item: M) => {\n        if (!item) return of(undefined);\n        return pkProject$.pipe(\n          switchMap(pkProject => {\n            const proRel$ = this.ngRedux.select<ProInfoProjRel>(['pro', 'info_proj_rel', 'by_fk_project__fk_entity', pkProject + '_' + getFkEntity(item)])\n            return proRel$.pipe(\n              // filter(proRel => proRel.is_in_project == true),\n              map((proRel) => proRel && proRel.is_in_project == true ? item : undefined)\n            )\n          })\n        )\n      })\n    )\n  }\n}\n\nclass InfPersistentItemSelections extends Selector {\n  private _by_pk_entity$ = this.selector<InfPersistentItem>('by_pk_entity')\n  private _by_fk_class$ = this.selector<ByPk<InfPersistentItem>>('by_fk_class')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public pkProject$: Observable<number | string>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, pkProject$, configs, model) }\n\n  by_pk_entity_key$(key: string | number, ofProject = true) {\n    const selection$ = this._by_pk_entity$.key(key)\n    if (ofProject) return selection$.pipe(this.pipeItemInProject(this.pkProject$, (i) => i.pk_entity))\n    return selection$\n  }\n  by_pk_entity_all$(ofProject = true) {\n    const selection$ = this._by_pk_entity$.all$\n    if (ofProject) return selection$.pipe(this.pipeItemsInProject(this.pkProject$, (i) => i.pk_entity))\n    return selection$\n  }\n  by_fk_class_key$(key: string | number, ofProject = true) {\n    const selection$ = this._by_fk_class$.key(key)\n    if (ofProject) return selection$.pipe(this.pipeItemsInProject(this.pkProject$, (i) => i.pk_entity))\n    return selection$\n  }\n}\n\nclass InfTemporalEntitySelections extends Selector {\n  private _by_pk_entity$ = this.selector<InfTemporalEntity>('by_pk_entity')\n  // public by_fk_class$ = this.selector<ByPk<InfTemporalEntity>>('by_fk_class')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public pkProject$: Observable<number | string>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, pkProject$, configs, model) }\n\n  by_pk_entity_key$(key: string | number, ofProject = true) {\n    const selection$ = this._by_pk_entity$.key(key)\n    if (ofProject) return selection$.pipe(this.pipeItemInProject(this.pkProject$, (i) => i.pk_entity))\n    return selection$\n  }\n}\n\n\nclass InfStatementSelections extends Selector {\n\n  private _by_pk_entity$ = this.selector<InfStatement>('by_pk_entity')\n  public by_fk_subject_data$ = this.selector<ByPk<InfStatement>>('by_fk_subject_data')\n\n  public pagination$ = this.paginationSelector<number>()\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public pkProject$: Observable<number | string>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, pkProject$, configs, model) }\n\n  by_pk_entity_key$(key: string | number, ofProject = true) {\n    const selection$ = this._by_pk_entity$.key(key)\n    if (ofProject) return selection$.pipe(this.pipeItemInProject(this.pkProject$, (i) => i.pk_entity))\n    return selection$\n  }\n\n  by_subject$(foreignKeys: IndexStatementBySubject, ofProject = true): Observable<InfStatement[]> {\n    const key = indexStatementBySubject(foreignKeys);\n    const selection$ = this.selector<ByPk<InfStatement>>('by_subject').key(key)\n    if (ofProject) {\n      return selection$.pipe(\n        this.pipeItemsInProject(this.pkProject$, (item) => item.pk_entity),\n        map(items => values(items))\n      )\n    }\n    return selection$.pipe(\n      map(items => values(items))\n    );\n  }\n\n  by_subject_and_property$(foreignKeys: IndexStatementBySubjectProperty, ofProject = true): Observable<InfStatement[]> {\n    return this.by_subject_and_property_indexed$(foreignKeys, ofProject).pipe(\n      map(statementIdx => values(statementIdx))\n    )\n  }\n  by_subject_and_property_indexed$(foreignKeys: IndexStatementBySubjectProperty, ofProject = true): Observable<ByPk<InfStatement>> {\n    const key = indexStatementBySubjectProperty(foreignKeys);\n    const selection$ = this.selector<ByPk<InfStatement>>('by_subject+property').key(key)\n    if (ofProject) {\n      return selection$.pipe(this.pipeItemsInProject(this.pkProject$, (item) => item.pk_entity))\n    }\n    return selection$\n  }\n\n  by_object$(foreignKeys: IndexStatementByObject, ofProject = true): Observable<InfStatement[]> {\n    const key = indexStatementByObject(foreignKeys);\n    const selection$ = this.selector<ByPk<InfStatement>>('by_object').key(key)\n    if (ofProject) {\n      return selection$.pipe(\n        this.pipeItemsInProject(this.pkProject$, (item) => item.pk_entity),\n        map(items => values(items))\n      )\n    }\n    return selection$.pipe(\n      map(items => values(items))\n    );\n  }\n\n  by_object_and_property$(foreignKeys: IndexStatementByObjectProperty, ofProject = true): Observable<InfStatement[]> {\n    return this.by_object_and_property_indexed$(foreignKeys, ofProject).pipe(\n      map(statementIdx => values(statementIdx))\n    )\n  }\n\n  by_object_and_property_indexed$(foreignKeys: IndexStatementByObjectProperty, ofProject = true): Observable<ByPk<InfStatement>> {\n    const key = indexStatementByObjectProperty(foreignKeys);\n    const selection$ = this.selector<ByPk<InfStatement>>('by_object+property').key(key)\n    if (ofProject) {\n      return selection$.pipe(\n        this.pipeItemsInProject(this.pkProject$, (item) => item.pk_entity),\n      )\n    }\n    return selection$\n  }\n\n}\n\n\nclass InfTextPropertySelections extends Selector {\n  private _by_pk_entity$ = this.selector<InfTextProperty>('by_pk_entity')\n  private _by_fk_concerned_entity__fk_class_field$ = this.selector<ByPk<InfTextProperty>>('by_fk_concerned_entity__fk_class_field')\n  private _by_fk_concerned_entity$ = this.selector<ByPk<InfTextProperty>>('by_fk_concerned_entity')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public pkProject$: Observable<number | string>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, pkProject$, configs, model) }\n\n  by_pk_entity_key$(key: string | number, ofProject = true) {\n    const selection$ = this._by_pk_entity$.key(key)\n    if (ofProject) return selection$.pipe(this.pipeItemInProject(this.pkProject$, (i) => i.pk_entity))\n    return selection$\n  }\n\n  by_fk_concerned_entity__fk_class_field_indexed$(key: string, ofProject = true): Observable<ByPk<InfTextProperty>> {\n    const selection$ = this._by_fk_concerned_entity__fk_class_field$.key(key)\n    if (ofProject) {\n      return selection$.pipe(\n        this.pipeItemsInProject(this.pkProject$, (item) => item.pk_entity),\n      )\n    }\n    return selection$\n  }\n\n\n  by_fk_concerned_entity_indexed$(key: string | number, ofProject = true): Observable<ByPk<InfTextProperty>> {\n    const selection$ = this._by_fk_concerned_entity$.key(key)\n    if (ofProject) {\n      return selection$.pipe(\n        this.pipeItemsInProject(this.pkProject$, (item) => item.pk_entity),\n      )\n    }\n    return selection$\n  }\n\n}\n\n\nclass InfAppellationSelections extends Selector {\n  public by_pk_entity$ = this.selector<InfAppellation>('by_pk_entity')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public pkProject$: Observable<number | string>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, pkProject$, configs, model) }\n}\n\nclass InfLangStringSelections extends Selector {\n  public by_pk_entity$ = this.selector<InfLangString>('by_pk_entity')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public pkProject$: Observable<number | string>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, pkProject$, configs, model) }\n}\n\nclass InfPlaceSelections extends Selector {\n  public by_pk_entity$ = this.selector<InfPlace>('by_pk_entity')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public pkProject$: Observable<number | string>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, pkProject$, configs, model) }\n}\n\nclass InfTimePrimitiveSelections extends Selector {\n  public by_pk_entity$ = this.selector<InfTimePrimitive>('by_pk_entity')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public pkProject$: Observable<number | string>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, pkProject$, configs, model) }\n}\n\nclass InfLanguageSelections extends Selector {\n  public by_pk_entity$ = this.selector<InfLanguage>('by_pk_entity')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public pkProject$: Observable<number | string>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, pkProject$, configs, model) }\n}\n\nclass InfDimensionSelections extends Selector {\n  public by_pk_entity$ = this.selector<InfDimension>('by_pk_entity')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public pkProject$: Observable<number | string>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, pkProject$, configs, model) }\n}\n\n\nexport class InfSelector {\n\n  persistent_item$ = new InfPersistentItemSelections(this.ngRedux, this.pkProject$, infDefinitions, 'persistent_item');\n  temporal_entity$ = new InfTemporalEntitySelections(this.ngRedux, this.pkProject$, infDefinitions, 'temporal_entity');\n  statement$ = new InfStatementSelections(this.ngRedux, this.pkProject$, infDefinitions, 'statement');\n  appellation$ = new InfAppellationSelections(this.ngRedux, this.pkProject$, infDefinitions, 'appellation');\n  place$ = new InfPlaceSelections(this.ngRedux, this.pkProject$, infDefinitions, 'place');\n  text_property$ = new InfTextPropertySelections(this.ngRedux, this.pkProject$, infDefinitions, 'text_property');\n  lang_string$ = new InfLangStringSelections(this.ngRedux, this.pkProject$, infDefinitions, 'lang_string');\n  time_primitive$ = new InfTimePrimitiveSelections(this.ngRedux, this.pkProject$, infDefinitions, 'time_primitive');\n  language$ = new InfLanguageSelections(this.ngRedux, this.pkProject$, infDefinitions, 'language');\n  dimension$ = new InfDimensionSelections(this.ngRedux, this.pkProject$, infDefinitions, 'dimension');\n\n  pkEntityModelMap$ = this.ngRedux.select([infRoot, PR_ENTITY_MODEL_MAP]);\n\n  constructor(public ngRedux: NgRedux<IAppState>, public pkProject$: Observable<number | string>) { }\n\n  getModelOfEntity$(pkEntity: number) {\n    return this.ngRedux.select<EntityModelAndClass<InfModelName>>([infRoot, PR_ENTITY_MODEL_MAP, pkEntity]);\n  }\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { ByPk, IAppState, ProActions, proDefinitions, proRoot, ReducerConfigCollection } from '@kleiolab/lib-redux';\nimport { ProDfhClassProjRel, ProDfhProfileProjRel, ProInfoProjRel, ProTextProperty } from '@kleiolab/lib-sdk-lb3';\nimport { ProAnalysis, ProClassFieldConfig, ProProject } from '@kleiolab/lib-sdk-lb4';\nimport { toString } from 'ramda';\nimport { Observable } from 'rxjs';\n\n\n\n\nclass Selector {\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { }\n\n  selector<M>(indexKey: string): { all$: Observable<ByPk<M>>, key: (x: string | (string | number)[]) => Observable<M> } {\n\n    const all$ = this.ngRedux.select<ByPk<M>>([proRoot, this.model, indexKey])\n\n    const key = (x: string | (string | number)[]): Observable<M> => {\n      const k = typeof x === 'string' ? x : x.map((part: string | number) => toString(part)).join('_');;\n\n      return this.ngRedux.select<M>([proRoot, this.model, indexKey, k])\n    }\n\n    return { all$, key }\n  }\n}\n\nclass ProProjectSelector extends Selector {\n  public by_pk_entity$ = this.selector<ProProject>('by_pk_entity')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\n\nclass ProInfoProjRelSelector extends Selector {\n  public by_fk_project__fk_entity$ = this.selector<ProInfoProjRel>('by_fk_project__fk_entity')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\n\nclass ProDfhClassProjRelSelector extends Selector {\n  public by_fk_project__enabled_in_entities$ = this.selector<ByPk<ProDfhClassProjRel>>('by_fk_project__enabled_in_entities')\n  public by_fk_project__fk_class$ = this.selector<ProDfhClassProjRel>('by_fk_project__fk_class')\n  public by_fk_project$ = this.selector<ProDfhClassProjRel>('by_fk_project')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\nclass ProDfhProfileProjRelSelector extends Selector {\n  public by_fk_project__enabled$ = this.selector<ByPk<ProDfhProfileProjRel>>('by_fk_project__enabled')\n  public by_fk_project__fk_profile$ = this.selector<ProDfhProfileProjRel>('by_fk_project__fk_profile')\n  public by_fk_project$ = this.selector<ProDfhProfileProjRel>('by_fk_project')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\nclass ProClassFieldConfigSelector extends Selector {\n  public by_fk_project__fk_class$ = this.selector<ByPk<ProClassFieldConfig>>('by_fk_project__fk_class')\n  public by_pk_entity$ = this.selector<ProClassFieldConfig>('by_pk_entity')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\n\nclass ProTextPropertySelector extends Selector {\n  public by_fks$ = this.selector<ProTextProperty>('by_fks')\n  public by_fks_without_lang$ = this.selector<ByPk<ProTextProperty>>('by_fks_without_lang')\n  // public fk_project__fk_dfh_property__fk_dfh_property_domain__fk_system_type__fk_language$ = this.selector<ByPk<ProTextProperty>>('fk_project__fk_dfh_property__fk_dfh_property_domain__fk_system_type__fk_language')\n  // public fk_project__fk_dfh_property__fk_dfh_property_range__fk_system_type__fk_language$ = this.selector<ByPk<ProTextProperty>>('fk_project__fk_dfh_property__fk_dfh_property_range__fk_system_type__fk_language')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\n\nclass ProAnalysisSelector extends Selector {\n\n  public by_pk_entity$ = this.selector<ProAnalysis>('by_pk_entity')\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProSelector extends ProActions {\n\n  project$ = new ProProjectSelector(this.ngRedux, proDefinitions, 'project');\n  info_proj_rel$ = new ProInfoProjRelSelector(this.ngRedux, proDefinitions, 'info_proj_rel');\n  dfh_class_proj_rel$ = new ProDfhClassProjRelSelector(this.ngRedux, proDefinitions, 'dfh_class_proj_rel');\n  dfh_profile_proj_rel$ = new ProDfhProfileProjRelSelector(this.ngRedux, proDefinitions, 'dfh_profile_proj_rel');\n  class_field_config$ = new ProClassFieldConfigSelector(this.ngRedux, proDefinitions, 'class_field_config');\n  text_property$ = new ProTextPropertySelector(this.ngRedux, proDefinitions, 'text_property');\n  analysis$ = new ProAnalysisSelector(this.ngRedux, proDefinitions, 'analysis');\n\n  constructor(public ngRedux: NgRedux<IAppState>) {\n    super(ngRedux)\n  }\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { ByPk, IAppState, ReducerConfigCollection, SysActions, SysConfigSlice, sysDefinitions, SysRelevantClassSlice, sysRoot } from '@kleiolab/lib-redux';\nimport { SysSystemRelevantClass } from '@kleiolab/lib-sdk-lb3';\nimport { SysConfigValue } from '@kleiolab/lib-sdk-lb4';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\nclass Selector<Slice> {\n\n  slice$ = this.ngRedux.select<Slice>([sysRoot, this.model])\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { }\n\n  selector<M>(indexKey: string): { all$: Observable<ByPk<M>>, key: (x) => Observable<M> } {\n\n    const all$ = this.ngRedux.select<ByPk<M>>([sysRoot, this.model, indexKey])\n\n    const key = (x): Observable<M> => this.ngRedux.select<M>([sysRoot, this.model, indexKey, x])\n\n    return { all$, key }\n  }\n}\n\n// SystemRelevantClass Selectors\nclass SysSystemRelevantClassSelections extends Selector<SysRelevantClassSlice> {\n  public by_pk_entity$ = this.selector<SysSystemRelevantClass>('by_pk_entity');\n  public by_fk_class$ = this.selector<ByPk<SysSystemRelevantClass>>('by_fk_class');\n  public by_required_by_sources$ = this.selector<ByPk<SysSystemRelevantClass>>('by_required_by_sources');\n  public by_required$ = this.selector<ByPk<SysSystemRelevantClass>>('by_required');\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\n// // AnalysisType Selectors\n// class SysAnalysisTypeSelections extends Selector<SysAnalysisTypeSlice> {\n//   public by_pk_entity$ = this.selector<SysAnalysisType>('by_pk_entity');\n//   constructor(\n//     public ngRedux: NgRedux<IAppState>,\n//     public configs: ReducerConfigCollection,\n//     public model: string\n//   ) { super(ngRedux, configs, model) }\n// }\n\n\n// Config Selectors\nclass SysConfigSelections extends Selector<SysConfigSlice> {\n  public main$ = this.ngRedux.select<SysConfigValue>([sysRoot, this.model, 'by_main', 'main'])\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SysSelector extends SysActions {\n  system_relevant_class$ = new SysSystemRelevantClassSelections(this.ngRedux, sysDefinitions, 'system_relevant_class')\n  // analysis_type$ = new SysAnalysisTypeSelections(this.ngRedux, sysDefinitions, 'analysis_type')\n\n  config$ = new SysConfigSelections(this.ngRedux, sysDefinitions, 'config')\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { ByPk, IAppState, ReducerConfigCollection, TabActions, tabDefinitions, tabRoot } from '@kleiolab/lib-redux';\nimport { TabCell } from '@kleiolab/lib-sdk-lb4';\nimport { Observable } from 'rxjs';\n\nclass Selector {\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { }\n\n  selector<M>(indexKey: string): { all$: Observable<ByPk<M>>, key: (x) => Observable<M> } {\n\n    const all$ = this.ngRedux.select<ByPk<M>>([tabRoot, this.model, indexKey])\n\n    const key = (x): Observable<M> => this.ngRedux.select<M>([tabRoot, this.model, indexKey, x])\n\n    return { all$, key }\n  }\n}\n\nclass TabCellSelections extends Selector {\n  public by_pk_cell$ = this.selector<TabCell>('by_pk_cell')\n  public by_fk_column_fk_row$ = this.selector<ByPk<TabCell>>('by_fk_column_fk_row')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TabSelector extends TabActions {\n\n  cell$ = new TabCellSelections(this.ngRedux, tabDefinitions, 'cell');\n\n  constructor(public ngRedux: NgRedux<IAppState>) {\n    super(ngRedux)\n  }\n\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { ByPk, IAppState, ReducerConfigCollection, WarActions, warDefinitions, warRoot } from '@kleiolab/lib-redux';\nimport { WarEntityPreview } from '@kleiolab/lib-sdk-lb4';\nimport { toString } from 'ramda';\nimport { Observable } from 'rxjs';\n\n\nclass Selector {\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { }\n\n  selector<M>(indexKey: string): { all$: Observable<ByPk<M>>, key: (x: string | (string | number)[]) => Observable<M> } {\n\n    const all$ = this.ngRedux.select<ByPk<M>>([warRoot, this.model, indexKey])\n\n    const key = (x: string | (string | number)[]): Observable<M> => {\n      const k = typeof x === 'string' ? x : x.map((part: string | number) => toString(part)).join('_');;\n\n      return this.ngRedux.select<M>([warRoot, this.model, indexKey, k])\n    }\n\n    return { all$, key }\n  }\n}\n\nclass WarEntityPreviewSelector extends Selector {\n  public by_pk_entity$ = this.selector<WarEntityPreview>('by_pk_entity')\n\n  constructor(\n    public ngRedux: NgRedux<IAppState>,\n    public configs: ReducerConfigCollection,\n    public model: string\n  ) { super(ngRedux, configs, model) }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WarSelector extends WarActions {\n\n  entity_preview$ = new WarEntityPreviewSelector(this.ngRedux, warDefinitions, 'entity_preview');\n\n  constructor(public ngRedux: NgRedux<IAppState>) {\n    super(ngRedux)\n  }\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { IAppState } from '@kleiolab/lib-redux';\nimport { distinctUntilChanged, filter } from 'rxjs/operators';\nimport { InfSelector } from '../selectors/inf.service';\nimport { DatSelector } from '../selectors/dat.service';\nimport { TabSelector } from '../selectors/tab.service';\nimport { ProSelector } from '../selectors/pro.service';\nimport { DfhSelector } from '../selectors/dfh.service';\nimport { SysSelector } from '../selectors/sys.service';\n\n/**\n * This class provides access to the part of the redux store\n * that mirrors the geovistory schema (inf, dat, sys, etc.)\n *\n * The selecors of inf are wrapped into helpers that select\n * the items that are in the current project (redux.activeProject)\n * using pro.info_proj_rel\n *\n * All other selectors (dat, sys, tab, pro, dfh) are directly\n * accessing the store.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SchemaSelectorsService {\n  inf$: InfSelector;\n\n  constructor(\n    ngRedux: NgRedux<IAppState>,\n    public dat$: DatSelector,\n    public tab$: TabSelector,\n    public pro$: ProSelector,\n    public dfh$: DfhSelector,\n    public sys$: SysSelector,\n  ) {\n    const pkProject$ = ngRedux.select<number>(['activeProject', 'pk_project']).pipe(\n      filter(p => p !== undefined),\n      distinctUntilChanged((x, y) => {\n        return x === y\n      })\n    );\n    this.inf$ = new InfSelector(ngRedux, pkProject$);\n  }\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { IAppState } from '@kleiolab/lib-redux';\nimport { InfLanguage, ProProject, WarEntityPreview } from '@kleiolab/lib-sdk-lb4';\nimport { EntityPreviewSocket } from '@kleiolab/lib-sockets';\nimport { equals } from 'ramda';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, first, switchMap } from 'rxjs/operators';\nimport { cache } from '../decorators/method-decorators';\nimport { SchemaSelectorsService } from './schema-selectors.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActiveProjectPipesService {\n  public pkProject$: Observable<number>;\n\n  requestedEntityPreviews: { [pkEntity: number]: boolean } = {}\n\n\n  constructor(\n    private ngRedux: NgRedux<IAppState>,\n    private s: SchemaSelectorsService,\n    private entityPreviewSocket: EntityPreviewSocket,\n\n  ) {\n    this.pkProject$ = ngRedux.select<number>(['activeProject', 'pk_project']).pipe(\n      filter(p => p !== undefined),\n      distinctUntilChanged((x, y) => {\n        return x === y\n      })\n    );\n\n\n\n    this.entityPreviewSocket.fromEvent('reconnect').subscribe(disconnect => {\n      // get all EntityPreview keys from state and send them to the\n      // server so that they will be streamed. This is important for\n      // when connection was lost.\n      this.pkProject$.pipe(first())\n        .subscribe((pkProject) => {\n          const pks = Object.keys({\n            ...this.ngRedux.getState().war.entity_preview,\n            ...this.requestedEntityPreviews\n          });\n          if (pks.length) {\n            this.entityPreviewSocket.emit('addToStream', {\n              pkProject,\n              pks\n            })\n          }\n        })\n    })\n\n\n\n  }\n  @cache({ refCount: false }) pipeActiveProject(): Observable<ProProject> {\n    return this.pkProject$.pipe(\n      switchMap(pkProject => this.s.pro$.project$.by_pk_entity$.key(pkProject.toString()))\n    ).pipe(filter(l => !!l))\n  }\n  @cache({ refCount: false }) pipeActiveDefaultLanguage(): Observable<InfLanguage> {\n\n    return this.pipeActiveProject().pipe(\n      filter(p => !!p),\n      switchMap(project => {\n\n        return this.s.inf$.language$.by_pk_entity$.key(project.fk_language.toString())\n      })\n    ).pipe(filter(l => !!l))\n  }\n\n\n\n  /**\n   * Loads a data unit preview, if it is not yet available in state or if\n   * forceReload is true;\n   *\n   * @param pkEntity\n   * @param forceReload\n   */\n  streamEntityPreview(pkEntity: number, forceReload?: boolean): Observable<WarEntityPreview> {\n    const state = this.ngRedux.getState();\n\n    if (\n      (\n        !(((state.war || {}).entity_preview || {}).by_pk_entity || {})[pkEntity] &&\n        !this.requestedEntityPreviews[pkEntity]\n      ) || forceReload) {\n      this.pkProject$.pipe(first(pk => !!pk)).subscribe(pkProject => {\n\n        this.entityPreviewSocket.emit('addToStream', {\n          pkProject,\n          pks: [pkEntity]\n        })\n        // const pkUiContext = SysConfig.PK_UI_CONTEXT_DATAUNITS_EDITABLE;\n\n        // this.ngRedux.dispatch(this.actions.loadEntityPreview(pkProject, pkEntity, pkUiContext))\n        this.requestedEntityPreviews[pkEntity] = true;\n      })\n    }\n\n    return this.ngRedux.select<WarEntityPreview>(['war', 'entity_preview', 'by_pk_entity', pkEntity])\n      .pipe(\n        distinctUntilChanged<WarEntityPreview>(equals),\n        filter(prev => (!!prev))\n      )\n  }\n\n}\n","\nimport { Injectable } from '@angular/core';\nimport { DfhConfig, ProConfig, SysConfig } from '@kleiolab/lib-config';\nimport { dfhLabelByFksKey, proClassFieldConfgByProjectAndClassKey, textPropertyByFksKey } from '@kleiolab/lib-redux';\nimport { ClassConfig, DfhClass, DfhLabel, DfhProperty, InfLanguage, ProClassFieldConfig, ProTextProperty, RelatedProfile, SysConfigFieldDisplay, SysConfigSpecialFields, SysConfigValue } from '@kleiolab/lib-sdk-lb4';\nimport { combineLatestOrEmpty } from '@kleiolab/lib-utils';\nimport { flatten, indexBy, uniq, values } from 'ramda';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, startWith, switchMap } from 'rxjs/operators';\nimport { cache, spyTag } from '../decorators/method-decorators';\nimport { Field, } from '../models/Field'\nimport { FieldPlaceOfDisplay } from '../models/FieldPosition'\nimport { SpecialFieldType } from '../models/SpecialFieldType'\nimport { Subfield } from '../models/Subfield'\nimport { SubfieldType } from '../models/SubfieldType'\nimport { ActiveProjectPipesService } from './active-project-pipes.service';\nimport { SchemaSelectorsService } from './schema-selectors.service';\n\n\n// this is the\nexport type TableName = 'appellation' | 'language' | 'place' | 'time_primitive' | 'lang_string' | 'dimension' | 'persistent_item' | 'temporal_entity'\n\nexport interface DfhPropertyStatus extends DfhProperty {\n  // true, if removed from all profiles of the current project\n  removedFromAllProfiles: boolean\n}\n\ntype LabelOrigin = 'of project in project lang' | 'of default project in project lang' | 'of default project in english' | 'of ontome in project lang' | 'of ontome in english'\ntype Profiles = {\n  fk_profile: number;\n  removed_from_api: boolean;\n}[];\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * This Service provides a collection of pipes that aggregate or transform configuration data.\n * When talking about configuration, we mean the conceptual reference model and the additional\n * configurations on system and project level.\n * For Example\n * - the fields of a class\n * - the labels of classes and properties\n */\nexport class ConfigurationPipesService {\n\n  constructor(\n    private a: ActiveProjectPipesService,\n    private s: SchemaSelectorsService,\n  ) { }\n\n\n  /**\n  * returns observable number[] wher the numbers are the pk_profile\n  * of all profiles that are enabled by the given project.\n  * The array will always include PK_PROFILE_GEOVISTORY_BASIC\n  */\n  @spyTag @cache({ refCount: false }) public pipeProfilesEnabledByProject(): Observable<number[]> {\n    return this.a.pkProject$.pipe(\n      switchMap(pkProject => this.s.pro$.dfh_profile_proj_rel$.by_fk_project__enabled$\n        .key(pkProject + '_true').pipe(\n          map(projectProfileRels => values(projectProfileRels)\n            .filter(rel => rel.enabled)\n            .map(rel => rel.fk_profile)\n          ),\n          map(enabled => [...enabled, DfhConfig.PK_PROFILE_GEOVISTORY_BASIC]),\n        ))\n    )\n  }\n\n  /**\n   * Pipe all fields of given class\n   * The Fields are not ordered and not filtered\n   * If you want specific subsets of Fields and/or ordered Fields, use the pipes\n   * that build on this pipe.\n   */\n  @cache({ refCount: false }) public pipeFields(pkClass: number): Observable<Field[]> {\n\n    return combineLatest(\n      // pipe source class\n      this.s.dfh$.class$.by_pk_class$.key(pkClass),\n      // pipe outgoing properties\n      this.s.dfh$.property$.by_has_domain$.key(pkClass).pipe(map(indexed => values(indexed))),\n      // pipe ingoing properties\n      this.s.dfh$.property$.by_has_range$.key(pkClass).pipe(map(indexed => values(indexed))),\n      // pipe sys config\n      this.s.sys$.config$.main$.pipe(filter(x => !!x)),\n      // pipe enabled profiles\n      this.pipeProfilesEnabledByProject(),\n    ).pipe(\n      switchMap(([sourceKlass, outgoingProps, ingoingProps, sysConfig, enabledProfiles]) => {\n\n        // if class is not appellation for language, add appellation for language (1111) property\n        if (pkClass !== DfhConfig.CLASS_PK_APPELLATION_FOR_LANGUAGE) {\n          ingoingProps.push(createAppellationProperty(pkClass))\n        }\n        // if is temporal entity, add has time span property\n        if (sourceKlass.basic_type === 9) {\n          outgoingProps.push(createHasTimeSpanProperty(pkClass))\n        }\n\n        outgoingProps.push(createHasDefinitionProperty(pkClass))\n\n        return combineLatest(\n          this.pipePropertiesToSubfields(outgoingProps, true, enabledProfiles, sysConfig),\n          this.pipePropertiesToSubfields(ingoingProps, false, enabledProfiles, sysConfig),\n          this.pipeFieldConfigs(pkClass)\n        ).pipe(\n          map(([subfields1, subfields2, fieldConfigs]) => {\n            const subfields = [...subfields1, ...subfields2]\n\n            const fieldConfigIdx = indexBy((x) => [\n              (x.fk_domain_class || x.fk_range_class),\n              x.fk_property,\n              !!x.fk_domain_class\n            ].join('_'), fieldConfigs)\n\n            const uniqFields: { [uid: string]: Field } = {}\n            const uniqSubfieldCache: { [uid: string]: true } = {}\n\n\n            // group by source, pkProperty and isOutgoing\n            for (const s of subfields) {\n              const fieldId = [s.sourceClass, s.property.pkProperty, s.isOutgoing].join('_')\n              const subfieldId = [s.sourceClass, s.property.pkProperty, s.isOutgoing, s.targetClass].join('_')\n              const fieldConfig: ProClassFieldConfig | undefined = fieldConfigIdx[fieldId];\n              // the first time the group is established\n              if (!uniqFields[fieldId]) {\n                let isSpecialField: SpecialFieldType = false;\n                if (s.isHasTypeField) isSpecialField = 'has-type';\n                else if (s.property.pkProperty === DfhConfig.PROPERTY_PK_HAS_TIME_SPAN) isSpecialField = 'time-span';\n                uniqFields[fieldId] = {\n                  sourceClass: s.sourceClass,\n                  sourceClassLabel: s.sourceClassLabel,\n                  sourceMaxQuantity: s.sourceMaxQuantity,\n                  sourceMinQuantity: s.sourceMinQuantity,\n                  targetMinQuantity: s.targetMinQuantity,\n                  targetMaxQuantity: s.targetMaxQuantity,\n                  label: s.label,\n                  isHasTypeField: s.isHasTypeField,\n                  property: s.property,\n                  isOutgoing: s.isOutgoing,\n                  identityDefiningForSource: s.identityDefiningForSource,\n                  identityDefiningForTarget: s.identityDefiningForTarget,\n                  ontoInfoLabel: s.ontoInfoLabel,\n                  ontoInfoUrl: s.ontoInfoUrl,\n                  allSubfieldsRemovedFromAllProfiles: s.removedFromAllProfiles,\n                  targetClasses: [s.targetClass],\n                  listDefinitions: [s],\n                  fieldConfig,\n                  placeOfDisplay: getPlaceOfDisplay(sysConfig.specialFields, s, fieldConfig),\n                  isSpecialField\n                }\n\n                // mark subfield as added\n                uniqSubfieldCache[subfieldId] = true;\n\n\n              }\n              // ignore duplications of subfields\n              else if (!uniqSubfieldCache[subfieldId]) {\n                uniqFields[fieldId].allSubfieldsRemovedFromAllProfiles === false ?\n                  uniqFields[fieldId].allSubfieldsRemovedFromAllProfiles = false :\n                  uniqFields[fieldId].allSubfieldsRemovedFromAllProfiles = s.removedFromAllProfiles;\n                uniqFields[fieldId].targetClasses.push(s.targetClass)\n                uniqFields[fieldId].listDefinitions.push(s)\n              }\n            }\n\n            return values(uniqFields)\n          })\n        )\n      })\n    )\n  }\n\n\n\n  /**\n   * pipe all the specific fields of a class,\n   * ordered by the position of the field within the specific fields\n   */\n  @spyTag @cache({ refCount: false }) public pipeSpecificFieldOfClass(pkClass: number): Observable<Field[]> {\n\n    return this.pipeFields(pkClass).pipe(\n      map(fields => fields\n        // filter fields that are displayd in specific fields\n        .filter(field => field.placeOfDisplay.specificFields)\n        // sort fields by the position defined in the specific fields\n        .sort((a, b) => a.placeOfDisplay.specificFields.position - b.placeOfDisplay.specificFields.position)\n      )\n    )\n  }\n\n  /**\n    * pipe all the basic fields of a class,\n    * ordered by the position of the field within the basic fields\n    */\n  @spyTag @cache({ refCount: false }) public pipeBasicFieldsOfClass(pkClass: number): Observable<Field[]> {\n    return this.pipeFields(pkClass).pipe(\n      map(fields => fields\n        // filter fields that are displayd in basic fields\n        .filter(field => field.placeOfDisplay.basicFields)\n        // sort fields by the position defined in the basic fields\n        .sort((a, b) => a.placeOfDisplay.basicFields.position - b.placeOfDisplay.basicFields.position)\n      )\n    )\n  }\n\n\n\n\n  /**\n     * Pipes the fields for temporal entity forms\n     * - the specific fields\n     * - the when field\n     * - if available: the type field\n     */\n  @spyTag @cache({ refCount: false }) public pipeFieldsForTeEnForm(pkClass: number): Observable<Field[]> {\n    return this.pipeFields(pkClass).pipe(\n      // filter fields that are displayd in specific fields\n      map(allFields => {\n        const fields = allFields\n          // filter fields that are displayd in specific fields\n          .filter(field => field.placeOfDisplay.specificFields)\n          // sort fields by the position defined in the specific fields\n          .sort((a, b) => a.placeOfDisplay.specificFields.position - a.placeOfDisplay.specificFields.position)\n\n        const whenField = allFields.find(field => field.property.pkProperty === DfhConfig.PROPERTY_PK_HAS_TIME_SPAN)\n        if (whenField) fields.push(whenField)\n\n        const typeField = allFields.find(field => field.isHasTypeField)\n        if (typeField) fields.push(typeField)\n\n        return fields;\n      })\n    )\n  }\n\n\n\n\n\n\n  /**\n   * Pipes the fields of given class in this order:\n   * - basic fields\n   * - specific fields\n   */\n  @spyTag @cache({ refCount: false }) pipeBasicAndSpecificFields(pkClass: number): Observable<Field[]> {\n    return combineLatest(\n      this.pipeBasicFieldsOfClass(pkClass),\n      this.pipeSpecificFieldOfClass(pkClass)\n    )\n      .pipe(\n        map(([a, b]) => [...a, ...b])\n      )\n  }\n\n  /**\n  * Pipes the fields of given class in this order:\n  * - specific fields\n  * - basic fields\n  */\n  @spyTag @cache({ refCount: false }) pipeSpecificAndBasicFields(pkClass: number): Observable<Field[]> {\n    return combineLatest(\n      this.pipeSpecificFieldOfClass(pkClass),\n      this.pipeBasicFieldsOfClass(pkClass),\n    )\n      .pipe(\n        map(([a, b]) => [...a, ...b])\n      )\n  }\n\n\n\n\n\n\n\n\n  @cache({ refCount: false }) private pipePropertiesToSubfields(\n    properties: DfhProperty[],\n    isOutgoing: boolean,\n    enabledProfiles: number[],\n    sysConfig: SysConfigValue\n  ): Observable<Subfield[]> {\n    return combineLatestOrEmpty(\n      properties.map(p => {\n\n        const o = isOutgoing;\n        const targetClass = o ? p.has_range : p.has_domain;\n        const sourceClass = o ? p.has_domain : p.has_range;\n        const targetMaxQuantity = o ?\n          p.range_instances_max_quantifier :\n          p.domain_instances_max_quantifier;\n\n        const sourceMaxQuantity = o ?\n          p.domain_instances_max_quantifier :\n          p.range_instances_max_quantifier;\n\n        const targetMinQuantity = o ?\n          p.range_instances_min_quantifier :\n          p.domain_instances_min_quantifier;\n\n        const sourceMinQuantity = o ?\n          p.domain_instances_min_quantifier :\n          p.range_instances_min_quantifier;\n\n        return combineLatest(\n          this.pipeClassLabel(sourceClass),\n          this.pipeClassLabel(targetClass),\n          this.pipeSubfieldTypeOfClass(sysConfig, targetClass, targetMaxQuantity),\n          this.pipeFieldLabel(\n            p.pk_property,\n            isOutgoing ? p.has_domain : null,\n            isOutgoing ? null : p.has_range,\n          )\n        ).pipe(\n          map(([sourceClassLabel, targetClassLabel, listType, label]) => {\n\n            const node: Subfield = {\n              listType,\n              sourceClass,\n              sourceClassLabel,\n              sourceMaxQuantity,\n              sourceMinQuantity,\n              targetClass,\n              targetClassLabel,\n              targetMinQuantity,\n              targetMaxQuantity,\n              label,\n              isHasTypeField: o && p.is_has_type_subproperty,\n              property: { pkProperty: p.pk_property },\n              isOutgoing: o,\n              identityDefiningForSource: o ? p.identity_defining : false, // replace false with p.identity_defining_for_range when available\n              identityDefiningForTarget: o ? false : p.identity_defining, // replace false with p.identity_defining_for_range when available\n              ontoInfoLabel: p.identifier_in_namespace,\n              ontoInfoUrl: 'https://ontome.dataforhistory.org/property/' + p.pk_property,\n              removedFromAllProfiles: isRemovedFromAllProfiles(enabledProfiles, (p.profiles || [])),\n            }\n            return node\n          })\n        )\n      })\n    )\n\n  }\n\n\n  /**\n   * Pipes the type of Subfield for a given class\n   * Currently (to be revised if good) sublcasses of E55 Type,\n   * that are the target of a field with targetMaxQantity=1,\n   * get Subfield type 'hasType'.\n   * Therefore targetMaxQuantity is needed.\n   *\n   * This behavior has to be revised, because it can lead to problems\n   * when the Subfield belongs to a Field with multiple target classes\n   * (and thus Subfields) because the UI then does not allow to choose\n   * the right target class.\n   */\n  @spyTag @cache({ refCount: false }) pipeSubfieldTypeOfClass(config: SysConfigValue, pkClass: number, targetMaxQuantity: number): Observable<SubfieldType> {\n    return this.s.dfh$.class$.by_pk_class$.key(pkClass).pipe(\n      filter(i => !!i),\n      map((klass) => getSubfieldType(config, klass, targetMaxQuantity))\n    )\n  }\n\n\n  /**\n   * Gets class field configs of given pkClass\n   *\n   * - of active project, if any, else\n   * - of default config project, else\n   * - empty array\n   *\n   */\n  @spyTag @cache({ refCount: false }) pipeFieldConfigs(pkClass: number): Observable<ProClassFieldConfig[]> {\n    return this.a.pkProject$.pipe(\n      switchMap((fkProject) => {\n\n        const activeProjectkey = proClassFieldConfgByProjectAndClassKey({\n          fk_class_for_class_field: pkClass,\n          fk_project: fkProject\n        })\n        const defaultProjectkey = proClassFieldConfgByProjectAndClassKey({\n          fk_class_for_class_field: pkClass,\n          fk_project: ProConfig.PK_PROJECT_OF_DEFAULT_CONFIG_PROJECT\n        })\n        return combineLatest(\n          this.s.pro$.class_field_config$.by_fk_project__fk_class$.key(activeProjectkey),\n          this.s.pro$.class_field_config$.by_fk_project__fk_class$.key(defaultProjectkey)\n        )\n          .pipe(\n            map(([activeProjectFields, defaultProjectFields]) => {\n              if (activeProjectFields && values(activeProjectFields).length) return activeProjectFields;\n\n              return defaultProjectFields\n            }),\n            map((items) => values(items).sort((a, b) => (a.ord_num > b.ord_num ? 1 : -1))),\n          )\n      })\n    )\n  }\n\n  /********************************************** */\n\n\n  /**\n   * Delivers class label for active project\n   */\n  @spyTag @cache({ refCount: false }) pipeClassLabel(pkClass?: number): Observable<string> {\n\n    return combineLatest(\n      this.a.pkProject$,\n      this.a.pipeActiveDefaultLanguage()\n    ).pipe(\n      switchMap(([fkProject, language]) => this.pipeLabels({ pkClass, fkProject, language, type: 'label' })\n        .pipe(\n          map(items => {\n\n            const i = items.find(item => !!item)\n            return i ? i.text : `* no label (id: ${pkClass}) *`\n          })\n        ))\n    )\n  }\n\n\n  /**\n   * Delivers array of objects with\n   * text ~ the text of the property\n   * origin, in this order:\n   * - origin == 'of project in project lang'         (from projects.text_property)\n   * - origin == 'of default project in project lang' (from projects.text_property)\n   * - origin == 'of default project in english'      (from projects.text_property)\n   * - origin == 'of ontome in project lang'          (from data_for_history.label)\n   * - origin == 'of ontome in english'               (from data_for_history.label)\n   */\n  @spyTag @cache({ refCount: false }) pipeLabels(d: {\n    fkProject: number,\n    type: 'label' | 'definition' | 'scopeNote',\n    language: InfLanguage,\n    pkClass?: number,\n    fkProperty?: number,\n    fkPropertyDomain?: number,\n    fkPropertyRange?: number,\n  }): Observable<{\n    origin: LabelOrigin\n    text: string\n  }[]> {\n    let fk_system_type: number;\n\n    if (d.pkClass) {\n      switch (d.type) {\n        case 'label':\n          fk_system_type = SysConfig.PK_SYSTEM_TYPE__TEXT_PROPERTY__LABEL\n          break;\n        default:\n          console.warn('fk_system_type not found')\n          break;\n      }\n    }\n    else if (d.fkProperty) {\n      switch (d.type) {\n        case 'label':\n          fk_system_type = SysConfig.PK_SYSTEM_TYPE__TEXT_PROPERTY__LABEL\n          break;\n        default:\n          console.warn('fk_system_type not found')\n          break;\n      }\n    }\n\n\n    return combineLatest(\n      // label of project in default language of project\n      this.pipeProTextProperty({\n        fk_project: d.fkProject,\n        fk_language: d.language.pk_entity,\n        fk_system_type,\n        fk_dfh_class: d.pkClass,\n        fk_dfh_property: d.fkProperty,\n        fk_dfh_property_domain: d.fkPropertyDomain,\n        fk_dfh_property_range: d.fkPropertyRange\n      }).pipe(map((item) => {\n        if (!item) return undefined;\n        const origin: LabelOrigin = 'of project in project lang';\n        return { origin, text: item.string }\n      })),\n\n      // label of default project\n      this.pipeProTextProperty({\n        fk_project: ProConfig.PK_PROJECT_OF_DEFAULT_CONFIG_PROJECT,\n        fk_language: d.language.pk_entity,\n        fk_system_type,\n        fk_dfh_class: d.pkClass,\n        fk_dfh_property: d.fkProperty,\n        fk_dfh_property_domain: d.fkPropertyDomain,\n        fk_dfh_property_range: d.fkPropertyRange\n      }).pipe(map((item) => {\n        if (!item) return undefined;\n        const origin: LabelOrigin = 'of default project in project lang';\n        return { origin, text: item.string }\n      })),\n\n      // label of default project\n      this.pipeProTextProperty({\n        fk_project: ProConfig.PK_PROJECT_OF_DEFAULT_CONFIG_PROJECT,\n        fk_language: 18889,\n        fk_system_type,\n        fk_dfh_class: d.pkClass,\n        fk_dfh_property: d.fkProperty,\n        fk_dfh_property_domain: d.fkPropertyDomain,\n        fk_dfh_property_range: d.fkPropertyRange\n      }).pipe(map((item) => {\n        if (!item) return undefined;\n        const origin: LabelOrigin = 'of default project in english';\n        return { origin, text: item.string }\n      })),\n\n      // label from ontome in default language of project\n      this.pipeDfhLabel({\n        language: d.language.iso6391.trim(),\n        type: 'label',\n        fk_class: d.pkClass,\n        fk_property: d.fkProperty\n      }).pipe(map((item) => {\n        if (!item) return undefined;\n        const origin: LabelOrigin = 'of ontome in project lang';\n        return { origin, text: item.label }\n      })),\n\n      // label from ontome in english\n      this.pipeDfhLabel({\n        language: 'en',\n        type: 'label',\n        fk_class: d.pkClass,\n        fk_property: d.fkProperty\n      }).pipe(map((item) => {\n        if (!item) return undefined;\n        const origin: LabelOrigin = 'of ontome in english';\n        return { origin, text: item.label }\n      })),\n    )\n  }\n\n  /**\n   * Pipes ProTextProperty\n   */\n  @spyTag @cache({ refCount: false }) pipeProTextProperty(d: {\n    fk_project: number,\n    fk_system_type: number,\n    fk_language: number,\n    fk_dfh_class?: number,\n    fk_dfh_property?: number,\n    fk_dfh_property_domain?: number,\n    fk_dfh_property_range?: number,\n  }): Observable<ProTextProperty> {\n    const key = textPropertyByFksKey(d)\n    return this.s.pro$.text_property$.by_fks$.key(key)\n  }\n\n  /**\n   * Pipes DfhLabel\n   */\n  @spyTag @cache({ refCount: false }) pipeDfhLabel(d: {\n    type: 'label' | 'definition' | 'scopeNote',\n    language: string,\n    fk_class?: number,\n    fk_profile?: number,\n    fk_property?: number,\n    fk_project?: number,\n  }): Observable<DfhLabel> {\n    const key = dfhLabelByFksKey(d)\n    return this.s.dfh$.label$.by_fks$.key(key)\n  }\n\n  /**\n   * Delivers best fitting field label for active project\n  */\n  @spyTag @cache({ refCount: false }) pipeFieldLabel(fkProperty: number, fkPropertyDomain: number, fkPropertyRange: number): Observable<string> {\n    const isOutgoing = !!fkPropertyDomain;\n    // const system_type = isOutgoing ? (singular ? 180 : 181) : (singular ? 182 : 183)\n\n    return combineLatest(\n      this.a.pkProject$,\n      this.a.pipeActiveDefaultLanguage()\n    ).pipe(\n      switchMap(([fkProject, language]) => this.pipeLabels(\n        {\n          fkProject,\n          type: 'label',\n          language,\n          fkProperty,\n          fkPropertyDomain,\n          fkPropertyRange\n        }\n      )\n        .pipe(\n          map(items => {\n            let label = `* no label (id: ${fkProperty}) *`;\n            items.some((item) => {\n              if (\n                item &&\n                (\n                  item.origin === 'of project in project lang' ||\n                  item.origin === 'of default project in project lang' ||\n                  item.origin === 'of default project in english'\n                )\n              ) {\n                label = item.text\n                return true\n              }\n              else if (\n                item &&\n                (\n                  item.origin === 'of ontome in project lang' ||\n                  item.origin === 'of ontome in english'\n                )\n              ) {\n                label = isOutgoing ? item.text : '* reverse of: ' + item.text + '*'\n                return true\n              }\n            })\n            return label\n          })\n        ))\n    )\n\n  }\n\n\n  /**\n   * maps the class to the corresponding model (database table)\n   * this is used by Forms to create new data in the shape of\n   * the data model\n   */\n  @spyTag @cache({ refCount: false }) pipeTableNameOfClass(targetClassPk: number): Observable<TableName> {\n    return combineLatest(\n      this.s.sys$.config$.main$,\n      this.s.dfh$.class$.by_pk_class$.key(targetClassPk)\n    ).pipe(\n      filter(i => !i.includes(undefined)),\n      map(([config, klass]) => {\n        const classConfig: ClassConfig = config.classes[targetClassPk];\n        if (classConfig && classConfig.valueObjectType) {\n\n          const keys = Object.keys(classConfig.valueObjectType)\n          if (classConfig.valueObjectType.appellation) return\n          const key = keys[0];\n          if (classConfig.valueObjectType.appellation) return 'appellation';\n          else if (classConfig.valueObjectType.language) return 'language';\n          else if (classConfig.valueObjectType.place) return 'place';\n          else if (classConfig.valueObjectType.timePrimitive) return 'time_primitive';\n          else if (classConfig.valueObjectType.langString) return 'lang_string';\n          else if (classConfig.valueObjectType.dimension) return 'dimension';\n          else {\n            console.warn('unsupported list type')\n          }\n        }\n        else if (klass.basic_type === 8 || klass.basic_type === 30) {\n          return 'persistent_item'\n        }\n        else {\n          return 'temporal_entity'\n        }\n      })\n    )\n  }\n\n\n  /**\n   * returns an object where the keys are the pks of the Classes\n   * used by the given project:\n   * - or because the class is enabled by class_proj_rel\n   * - or because the class is required by sources\n   *\n   * This is usefull to create select dropdowns of classes users will know\n   */\n  @spyTag @cache({ refCount: false }) pipeClassesInEntitiesOrSources(): Observable<{ [key: string]: number }> {\n    return combineLatest(\n      this.pipeClassesEnabledInEntities(),\n      this.pipeClassesRequiredBySources()\n    ).pipe(\n      map(([a, b]) => indexBy((x) => x.toString(), uniq([...a, ...b]))),\n      startWith({})\n    )\n  }\n\n  @spyTag @cache({ refCount: false }) pipeClassesRequiredBySources() {\n    return this.s.sys$.system_relevant_class$.by_required_by_sources$.key('true')\n      .pipe(map(c => values(c).map(k => k.fk_class)))\n  }\n\n  /**\n   * returns observable number[] wher the numbers are the pk_class\n   * of all classes that are enabled by at least one of the activated profiles\n   * of thte given project\n   */\n  @spyTag @cache({ refCount: false }) pipeClassesEnabledByProjectProfiles(): Observable<DfhClass[]> {\n    return this.a.pkProject$.pipe(switchMap(pkProject => combineLatest([\n      this.s.dfh$.class$.by_pk_class$.all$,\n      this.pipeProfilesEnabledByProject()\n    ]).pipe(\n      map(([classesByPk, enabledProfiles]) => {\n        const profilesMap = indexBy((k) => k.toString(), values(enabledProfiles))\n        return values(classesByPk)\n          .filter(klass => klass.profiles.some(profile => profilesMap[profile.fk_profile]))\n      })\n    )\n    ))\n  }\n\n  /**\n  * returns observable number[] wher the numbers are the pk_class\n  * of all type classes that are enabled by at least one of the activated profiles\n  * of thte given project\n  */\n  @spyTag @cache({ refCount: false }) pipeTypeClassesEnabledByProjectProfiles(): Observable<DfhClass[]> {\n    return combineLatest([\n      this.s.dfh$.class$.by_basic_type$.key(30),\n      this.pipeProfilesEnabledByProject()\n    ]).pipe(\n      map(([classesByPk, enabledProfiles]) => {\n        const profilesMap = indexBy((k) => k.toString(), values(enabledProfiles))\n        return values(classesByPk)\n          .filter(klass => {\n            return klass.profiles.some(profile => profilesMap[profile.fk_profile]) &&\n              // Exclude Manifestation product type and language\n              ![\n                DfhConfig.CLASS_PK_LANGUAGE,\n                DfhConfig.CLASS_PK_MANIFESTATION_PRODUCT_TYPE\n              ].includes(klass.pk_class)\n          })\n      })\n    )\n  }\n\n\n\n  /**\n   * returns observable number[] where the numbers are the pk_class\n   * of all classes that are enabled by active project (using class_proj_rel)\n   */\n  @spyTag @cache({ refCount: false }) pipeClassesEnabledInEntities() {\n    return this.a.pkProject$.pipe(switchMap(pkProject => this.s.pro$.dfh_class_proj_rel$.by_fk_project__enabled_in_entities$.key(pkProject + '_true')\n      .pipe(\n        map((rels) => values(rels).map(rel => rel.fk_class))\n      )\n    ))\n  }\n\n  /**\n  * returns an object where the keys are the pks of the TeEn Classes\n  * used by the given project\n  */\n  @spyTag @cache({ refCount: false }) pipeSelectedTeEnClassesInProject(): Observable<{ [key: string]: number }> {\n    return combineLatest(\n      this.pipeTeEnClassesEnabledInEntities(),\n      this.pipeTeEnClassesRequiredBySources()\n    ).pipe(\n      map(([a, b]) => indexBy((x) => x.toString(), uniq([...a, ...b]))),\n      startWith({})\n    )\n  }\n\n  /**\n   * Gets array of pk_class with teEn classes enabled in entities\n   */\n  @spyTag @cache({ refCount: false }) pipeTeEnClassesEnabledInEntities() {\n    return this.a.pkProject$.pipe(switchMap(pkProject => this.s.pro$.dfh_class_proj_rel$.by_fk_project__enabled_in_entities$.key(pkProject + '_true')\n      .pipe(\n        switchMap((cs) => combineLatest(\n          values(cs).map(c => this.s.dfh$.class$.by_pk_class$.key(c.fk_class).pipe(\n            filter(item => !!item)\n          ))\n        ).pipe(\n          map(dfhClasses => this.filterTeEnCasses(dfhClasses))\n        ))\n      )\n    ))\n  }\n\n  /**\n   * Filters array of DfhClass for TeEn Classes and returns array of pk_class\n   * @param dfhClasses array of DfhClass\n   * @returns returns array of pk_class where class is TeEn class\n   */\n  private filterTeEnCasses(dfhClasses: DfhClass[]): number[] {\n    const pks: number[] = [];\n    for (let i = 0; i < dfhClasses.length; i++) {\n      const c = dfhClasses[i];\n      if (c.basic_type === 9) pks.push(c.pk_class);\n    }\n    return pks;\n  }\n\n  /**\n   * Gets array of pk_class with teEn classes required by sources\n   */\n  @spyTag @cache({ refCount: false }) pipeTeEnClassesRequiredBySources() {\n    return this.s.sys$.system_relevant_class$.by_required_by_sources$.key('true')\n      .pipe(\n        switchMap((cs) => combineLatest(\n          values(cs).map(c => this.s.dfh$.class$.by_pk_class$.key(c.fk_class).pipe(\n            filter(item => !!item)\n          ))\n        ).pipe(\n          map(dfhClasses => {\n            return this.filterTeEnCasses(dfhClasses)\n          })\n        ))\n      )\n  }\n\n\n\n\n\n\n  /**\n   *\n   */\n  @spyTag @cache({ refCount: false }) pipeTypeAndTypedClasses(enabledIn?: 'entities' | 'sources'): Observable<{ typedClass: number, typeClass: number }[]> {\n\n    let pks$: Observable<number[]>[];\n\n    const fromSources$ = this.s.sys$.system_relevant_class$.by_required_by_sources$.key('true').pipe(\n      map(classes => values(classes).map(k => k.fk_class)),\n    )\n\n    const fromEntities$ = this.pipeClassesEnabledInEntities()\n\n    if (enabledIn === 'sources') {\n      pks$ = [fromSources$];\n    } else if (enabledIn === 'entities') {\n      pks$ = [fromEntities$];\n    } else {\n      pks$ = [fromSources$, fromEntities$]\n    }\n\n    return combineLatest(pks$).pipe(\n      map(arrayOfPkArrays => uniq(flatten<number>(arrayOfPkArrays))),\n      switchMap(pks => this.pipeTypeAndTypedClassesOfTypedClasses(pks))\n    )\n  }\n\n  @spyTag @cache({ refCount: false }) pipeTypeAndTypedClassesOfTypedClasses(pkTypedClasses: number[]): Observable<{ typedClass: number, typeClass: number }[]> {\n\n    return this.s.dfh$.property$.by_is_has_type_subproperty$.key('true').pipe(\n      map((allHasTypeProps) => {\n        const byDomain = indexBy(k => k.has_domain.toString(), values(allHasTypeProps));\n        return pkTypedClasses.map(pk => ({\n          typedClass: pk,\n          typeClass: byDomain[pk] ? byDomain[pk].has_range : undefined\n        }))\n      }))\n  }\n\n  @spyTag @cache({ refCount: false }) pipeTypeClassOfTypedClass(pkTypedClass): Observable<number> {\n    return this.s.dfh$.property$.by_is_has_type_subproperty$.key('true').pipe(\n      map((allHasTypeProps) => {\n        const byDomain = indexBy(k => k.has_domain.toString(), values(allHasTypeProps));\n        return byDomain[pkTypedClass] ? byDomain[pkTypedClass].has_range : undefined\n      }))\n  }\n\n  @spyTag @cache({ refCount: false }) pipeTypedClassesOfTypeClasses(pkTypeClasses: number[]): Observable<number[]> {\n\n    return this.s.dfh$.property$.by_is_has_type_subproperty$.key('true').pipe(\n      map((allHasTypeProps) => {\n        const byDomain = indexBy(k => k.has_range.toString(), values(allHasTypeProps));\n        return pkTypeClasses.map(pk => byDomain[pk] ? byDomain[pk].has_domain : undefined)\n      }))\n  }\n\n\n  @spyTag @cache({ refCount: false }) pipeTypePropertyOfTypedClass(pkTypedClass): Observable<number> {\n    return this.s.dfh$.property$.by_is_has_type_subproperty$.key('true').pipe(\n      map((allHasTypeProps) => {\n        const typeProp = values(allHasTypeProps).find(p => p.has_domain === pkTypedClass)\n        return typeProp ? typeProp.pk_property : undefined;\n      }))\n  }\n\n  @spyTag @cache({ refCount: false }) pipeTargetClassesOfProperties(pkProperties: number[], isOutgoing: boolean): Observable<number[]> {\n    return this.s.dfh$.property$.by_pk_property$.all$.pipe(\n      map(x => {\n        if (!pkProperties || !pkProperties.length) return [];\n\n        const res = []\n        const targetClasses = {};\n        pkProperties.forEach(pkProp => {\n          const props = values(x[pkProp]);\n          props.forEach(prop => {\n            const targetClass = isOutgoing ? prop.has_range : prop.has_domain;\n            if (!targetClasses[targetClass]) {\n              targetClasses[targetClass] = true;\n              res.push(targetClass)\n            }\n          })\n        })\n        return res;\n      })\n    )\n  }\n}\n\n\nfunction getSubfieldType(config: SysConfigValue, klass: DfhClass, targetMaxQuantity: number): SubfieldType {\n\n  let classConfig: ClassConfig\n  if (config) classConfig = config.classes[klass.pk_class];\n  if (classConfig && classConfig.valueObjectType) {\n    return classConfig.valueObjectType\n  }\n\n  else if (klass.basic_type === 30 && targetMaxQuantity == 1) {\n    return { typeItem: 'true' }\n  }\n  else if (klass.basic_type === 8 || klass.basic_type === 30) {\n    return { entityPreview: 'true' }\n  }\n  else {\n    return { temporalEntity: 'true' }\n  }\n}\n\n\nfunction createHasDefinitionProperty(domainClass: number) {\n  const profiles: Profiles = [\n    {\n      removed_from_api: false,\n      fk_profile: DfhConfig.PK_PROFILE_GEOVISTORY_BASIC\n    }\n  ]\n\n  const hasDefinition: DfhProperty = {\n    has_domain: domainClass,\n    pk_property: DfhConfig.PROPERTY_PK_P18_HAS_DEFINITION,\n    has_range: 785,\n    domain_instances_max_quantifier: -1,\n    domain_instances_min_quantifier: 1,\n    range_instances_max_quantifier: 1,\n    range_instances_min_quantifier: 1,\n    identifier_in_namespace: 'P18',\n    identity_defining: false,\n    is_inherited: true,\n    is_has_type_subproperty: false,\n    profiles\n  }\n  return hasDefinition\n}\n\n\nfunction createAppellationProperty(rangeClass: number) {\n  const profiles: Profiles = [\n    {\n      removed_from_api: false,\n      fk_profile: DfhConfig.PK_PROFILE_GEOVISTORY_BASIC\n    }\n  ]\n  const hasAppeProp: DfhProperty = {\n    has_domain: DfhConfig.CLASS_PK_APPELLATION_FOR_LANGUAGE,\n    pk_property: DfhConfig.PROPERTY_PK_IS_APPELLATION_OF,\n    has_range: rangeClass,\n    domain_instances_max_quantifier: -1,\n    domain_instances_min_quantifier: 0,\n    range_instances_max_quantifier: 1,\n    range_instances_min_quantifier: 1,\n    identifier_in_namespace: 'histP9',\n    identity_defining: true,\n    is_inherited: true,\n    is_has_type_subproperty: false,\n    profiles\n  }\n  return hasAppeProp\n}\n\n\n\nfunction createHasTimeSpanProperty(domainClass: number) {\n  const profiles: Profiles = [\n    {\n      removed_from_api: false,\n      fk_profile: DfhConfig.PK_PROFILE_GEOVISTORY_BASIC\n    }\n  ]\n  const hasAppeProp: DfhProperty = {\n    has_domain: domainClass,\n    pk_property: DfhConfig.PROPERTY_PK_HAS_TIME_SPAN,\n    has_range: DfhConfig.ClASS_PK_TIME_SPAN,\n    domain_instances_max_quantifier: 1,\n    domain_instances_min_quantifier: 1,\n    range_instances_max_quantifier: 1,\n    range_instances_min_quantifier: 0,\n    identifier_in_namespace: 'P4',\n    identity_defining: false,\n    is_inherited: true,\n    is_has_type_subproperty: false,\n    profiles\n  }\n  return hasAppeProp\n}\n\n\nfunction isRemovedFromAllProfiles(enabledProfiles: number[], profiles: RelatedProfile[]): boolean {\n  return !profiles.some(p => p.removed_from_api === false && enabledProfiles.includes(p.fk_profile))\n\n}\n\nfunction getPlaceOfDisplay(specialFields: SysConfigSpecialFields, subfield: Subfield, projectFieldConfig?: ProClassFieldConfig): FieldPlaceOfDisplay {\n  let settings: SysConfigFieldDisplay;\n\n  settings = getSettingsFromSysConfig(subfield, specialFields, settings);\n\n  // if this is a special field, create corresponding display settings and return it\n  if (settings) {\n    if (settings.displayInBasicFields) {\n      return { basicFields: { position: settings.displayInBasicFields.position } }\n    } else if (settings.hidden) {\n      return { hidden: true }\n    }\n  }\n\n  // otherwise display the field in specific fields (default)\n  let position = Number.POSITIVE_INFINITY;\n  if (projectFieldConfig) position = projectFieldConfig.ord_num\n  return { specificFields: { position } }\n\n}\nfunction getSettingsFromSysConfig(\n  subfield: Subfield, specialFields: SysConfigSpecialFields, settings: SysConfigFieldDisplay) {\n  if (subfield.isOutgoing) {\n    // get settings by has-type-subproperty\n    if (subfield.isHasTypeField &&\n      specialFields.hasTypeSubproperties) {\n      settings = specialFields.hasTypeSubproperties;\n    }\n    // get settings by source class and property\n    else if (specialFields.bySourceClass &&\n      specialFields.bySourceClass[subfield.sourceClass] &&\n      specialFields.bySourceClass[subfield.sourceClass].outgoingProperties &&\n      specialFields.bySourceClass[subfield.sourceClass].outgoingProperties[subfield.property.pkProperty]) {\n      settings = specialFields.bySourceClass[subfield.sourceClass].outgoingProperties[subfield.property.pkProperty];\n    }\n    // get seetings by property\n    else if (specialFields.outgoingProperties &&\n      specialFields.outgoingProperties[subfield.property.pkProperty]) {\n      settings = specialFields.outgoingProperties[subfield.property.pkProperty];\n    }\n  }\n  else {\n    // get settings by source class and property\n    if (specialFields.bySourceClass &&\n      specialFields.bySourceClass[subfield.sourceClass] &&\n      specialFields.bySourceClass[subfield.sourceClass].incomingProperties &&\n      specialFields.bySourceClass[subfield.sourceClass].incomingProperties[subfield.property.pkProperty]) {\n      settings = specialFields.bySourceClass[subfield.sourceClass].incomingProperties[subfield.property.pkProperty];\n    }\n    // get seetings by property\n    else if (specialFields.incomingProperties &&\n      specialFields.incomingProperties[subfield.property.pkProperty]) {\n      settings = specialFields.incomingProperties[subfield.property.pkProperty];\n    }\n  }\n  return settings;\n}\n\n\n\n\n\n\n/**\n * Pipes the fields for temporal entity forms\n * - the specific fields\n * - the when field\n * - if available: the type field\n */\n// @spyTag @cache({ refCount: false }) pipeFieldDefinitionsForTeEnForm(pkClass: number): Observable<Field[]> {\n//   return of([])\n// const hasTypeListDef$ = this.pipeHasTypeSubfield(pkClass)\n// return combineLatest(\n//   this.pipeSpecificFieldDefinitions(pkClass)\n//     .pipe(\n//       map(fields => fields.filter(f => f.allSubfieldsRemovedFromAllProfiles === false))\n//     )\n//   ,\n//   hasTypeListDef$,\n// ).pipe(\n//   map(([fields, hasTypeListDefs]) => {\n//     const when = this.getClassFieldDefinition(SysConfig.PK_CLASS_FIELD_WHEN)\n//     return [\n//       ...fields,\n//       when,\n//       ...hasTypeListDefs.map((hasTypeListDef) => {\n//         const typeField: Field = { ...hasTypeListDef, listDefinitions: [hasTypeListDef] }\n//         return typeField;\n//       })\n//     ]\n//   })\n// )\n// }\n\n\n/**\n * Pipe the specific fields of given class\n */\n// @spyTag @cache({ refCount: false }) pipeSpecificFieldDefinitions(pkClass: number): Observable<Field[]> {\n// return combineLatest(\n//   this.pipePropertiesOfClass(pkClass, true).pipe(\n//     // filter out the 'has type' property, since it is part of the default fields\n//     map(outgoing => outgoing.filter(o => !o.is_has_type_subproperty))\n//   ),\n//   this.pipePropertiesOfClass(pkClass, false).pipe(\n//     // filter out the 'has appellation' property, since it is part of the default fields\n//     map(ingoing => ingoing.filter(i =>\n//       i.pk_property !== DfhConfig.PROPERTY_PK_IS_APPELLATION_OF\n//       && i.pk_property !== DfhConfig.PROPERTY_PK_GEOVP1_IS_REPRODUCTION_OF\n//     ))\n//   ),\n//   this.pipeFieldConfigs(pkClass)\n// ).pipe(\n//   switchMap(([outgoing, ingoing, fieldConfigs]) => {\n\n//     const key = (fc: Partial<ProClassFieldConfig>) => `${fc.fk_property}_${fc.fk_domain_class}_${fc.fk_range_class}`;\n//     const indexed = indexBy((fc) => `${fc.fk_property}_${fc.fk_domain_class}_${fc.fk_range_class}`, fieldConfigs)\n//     const getFieldConfig = (listDef: Subfield): ProClassFieldConfig => {\n//       return indexed[key({\n//         fk_property: listDef.property.pkProperty,\n//         fk_domain_class: listDef.isOutgoing ? listDef.sourceClass : null,\n//         fk_range_class: listDef.isOutgoing ? null : listDef.sourceClass,\n//       })]\n//     }\n\n//     // Create list definitions\n//     return combineLatest(\n//       this.pipePropertiesToSubfields(ingoing, false),\n//       this.pipePropertiesToSubfields(outgoing, true)\n//     ).pipe(\n//       map(([ingoingListDefs, outgoingListDefs]) => {\n//         const listDefinitions = [...ingoingListDefs, ...outgoingListDefs];\n\n//         // Create field definitions\n//         const fieldDefs: { [key: string]: Field } = {}\n//         listDefinitions.forEach(listDef => {\n\n//           const k = listDef.property.pkProperty + '_' + listDef.isOutgoing;\n\n//           if (!fieldDefs[k]) {\n//             fieldDefs[k] = {\n//               ...listDef,\n//               placeOfDisplay: {},\n//               allSubfieldsRemovedFromAllProfiles: false,\n//               fieldConfig: getFieldConfig(listDef),\n//               listDefinitions: [listDef],\n//               targetClasses: [listDef.targetClass]\n//             }\n//           } else {\n//             fieldDefs[k].listDefinitions.push(listDef)\n//             fieldDefs[k].targetClasses.push(listDef.targetClass)\n//           }\n\n//           // }\n\n//         })\n//         // Order the fields according to ord_num (from project's config, kleiolab's config) or put it at end of list.\n//         return sort(\n//           (a, b) => {\n//             const getOrdNum = (item: Field) => {\n//               if (item && item.fieldConfig) return item.fieldConfig.ord_num;\n//               return Number.POSITIVE_INFINITY;\n//             }\n//             const ordNumA = getOrdNum(a);\n//             const ordNumB = getOrdNum(b);\n//             return ordNumA - ordNumB;\n//           },\n//           values(fieldDefs))\n//       })\n//     )\n//   })\n// )\n// }\n\n\n/**\n * Pipe the fields for identification of given class\n */\n// @spyTag @cache({ refCount: false }) pipeDefaultFieldDefinitions(pkClass: number): Observable<Field[]> {\n\n\n// /**\n//  * Pipe the generic field has appellation\n//  * with the given class as range\n//  */\n// const hasAppeProp: DfhPropertyStatus = {\n//   has_domain: DfhConfig.CLASS_PK_APPELLATION_FOR_LANGUAGE,\n//   pk_property: DfhConfig.PROPERTY_PK_IS_APPELLATION_OF,\n//   has_range: pkClass,\n//   domain_instances_max_quantifier: -1,\n//   domain_instances_min_quantifier: 0,\n//   range_instances_max_quantifier: 1,\n//   range_instances_min_quantifier: 1,\n//   identifier_in_namespace: 'histP9',\n//   identity_defining: true,\n//   is_inherited: true,\n//   is_has_type_subproperty: false,\n//   removedFromAllProfiles: false,\n//   profiles: []\n// }\n// const hasAppeListDef$ = this.pipePropertiesToSubfields([hasAppeProp], false).pipe(\n//   filter(listDefs => !!listDefs && !!listDefs[0]),\n//   map(listDefs => listDefs[0])\n// );\n\n// /**\n//  * Pipe the generic field has type\n//  * with the given class as range\n//  */\n// const hasTypeListDef$ = this.pipeHasTypeSubfield(pkClass)\n// return combineLatest(\n//   hasAppeListDef$,\n//   hasTypeListDef$,\n//   this.s.dfh$.class$.by_pk_class$.key(pkClass).pipe(filter(c => !!c))\n// ).pipe(\n//   map(([hasAppeListDef, hasTypeListDefs, klass]) => {\n//     const fields: Field[] = []\n\n\n//     // /*\n//     //  * Add 'short title' text-property to\n//     //  *\n//     //  * Manifestation Product Type â F3, 219\n//     //  * Manifestation Singleton â F4, 220\n//     //  * Item â F5, 221\n//     //  * Web Request â geovC4, 502\n//     //  */\n//     // if ([\n//     //   DfhConfig.CLASS_PK_MANIFESTATION_PRODUCT_TYPE,\n//     //   DfhConfig.CLASS_PK_MANIFESTATION_SINGLETON,\n//     //   DfhConfig.CLASS_PK_ITEM,\n//     //   DfhConfig.CLASS_PK_WEB_REQUEST].includes(pkClass)) {\n//     //   fields.push(this.getClassFieldDefinition(SysConfig.PK_CLASS_FIELD_SHORT_TITLE));\n//     // }\n\n//     // /*\n//     // * Add 'has appellation for language â histP9' to\n//     // *\n//     // * all classes except 'Appellation for language â histC10', 365\n//     // */\n//     // if (pkClass !== DfhConfig.CLASS_PK_APPELLATION_FOR_LANGUAGE) {\n//     //   const appeField: Field = { ...hasAppeListDef, listDefinitions: [hasAppeListDef] }\n//     //   fields.push(appeField);\n//     // }\n\n\n//     // /*\n//     // * Add 'hasType' fields\n//     // */\n//     // if (hasTypeListDefs && hasTypeListDefs.length > 0) {\n//     //   hasTypeListDefs.forEach((hasTypeListDef) => {\n//     //     const typeField: Field = { ...hasTypeListDef, listDefinitions: [hasTypeListDef] }\n//     //     fields.push(typeField);\n//     //   })\n//     // }\n\n//     // /*\n//     // * Add 'entity definition' text-property to\n//     // *\n//     // * all classes except 'Appellation for language â histC10', 365\n//     // */\n//     // if (pkClass !== DfhConfig.CLASS_PK_APPELLATION_FOR_LANGUAGE) {\n//     //   fields.push(this.getClassFieldDefinition(SysConfig.PK_CLASS_FIELD_ENTITY_DEFINITION));\n//     // }\n//     // /*\n//     // * Add 'identifier / exact reference / url / ...' text-property to\n//     // *\n//     // * Web Request â geovC4, 502\n//     // */\n//     // if (DfhConfig.CLASS_PK_WEB_REQUEST === pkClass) {\n//     //   fields.push(this.getClassFieldDefinition(SysConfig.PK_CLASS_FIELD_EXACT_REFERENCE));\n//     // }\n\n//     // /*\n//     // * Add 'comment' text-property to\n//     // *\n//     // * Manifestation Product Type â F3, 219\n//     // * Manifestation Singleton â F4, 220\n//     // * Item â F5, 221\n//     // * Web Request â geovC4, 502\n//     // * Expression portion â geovC5, 503\n//     // */\n//     // if ([\n//     //   DfhConfig.CLASS_PK_MANIFESTATION_PRODUCT_TYPE,\n//     //   DfhConfig.CLASS_PK_MANIFESTATION_SINGLETON,\n//     //   DfhConfig.CLASS_PK_ITEM,\n//     //   DfhConfig.CLASS_PK_WEB_REQUEST,\n//     //   DfhConfig.CLASS_PK_EXPRESSION_PORTION].includes(pkClass)) {\n//     //   fields.push(this.getClassFieldDefinition(SysConfig.PK_CLASS_FIELD_COMMENT));\n//     // }\n\n//     // /*\n//     // * Add 'time-span' field to\n//     // *\n//     // * all temporal entity classes\n//     // */\n//     // if (klass.basic_type === 9) {\n//     //   fields.push(this.getClassFieldDefinition(SysConfig.PK_CLASS_FIELD_WHEN));\n//     // }\n\n//     return fields\n\n//   })\n// )\n// }\n\n\n// private pipeHasTypeSubfield(pkClass: number) {\n//   return this.pipePropertiesOfClass(pkClass, true).pipe(\n//     // check if this class has 'has type' subproperty\n//     map(outgoing => {\n//       return outgoing.filter((prop) => prop.is_has_type_subproperty);\n//     }), switchMap(hasTypeProps => combineLatestOrEmpty(hasTypeProps.map(dfhProp => {\n//       return this.pipePropertiesToSubfields([dfhProp], true).pipe(filter(listDefs => !!listDefs && !!listDefs[0]), map(listDefs => {\n//         const listDef = listDefs[0];\n//         listDef.listType = { typeItem: 'true' };\n//         return listDef;\n//       }));\n//     }))));\n// }\n\n// getClassFieldSubfield(pkClassField: number): Subfield {\n//   const template = {\n//     property: {},\n//     sourceClass: undefined,\n//     sourceClassLabel: undefined,\n//     targetClass: undefined,\n//     isOutgoing: undefined,\n//     identityDefiningForSource: undefined,\n//     identityDefiningForTarget: undefined,\n//     targetMaxQuantity: undefined,\n//     targetMinQuantity: undefined,\n//     sourceMaxQuantity: undefined,\n//     sourceMinQuantity: undefined,\n//     removedFromAllProfiles: false\n//   }\n//   switch (pkClassField) {\n//     case SysConfig.PK_CLASS_FIELD_WHEN:\n//       return {\n//         ...template,\n//         listType: { timeSpan: 'true' },\n//         label: 'When',\n//         isOutgoing: true,\n//         // fkClassField: pkClassField,\n//         ontoInfoLabel: 'P4',\n//         ontoInfoUrl: 'https://ontome.dataforhistory.org/property/4',\n//         targetMaxQuantity: 1\n//       }\n//     case SysConfig.PK_CLASS_FIELD_ENTITY_DEFINITION:\n//       return {\n//         ...template,\n//         listType:  { textProperty: 'true' },\n//         label: 'Description',\n//         // fkClassField: pkClassField,\n//         ontoInfoLabel: 'P3',\n//         ontoInfoUrl: 'https://ontome.dataforhistory.org/property/3',\n//         targetMaxQuantity: -1\n//       }\n//     case SysConfig.PK_CLASS_FIELD_COMMENT:\n//       return {\n//         ...template,\n//         // fkClassField: SysConfig.PK_CLASS_FIELD_COMMENT,\n//         listType:  { textProperty: 'true' },\n//         label: 'Comments',\n//         ontoInfoLabel: 'P3',\n//         ontoInfoUrl: 'https://ontome.dataforhistory.org/property/3',\n//         targetMaxQuantity: -1\n//       }\n//     case SysConfig.PK_CLASS_FIELD_EXACT_REFERENCE:\n//       return {\n//         ...template,\n//         listType:  { textProperty: 'true' },\n//         label: 'Exact Reference',\n//         // fkClassField: pkClassField,\n//         ontoInfoLabel: 'P3',\n//         ontoInfoUrl: 'https://ontome.dataforhistory.org/property/3',\n//         targetMaxQuantity: -1\n//       }\n//     case SysConfig.PK_CLASS_FIELD_SHORT_TITLE:\n//       return {\n//         ...template,\n//         listType:  { textProperty: 'true' },\n//         label: 'Short Title',\n//         // fkClassField: pkClassField,\n//         ontoInfoLabel: 'P3',\n//         ontoInfoUrl: 'https://ontome.dataforhistory.org/property/3',\n//         targetMaxQuantity: -1\n//       }\n//     default:\n//       break;\n//   }\n// }\n\n// getClassFieldDefinition(pkClassField: number): Field {\n//   const listDef = this.getClassFieldSubfield(pkClassField)\n//   return { ...listDef, listDefinitions: [listDef] }\n// }\n\n\n// @spyTag @cache({ refCount: false }) pipeClassesRequired() {\n//   return this.s.sys$.system_relevant_class$.by_required$.key('true')\n//     .pipe(map(c => values(c).map(k => k.fk_class)))\n// }\n\n\n\n// /**\n//  * Pipes all the enabled properties of a class\n//  */\n// @spyTag @cache({ refCount: false }) pipePropertiesOfClass(pkClass: number, isOutgoing: boolean): Observable<DfhPropertyStatus[]> {\n\n\n//   let $: Observable<ByPk<DfhProperty>>\n//   if (isOutgoing) {\n//     $ = this.s.dfh$.property$.by_has_domain$.key(pkClass)\n//   }\n//   else {\n//     $ = this.s.dfh$.property$.by_has_range$.key(pkClass)\n//   }\n\n//   // filter properties that are in at least one profile enabled by project\n//   const profiles$ = this.pipeProfilesEnabledByProject()\n\n\n//   // Filter out only the properties for which target class is allowed\n//   return combineLatest($, profiles$)\n//     .pipe(\n//       map(([props, profiles]) => {\n//         const p: DfhPropertyStatus[] = []\n\n//         values(props).forEach(prop => {\n\n\n//           const propProfileRel = prop.profiles as Profiles\n\n//           let enabledInAProfile = false;\n\n//           let removedFromAllProfiles = true;\n\n//           propProfileRel.forEach(item => {\n//             if (profiles.includes(item.fk_profile)) {\n//               enabledInAProfile = true;\n//               if (item.removed_from_api === false) {\n//                 removedFromAllProfiles = false\n//               }\n//             }\n//           })\n\n//           if (enabledInAProfile) {\n//             p.push({\n//               ...prop,\n//               removedFromAllProfiles\n//             })\n//           }\n//         })\n\n//         return p\n//       })\n//     )\n\n// }\n\n\n// /**\n//  * returns an object where the keys are the pks of the Classes\n//  * used by the given project\n//  * - or because the class is enabled by class_proj_rel\n//  * - or because the class is required by sources or by basics\n//  *\n//  * this is usefull to check if a class is available at all\n//  */\n// @spyTag @cache({ refCount: false }) pipeClassesInEntitesOrRequired(): Observable<{ [key: string]: number }> {\n//   return combineLatest(\n//     this.pipeClassesEnabledInEntities(),\n//     this.pipeClassesRequired()\n//   ).pipe(\n//     map(([a, b]) => indexBy((x) => x.toString(), uniq([...a, ...b]))),\n//     startWith({})\n//   )\n// }\n","import { Injectable } from '@angular/core';\nimport { DfhConfig } from '@kleiolab/lib-config';\nimport { IconType } from '@kleiolab/lib-redux';\nimport { InfStatement, InfTimePrimitive } from '@kleiolab/lib-sdk-lb3';\nimport { CalendarType, combineLatestOrEmpty, Granularity, TimePrimitive, TimeSpanUtil } from '@kleiolab/lib-utils';\nimport { omit, values } from 'ramda';\nimport { combineLatest, merge, Observable, of, pipe, BehaviorSubject } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\nimport { spyTag } from '../decorators/method-decorators';\nimport { BasicStatementItem, } from '../models/BasicStatementItem';\nimport { Subfield } from '../models/Subfield';\nimport { ActiveProjectPipesService } from './active-project-pipes.service';\nimport { SchemaSelectorsService } from './schema-selectors.service';\nimport { TimePrimitiveWithCal } from '@kleiolab/lib-sdk-lb4';\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * This service contains a basic pipes for creating more complex\n * rxjs pipes. Each pipe takes non-observable parameters and\n * returns an observable. The method names are mainly\n * based on the type of the observable data\n */\nexport class InformationBasicPipesService {\n  // infRepo: InfSelector;\n\n  constructor(\n    private p: ActiveProjectPipesService,\n    private s: SchemaSelectorsService,\n  ) { }\n\n  /*********************************************************************\n   * Project\n  *********************************************************************/\n\n  // @spyTag pipeRelatedTemporalEntities(pkEntity: number): Observable<InfTemporalEntity[]> {\n  //   return this.s.inf$.statement$\n  //     .by_object$({ fk_object_info: pkEntity })\n  //     .pipe(\n  //       auditTime(1),\n  //       switchMapOr([], (statements) => combineLatest(\n  //         statements.map(statement => this.s.inf$.temporal_entity$.by_pk_entity_key$(statement.fk_subject_info).pipe(\n  //         ))\n  //       ).pipe(\n  //         map(x => x.filter((y) => !!y)),\n  //       )),\n  //     )\n  // }\n\n\n\n\n  /**\n * Pipe statements of an entity\n */\n  @spyTag pipeStatements(pkEntity: number, isOutgoing): Observable<InfStatement[]> {\n    return isOutgoing ? this.pipeOutgoingStatements(pkEntity) : this.pipeIngoingStatements(pkEntity)\n  }\n\n\n  /**\n  * Pipe outgoing statements of an entity\n  */\n  @spyTag pipeOutgoingStatements(pkEntity): Observable<InfStatement[]> {\n    return this.s.inf$.statement$.by_subject$({ fk_subject_info: pkEntity })\n  }\n\n\n  /**\n   * Pipe ingoing statements of an entity\n   */\n  @spyTag pipeIngoingStatements(pkEntity): Observable<InfStatement[]> {\n    return this.s.inf$.statement$.by_object$({ fk_object_info: pkEntity })\n  }\n\n\n  pipeStatementsOfList(listDefinition: Subfield, pkEntity): Observable<InfStatement[]> {\n    if (listDefinition.isOutgoing) {\n      return this.s.inf$.statement$.by_subject_and_property$({\n        fk_property: listDefinition.property.pkProperty,\n        fk_property_of_property: listDefinition.property.pkPropertyOfProperty,\n        fk_subject_info: pkEntity\n      })\n    } else {\n      return this.s.inf$.statement$.by_object_and_property$({\n        fk_property: listDefinition.property.pkProperty,\n        fk_property_of_property: listDefinition.property.pkPropertyOfProperty,\n        fk_object_info: pkEntity\n      })\n    }\n  }\n\n  /**\n   * Pipe outgoing statements of temporal entity\n   */\n  @spyTag pipeOutgoingStatementsByProperty(pkProperty, pkEntity): Observable<InfStatement[]> {\n    return this.s.inf$.statement$.by_subject_and_property$({\n      fk_property: pkProperty,\n      fk_subject_info: pkEntity\n    })\n\n  }\n\n\n  /**\n   * Pipe ingoing statements of an entity\n   */\n  @spyTag pipeIngoingStatementsByProperty(pkProperty, pkEntity): Observable<InfStatement[]> {\n    return this.s.inf$.statement$.by_object_and_property$({\n      fk_property: pkProperty,\n      fk_object_info: pkEntity\n    })\n  }\n\n  /**\n * Pipe outgoing statements of temporal entity\n */\n  @spyTag pipeOutgoingBasicStatementItemsByProperty(pkProperty, pkEntity, pkProject: number): Observable<BasicStatementItem[]> {\n    return this.s.inf$.statement$.by_subject_and_property$({\n      fk_property: pkProperty,\n      fk_subject_info: pkEntity\n    }).pipe(\n      switchMap(statements => combineLatestOrEmpty(\n        statements.map(statement => this.pipeBasicStatementItem(pkProject, statement, true))\n      ))\n    )\n  }\n\n\n\n  /**\n   * Pipe ingoing statements of an entity\n   */\n  @spyTag pipeIngoingBasicStatementItemsByProperty(pkProperty, pkEntity, pkProject: number): Observable<BasicStatementItem[]> {\n    return this.s.inf$.statement$.by_object_and_property$({\n      fk_property: pkProperty,\n      fk_object_info: pkEntity\n    }).pipe(\n      switchMap(statements => combineLatestOrEmpty(\n        statements.map(statement => this.pipeBasicStatementItem(pkProject, statement, false))\n      ))\n    )\n  }\n\n  @spyTag private pipeBasicStatementItem(pkProject: number, statement: InfStatement, isOutgoing: boolean): Observable<BasicStatementItem> {\n    return this.s.pro$.info_proj_rel$.by_fk_project__fk_entity$.key(pkProject + '_' + statement.pk_entity).pipe(\n      filter(x => !!x),\n      map(projRel => ({\n        projRel, statement, label: '', ordNum: (isOutgoing ? projRel.ord_num_of_range : projRel.ord_num_of_domain), isOutgoing\n      }))\n    );\n  }\n\n  @spyTag pipeBasicStatementItemByPkStatement(pkProject: number, pkStatement: number, isOutgoing: boolean): Observable<BasicStatementItem> {\n    return this.s.inf$.statement$.by_pk_entity_key$(pkStatement).pipe(\n      switchMap(statement => (!statement) ? of(undefined) : this.pipeBasicStatementItem(pkProject, statement, isOutgoing))\n    )\n  }\n\n\n  @spyTag pipeInfTimePrimitive(pkEntity: number): Observable<InfTimePrimitive> {\n    return this.s.inf$.time_primitive$.by_pk_entity$.key(pkEntity)\n  }\n\n  /**\n   * pipes the TimeSpan of a temporal entity\n   * @param pkEntity the pk_entity of the termporal entity\n   */\n  @spyTag pipeTimeSpan(pkEntity: number): Observable<TimeSpanUtil> {\n    // Get the properties leading to presences\n    return combineLatest(\n      this.pipeOutgoingStatementsByProperty(72, pkEntity).pipe(this.timePrimitiveOfStatements()),\n      this.pipeOutgoingStatementsByProperty(71, pkEntity).pipe(this.timePrimitiveOfStatements()),\n      this.pipeOutgoingStatementsByProperty(150, pkEntity).pipe(this.timePrimitiveOfStatements()),\n      this.pipeOutgoingStatementsByProperty(151, pkEntity).pipe(this.timePrimitiveOfStatements()),\n      this.pipeOutgoingStatementsByProperty(152, pkEntity).pipe(this.timePrimitiveOfStatements()),\n      this.pipeOutgoingStatementsByProperty(153, pkEntity).pipe(this.timePrimitiveOfStatements()),\n\n    ).pipe(\n      map(([_72, _71, _150, _151, _152, _153]) => new TimeSpanUtil({\n        p82: _72,\n        p81: _71,\n        p82a: _152,\n        p81a: _150,\n        p81b: _151,\n        p82b: _153,\n      })),\n    )\n  }\n\n\n\n  /**\n   * Pipes max. one time primitive for an array of statements, assuming that the statements\n   * are of the same properties.\n   */\n  timePrimitiveOfStatements = () => pipe(\n    map((r: InfStatement[]) => r[0]),\n    switchMap((r) => {\n      if (!r) return new BehaviorSubject(undefined)\n      return this.pipeInfTimePrimitive(r.fk_object_info).pipe(\n        switchMap((infTimePrimitive) => this.p.pkProject$.pipe(\n          switchMap((pkProject) => this.s.pro$.info_proj_rel$.by_fk_project__fk_entity$\n            .key(pkProject + '_' + r[0].pk_entity).pipe(\n              filter(statement => !!statement),\n              map(ipr => {\n                const y: TimePrimitiveWithCal = {\n                  calendar: (ipr.calendar ? ipr.calendar : 'gregorian') as CalendarType,\n                  julianDay: infTimePrimitive.julian_day,\n                  duration: infTimePrimitive.duration as Granularity\n                }\n                return y;\n              })\n            ))\n        ))\n      )\n    })\n  )\n\n  /**\n   * Pipes the fk_class of the given entity\n   */\n  @spyTag pipeClassOfEntity(pkEntity: number): Observable<number> {\n    return merge(\n      this.s.inf$.persistent_item$.by_pk_entity_key$(pkEntity).pipe(\n        filter(e => !!e),\n        map(e => e.fk_class)\n      ),\n      this.s.inf$.temporal_entity$.by_pk_entity_key$(pkEntity).pipe(\n        filter(e => !!e),\n        map(e => e.fk_class)\n      )\n    )\n  }\n\n  /**\n   * Pipes distinct fk_classes of the given persistent items\n   */\n  @spyTag pipeClassesOfPersistentItems(pkEntities: number[]): Observable<number[]> {\n    return this.s.inf$.persistent_item$.by_pk_entity_all$().pipe(\n      map((peIts) => {\n        if (!pkEntities || pkEntities.length === 0) {\n          return []\n        }\n        const classes = {};\n        const a = [];\n        pkEntities.forEach(typePk => {\n          if (!classes[peIts[typePk].fk_class]) {\n            classes[peIts[typePk].fk_class] = true;\n            a.push(peIts[typePk].fk_class)\n          }\n        })\n        return a;\n      })\n    )\n\n  }\n\n\n  /*********************************************************************\n   * Repo\n  *********************************************************************/\n\n  /**\n    * Pipe repo outgoing statements.\n    */\n  @spyTag pipeRepoOutgoingStatements(pkEntity): Observable<InfStatement[]> {\n    return this.s.inf$.statement$.by_subject$({ fk_subject_info: pkEntity }, false)\n  }\n\n  /**\n  * Pipe repo ingoing statements.\n  */\n  @spyTag pipeRepoIngoingStatements(pkEntity): Observable<InfStatement[]> {\n    return this.s.inf$.statement$.by_object$({ fk_object_info: pkEntity }, false)\n  }\n\n  /**\n    * Pipe repo outgoing statements.\n    * If max quantity is limited, takes only max allowed number of statements, starting with highest is_in_project_count\n    */\n  @spyTag pipeRepoOutgoingStatementsByProperty(pkProperty, pkEntity): Observable<InfStatement[]> {\n    return combineLatest(\n      this.s.dfh$.property$.by_pk_property$.key(pkProperty)\n        .pipe(filter(x => !!x && Object.keys(x).length > 0), map(p => values(p)[0].range_instances_max_quantifier)),\n      this.s.inf$.statement$\n        .by_subject_and_property$({\n          fk_property: pkProperty,\n          fk_subject_info: pkEntity\n        }, false)\n      // .pipe(filter(x => !!x))\n    ).pipe(\n      map(([m, rs]) => {\n        if (rs.length === 0) return rs;\n        const r = this.sortStatementsByRepoPopularity(rs);\n        return (m === -1 || m === null) ? r : r.slice(0, m);\n      })\n    )\n  }\n\n  /**\n  * Pipe repo ingoing statements.\n  * If max quantity is limited, takes only max allowed number of statements, starting with highest is_in_project_count\n  */\n  @spyTag pipeRepoIngoingStatementsByProperty(pkProperty, pkEntity): Observable<InfStatement[]> {\n    return combineLatest(\n      this.s.dfh$.property$.by_pk_property$.key(pkProperty)\n        .pipe(filter(x => !!x && Object.keys(x).length > 0), map(p => values(p)[0].domain_instances_max_quantifier)),\n      this.s.inf$.statement$\n        .by_object_and_property$({\n          fk_property: pkProperty,\n          fk_object_info: pkEntity\n        }, false)\n      // .pipe(filter(x => !!x))\n    ).pipe(\n      map(([m, rs]) => {\n        if (rs.length === 0) return rs;\n        const r = this.sortStatementsByRepoPopularity(rs);\n        return (m === -1 || m === null) ? r : r.slice(0, m);\n      })\n    )\n  }\n\n\n  /*********************************************************************\n   * Alternatives (Repo minus Project)\n  *********************************************************************/\n\n  @spyTag pipeAlternativeBasicStatementItemByPkStatement(pkStatement: number, isOutgoing: boolean): Observable<BasicStatementItem> {\n    return combineLatest(\n      this.s.inf$.statement$.by_pk_entity_key$(pkStatement, false),\n      this.s.inf$.statement$.by_pk_entity_key$(pkStatement),\n    )\n      .pipe(\n        filter(([inrepo]) => !!inrepo),\n        map(([inrepo, inproject]) => {\n          if (inproject) {\n            return undefined\n          } else {\n            const i: BasicStatementItem = {\n              projRel: undefined,\n              statement: inrepo,\n              ordNum: undefined,\n              isOutgoing,\n              label: ''\n            }\n            return i\n          }\n        })\n      )\n  }\n\n\n  /**\n     * Pipe alternative ingoing statements (= statements not in active project)\n     */\n  @spyTag pipeAlternativeIngoingStatements(pkProperty, pkEntity): Observable<InfStatement[]> {\n    return combineLatest(\n      this.s.inf$.statement$.by_object_and_property_indexed$({\n        fk_property: pkProperty,\n        fk_object_info: pkEntity\n      }, false),\n      this.s.inf$.statement$.by_object_and_property_indexed$({\n        fk_property: pkProperty,\n        fk_object_info: pkEntity\n      }).pipe(\n        map(inproject => inproject ? Object.keys(inproject) : [])\n      )\n    ).pipe(\n      map(([inrepo, inproject]) => omit(inproject, inrepo)),\n      map(statements => values(statements))\n    )\n  }\n\n\n  /**\n   * Pipe alternative outgoing statements (= statements not in active project)\n   */\n  @spyTag pipeAlternativeOutgoingStatements(pkProperty, pkEntity): Observable<InfStatement[]> {\n    return combineLatest(\n      this.s.inf$.statement$.by_subject_and_property_indexed$({\n        fk_property: pkProperty,\n        fk_subject_info: pkEntity\n      }, false),\n      this.s.inf$.statement$.by_subject_and_property_indexed$({\n        fk_property: pkProperty,\n        fk_subject_info: pkEntity\n      }).pipe(\n        map(inproject => inproject ? Object.keys(inproject) : [])\n      ),\n    ).pipe(\n      map(([inrepo, inproject]) => omit(inproject, inrepo)),\n      map(statements => values(statements))\n    )\n  }\n\n\n\n  /**\n   * get array of pks of persistent items of a specific class\n   */\n  @spyTag pipePersistentItemPksByClass(pkClass): Observable<number[]> {\n    return this.s.inf$.persistent_item$.by_fk_class_key$(pkClass).pipe(\n      map(ob => {\n        if (ob) return Object.keys(ob).map(k => parseInt(k, 10));\n        return []\n      }))\n  }\n\n  /**\n   * gets the css classes for that entity\n   * @param pkEntity\n   */\n  pipeIconType(pkEntity: number): Observable<IconType> {\n\n    return this.p.streamEntityPreview(pkEntity).pipe(\n      map(preview => {\n        if (preview.entity_type == 'teEn') {\n          return 'temporal-entity'\n        }\n        if (preview.fk_class === DfhConfig.CLASS_PK_EXPRESSION_PORTION) {\n          return 'expression-portion'\n        } else if (DfhConfig.CLASS_PKS_SOURCE_PE_IT.includes(preview.fk_class)) {\n          return 'source'\n        }\n        return 'persistent-entity'\n      })\n    )\n\n  }\n\n\n  /*********************************************************************\n   * Helpers\n   *********************************************************************/\n  sortStatementsByRepoPopularity(statements: InfStatement[]): InfStatement[] {\n    return statements.sort((a, b) => a.is_in_project_count > b.is_in_project_count ? 1 : -1)\n  }\n\n\n\n}\n","\nimport { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { DfhConfig } from '@kleiolab/lib-config';\nimport { IAppState, PaginateByParam } from '@kleiolab/lib-redux';\nimport { InfStatement } from '@kleiolab/lib-sdk-lb3';\nimport { CalendarType, combineLatestOrEmpty, Granularity, limitTo, sortAbc, switchMapOr, TimePrimitive, TimePrimitivePipe, TimeSpanPipe, TimeSpanUtil } from '@kleiolab/lib-utils';\nimport { equals, flatten, groupBy, pick, uniq, values } from 'ramda';\nimport { BehaviorSubject, combineLatest, empty, iif, Observable, of } from 'rxjs';\nimport { tag } from 'rxjs-spy/operators';\nimport { distinctUntilChanged, filter, map, startWith, switchMap, tap } from 'rxjs/operators';\nimport { cache, spyTag } from '../decorators/method-decorators';\nimport { timeSpanItemToTimeSpan } from '../functions/functions';\nimport { AppellationItem } from '../models/AppellationItem';\nimport { BasicStatementItem } from '../models/BasicStatementItem';\nimport { ClassAndTypeNode } from '../models/ClassAndTypeNode';\nimport { ClassAndTypeSelectModel } from '../models/ClassAndTypeSelectModel';\nimport { CtrlTimeSpanDialogResult } from '../models/CtrlTimeSpanDialogResult';\nimport { DimensionItem } from '../models/DimensionItem';\nimport { EntityPreviewItem } from '../models/EntityPreviewItem';\nimport { EntityProperties } from '../models/EntityProperties';\nimport { Field } from '../models/Field';\nimport { ItemList } from '../models/ItemList';\nimport { LangStringItem } from '../models/LangStringItem';\nimport { LanguageItem } from '../models/LanguageItem';\nimport { PlaceItem } from '../models/PlaceItem';\nimport { PropertyOption } from '../models/PropertyOption';\nimport { PropertySelectModel } from '../models/PropertySelectModel';\nimport { StatementItem } from '../models/StatementItem';\nimport { Subfield } from '../models/Subfield';\nimport { TemporalEntityCell } from '../models/TemporalEntityCell';\nimport { TemporalEntityItem } from '../models/TemporalEntityItem';\nimport { TemporalEntityRemoveProperties } from '../models/TemporalEntityRemoveProperties';\nimport { TemporalEntityRow } from '../models/TemporalEntityRow';\nimport { TimePrimitiveItem } from '../models/TimePrimitiveItem';\nimport { TimeSpanItem } from '../models/TimeSpanItem';\nimport { TimeSpanProperty } from '../models/TimeSpanProperty';\nimport { InfModelName, InfSelector } from '../selectors/inf.service';\nimport { ActiveProjectPipesService } from './active-project-pipes.service';\nimport { ConfigurationPipesService } from './configuration-pipes.service';\nimport { InformationBasicPipesService } from './information-basic-pipes.service';\nimport { SchemaSelectorsService } from './schema-selectors.service';\n\n\n\n\n\n\n\n@Injectable()\n/**\n * This Service provides a collecion of pipes that aggregate or transform information.\n * For Example\n * - the lists of text properties, appellaitons, places, time-primitives / time-spans etc.\n * - the label of temporal entity or persistent item\n *\n * This mainly selects data from the information schema and the relation to projects.\n * It combines pipes selecting data from the\n * - activated project\n * - alternatives (not in project but in others)\n * - repo\n *\n */\nexport class InformationPipesService {\n\n  infRepo: InfSelector;\n\n  constructor(\n    private b: InformationBasicPipesService,\n    private p: ActiveProjectPipesService,\n    private s: SchemaSelectorsService,\n    private c: ConfigurationPipesService,\n    public timePrimitivePipe: TimePrimitivePipe,\n    private timeSpanPipe: TimeSpanPipe,\n    ngRedux: NgRedux<IAppState>\n  ) {\n    this.infRepo = new InfSelector(ngRedux, of('repo'))\n  }\n\n\n  /*********************************************************************\n   * Pipe the project entities\n   *********************************************************************/\n\n  @spyTag pipeListLength(l: Subfield, pkEntity: number): Observable<number> {\n    switch (l.listType) {\n      case 'appellation':\n      case 'entity-preview':\n      case 'language':\n      case 'place':\n      case 'dimension':\n      case 'langString':\n      case 'temporal-entity':\n        return this.pipeList(l, pkEntity).pipe(map(items => items.length))\n\n      case 'time-span':\n        return combineLatest(\n          this.b.pipeOutgoingStatementsByProperty(72, pkEntity),\n          this.b.pipeOutgoingStatementsByProperty(71, pkEntity),\n          this.b.pipeOutgoingStatementsByProperty(150, pkEntity),\n          this.b.pipeOutgoingStatementsByProperty(151, pkEntity),\n          this.b.pipeOutgoingStatementsByProperty(152, pkEntity),\n          this.b.pipeOutgoingStatementsByProperty(153, pkEntity)\n        ).pipe(\n          tap((x) => {\n\n          }),\n          map(items => items.filter(x => x.length > 0).length))\n\n      // case 'text-property':\n      //   return this.pipeListTextProperty(l, pkEntity).pipe(map(items => items.length))\n\n      default:\n        console.warn('unsupported listType')\n        return new BehaviorSubject(0);\n    }\n  }\n\n  @spyTag pipeList(l: Subfield, pkEntity, limit?: number): Observable<ItemList> {\n    if (l.listType.appellation) return this.pipeListAppellation(l, pkEntity, limit)\n    else if (l.listType.entityPreview) return this.pipeListEntityPreview(l, pkEntity, limit)\n    else if (l.listType.language) return this.pipeListLanguage(l, pkEntity, limit)\n    else if (l.listType.place) return this.pipeListPlace(l, pkEntity, limit)\n    else if (l.listType.dimension) return this.pipeListDimension(l, pkEntity, limit)\n    else if (l.listType.langString) return this.pipeListLangString(l, pkEntity, limit)\n    else if (l.listType.temporalEntity) return this.pipeListEntityPreview(l, pkEntity, limit)\n    else if (l.listType.timeSpan) {\n      return this.pipeItemTimeSpan(pkEntity).pipe(\n        map((ts) => [ts].filter(i => i.properties.length > 0))\n      )\n    }\n    else console.warn('unsupported listType')\n  }\n\n  @spyTag pipeListBasicStatementItems(listDefinition: Subfield, pkEntity: number, pkProject: number): Observable<BasicStatementItem[]> {\n    return (listDefinition.isOutgoing ?\n      this.b.pipeOutgoingBasicStatementItemsByProperty(listDefinition.property.pkProperty, pkEntity, pkProject) :\n      this.b.pipeIngoingBasicStatementItemsByProperty(listDefinition.property.pkProperty, pkEntity, pkProject)\n    )\n  }\n\n  /**\n   * Pipe the items in appellation field\n   */\n  @spyTag pipeListAppellation<T>(listDefinition: Subfield, pkEntity: number, limit?: number): Observable<AppellationItem[]> {\n    return this.b.pipeStatementsOfList(listDefinition, pkEntity)\n      .pipe(\n        switchMap((statements) => {\n          return combineLatest(statements.map((r, i) => this.pipeItemAppellation(r)))\n            .pipe(\n              map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)),\n              limitTo(limit),\n              startWith([]))\n        }))\n  }\n\n  /**\n * Pipe the items in entity preview field\n */\n  @spyTag pipeListEntityPreview<T>(listDefinition: Subfield, pkEntity: number, limit?: number): Observable<EntityPreviewItem[]> {\n\n    return this.b.pipeStatementsOfList(listDefinition, pkEntity)\n      .pipe(\n        tag(`before-${pkEntity}-${listDefinition.property.pkProperty}-${listDefinition.targetClass}`),\n        switchMap((statements) => {\n          return combineLatest(statements.map((r, i) => this.pipeItemEntityPreview(r, listDefinition.isOutgoing)))\n            .pipe(\n              map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)\n                .sort((a, b) => a.ordNum > b.ordNum ? 1 : -1),\n                limitTo(limit),\n              ),\n              startWith([])\n            )\n        }),\n        tag(`after-${pkEntity}-${listDefinition.property.pkProperty}-${listDefinition.targetClass}`),\n      )\n\n  }\n\n\n  @spyTag pipeListLanguage<T>(listDefinition: Subfield, pkEntity: number, limit?: number): Observable<LanguageItem[]> {\n\n    return this.b.pipeStatementsOfList(listDefinition, pkEntity)\n      .pipe(\n        switchMap((statements) => {\n          return combineLatest(statements.map((r, i) => this.pipeItemLanguage(r)))\n            .pipe(\n              map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)),\n              limitTo(limit),\n              startWith([]))\n        }))\n  }\n\n  /**\n   * Pipe the items in place list\n   */\n  @spyTag pipeListPlace<T>(listDefinition: Subfield, pkEntity: number, limit?: number): Observable<PlaceItem[]> {\n\n    return this.b.pipeStatementsOfList(listDefinition, pkEntity)\n      .pipe(\n        switchMap((statements) => {\n          return combineLatest(statements.map((r, i) => this.pipeItemPlace(r)))\n            .pipe(\n              map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)),\n              limitTo(limit),\n              startWith([]))\n        }))\n  }\n\n  /**\n   * Pipe the items in place list\n   */\n  @spyTag pipeListDimension<T>(listDefinition: Subfield, pkEntity: number, limit?: number): Observable<DimensionItem[]> {\n\n    return this.b.pipeStatementsOfList(listDefinition, pkEntity)\n      .pipe(\n        switchMap((statements) => {\n          return combineLatest(statements.map((r, i) => this.pipeItemDimension(r)))\n            .pipe(\n              map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)),\n              limitTo(limit),\n              startWith([]))\n        }))\n  }\n\n  /**\n * Pipe the items in langString list\n */\n  @spyTag pipeListLangString<T>(listDefinition: Subfield, pkEntity: number, limit?: number): Observable<LangStringItem[]> {\n\n    return this.b.pipeStatementsOfList(listDefinition, pkEntity)\n      .pipe(\n        switchMap((statements) => {\n          return combineLatest(statements.map((r, i) => this.pipeItemLangString(r)))\n            .pipe(\n              map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)),\n              limitTo(limit),\n              startWith([]))\n        }))\n\n  }\n\n\n  pipeStatementListPage(\n    paginateBy: PaginateByParam[],\n    limit: number,\n    offset: number,\n    pkProject: number,\n    listDefinition: Subfield,\n    alternative = false): Observable<EntityPreviewItem[]> {\n\n    // prepare page loader\n    const pageLoader$ = alternative ? this.infRepo.statement$.pagination$ : this.s.inf$.statement$.pagination$;\n\n    // prepare basic statement item loader\n    const basicStatementItemLoader = (pkStatement, isOutgoing, pkProj) => {\n      return alternative ?\n        this.b.pipeAlternativeBasicStatementItemByPkStatement(pkStatement, isOutgoing) :\n        this.b.pipeBasicStatementItemByPkStatement(pkProj, pkStatement, isOutgoing)\n    }\n\n    const paginatedStatementPks$ = pageLoader$.pipePage(paginateBy, limit, offset)\n\n    return paginatedStatementPks$.pipe(\n      switchMap((paginatedStatementPks) => combineLatestOrEmpty(\n        paginatedStatementPks.map(pkStatement => basicStatementItemLoader(pkStatement, listDefinition.isOutgoing, pkProject)\n          .pipe(\n            filter(x => !!x),\n            switchMap(x => this.p.streamEntityPreview(x.isOutgoing ? x.statement.fk_object_info : x.statement.fk_subject_info)\n              .pipe(\n                map((preview) => {\n                  const item: EntityPreviewItem = {\n                    ...x,\n                    preview,\n                    fkClass: preview.fk_class\n                  }\n                  return item;\n                })\n              )\n            ))\n\n        )\n      )\n      ))\n\n  }\n\n\n  /**\n   * Pipe the temporal entities connected to given entity by statements that are in the current project\n   */\n  @spyTag pipeTemporalEntityTableRows(\n    paginateBy: PaginateByParam[],\n    limit: number,\n    offset: number,\n    pkProject: number,\n    listDefinition: Subfield,\n    fieldDefinitions: Field[],\n    alternative = false): Observable<TemporalEntityItem[]> {\n\n    // const propertyItemType = this.propertyItemType(fieldDefinitions)\n\n    const targetEntityOfStatementItem = (r: BasicStatementItem) => r.isOutgoing ? r.statement.fk_object_info : r.statement.fk_subject_info;\n\n    // prepare page loader\n    const pageLoader$ = alternative ? this.infRepo.statement$.pagination$ : this.s.inf$.statement$.pagination$;\n\n    // prepare basic statement item loader\n    const basicStatementItemLoader = (pkStatement, isOutgoing, pkProj) => {\n      return alternative ?\n        this.b.pipeAlternativeBasicStatementItemByPkStatement(pkStatement, isOutgoing) :\n        this.b.pipeBasicStatementItemByPkStatement(pkProj, pkStatement, isOutgoing)\n    }\n\n    // prepare TeEnRow loader\n    const rowLoader = (targetEntityPk, fieldDef, pkProj) => {\n      return alternative ?\n        this.pipeItemTeEnRow(targetEntityPk, fieldDef, null, true) :\n        this.pipeItemTeEnRow(targetEntityPk, fieldDef, pkProj, false)\n    }\n\n    const paginatedStatementPks$ = pageLoader$.pipePage(paginateBy, limit, offset)\n\n    const rows$ = paginatedStatementPks$.pipe(\n      switchMap((paginatedStatementPks) => combineLatestOrEmpty(\n        paginatedStatementPks.map(pkStatement => basicStatementItemLoader(pkStatement, listDefinition.isOutgoing, pkProject)\n          .pipe(filter(x => !!x))\n        )\n      )\n        .pipe(\n          switchMap((teEnStatement) => combineLatestOrEmpty(\n            teEnStatement.map((basicStatementItem) => {\n              const pkTeEn = targetEntityOfStatementItem(basicStatementItem);\n              return combineLatest(\n                rowLoader(\n                  pkTeEn,\n                  fieldDefinitions,\n                  // propertyItemType,\n                  pkProject\n                ),\n                this.s.pro$.info_proj_rel$.by_fk_project__fk_entity$.key(pkProject + '_' + pkTeEn)\n              ).pipe(\n                map(([row, teEnProjRel]) => {\n                  const item: TemporalEntityItem = {\n                    ...basicStatementItem,\n                    row,\n                    pkEntity: pkTeEn,\n                    teEnProjRel\n                  };\n                  return item\n                })\n              )\n            })\n          )),\n        )),\n\n    )\n    return rows$\n  }\n\n\n\n  @spyTag pipeItemTeEnRow(pkEntity: number, fieldDefinitions: Field[], pkProject: number, repo: boolean): Observable<TemporalEntityRow> {\n\n    // pipe outgoing statements\n    const outgoingStatements$ = repo ? this.b.pipeRepoOutgoingStatements(pkEntity) : this.b.pipeOutgoingStatements(pkEntity);\n    // pipe ingoing statements\n    const ingoingStatements$ = repo ? this.b.pipeRepoIngoingStatements(pkEntity) : this.b.pipeIngoingStatements(pkEntity);\n\n\n    // pipe all statements with information leaf items\n\n    const outgoingItems$: Observable<StatementItem[]> = outgoingStatements$.pipe(\n      switchMap(statements => combineLatestOrEmpty(\n        statements\n          .filter(statement => !!statement.fk_object_info) // remove statements not pointing to information\n          .map(s => {\n            const isOutgoing = true;\n            return this.pipeItem(s, pkProject, isOutgoing);\n          })\n      ))\n\n    )\n    const ingoingItems$: Observable<StatementItem[]> = ingoingStatements$.pipe(\n      switchMap(statements => combineLatestOrEmpty(\n        statements\n          .filter(statement => !!statement.fk_subject_info) // remove statements not pointing to information\n          .map(s => {\n            const isOutgoing = false;\n            return this.pipeItem(s, pkProject, isOutgoing);\n          })\n      ))\n\n    )\n\n    const sortItems = repo ?\n      (item: StatementItem[]) => item.sort((a, b) => a.statement.is_in_project_count > b.statement.is_in_project_count ? 1 : -1) :\n      (item: StatementItem[]) => item;\n\n\n    return combineLatest(outgoingItems$, ingoingItems$).pipe(\n\n      map(([outgoingItems, ingoingItems]) => {\n        const groupedOut = groupBy((i) => (i && i.statement ? i.statement.fk_property.toString() : undefined), outgoingItems);\n        const groupedIn = groupBy((i) => (i && i.statement ? i.statement.fk_property.toString() : undefined), ingoingItems);\n        return { groupedOut, groupedIn }\n      }),\n      // auditTime(10),\n      map((d) => {\n        const row: TemporalEntityRow = {}\n\n        fieldDefinitions.forEach(fieldDefinition => {\n\n          let cell: TemporalEntityCell;\n          fieldDefinition.listDefinitions.forEach(listDefinition => {\n            if (listDefinition.listType.timeSpan) {\n\n              const t = pick(['71', '72', '150', '151', '152', '153'], d.groupedOut);\n              const keys = Object.keys(t);\n              const itemsCount = keys.length;\n\n              let label;\n              if (itemsCount > 0) {\n                const timeSpanKeys: CtrlTimeSpanDialogResult = {}\n                keys.forEach(key => { timeSpanKeys[key] = t[key][0].timePrimitive })\n                const timeSpan = TimeSpanUtil.fromTimeSpanDialogData(timeSpanKeys);\n                label = this.timeSpanPipe.transform(timeSpan);\n              }\n              cell = {\n                isOutgoing: listDefinition.isOutgoing,\n                itemsCount,\n                label,\n                entityPreview: undefined,\n                pkProperty: undefined,\n                isTimeSpan: true\n              }\n            }\n            else {\n              if (listDefinition.isOutgoing) {\n                if (d.groupedOut[listDefinition.property.pkProperty]) {\n                  const items = sortItems(d.groupedOut[listDefinition.property.pkProperty])\n                  const firstItem = items[0];\n                  cell = {\n                    isOutgoing: listDefinition.isOutgoing,\n                    itemsCount: items.length,\n                    entityPreview: ((firstItem || {}) as EntityPreviewItem).preview,\n                    label: firstItem.label,\n                    pkProperty: listDefinition.property.pkProperty,\n                    firstItem,\n                    items\n                  }\n                }\n              } else {\n                if (d.groupedIn[listDefinition.property.pkProperty]) {\n                  const items = sortItems(d.groupedIn[listDefinition.property.pkProperty])\n                  const firstItem = items[0];\n                  cell = {\n                    isOutgoing: listDefinition.isOutgoing,\n                    itemsCount: items.length,\n                    entityPreview: ((firstItem || {}) as EntityPreviewItem).preview,\n                    label: firstItem.label,\n                    pkProperty: listDefinition.property.pkProperty,\n                    firstItem,\n                    items\n                  }\n                }\n              }\n            }\n\n          })\n\n\n          row[fieldDefinition.label] = cell;\n        })\n        return row\n      })\n\n\n    )\n  }\n\n\n\n  @spyTag private pipeItem(r: InfStatement, pkProject: number, propIsOutgoing: boolean) {\n\n    const targetEntity = propIsOutgoing ? r.fk_object_info : r.fk_subject_info;\n    return this.s.inf$.getModelOfEntity$(targetEntity).pipe(\n      switchMap(m => {\n        const modelName: InfModelName = m ? m.modelName : undefined;\n        switch (modelName) {\n          case 'appellation':\n            return this.pipeItemAppellation(r);\n          case 'language':\n            return this.pipeItemLanguage(r);\n          case 'place':\n            return this.pipeItemPlace(r);\n          case 'dimension':\n            return this.pipeItemDimension(r);\n          case 'lang_string':\n            return this.pipeItemLangString(r);\n          case 'time_primitive':\n            return this.pipeItemTimePrimitive(r, pkProject); // TODO: emits twice\n          default:\n            return this.pipeItemEntityPreview(r, propIsOutgoing);\n            break;\n        }\n\n\n      })\n    )\n\n\n  }\n\n\n  @spyTag pipeEntityProperties(listDef: Subfield, fkEntity: number, limit?: number): Observable<EntityProperties> {\n\n    if (listDef.listType.appellation) {\n      return this.pipeListAppellation(listDef, fkEntity, limit)\n        .pipe(map((items) => this.getEntityProperties(listDef, items)))\n    }\n    else if (listDef.listType.language) {\n      return this.pipeListLanguage(listDef, fkEntity, limit)\n        .pipe(map((items) => this.getEntityProperties(listDef, items)))\n    }\n    else if (listDef.listType.place) {\n      return this.pipeListPlace(listDef, fkEntity, limit)\n        .pipe(map((items) => this.getEntityProperties(listDef, items)))\n    }\n    else if (listDef.listType.dimension) {\n      return this.pipeListDimension(listDef, fkEntity, limit)\n        .pipe(map((items) => this.getEntityProperties(listDef, items)))\n    }\n    else if (listDef.listType.langString) {\n      return this.pipeListLangString(listDef, fkEntity, limit)\n        .pipe(map((items) => this.getEntityProperties(listDef, items)))\n    }\n\n\n    else if (listDef.listType.entityPreview || listDef.listType.temporalEntity) {\n      return this.pipeListEntityPreview(listDef, fkEntity, limit)\n        .pipe(map((items) => this.getEntityProperties(listDef, items)))\n    }\n    else if (listDef.listType.timeSpan) {\n      return this.pipeItemTimeSpan(fkEntity)\n        .pipe(map((item) => {\n          const items = item.properties.find(p => p.items.length > 0) ? [{\n            label: this.timeSpanPipe.transform(timeSpanItemToTimeSpan(item)),\n            properties: [] // TODO check if the properties or the item are really not needed\n          }] : []\n          return {\n            listDefinition: listDef,\n            items\n          }\n        }))\n    }\n    else return of(null)\n  }\n\n  @spyTag pipeTemporalEntityRemoveProperties(pkEntity: number): Observable<TemporalEntityRemoveProperties> {\n    return combineLatest(\n      this.s.inf$.temporal_entity$.by_pk_entity_key$(pkEntity),\n      this.s.inf$.statement$.by_subject$({ fk_subject_info: pkEntity }),\n      this.s.inf$.text_property$.by_fk_concerned_entity_indexed$(pkEntity)\n    ).pipe(\n      map(([temporalEntity, statements, textProperties]) => {\n        const res: TemporalEntityRemoveProperties = {\n          temporalEntity,\n          statements: statements,\n          textProperties: values(textProperties)\n        }\n        return res\n      })\n    )\n  }\n\n  getEntityProperties(listDefinition: Subfield, items): EntityProperties {\n    return {\n      listDefinition,\n      items,\n    }\n  }\n\n  /**\n   * Pipe time span item in version of project\n   */\n  @spyTag pipeItemTimeSpan(pkEntity): Observable<TimeSpanItem> {\n\n    return this.p.pkProject$.pipe(\n      switchMap(pkProject => {\n        return this.c.pipeSpecificFieldOfClass(\n          DfhConfig.ClASS_PK_TIME_SPAN\n        ).pipe(\n          switchMap(fieldDefs => {\n            return combineLatest(fieldDefs.map(fieldDef => this.s.inf$.statement$.by_subject_and_property$({\n              fk_property: fieldDef.property.pkProperty,\n              fk_subject_info: pkEntity\n            })\n              .pipe(\n                switchMapOr([], statements => combineLatest(\n                  statements.map(statement => combineLatest(\n                    this.s.inf$.time_primitive$.by_pk_entity$.key(statement.fk_object_info).pipe(filter(x => !!x)),\n                    this.s.pro$.info_proj_rel$.by_fk_project__fk_entity$.key(pkProject + '_' + statement.pk_entity)\n                  ).pipe(map(([infTimePrimitive, projRel]) => {\n                    const timePrimitive = new TimePrimitive({\n                      julianDay: infTimePrimitive.julian_day,\n                      calendar: ((projRel.calendar || 'gregorian') as CalendarType),\n                      duration: (infTimePrimitive.duration as Granularity)\n                    })\n                    const item: TimePrimitiveItem = {\n                      statement,\n                      ordNum: undefined,\n                      projRel,\n                      timePrimitive,\n                      label: this.timePrimitivePipe.transform(timePrimitive),\n                      fkClass: infTimePrimitive.fk_class\n                    }\n                    return item;\n                  }))\n                  )\n                )),\n                map(items => {\n                  const res: TimeSpanProperty = {\n                    listDefinition: fieldDef.listDefinitions[0], items\n                  }\n                  return res\n                })\n              )\n            )).pipe(\n              map((properties) => {\n                const props = properties.filter(p => p.items.length > 0);\n                const timespanitem: TimeSpanItem = {\n                  label: '',\n                  properties: props\n                }\n                return timespanitem\n              })\n            )\n          })\n        )\n      })\n\n    )\n  }\n\n  @spyTag pipeItemAppellation(statement: InfStatement): Observable<AppellationItem> {\n    return this.s.inf$.appellation$.by_pk_entity$.key(statement.fk_object_info).pipe(\n      filter(x => !!x),\n      map(appellation => {\n        if (!appellation) return null;\n        const node: AppellationItem = {\n          ordNum: undefined,\n          projRel: undefined,\n          statement,\n          label: appellation.string,\n          fkClass: appellation.fk_class\n        }\n        return node\n      }))\n  }\n\n  @spyTag pipeItemLanguage(statement: InfStatement): Observable<LanguageItem> {\n    return this.s.inf$.language$.by_pk_entity$.key(statement.fk_object_info).pipe(\n      filter(x => !!x),\n      map(language => {\n        if (!language) return null;\n        const node: LanguageItem = {\n          ordNum: undefined,\n          projRel: undefined,\n          statement,\n          label: language.notes,\n          fkClass: language.fk_class\n        }\n        return node\n      }))\n  }\n\n  @spyTag pipeItemPlace(statement: InfStatement): Observable<PlaceItem> {\n    return this.s.inf$.place$.by_pk_entity$.key(statement.fk_object_info).pipe(\n      filter(x => !!x),\n      map(place => {\n        if (!place) return null;\n        const node: PlaceItem = {\n          ordNum: undefined,\n          projRel: undefined,\n          statement,\n          label: 'WGS84: ' + place.lat + 'Â°, ' + place.long + 'Â°',\n          fkClass: place.fk_class\n        }\n        return node\n      }))\n  }\n\n  @spyTag pipeItemDimension(statement: InfStatement): Observable<DimensionItem> {\n    return this.s.inf$.dimension$.by_pk_entity$.key(statement.fk_object_info).pipe(\n      filter(x => !!x),\n      switchMap((dimension) => {\n        return this.p.streamEntityPreview(dimension.fk_measurement_unit)\n          .pipe(\n            map(preview => {\n\n              const node: DimensionItem = {\n                ordNum: undefined,\n                projRel: undefined,\n                statement,\n                label: `${dimension.numeric_value} ${preview.entity_label}`,\n                fkClass: dimension.fk_class,\n              }\n              return node\n            })\n          )\n      })\n    )\n  }\n\n\n  @spyTag pipeItemLangString(statement: InfStatement): Observable<LangStringItem> {\n    return this.s.inf$.lang_string$.by_pk_entity$.key(statement.fk_object_info).pipe(\n      switchMap(\n        (langString) => {\n          if (!langString) return new BehaviorSubject(null)\n          return this.s.inf$.language$.by_pk_entity$.key(langString.fk_language)\n            .pipe(\n              map(language => {\n                if (!language) return null;\n                let label = '';\n                if (langString.string) label = langString.string\n                else if (langString.quill_doc && langString.quill_doc.ops && langString.quill_doc.ops.length) {\n                  label = langString.quill_doc.ops.map(op => op.insert).join('');\n                }\n                const node: LangStringItem = {\n                  ordNum: undefined,\n                  projRel: undefined,\n                  statement,\n                  label,\n                  fkClass: langString.fk_class,\n                  language,\n                  fkLanguage: langString.fk_language\n                }\n                return node\n              })\n            )\n        })\n    )\n  }\n\n\n  @spyTag pipeItemEntityPreview(statement: InfStatement, isOutgoing: boolean): Observable<EntityPreviewItem> {\n    return this.p.streamEntityPreview((isOutgoing ? statement.fk_object_info : statement.fk_subject_info)).pipe(\n      // filter(preview => !preview.loading && !!preview && !!preview.entity_type),\n      map(preview => {\n        if (!preview) {\n          return null;\n        }\n        const node: EntityPreviewItem = {\n          ordNum: undefined,\n          projRel: undefined,\n          statement,\n          preview,\n          label: preview.entity_label || '',\n          fkClass: preview.fk_class\n        }\n        return node\n      }))\n  }\n\n  /**\n   * @param pk\n   */\n  @spyTag pipeItemTimePrimitive(statement: InfStatement, pkProject): Observable<TimePrimitiveItem> {\n    if (pkProject) {\n      return combineLatest(\n        this.s.inf$.time_primitive$.by_pk_entity$.key(statement.fk_object_info).pipe(filter(x => !!x)),\n        this.s.pro$.info_proj_rel$.by_fk_project__fk_entity$.key(pkProject + '_' + statement.pk_entity).pipe(filter(x => !!x))\n      ).pipe(\n        map(([infTimePrimitive, projRel]) => {\n          if (!infTimePrimitive) return null;\n          const timePrimitive = new TimePrimitive({\n            julianDay: infTimePrimitive.julian_day,\n            calendar: ((projRel.calendar || 'gregorian') as CalendarType),\n            duration: (infTimePrimitive.duration as Granularity)\n          })\n          const node: TimePrimitiveItem = {\n            ordNum: undefined,\n            projRel: undefined,\n            statement,\n            timePrimitive,\n            label: this.timePrimitivePipe.transform(timePrimitive),\n            fkClass: infTimePrimitive.fk_class\n          }\n          return node\n        }))\n    } else {\n      return this.infRepo.time_primitive$.by_pk_entity$.key(statement.fk_object_info).pipe(filter(x => !!x)).pipe(\n        map(infTimePrimitive => {\n          const timePrimitive = new TimePrimitive({\n            julianDay: infTimePrimitive.julian_day,\n            calendar: ((statement.community_favorite_calendar || 'gregorian') as CalendarType),\n            duration: (infTimePrimitive.duration as Granularity)\n          })\n          const node: TimePrimitiveItem = {\n            ordNum: undefined,\n            projRel: undefined,\n            statement,\n            timePrimitive,\n            label: this.timePrimitivePipe.transform(timePrimitive),\n            fkClass: infTimePrimitive.fk_class\n          }\n          return node\n        })\n      )\n    }\n  }\n\n\n  /*********************************************************************\n  * Pipe alternatives (not in project)\n  *********************************************************************/\n  @spyTag pipeAltListLength(l: Subfield, pkEntity: number): Observable<number> {\n    switch (l.listType) {\n      case 'appellation':\n      case 'entity-preview':\n      case 'language':\n      case 'place':\n      case 'langString':\n      case 'temporal-entity':\n      case 'time-span':\n        return this.pipeAltListStatements(l, pkEntity).pipe(map(items => items.length))\n\n      default:\n        console.warn('unsupported listType')\n        break;\n    }\n  }\n\n  @spyTag pipeAltList(l: Subfield, pkEntity): Observable<ItemList> {\n    if (l.listType.appellation) return this.pipeAltListAppellation(l, pkEntity)\n    else if (l.listType.entityPreview) return this.pipeAltListEntityPreview(l, pkEntity)\n    else if (l.listType.language) return this.pipeAltListLanguage(l, pkEntity)\n    else if (l.listType.place) return this.pipeAltListPlace(l, pkEntity)\n    else if (l.listType.dimension) return this.pipeAltListDimension(l, pkEntity)\n    else if (l.listType.langString) return this.pipeAltListLangString(l, pkEntity)\n    else if (l.listType.temporalEntity) return this.pipeAltListEntityPreview(l, pkEntity)\n    else console.warn('unsupported listType')\n  }\n\n  @spyTag pipeAltListStatements(listDefinition: Subfield, pkEntity: number): Observable<InfStatement[]> {\n    return (listDefinition.isOutgoing ?\n      this.b.pipeAlternativeIngoingStatements(listDefinition.property.pkProperty, pkEntity) :\n      this.b.pipeAlternativeIngoingStatements(listDefinition.property.pkProperty, pkEntity)\n    )\n  }\n\n  /**\n  * Pipe the items in entity preview field\n  */\n  @spyTag pipeAltListEntityPreview<T>(listDefinition: Subfield, pkEntity): Observable<EntityPreviewItem[]> {\n\n    return (listDefinition.isOutgoing ?\n      this.b.pipeAlternativeOutgoingStatements(listDefinition.property.pkProperty, pkEntity) :\n      this.b.pipeAlternativeIngoingStatements(listDefinition.property.pkProperty, pkEntity)\n    ).pipe(\n      switchMap((statements) => {\n        return combineLatest(statements.map((r, i) => this.pipeItemEntityPreview(r, listDefinition.isOutgoing)))\n          .pipe(\n            map(nodes => nodes\n              .filter(node => !!node)\n              .sort((a, b) => a.ordNum > b.ordNum ? 1 : -1)\n            ),\n            startWith([]))\n      }))\n\n  }\n\n  /**\n   * Pipe the alternative items in place list\n   */\n  @spyTag pipeAltListPlace<T>(listDefinition: Subfield, pkEntity): Observable<PlaceItem[]> {\n\n    if (listDefinition.isOutgoing) {\n      return this.b.pipeAlternativeOutgoingStatements(listDefinition.property.pkProperty, pkEntity).pipe(\n        switchMap((statements) => {\n          return combineLatest(statements.map((r, i) => this.pipeItemPlace(r)))\n            .pipe(\n              map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)),\n              startWith([]))\n        }))\n    }\n  }\n\n\n  /**\n   * Pipe the alternative items in dimension list\n   */\n  @spyTag pipeAltListDimension<T>(listDefinition: Subfield, pkEntity): Observable<DimensionItem[]> {\n\n    if (listDefinition.isOutgoing) {\n      return this.b.pipeAlternativeOutgoingStatements(listDefinition.property.pkProperty, pkEntity).pipe(\n        switchMap((statements) => {\n          return combineLatest(statements.map((r, i) => this.pipeItemDimension(r)))\n            .pipe(\n              map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)),\n              startWith([]))\n        }))\n    }\n  }\n\n\n  /**\n   * Pipe the alternative items in langString list\n   */\n  @spyTag pipeAltListLangString<T>(listDefinition: Subfield, pkEntity): Observable<LangStringItem[]> {\n\n    if (listDefinition.isOutgoing) {\n      return this.b.pipeAlternativeOutgoingStatements(listDefinition.property.pkProperty, pkEntity).pipe(\n        switchMap((statements) => {\n          return combineLatest(statements.map((r, i) => this.pipeItemLangString(r)))\n            .pipe(\n              map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)),\n              startWith([]))\n        }))\n    }\n  }\n\n  /**\n   * Pipe the alternative items in appellation field\n   */\n  @spyTag pipeAltListAppellation<T>(listDefinition: Subfield, pkEntity): Observable<AppellationItem[]> {\n\n    if (listDefinition.isOutgoing) {\n      return this.b.pipeAlternativeOutgoingStatements(listDefinition.property.pkProperty, pkEntity).pipe(\n        switchMap((statements) => {\n          return combineLatest(statements.map((r, i) => this.pipeItemAppellation(r)))\n            .pipe(\n              map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)),\n              startWith([]))\n        }))\n    }\n  }\n\n  /**\n   * Pipe the alternative items in language field\n   */\n  @spyTag pipeAltListLanguage<T>(listDefinition: Subfield, pkEntity): Observable<LanguageItem[]> {\n\n    if (listDefinition.isOutgoing) {\n      return this.b.pipeAlternativeOutgoingStatements(listDefinition.property.pkProperty, pkEntity).pipe(\n        switchMap((statements) => {\n          return combineLatest(statements.map((r, i) => this.pipeItemLanguage(r)))\n            .pipe(\n              map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)),\n              startWith([]))\n        }))\n    }\n  }\n\n  /*********************************************************************\n   * Pipe repo views (community favorites, where restricted by quantifiers)\n   *********************************************************************/\n\n  /**\n   * Pipe repository temporal entity item in the way it is defined by the repository\n   */\n\n\n  /**\n   * Pipe appellation list in the way it is defined by the repository\n   */\n  @spyTag pipeRepoListAppellation<T>(listDefinition: Subfield, pkEntity): Observable<AppellationItem[]> {\n\n    if (listDefinition.isOutgoing) {\n      return this.b.pipeRepoOutgoingStatementsByProperty(listDefinition.property.pkProperty, pkEntity).pipe(\n        switchMap((statements) => {\n          return combineLatest(statements.map((r, i) => this.pipeItemAppellation(r)))\n            .pipe(\n              map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)),\n              startWith([]))\n        }))\n    }\n  }\n\n  /**\n  * Pipe language list in the way it is defined by the repository\n  */\n  @spyTag pipeRepoListLanguage<T>(listDefinition: Subfield, pkEntity): Observable<LanguageItem[]> {\n\n    if (listDefinition.isOutgoing) {\n      return this.b.pipeRepoOutgoingStatementsByProperty(listDefinition.property.pkProperty, pkEntity).pipe(\n        switchMap((statements) => {\n          return combineLatest(statements.map((r, i) => this.pipeItemLanguage(r)))\n            .pipe(\n              map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)),\n              startWith([]))\n        }))\n    }\n  }\n\n  /**\n   * Pipe place list in the way it is defined by the repository\n   */\n  @spyTag pipeRepoListPlace<T>(listDefinition: Subfield, pkEntity): Observable<PlaceItem[]> {\n\n    if (listDefinition.isOutgoing) {\n      return this.b.pipeRepoOutgoingStatementsByProperty(listDefinition.property.pkProperty, pkEntity).pipe(\n        switchMap((statements) => {\n          return combineLatest(statements.map((r, i) => this.pipeItemPlace(r)))\n            .pipe(\n              map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)),\n              startWith([]))\n        }))\n    }\n  }\n\n  /**\n  * Pipe place list in the way it is defined by the repository\n  */\n  @spyTag pipeRepoListDimension<T>(listDefinition: Subfield, pkEntity): Observable<DimensionItem[]> {\n\n    if (listDefinition.isOutgoing) {\n      return this.b.pipeRepoOutgoingStatementsByProperty(listDefinition.property.pkProperty, pkEntity).pipe(\n        switchMap((statements) => {\n          return combineLatest(statements.map((r, i) => this.pipeItemDimension(r)))\n            .pipe(\n              map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)),\n              startWith([]))\n        }))\n    }\n  }\n  /**\n  * Pipe the items in entity preview field, connected by community favorite statements\n  */\n  @spyTag pipeRepoListEntityPreview<T>(listDefinition: Subfield, pkEntity): Observable<EntityPreviewItem[]> {\n\n    return (listDefinition.isOutgoing ?\n      this.b.pipeRepoOutgoingStatementsByProperty(listDefinition.property.pkProperty, pkEntity) :\n      this.b.pipeRepoIngoingStatementsByProperty(listDefinition.property.pkProperty, pkEntity)\n    ).pipe(\n      switchMap((statements) => {\n        return combineLatest(statements.map((r, i) => this.pipeItemEntityPreview(r, listDefinition.isOutgoing)))\n          .pipe(\n            map(nodes => nodes.filter(node => !!node && node.fkClass === listDefinition.targetClass)\n              // .sort((a, b) => a.ordNum > b.ordNum ? 1 : -1)\n            ))\n      }),\n      startWith([])\n    )\n\n  }\n\n\n  /**\n   * Pipe repo time span item\n   */\n  @spyTag pipeRepoItemTimeSpan(pkEntity): Observable<TimeSpanItem> {\n    return this.p.pkProject$.pipe(\n      switchMap(pkProject => {\n        return this.c.pipeBasicAndSpecificFields(\n          DfhConfig.ClASS_PK_TIME_SPAN\n        ).pipe(\n          switchMap(fieldDefinitions => {\n\n            return combineLatest(fieldDefinitions.map(fieldDef =>\n              this.b.pipeRepoOutgoingStatementsByProperty(fieldDef.property.pkProperty, pkEntity)\n                .pipe(\n                  switchMapOr([], statements => combineLatest(\n                    statements.map(statement =>\n                      this.infRepo.time_primitive$.by_pk_entity$.key(statement.fk_object_info)\n                        .pipe(map((infTimePrimitive) => {\n                          const timePrimitive = new TimePrimitive({\n                            julianDay: infTimePrimitive.julian_day,\n                            calendar: ((statement.community_favorite_calendar || 'gregorian') as CalendarType),\n                            duration: (infTimePrimitive.duration as Granularity)\n                          })\n                          const item: TimePrimitiveItem = {\n                            statement,\n                            ordNum: undefined,\n                            projRel: undefined,\n                            timePrimitive,\n                            label: this.timePrimitivePipe.transform(timePrimitive),\n                            fkClass: infTimePrimitive.fk_class\n                          }\n                          return item;\n                        }))\n                    )\n                  )),\n                  map(items => {\n                    const res: TimeSpanProperty = {\n                      listDefinition: fieldDef.listDefinitions[0], items\n                    }\n                    return res\n                  }),\n                  startWith({ listDefinition: fieldDef.listDefinitions[0], items: [] } as TimeSpanProperty)\n                )\n            )).pipe(\n              map((properties) => {\n                const timespanitem: TimeSpanItem = {\n                  label: '',\n                  properties: properties.filter(props => props.items.length > 0)\n                }\n                return timespanitem\n              })\n            )\n          })\n        )\n      })\n\n    )\n  }\n\n\n  /**\n   * Pipes the label of given entity\n   * This will use entity previews for getting strings of related temporal entities\n   * So this may take a little while\n   */\n  @spyTag pipeLabelOfEntity(fkEntity: number): Observable<string> {\n    return this.b.pipeClassOfEntity(fkEntity).pipe(\n\n      // get the definition of the first field\n      switchMap(fkClass => this.c.pipeBasicAndSpecificFields(fkClass).pipe(\n        // get the first item of that field\n        switchMap(fieldDef => combineLatestOrEmpty(\n          fieldDef && fieldDef.length ?\n            fieldDef[0].listDefinitions.map(listDef => this.pipeEntityProperties(listDef, fkEntity, 1)) :\n            []\n        ).pipe(\n          map(props => {\n            props = props.filter(prop => prop.items.length > 0)\n            if (props.length && props[0].items.length) {\n              return props[0].items[0].label\n            }\n            return ''\n          })\n        )))\n      ))\n  }\n\n\n  /**\n   * Pipes the class label of given entity\n   */\n  @spyTag pipeClassLabelOfEntity(fkEntity: number): Observable<string> {\n    return this.b.pipeClassOfEntity(fkEntity).pipe(\n      switchMap(pkClass => this.c.pipeClassLabel(pkClass))\n    )\n  }\n\n  /**\n   * Pipes the pk_entity of the type of an entity\n   */\n  @spyTag pipeTypeOfEntity(pkEntity: number, hasTypeProperty: number, isOutgoing: boolean): Observable<InfStatement> {\n    if (isOutgoing) {\n      return this.s.inf$.statement$.by_subject_and_property_indexed$({ fk_property: hasTypeProperty, fk_subject_info: pkEntity }).pipe(map(items => {\n        if (!items || Object.keys(items).length < 1) return undefined;\n        else return values(items)[0]\n      })\n      )\n    }\n    else {\n      return this.s.inf$.statement$.by_object_and_property_indexed$({ fk_property: hasTypeProperty, fk_object_info: pkEntity }).pipe(\n        map(items => {\n          if (!items || Object.keys(items).length < 1) return undefined;\n          else return values(items)[0]\n        })\n      )\n    }\n  }\n\n  @spyTag\n  @cache({ refCount: false })\n  pipeClassesAndTypes(enabledIn: 'entities' | 'sources') {\n    return this.c.pipeTypeAndTypedClasses(enabledIn).pipe(\n      switchMap(items => this.pipeClassAndTypeNodes(items)),\n    )\n  }\n\n  @spyTag\n  @cache({ refCount: false })\n  pipeClassesAndTypesOfClasses(classes: number[]) {\n    return this.c.pipeTypeAndTypedClassesOfTypedClasses(classes).pipe(\n      switchMap(items => this.pipeClassAndTypeNodes(items)),\n    )\n  }\n\n  @spyTag\n  @cache({ refCount: false })\n  pipeClassAndTypeNodes(typeAndTypedClasses: { typedClass: number; typeClass: number; }[]): Observable<ClassAndTypeNode[]> {\n    return combineLatestOrEmpty(\n      typeAndTypedClasses.map(item => this.c.pipeClassLabel(item.typedClass).pipe(\n        map(label => ({\n          label,\n          data: { pkClass: item.typedClass, pkType: null }\n        } as ClassAndTypeNode)),\n        switchMap(node => iif(\n          () => !!item.typeClass,\n          this.b.pipePersistentItemPksByClass(item.typeClass).pipe(\n            switchMap(typePks => combineLatestOrEmpty(\n              typePks.map(pkType => this.p.streamEntityPreview(pkType).pipe(\n                map(preview => ({\n                  label: preview.entity_label,\n                  data: { pkClass: item.typedClass, pkType }\n                } as ClassAndTypeNode))\n              ))\n            ).pipe(\n              sortAbc(n => n.label),\n            )),\n            map(children => {\n              node.children = children\n              return node\n            })\n          ),\n          of({ ...node, children: [] } as ClassAndTypeNode)\n        )\n        )\n      ))\n    ).pipe(\n      sortAbc((node) => node.label),\n    )\n  }\n\n  /**\n   * returns array of pk_class of all classes and typed classes.\n   * @param classesAndTypes a object containing {classes: [], types[]}\n   */\n  pipeClassesFromClassesAndTypes(classesAndTypes: ClassAndTypeSelectModel): Observable<number[]> {\n    const typedClasses$ = (!classesAndTypes || !classesAndTypes.types || !classesAndTypes.types.length) ?\n      of([] as number[]) :\n      this.b.pipeClassesOfPersistentItems(classesAndTypes.types)\n        .pipe(\n          filter((pks) => !!pks),\n          switchMap(typeClasses => this.c.pipeTypedClassesOfTypeClasses(typeClasses))\n        )\n    return typedClasses$.pipe(\n      map(typedClasses => uniq([...typedClasses, ...((classesAndTypes || { classes: [] }).classes || [])]))\n    );\n  }\n\n  pipePropertyOptionsFromClassesAndTypes(classesAndTypes: ClassAndTypeSelectModel): Observable<PropertyOption[]> {\n    return this.pipeClassesFromClassesAndTypes(classesAndTypes).pipe(\n      switchMap(classes => this.pipePropertyOptionsFormClasses(classes))\n    )\n  }\n\n  @cache({ refCount: false })\n  pipePropertyOptionsFormClasses(classes: number[]): Observable<PropertyOption[]> {\n    return combineLatestOrEmpty(classes.map(pkClass => this.s.dfh$.class$.by_pk_class$.key(pkClass).pipe(\n      map(c => c.basic_type === 9),\n      switchMap(isTeEn => this.c.pipeSpecificAndBasicFields(pkClass)\n        .pipe(\n          map(classFields => classFields\n            .filter(f => !!f.property.pkProperty)\n            .map(f => ({\n              isOutgoing: f.isOutgoing,\n              fkPropertyDomain: f.isOutgoing ? f.sourceClass : null,\n              fkPropertyRange: f.isOutgoing ? null : f.sourceClass,\n              pkProperty: f.property.pkProperty\n            }))),\n          switchMap(items => {\n            if (isTeEn) {\n              // add time properties (at some time within, ...)\n              DfhConfig.PROPERTY_PKS_WHERE_TIME_PRIMITIVE_IS_RANGE.map(pkProperty => {\n                items.push({\n                  pkProperty,\n                  fkPropertyDomain: pkClass,\n                  fkPropertyRange: DfhConfig.CLASS_PK_TIME_PRIMITIVE,\n                  isOutgoing: true\n                })\n              })\n            }\n\n            return combineLatestOrEmpty(items.map(item => this.c.pipeFieldLabel(\n              item.pkProperty,\n              item.fkPropertyDomain,\n              item.fkPropertyRange,\n            ).pipe(map(label => {\n              const isOutgoing = item.isOutgoing;\n              const o: PropertyOption = {\n                isOutgoing,\n                label,\n                pk: item.pkProperty,\n                propertyFieldKey: propertyOptionFieldKey(item.pkProperty, isOutgoing)\n              };\n              return o;\n            }))));\n          })))\n    )\n\n\n    )).pipe(map(y => flatten<PropertyOption>(y)));\n  }\n\n  @cache({ refCount: false })\n  pipePkClassesFromPropertySelectModel(model: PropertySelectModel): Observable<number[]> {\n    return combineLatestOrEmpty(\n      [\n        this.c.pipeTargetClassesOfProperties(model.outgoingProperties, true),\n        this.c.pipeTargetClassesOfProperties(model.ingoingProperties, false),\n      ]\n    ).pipe(\n      map(([out, ing]) => uniq([...out, ...ing]))\n    )\n  }\n\n  getPkClassesFromPropertySelectModel$(model$: Observable<PropertySelectModel>): Observable<number[]> {\n    return model$.pipe(\n      switchMap(model => combineLatestOrEmpty(\n        [\n          this.c.pipeTargetClassesOfProperties(model.outgoingProperties, true),\n          this.c.pipeTargetClassesOfProperties(model.ingoingProperties, false),\n        ]\n      ).pipe(\n        map(([out, ing]) => uniq([...out, ...ing]))\n      ))\n    )\n  }\n\n\n\n  getPropertyOptions$(classTypes$: Observable<ClassAndTypeSelectModel>): Observable<PropertyOption[]> {\n    return classTypes$.pipe<ClassAndTypeSelectModel, PropertyOption[]>(\n      // make sure only it passes only if data of the arrayClasses are changed (not children)\n      distinctUntilChanged<ClassAndTypeSelectModel>((a, b) => {\n        return equals(a, b);\n      }),\n      switchMap((x) => !x ? empty() : this.b.pipeClassesOfPersistentItems(x.types)\n        .pipe(\n          filter((pks) => !!pks),\n          switchMap(typeClasses => this.c.pipeTypedClassesOfTypeClasses(typeClasses).pipe(\n            switchMap(typedClasses => {\n              const classes = uniq([...typedClasses, ...(x.classes || [])]);\n              return this.pipePropertyOptionsFormClasses(classes)\n            }))\n          )\n        )\n      )\n    );\n  }\n\n}\n\nexport function propertyOptionFieldKey(fkProperty: number, isOutgoing: boolean): string {\n  return '_' + fkProperty + '_' + (isOutgoing ? 'outgoing' : 'ingoing');\n}\n\n","import { TimeSpanItem } from '../models/TimeSpanItem';\nimport { TimeSpanUtil } from '@kleiolab/lib-utils';\nimport { DfhConfig } from '@kleiolab/lib-config';\n\nexport function timeSpanItemToTimeSpan(timeSpanItem: TimeSpanItem): TimeSpanUtil {\n  const t = new TimeSpanUtil();\n\n  timeSpanItem.properties.forEach(p => {\n    const key = DfhConfig.PROPERTY_PK_TO_EXISTENCE_TIME_KEY[p.listDefinition.property.pkProperty]\n    if (p.items && p.items.length) t[key] = p.items[0].timePrimitive\n  })\n  return t;\n}\n"]}