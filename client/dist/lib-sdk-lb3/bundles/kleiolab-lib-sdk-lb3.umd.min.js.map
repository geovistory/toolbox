{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@kleiolab/lib-sdk-lb3/storage/storage.swaps.ts","ng://@kleiolab/lib-sdk-lb3/models/BaseModels.ts","ng://@kleiolab/lib-sdk-lb3/services/core/auth.service.ts","ng://@kleiolab/lib-sdk-lb3/services/core/error.service.ts","ng://@kleiolab/lib-sdk-lb3/services/core/io.service.ts","ng://@kleiolab/lib-sdk-lb3/models/SchemaObject.ts","ng://@kleiolab/lib-sdk-lb3/models/SysClassFieldPropertyRel.ts","ng://@kleiolab/lib-sdk-lb3/models/SysClassField.ts","ng://@kleiolab/lib-sdk-lb3/models/SysClassHasTypeProperty.ts","ng://@kleiolab/lib-sdk-lb3/models/SysSystemRelevantClass.ts","ng://@kleiolab/lib-sdk-lb3/models/PubAccount.ts","ng://@kleiolab/lib-sdk-lb3/models/Email.ts","ng://@kleiolab/lib-sdk-lb3/models/ProProject.ts","ng://@kleiolab/lib-sdk-lb3/models/PubAccountProjectRel.ts","ng://@kleiolab/lib-sdk-lb3/models/ProTextProperty.ts","ng://@kleiolab/lib-sdk-lb3/models/ProInfoProjRel.ts","ng://@kleiolab/lib-sdk-lb3/models/DfhProfile.ts","ng://@kleiolab/lib-sdk-lb3/models/DfhLabel.ts","ng://@kleiolab/lib-sdk-lb3/models/DatChunk.ts","ng://@kleiolab/lib-sdk-lb3/models/DatColumn.ts","ng://@kleiolab/lib-sdk-lb3/models/DatTextProperty.ts","ng://@kleiolab/lib-sdk-lb3/models/DatDigital.ts","ng://@kleiolab/lib-sdk-lb3/models/SysAppContext.ts","ng://@kleiolab/lib-sdk-lb3/models/ProClassFieldConfig.ts","ng://@kleiolab/lib-sdk-lb3/models/ProDfhClassProjRel.ts","ng://@kleiolab/lib-sdk-lb3/models/ProDfhProfileProjRel.ts","ng://@kleiolab/lib-sdk-lb3/models/InfAppellation.ts","ng://@kleiolab/lib-sdk-lb3/models/InfLangString.ts","ng://@kleiolab/lib-sdk-lb3/models/InfDimension.ts","ng://@kleiolab/lib-sdk-lb3/models/InfTemporalEntity.ts","ng://@kleiolab/lib-sdk-lb3/models/InfStatement.ts","ng://@kleiolab/lib-sdk-lb3/models/InfLanguage.ts","ng://@kleiolab/lib-sdk-lb3/models/InfPersistentItem.ts","ng://@kleiolab/lib-sdk-lb3/models/InfTimePrimitive.ts","ng://@kleiolab/lib-sdk-lb3/models/InfPlace.ts","ng://@kleiolab/lib-sdk-lb3/models/DatNamespace.ts","ng://@kleiolab/lib-sdk-lb3/models/InfTextProperty.ts","ng://@kleiolab/lib-sdk-lb3/models/SysSystemType.ts","ng://@kleiolab/lib-sdk-lb3/models/FireLoopRef.ts","ng://@kleiolab/lib-sdk-lb3/models/FireLoop.ts","ng://@kleiolab/lib-sdk-lb3/sockets/socket.driver.ts","ng://@kleiolab/lib-sdk-lb3/lb.config.ts","ng://@kleiolab/lib-sdk-lb3/sockets/socket.connections.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/SDKModels.ts","ng://@kleiolab/lib-sdk-lb3/services/core/real.time.ts","ng://@kleiolab/lib-sdk-lb3/services/core/base.service.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/DatChunk.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/DatColumn.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/DatDigital.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/DatNamespace.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/DatTextProperty.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/DfhLabel.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/DfhProfile.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/Email.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfAppellation.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfDimension.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfLangString.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfLanguage.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfPersistentItem.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfPlace.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfStatement.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfTemporalEntity.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfTextProperty.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfTimePrimitive.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/logger.service.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/ProClassFieldConfig.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/ProDfhClassProjRel.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/ProDfhProfileProjRel.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/ProInfoProjRel.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/ProProject.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/ProTextProperty.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/PubAccount.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/PubAccountProjectRel.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/SchemaObject.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/SysAppContext.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/SysClassField.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/SysClassFieldPropertyRel.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/SysClassHasTypeProperty.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/SysSystemRelevantClass.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/SysSystemType.ts","ng://@kleiolab/lib-sdk-lb3/sockets/socket.browser.ts","ng://@kleiolab/lib-sdk-lb3/storage/cookie.browser.ts","ng://@kleiolab/lib-sdk-lb3/storage/storage.browser.ts","ng://@kleiolab/lib-sdk-lb3/index.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","BaseStorage","get","set","value","expires","remove","InternalStorage","_super","tslib_1.__extends","SDKStorage","AccessToken","data","assign","getModelName","factory","getModelDefinition","name","plural","properties","id","type","ttl","default","scopes","created","userId","relations","user","model","rememberMe","LoopBackAuth","storage","token","SDKToken","prefix","load","setRememberMe","setUser","save","setToken","getToken","getAccessTokenId","getCurrentUserId","getCurrentUserData","JSON","parse","today","Date","getTime","persist","prop","clear","_this","keys","forEach","stringify","err","console","error","Inject","args","Injectable","tslib_1.__param","ErrorHandler","handleError","errorResponse","throwError","IO","socket","observables","emit","event","on","subject","Subject","res","next","asObservable","SchemaObject","path","idName","inf","pro","dat","sys","dfh","SysClassFieldPropertyRel","pk_entity","fk_class_field","fk_property","property_is_outgoing","ord_num","class_field","relationType","keyFrom","keyTo","property","SysClassField","description","label","fk_system_type_ng_component","used_table","class_field_property_rel","class_field_configs","classes","modelThrough","keyThrough","SysClassHasTypeProperty","pk_typed_class","typed_class_label","dfh_pk_property","property_label","pk_type_class","type_class_label","SysSystemRelevantClass","fk_class","required_by_entities","required_by_sources","required_by_basics","excluded_from_entities","PubAccount","realm","username","email","emailVerified","accessTokens","projects","Email","to","from","text","html","ProProject","fk_language","accounts","text_properties","entity_version_project_rels","default_language","persistent_items","namespaces","PubAccountProjectRel","role","fk_project","account_id","account","project","ProTextProperty","string","fk_system_type","fk_dfh_class","fk_dfh_property","fk_dfh_property_domain","fk_dfh_property_range","fk_pro_project","entity_version","tmsp_creation","tmsp_last_modification","language","systemType","ProInfoProjRel","fk_entity","fk_entity_version","fk_entity_version_concat","is_in_project","is_standard_in_project","calendar","ord_num_of_domain","ord_num_of_range","ord_num_of_text_property","fk_creator","fk_last_modifier","DfhProfile","pk_profile","owned_by_project","is_ongoing_forced_publication","date_profile_published","date_profile_deprecated","tmsp_last_dfh_update","DfhLabel","fk_profile","DatChunk","quill_doc","fk_text","fk_namespace","digital","outgoing_statements","namespace","DatColumn","fk_digital","fk_data_type","fk_column_content_type","fk_column_relationship_type","fk_original_column","is_imported","DatTextProperty","DatDigital","pk_text","SysAppContext","ProClassFieldConfig","fk_domain_class","fk_range_class","fk_class_for_class_field","ProDfhClassProjRel","enabled_in_entities","ProDfhProfileProjRel","enabled","InfAppellation","incoming_statements","InfLangString","InfDimension","fk_measurement_unit","numeric_value","measurement_unit","InfTemporalEntity","InfStatement","fk_subject_info","fk_subject_data","fk_subject_tables_cell","fk_subject_tables_row","fk_property_of_property","fk_object_info","fk_object_data","fk_object_tables_cell","fk_object_tables_row","is_in_project_count","is_standard_in_project_count","community_favorite_calendar","subject_temporal_entity","subject_digital","subject_chunk","subject_statement","object_temporal_entity","object_appellation","object_lang_string","object_chunk","object_dimension","object_language","subject_persistent_item","object_persistent_item","object_time_primitive","object_place","InfLanguage","pk_language","lang_type","scope","iso6392b","iso6392t","iso6391","notes","InfPersistentItem","dfh_class","InfTimePrimitive","julian_day","duration","InfPlace","long","lat","DatNamespace","fk_root_namespace","standard_label","InfTextProperty","fk_concerned_entity","persistent_item","temporal_entity","SysSystemType","definition","st_schema_name","st_table_name","st_column_name","st_group","FireLoopRef","parent","relationship","buildId","childs","disposable","dispose","subscription","operation","subscribe","channel","removeListener","removeAllListeners","unsubscribe","upsert","remote","method","params","broadcast","onRemote","broadcasts","filter","limit","order","Error","request","instance","match","merge","pull","stats","make","reference","child","settings","models","sbj","that","nowEvent","pullNow","channels","announce","config","resultEvent","setTimeout","sharedObservables","sharedOnDisconnect","complete","pipe","catchError","Observable","throw","now","Math","floor","random","FireLoop","references","ref","SocketDriver","connect","url","options","LoopBackConfig","setApiVersion","version","getApiVersion","setBaseURL","getPath","setAuthPrefix","authPrefix","getAuthPrefix","setDebugMode","isEnabled","debug","debuggable","filterOnUrl","filterOn","filterOnHeaders","whereOnUrl","whereOn","whereOnHeaders","isHeadersFilteringSet","isHeadersWhereSet","setSecureWebSockets","secure","unsetSecureWebSockets","isSecureWebSocketsSet","setRequestOptionsCredentials","withCredentials","getRequestOptionsCredentials","SocketConnection","driver","zone","subjects","onConnect","onDisconnect","onAuthenticated","onUnAuthorized","authenticated","sharedOnConnect","share","sharedOnAuthenticated","sharedOnUnAuthorized","connected","off","destroy","info","log","forceNew","forceWebsockets","transports","heartbeater","status","isConnected","handler","run","disconnect","setInterval","clearInterval","NgZone","SDKModels","modelName","getAll","getModelNames","RealTime","connection","auth","connecting","onReadySubject","sharedOnReady","onReady","to_1","clearTimeout","ti_1","s1_1","s2","CustomQueryEncoderHelper","encodeKey","k","encodeURIComponent","encodeValue","v","decodeKey","decodeURIComponent","decodeValue","BaseLoopBackApi","http","errorHandler","routeParams","urlParams","postBody","pubsub","customHeaders","replace","RegExp","arr","split","pop","join","event_1","subject_1","httpParams_1","HttpParams","encoder","headers","HttpHeaders","append","authenticate","body","postBodyKeys","shift","queryString","where","paramKey","paramValue","HttpRequest","HttpResponse","map","e","undefined","onCreate","datum","createMany","onCreateMany","findById","_urlParams","find","exists","findOne","updateAll","onUpdateAll","deleteById","onDeleteById","count","updateAttributes","onUpdateAttributes","onUpsert","upsertPatch","onUpsertPatch","upsertWithWhere","onUpsertWithWhere","replaceOrCreate","onReplaceOrCreate","replaceById","onReplaceById","createChangeStream","EventSource","msg","source","addEventListener","onerror","warn","HttpClient","Optional","DatChunkApi","call","ofDigital","pkProject","pkDigital","_url","DatColumnApi","DatDigitalApi","bulkUpsert","pkNamespace","_postBody","bulkDelete","pks","getVersion","pkEntity","entityVersion","getTablePage","DatNamespaceApi","byProject","DatTextPropertyApi","DfhLabelApi","ofProject","DfhProfileApi","updateFromOntoMe","pkProfile","requestedLanguage","updateAndAddToProject","getActivationReport","getDeactivationReport","deactivateProfileForProject","EmailApi","InfAppellationApi","InfDimensionApi","InfLangStringApi","InfLanguageApi","queryByString","InfPersistentItemApi","findOrCreateInfPersistentItems","pk_project","instances","ownProperties","typesOfProject","typesOfClassesAndProject","pk_typed_classes","typeNested","InfPlaceApi","findOrCreatePlace","projectId","InfStatementApi","paginatedListTargetingEntityPreviews","pkSourceEntity","pkProperty","pkTargetClass","isOutgoing","offset","findOrCreateInfStatements","alternativesNotInProjectByEntityPk","entityPk","propertyPk","alternativesNotInProjectByTeEntPk","teEntPk","sourcesAndDigitalsOfEntity","queryByParams","pkInfoRange","pkInfoDomain","InfTemporalEntityApi","findOrCreateInfTemporalEntities","alternativeTemporalEntityList","temporalEntityList","findOrCreateInfTemporalEntity","changeTeEntProjectRelation","isInProject","InfTextPropertyApi","findOrCreateInfTextProperties","findOrCreateInfTextProperty","findAlternativeTextProperties","pkClassField","InfTimePrimitiveApi","LoggerService","_i","apply","arg","group","groupEnd","profile","profileEnd","time","timeEnd","ProClassFieldConfigApi","patchOrCreate","ProDfhClassProjRelApi","ProDfhProfileProjRelApi","ProInfoProjRelApi","markStatementAsFavorite","pkStatement","updateEprAttributes","eprAttributes","bulkUpdateEprAttributes","items","ProProjectApi","ofAccount","accountId","createWithLabelAndDescription","pkLanguage","textProperty","getBasics","ProTextPropertyApi","PubAccountApi","getRoles","_routeParams","listProjects","withRolesAndProjects","login","credentials","include","logout","PubAccountProjectRelApi","SchemaObjectApi","removeEntityFromProject","addEntityToProject","typeOfProject","pkType","SysAppContextApi","appContext","pk_app_context","SysClassFieldApi","findComplex","SysClassFieldPropertyRelApi","SysClassHasTypePropertyApi","SysSystemRelevantClassApi","bulkReplaceOrCreate","SysSystemTypeApi","SocketBrowser","io","CookieBrowser","cookies","cookie","window","document","item","slice","encodeURI","toUTCString","decodeURI","StorageBrowser","localStorage","getItem","setItem","removeItem","SdkLb3Module","forRoot","internalStorageProvider","provide","useClass","ngModule","SdkLb3Module_1","providers","NgModule","imports","CommonModule","HttpClientModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/* tslint:disable */\n/**\n *Â @module Storage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The InternalStorage class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n **/\nexport class BaseStorage {\n  /**\n   * @method get\n   * @param {string} key Storage key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in storage.\n   **/\n  get(key: string): any {}\n  /**\n   * @method set\n   * @param {string} key Storage key name\n   * @param {any} value Any value\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in localStorage.\n   **/\n  set(key: string, value: any, expires?: Date): void {}\n  /**\n   * @method remove\n   * @param {string} key Storage key name\n   * @return {void}\n   * @description\n   * This method will remove a localStorage item from the client.\n   **/\n  remove(key: string): void {}\n}\n/**\n *Â @module InternalStorage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The InternalStorage class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n * This is mainly required because Angular Universal integration.\n * It does inject a CookieStorage instead of LocalStorage.\n **/\nexport class InternalStorage extends BaseStorage {}\n/**\n *Â @module SDKStorage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The SDKStorage class is used for dependency injection swapping.\n * It will be provided using factory method according the right environment.\n * This is created for public usage, to allow persisting custom data\n * Into the local storage API.\n **/\nexport class SDKStorage extends BaseStorage {}\n","/* tslint:disable */\n\n\n\ndeclare var Object: any;\nexport interface LoopBackFilter {\n  fields?: any;\n  include?: any;\n  limit?: any;\n  order?: any;\n  skip?: any;\n  offset?: any;\n  where?: any;\n}\n\nexport interface AccessTokenInterface {\n  \"id\"?: string;\n  \"ttl\"?: number;\n  \"scopes\"?: [\"string\"];\n  \"created\"?: Date;\n  \"userId\"?: string;\n  \"user\"?: any;\n}\n\nexport class AccessToken implements AccessTokenInterface {\n  \"id\": string;\n  \"ttl\": number;\n  \"scopes\": [\"string\"];\n  \"created\": Date;\n  \"userId\": string;\n  \"user\": any;\n  constructor(data?: AccessTokenInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `AccessToken`.\n   */\n  public static getModelName() {\n    return \"AccessToken\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of AccessToken for dynamic purposes.\n  **/\n  public static factory(data: AccessTokenInterface): AccessToken{\n    return new AccessToken(data);\n  }  \n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'AccessToken',\n      plural: 'AccessTokens',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'string'\n        },\n        \"ttl\": {\n          name: 'ttl',\n          type: 'number',\n          default: 1209600\n        },\n        \"scopes\": {\n          name: 'scopes',\n          type: '[\"string\"]'\n        },\n        \"created\": {\n          name: 'created',\n          type: 'Date'\n        },\n        \"userId\": {\n          name: 'userId',\n          type: 'string'\n        },\n      },\n      relations: {\n        user: {\n          name: 'user',\n          type: 'User',\n          model: 'User'\n        },\n      }\n    }\n  }\n}\n\nexport class SDKToken implements AccessTokenInterface {\n  id: any = null;\n  ttl: number = null;\n  scopes: any = null;\n  created: any = null;\n  userId: any = null;\n  user: any = null;\n  rememberMe: boolean = null;\n  constructor(data?: AccessTokenInterface) {\n    Object.assign(this, data);\n  }\n}\n/**\n* This GeoPoint represents both, LoopBack and MongoDB GeoPoint\n**/\nexport interface GeoPoint  {\n    lat?: number;\n    lng?: number;\n    type?: string;\n    coordinates?: number[];\n}\n\nexport interface StatFilter {\n    range: string,\n    custom?: {\n      start: string,\n      end: string\n    },\n    where?: {},\n    groupBy?: string\n}\n","/* tslint:disable */\ndeclare var Object: any;\nimport { Injectable, Inject } from '@angular/core';\nimport { InternalStorage } from '../../storage/storage.swaps';\nimport { SDKToken } from '../../models/BaseModels';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketConnection\n* @license MIT\n* @description\n* This module handle socket connections and return singleton instances for each\n* connection, it will use the SDK Socket Driver Available currently supporting\n* Angular 2 for web, NativeScript 2 and Angular Universal.\n**/\n@Injectable()\nexport class LoopBackAuth {\n  /**\n   * @type {SDKToken}\n   **/\n  private token: SDKToken = new SDKToken();\n  /**\n   * @type {string}\n   **/\n  protected prefix: string = '$LoopBackSDK$';\n  /**\n   * @method constructor\n   * @param {InternalStorage} storage Internal Storage Driver\n   * @description\n   * The constructor will initialize the token loading data from storage\n   **/\n  constructor(@Inject(InternalStorage) protected storage: InternalStorage) {\n    this.token.id = this.load('id');\n    this.token.user = this.load('user');\n    this.token.userId = this.load('userId');\n    this.token.created = this.load('created');\n    this.token.ttl = this.load('ttl');\n    this.token.rememberMe = this.load('rememberMe');\n  }\n  /**\n   * @method setRememberMe\n   * @param {boolean} value Flag to remember credentials\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials\n   **/\n  public setRememberMe(value: boolean): void {\n    this.token.rememberMe = value;\n  }\n  /**\n   * @method setUser\n   * @param {any} user Any type of user model\n   * @return {void}\n   * @description\n   * This method will update the user information and persist it if the\n   * rememberMe flag is set.\n   **/\n  public setUser(user: any) {\n    this.token.user = user;\n    this.save();\n  }\n  /**\n   * @method setToken\n   * @param {SDKToken} token SDKToken or casted AccessToken instance\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials\n   **/\n  public setToken(token: SDKToken): void {\n    this.token = Object.assign({}, this.token, token);\n    this.save();\n  }\n  /**\n   * @method getToken\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials.\n   **/\n  public getToken(): SDKToken {\n    return <SDKToken>this.token;\n  }\n  /**\n   * @method getAccessTokenId\n   * @return {string}\n   * @description\n   * This method will return the actual token string, not the object instance.\n   **/\n  public getAccessTokenId(): string {\n    return this.token.id;\n  }\n  /**\n   * @method getCurrentUserId\n   * @return {any}\n   * @description\n   * This method will return the current user id, it can be number or string.\n   **/\n  public getCurrentUserId(): any {\n    return this.token.userId;\n  }\n  /**\n   * @method getCurrentUserData\n   * @return {any}\n   * @description\n   * This method will return the current user instance.\n   **/\n  public getCurrentUserData(): any {\n    return (typeof this.token.user === 'string') ? JSON.parse(this.token.user) : this.token.user;\n  }\n  /**\n   * @method save\n   * @return {boolean} Whether or not the information was saved\n   * @description\n   * This method will save in either local storage or cookies the current credentials.\n   * But only if rememberMe is enabled.\n   **/\n  public save(): boolean {\n      let today = new Date();\n      let expires = new Date(today.getTime() + (this.token.ttl * 1000));\n      this.persist('id', this.token.id, expires);\n      this.persist('user', this.token.user, expires);\n      this.persist('userId', this.token.userId, expires);\n      this.persist('created', this.token.created, expires);\n      this.persist('ttl', this.token.ttl, expires);\n      this.persist('rememberMe', this.token.rememberMe, expires);\n      return true;\n  };\n  /**\n   * @method load\n   * @param {string} prop Property name\n   * @return {any} Any information persisted in storage\n   * @description\n   * This method will load either from local storage or cookies the provided property.\n   **/\n  protected load(prop: string): any {\n    return this.storage.get(`${this.prefix}${prop}`);\n  }\n  /**\n   * @method clear\n   * @return {void}\n   * @description\n   * This method will clear cookies or the local storage.\n   **/\n  public clear(): void {\n    Object.keys(this.token).forEach((prop: string) => this.storage.remove(`${this.prefix}${prop}`));\n    this.token = new SDKToken();\n  }\n  /**\n   * @method persist\n   * @return {void}\n   * @description\n   * This method saves values to storage\n   **/\n  protected persist(prop: string, value: any, expires?: Date): void {\n    try {\n      this.storage.set(\n        `${this.prefix}${prop}`,\n        (typeof value === 'object') ? JSON.stringify(value) : value,\n        this.token.rememberMe?expires:null\n      );\n    }\n    catch (err) {\n      console.error('Cannot access local/session storage:', err);\n    }\n  }\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\n/**\n * Default error handler\n */\n@Injectable()\nexport class ErrorHandler {\n  public handleError(errorResponse: HttpErrorResponse): Observable<never> {\n    return throwError(errorResponse.error.error || 'Server error');\n  }\n}\n","/* tslint:disable */\nimport { Observable, Subject } from 'rxjs';\n\nexport class IO {\n\n  private socket: any;\n  private observables: any = {};\n\n  constructor(socket: any) { this.socket = socket; }\n\n  emit(event: string, data: any): void {\n    this.socket.emit('ME:RT:1://event', {\n        event : event,\n        data  : data\n    });\n  }\n\n  on(event: string): Observable<any> {\n    if (this.observables[event]) { return this.observables[event]; }\n    let subject: Subject<any> = new Subject<any>();\n    this.socket.on(event, (res: any) => subject.next(res));\n    this.observables[event] = subject.asObservable();\n    return this.observables[event];\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface SchemaObjectInterface {\n  \"inf\"?: any;\n  \"pro\"?: any;\n  \"dat\"?: any;\n  \"sys\"?: any;\n  \"dfh\"?: any;\n}\n\nexport class SchemaObject implements SchemaObjectInterface {\n  \"inf\": any;\n  \"pro\": any;\n  \"dat\": any;\n  \"sys\": any;\n  \"dfh\": any;\n  constructor(data?: SchemaObjectInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SchemaObject`.\n   */\n  public static getModelName() {\n    return \"SchemaObject\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SchemaObject for dynamic purposes.\n  **/\n  public static factory(data: SchemaObjectInterface): SchemaObject{\n    return new SchemaObject(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SchemaObject',\n      plural: 'SchemaObjects',\n      path: 'SchemaObjects',\n      idName: 'inf',\n      properties: {\n        \"inf\": {\n          name: 'inf',\n          type: 'any'\n        },\n        \"pro\": {\n          name: 'pro',\n          type: 'any'\n        },\n        \"dat\": {\n          name: 'dat',\n          type: 'any'\n        },\n        \"sys\": {\n          name: 'sys',\n          type: 'any'\n        },\n        \"dfh\": {\n          name: 'dfh',\n          type: 'any'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  SysClassField,\n  // DfhProperty\n} from '../index';\n\ndeclare var Object: any;\nexport interface SysClassFieldPropertyRelInterface {\n  \"pk_entity\"?: number;\n  \"fk_class_field\"?: number;\n  \"fk_property\"?: number;\n  \"property_is_outgoing\"?: boolean;\n  \"ord_num\"?: number;\n  class_field?: SysClassField;\n  // property?: DfhProperty;\n}\n\nexport class SysClassFieldPropertyRel implements SysClassFieldPropertyRelInterface {\n  \"pk_entity\": number;\n  \"fk_class_field\": number;\n  \"fk_property\": number;\n  \"property_is_outgoing\": boolean;\n  \"ord_num\": number;\n  class_field?: SysClassField;\n  // property?: DfhProperty;\n  constructor(data?: SysClassFieldPropertyRelInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysClassFieldPropertyRel`.\n   */\n  public static getModelName() {\n    return \"SysClassFieldPropertyRel\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SysClassFieldPropertyRel for dynamic purposes.\n  **/\n  public static factory(data: SysClassFieldPropertyRelInterface): SysClassFieldPropertyRel {\n    return new SysClassFieldPropertyRel(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SysClassFieldPropertyRel',\n      plural: 'SysClassFieldPropertyRels',\n      path: 'SysClassFieldPropertyRels',\n      idName: 'pk_entity',\n      properties: {\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_class_field\": {\n          name: 'fk_class_field',\n          type: 'number'\n        },\n        \"fk_property\": {\n          name: 'fk_property',\n          type: 'number'\n        },\n        \"property_is_outgoing\": {\n          name: 'property_is_outgoing',\n          type: 'boolean'\n        },\n        \"ord_num\": {\n          name: 'ord_num',\n          type: 'number'\n        },\n      },\n      relations: {\n        class_field: {\n          name: 'class_field',\n          type: 'SysClassField',\n          model: 'SysClassField',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_class_field',\n          keyTo: 'pk_entity'\n        },\n        property: {\n          name: 'property',\n          type: 'DfhProperty',\n          model: 'DfhProperty',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_property',\n          keyTo: 'pk_property'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  SysClassFieldPropertyRel,\n  ProClassFieldConfig,\n} from '../index';\n\ndeclare var Object: any;\nexport interface SysClassFieldInterface {\n  \"pk_entity\"?: number;\n  \"description\"?: string;\n  \"label\"?: string;\n  \"fk_system_type_ng_component\"?: number;\n  \"used_table\"?: string;\n  class_field_property_rel?: SysClassFieldPropertyRel[];\n  class_field_configs?: ProClassFieldConfig[];\n}\n\nexport class SysClassField implements SysClassFieldInterface {\n  \"pk_entity\": number;\n  \"description\": string;\n  \"label\": string;\n  \"fk_system_type_ng_component\": number;\n  \"used_table\": string;\n  class_field_property_rel?: SysClassFieldPropertyRel[];\n  class_field_configs?: ProClassFieldConfig[];\n  constructor(data?: SysClassFieldInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysClassField`.\n   */\n  public static getModelName() {\n    return \"SysClassField\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SysClassField for dynamic purposes.\n  **/\n  public static factory(data: SysClassFieldInterface): SysClassField {\n    return new SysClassField(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SysClassField',\n      plural: 'SysClassFields',\n      path: 'SysClassFields',\n      idName: 'pk_entity',\n      properties: {\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"description\": {\n          name: 'description',\n          type: 'string'\n        },\n        \"label\": {\n          name: 'label',\n          type: 'string'\n        },\n        \"fk_system_type_ng_component\": {\n          name: 'fk_system_type_ng_component',\n          type: 'number'\n        },\n        \"used_table\": {\n          name: 'used_table',\n          type: 'string'\n        },\n      },\n      relations: {\n        class_field_property_rel: {\n          name: 'class_field_property_rel',\n          type: 'SysClassFieldPropertyRel[]',\n          model: 'SysClassFieldPropertyRel',\n          relationType: 'hasMany',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_class_field'\n        },\n        class_field_configs: {\n          name: 'class_field_configs',\n          type: 'ProClassFieldConfig[]',\n          model: 'ProClassFieldConfig',\n          relationType: 'hasMany',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_class_field'\n        },\n        classes: {\n          name: 'classes',\n          type: 'DfhClass[]',\n          model: 'DfhClass',\n          relationType: 'hasMany',\n          modelThrough: 'ProClassFieldConfig',\n          keyThrough: 'fk_class_for_class_field',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_class_field'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface SysClassHasTypePropertyInterface {\n  \"pk_typed_class\"?: number;\n  \"typed_class_label\"?: string;\n  \"dfh_pk_property\"?: number;\n  \"property_label\"?: string;\n  \"pk_type_class\"?: number;\n  \"type_class_label\"?: string;\n  \"pk_entity\"?: number;\n}\n\nexport class SysClassHasTypeProperty implements SysClassHasTypePropertyInterface {\n  \"pk_typed_class\": number;\n  \"typed_class_label\": string;\n  \"dfh_pk_property\": number;\n  \"property_label\": string;\n  \"pk_type_class\": number;\n  \"type_class_label\": string;\n  \"pk_entity\": number;\n  constructor(data?: SysClassHasTypePropertyInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysClassHasTypeProperty`.\n   */\n  public static getModelName() {\n    return \"SysClassHasTypeProperty\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SysClassHasTypeProperty for dynamic purposes.\n  **/\n  public static factory(data: SysClassHasTypePropertyInterface): SysClassHasTypeProperty{\n    return new SysClassHasTypeProperty(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SysClassHasTypeProperty',\n      plural: 'SysClassHasTypeProperties',\n      path: 'SysClassHasTypeProperties',\n      idName: 'pk_entity',\n      properties: {\n        \"pk_typed_class\": {\n          name: 'pk_typed_class',\n          type: 'number'\n        },\n        \"typed_class_label\": {\n          name: 'typed_class_label',\n          type: 'string'\n        },\n        \"dfh_pk_property\": {\n          name: 'dfh_pk_property',\n          type: 'number'\n        },\n        \"property_label\": {\n          name: 'property_label',\n          type: 'string'\n        },\n        \"pk_type_class\": {\n          name: 'pk_type_class',\n          type: 'number'\n        },\n        \"type_class_label\": {\n          name: 'type_class_label',\n          type: 'string'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface SysSystemRelevantClassInterface {\n  \"fk_class\"?: number;\n  \"required_by_entities\"?: boolean;\n  \"required_by_sources\"?: boolean;\n  \"required_by_basics\"?: boolean;\n  \"excluded_from_entities\"?: boolean;\n  \"pk_entity\"?: number;\n}\n\nexport class SysSystemRelevantClass implements SysSystemRelevantClassInterface {\n  \"fk_class\": number;\n  \"required_by_entities\": boolean;\n  \"required_by_sources\": boolean;\n  \"required_by_basics\": boolean;\n  \"excluded_from_entities\": boolean;\n  \"pk_entity\": number;\n  constructor(data?: SysSystemRelevantClassInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysSystemRelevantClass`.\n   */\n  public static getModelName() {\n    return \"SysSystemRelevantClass\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SysSystemRelevantClass for dynamic purposes.\n  **/\n  public static factory(data: SysSystemRelevantClassInterface): SysSystemRelevantClass{\n    return new SysSystemRelevantClass(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SysSystemRelevantClass',\n      plural: 'SysSystemRelevantClasses',\n      path: 'SysSystemRelevantClasses',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"required_by_entities\": {\n          name: 'required_by_entities',\n          type: 'boolean'\n        },\n        \"required_by_sources\": {\n          name: 'required_by_sources',\n          type: 'boolean'\n        },\n        \"required_by_basics\": {\n          name: 'required_by_basics',\n          type: 'boolean'\n        },\n        \"excluded_from_entities\": {\n          name: 'excluded_from_entities',\n          type: 'boolean'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface PubAccountInterface {\n  \"id\"?: number;\n  \"realm\"?: string;\n  \"username\"?: string;\n  \"email\": string;\n  \"emailVerified\"?: boolean;\n  accessTokens?: any[];\n  projects?: any[];\n}\n\nexport class PubAccount implements PubAccountInterface {\n  \"id\": number;\n  \"realm\": string;\n  \"username\": string;\n  \"email\": string;\n  \"emailVerified\": boolean;\n  accessTokens?: any[];\n  projects?: any[];\n  constructor(data?: PubAccountInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `PubAccount`.\n   */\n  public static getModelName() {\n    return \"PubAccount\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of PubAccount for dynamic purposes.\n  **/\n  public static factory(data: PubAccountInterface): PubAccount{\n    return new PubAccount(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'PubAccount',\n      plural: 'PubAccounts',\n      path: 'PubAccounts',\n      idName: 'id',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n        \"realm\": {\n          name: 'realm',\n          type: 'string'\n        },\n        \"username\": {\n          name: 'username',\n          type: 'string'\n        },\n        \"email\": {\n          name: 'email',\n          type: 'string'\n        },\n        \"emailVerified\": {\n          name: 'emailVerified',\n          type: 'boolean'\n        },\n      },\n      relations: {\n        accessTokens: {\n          name: 'accessTokens',\n          type: 'any[]',\n          model: '',\n          relationType: 'hasMany',\n                  keyFrom: 'id',\n          keyTo: 'userId'\n        },\n        projects: {\n          name: 'projects',\n          type: 'any[]',\n          model: '',\n          relationType: 'hasMany',\n          modelThrough: 'PubAccountProjectRel',\n          keyThrough: 'fk_project',\n          keyFrom: 'id',\n          keyTo: 'account_id'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface EmailInterface {\n  \"to\": string;\n  \"from\": string;\n  \"subject\": string;\n  \"text\"?: string;\n  \"html\"?: string;\n  \"id\"?: number;\n}\n\nexport class Email implements EmailInterface {\n  \"to\": string;\n  \"from\": string;\n  \"subject\": string;\n  \"text\": string;\n  \"html\": string;\n  \"id\": number;\n  constructor(data?: EmailInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Email`.\n   */\n  public static getModelName() {\n    return \"Email\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Email for dynamic purposes.\n  **/\n  public static factory(data: EmailInterface): Email{\n    return new Email(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Email',\n      plural: 'Emails',\n      path: 'Emails',\n      idName: 'id',\n      properties: {\n        \"to\": {\n          name: 'to',\n          type: 'string'\n        },\n        \"from\": {\n          name: 'from',\n          type: 'string'\n        },\n        \"subject\": {\n          name: 'subject',\n          type: 'string'\n        },\n        \"text\": {\n          name: 'text',\n          type: 'string'\n        },\n        \"html\": {\n          name: 'html',\n          type: 'string'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  PubAccount,\n  ProTextProperty,\n  ProInfoProjRel,\n  InfLanguage,\n  InfPersistentItem,\n  DatNamespace\n} from '../index';\n\ndeclare var Object: any;\nexport interface ProProjectInterface {\n  \"pk_entity\"?: number;\n  \"fk_language\"?: number;\n  accounts?: PubAccount[];\n  text_properties?: ProTextProperty[];\n  entity_version_project_rels?: ProInfoProjRel[];\n  default_language?: InfLanguage;\n  persistent_items?: InfPersistentItem[];\n  namespaces?: DatNamespace[];\n}\n\nexport class ProProject implements ProProjectInterface {\n  \"pk_entity\": number;\n  \"fk_language\": number;\n  accounts?: PubAccount[];\n  text_properties?: ProTextProperty[];\n  entity_version_project_rels?: ProInfoProjRel[];\n  default_language?: InfLanguage;\n  persistent_items?: InfPersistentItem[];\n  namespaces?: DatNamespace[];\n  constructor(data?: ProProjectInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProProject`.\n   */\n  public static getModelName() {\n    return \"ProProject\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of ProProject for dynamic purposes.\n  **/\n  public static factory(data: ProProjectInterface): ProProject{\n    return new ProProject(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'ProProject',\n      plural: 'ProProjects',\n      path: 'ProProjects',\n      idName: 'pk_entity',\n      properties: {\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_language\": {\n          name: 'fk_language',\n          type: 'number'\n        },\n      },\n      relations: {\n        accounts: {\n          name: 'accounts',\n          type: 'PubAccount[]',\n          model: 'PubAccount',\n          relationType: 'hasMany',\n          modelThrough: 'PubAccountProjectRel',\n          keyThrough: 'account_id',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_project'\n        },\n        text_properties: {\n          name: 'text_properties',\n          type: 'ProTextProperty[]',\n          model: 'ProTextProperty',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_project'\n        },\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_project'\n        },\n        default_language: {\n          name: 'default_language',\n          type: 'InfLanguage',\n          model: 'InfLanguage',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_language',\n          keyTo: 'pk_entity'\n        },\n        persistent_items: {\n          name: 'persistent_items',\n          type: 'InfPersistentItem[]',\n          model: 'InfPersistentItem',\n          relationType: 'hasMany',\n          modelThrough: 'ProInfoProjRel',\n          keyThrough: 'fk_entity',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_project'\n        },\n        namespaces: {\n          name: 'namespaces',\n          type: 'DatNamespace[]',\n          model: 'DatNamespace',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_project'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  PubAccount,\n  ProProject\n} from '../index';\n\ndeclare var Object: any;\nexport interface PubAccountProjectRelInterface {\n  \"role\": string;\n  \"fk_project\": number;\n  \"account_id\"?: number;\n  \"id\"?: number;\n  account?: PubAccount;\n  project?: ProProject;\n}\n\nexport class PubAccountProjectRel implements PubAccountProjectRelInterface {\n  \"role\": string;\n  \"fk_project\": number;\n  \"account_id\": number;\n  \"id\": number;\n  account?: PubAccount;\n  project?: ProProject;\n  constructor(data?: PubAccountProjectRelInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `PubAccountProjectRel`.\n   */\n  public static getModelName() {\n    return \"PubAccountProjectRel\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of PubAccountProjectRel for dynamic purposes.\n  **/\n  public static factory(data: PubAccountProjectRelInterface): PubAccountProjectRel{\n    return new PubAccountProjectRel(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'PubAccountProjectRel',\n      plural: 'PubAccountProjectRels',\n      path: 'PubAccountProjectRels',\n      idName: 'id',\n      properties: {\n        \"role\": {\n          name: 'role',\n          type: 'string',\n          default: 'admin'\n        },\n        \"fk_project\": {\n          name: 'fk_project',\n          type: 'number'\n        },\n        \"account_id\": {\n          name: 'account_id',\n          type: 'number'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n      },\n      relations: {\n        account: {\n          name: 'account',\n          type: 'PubAccount',\n          model: 'PubAccount',\n          relationType: 'belongsTo',\n                  keyFrom: 'account_id',\n          keyTo: 'id'\n        },\n        project: {\n          name: 'project',\n          type: 'ProProject',\n          model: 'ProProject',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_project',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProProject,\n  InfLanguage,\n  SysSystemType\n} from '../index';\n\ndeclare var Object: any;\nexport interface ProTextPropertyInterface {\n  \"string\": string;\n  \"fk_system_type\": number;\n  \"fk_language\": number;\n  \"fk_project\": number;\n  \"fk_dfh_class\"?: number;\n  \"fk_dfh_property\"?: number;\n  \"fk_dfh_property_domain\"?: number;\n  \"fk_dfh_property_range\"?: number;\n  \"fk_pro_project\"?: number;\n  \"pk_entity\"?: number;\n  \"entity_version\"?: number;\n  \"tmsp_creation\"?: string;\n  \"tmsp_last_modification\"?: string;\n  project?: ProProject;\n  language?: InfLanguage;\n  systemType?: SysSystemType;\n}\n\nexport class ProTextProperty implements ProTextPropertyInterface {\n  \"string\": string;\n  \"fk_system_type\": number;\n  \"fk_language\": number;\n  \"fk_project\": number;\n  \"fk_dfh_class\": number;\n  \"fk_dfh_property\": number;\n  \"fk_dfh_property_domain\": number;\n  \"fk_dfh_property_range\": number;\n  \"fk_pro_project\": number;\n  \"pk_entity\": number;\n  \"entity_version\": number;\n  \"tmsp_creation\": string;\n  \"tmsp_last_modification\": string;\n  project?: ProProject;\n  language?: InfLanguage;\n  systemType?: SysSystemType;\n  constructor(data?: ProTextPropertyInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProTextProperty`.\n   */\n  public static getModelName() {\n    return \"ProTextProperty\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of ProTextProperty for dynamic purposes.\n  **/\n  public static factory(data: ProTextPropertyInterface): ProTextProperty{\n    return new ProTextProperty(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'ProTextProperty',\n      plural: 'ProTextProperties',\n      path: 'ProTextProperties',\n      idName: 'pk_entity',\n      properties: {\n        \"string\": {\n          name: 'string',\n          type: 'string'\n        },\n        \"fk_system_type\": {\n          name: 'fk_system_type',\n          type: 'number'\n        },\n        \"fk_language\": {\n          name: 'fk_language',\n          type: 'number'\n        },\n        \"fk_project\": {\n          name: 'fk_project',\n          type: 'number'\n        },\n        \"fk_dfh_class\": {\n          name: 'fk_dfh_class',\n          type: 'number'\n        },\n        \"fk_dfh_property\": {\n          name: 'fk_dfh_property',\n          type: 'number'\n        },\n        \"fk_dfh_property_domain\": {\n          name: 'fk_dfh_property_domain',\n          type: 'number'\n        },\n        \"fk_dfh_property_range\": {\n          name: 'fk_dfh_property_range',\n          type: 'number'\n        },\n        \"fk_pro_project\": {\n          name: 'fk_pro_project',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"entity_version\": {\n          name: 'entity_version',\n          type: 'number'\n        },\n        \"tmsp_creation\": {\n          name: 'tmsp_creation',\n          type: 'string'\n        },\n        \"tmsp_last_modification\": {\n          name: 'tmsp_last_modification',\n          type: 'string'\n        },\n      },\n      relations: {\n        project: {\n          name: 'project',\n          type: 'ProProject',\n          model: 'ProProject',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_project',\n          keyTo: 'pk_entity'\n        },\n        language: {\n          name: 'language',\n          type: 'InfLanguage',\n          model: 'InfLanguage',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_language',\n          keyTo: 'pk_entity'\n        },\n        systemType: {\n          name: 'systemType',\n          type: 'SysSystemType',\n          model: 'SysSystemType',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_system_type',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface ProInfoProjRelInterface {\n  \"fk_project\": number;\n  \"fk_entity\"?: number;\n  \"fk_entity_version\"?: string;\n  \"fk_entity_version_concat\"?: string;\n  \"is_in_project\"?: boolean;\n  \"is_standard_in_project\"?: boolean;\n  \"calendar\"?: string;\n  \"ord_num_of_domain\"?: number;\n  \"ord_num_of_range\"?: number;\n  \"ord_num_of_text_property\"?: number;\n  \"tmsp_last_modification\"?: string;\n  \"fk_creator\"?: number;\n  \"fk_last_modifier\": number;\n  \"pk_entity\"?: number;\n  \"entity_version\"?: number;\n  \"tmsp_creation\"?: string;\n}\n\nexport class ProInfoProjRel implements ProInfoProjRelInterface {\n  \"fk_project\": number;\n  \"fk_entity\"?: number;\n  \"fk_entity_version\"?: string;\n  \"fk_entity_version_concat\"?: string;\n  \"is_in_project\"?: boolean;\n  \"is_standard_in_project\"?: boolean;\n  \"calendar\"?: string;\n  \"ord_num_of_domain\"?: number;\n  \"ord_num_of_range\"?: number;\n  \"ord_num_of_text_property\"?: number;\n  \"tmsp_last_modification\"?: string;\n  \"fk_creator\"?: number;\n  \"fk_last_modifier\": number;\n  \"pk_entity\"?: number;\n  \"entity_version\"?: number;\n  \"tmsp_creation\"?: string;\n  constructor(data?: ProInfoProjRelInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProInfoProjRel`.\n   */\n  public static getModelName() {\n    return \"ProInfoProjRel\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of ProInfoProjRel for dynamic purposes.\n  **/\n  public static factory(data: ProInfoProjRelInterface): ProInfoProjRel {\n    return new ProInfoProjRel(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'ProInfoProjRel',\n      plural: 'ProInfoProjRels',\n      path: 'ProInfoProjRels',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_project\": {\n          name: 'fk_project',\n          type: 'number'\n        },\n        \"fk_entity\": {\n          name: 'fk_entity',\n          type: 'number'\n        },\n        \"fk_entity_version\": {\n          name: 'fk_entity_version',\n          type: 'string'\n        },\n        \"fk_entity_version_concat\": {\n          name: 'fk_entity_version_concat',\n          type: 'string'\n        },\n        \"is_in_project\": {\n          name: 'is_in_project',\n          type: 'boolean'\n        },\n        \"is_standard_in_project\": {\n          name: 'is_standard_in_project',\n          type: 'boolean'\n        },\n        \"calendar\": {\n          name: 'calendar',\n          type: 'string'\n        },\n        \"ord_num_of_domain\": {\n          name: 'ord_num_of_domain',\n          type: 'number'\n        },\n        \"ord_num_of_range\": {\n          name: 'ord_num_of_range',\n          type: 'number'\n        },\n        \"ord_num_of_text_property\": {\n          name: 'ord_num_of_text_property',\n          type: 'number'\n        },\n        \"tmsp_last_modification\": {\n          name: 'tmsp_last_modification',\n          type: 'string'\n        },\n        \"fk_creator\": {\n          name: 'fk_creator',\n          type: 'number'\n        },\n        \"fk_last_modifier\": {\n          name: 'fk_last_modifier',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"entity_version\": {\n          name: 'entity_version',\n          type: 'number'\n        },\n        \"tmsp_creation\": {\n          name: 'tmsp_creation',\n          type: 'string'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface DfhProfileInterface {\n  \"pk_profile\"?: number;\n  \"owned_by_project\"?: number;\n  \"is_ongoing_forced_publication\"?: boolean;\n  \"date_profile_published\"?: string;\n  \"date_profile_deprecated\"?: string;\n  \"tmsp_last_dfh_update\"?: string;\n}\n\nexport class DfhProfile implements DfhProfileInterface {\n  \"pk_profile\": number;\n  \"owned_by_project\": number;\n  \"is_ongoing_forced_publication\": boolean;\n  \"date_profile_published\": string;\n  \"date_profile_deprecated\": string;\n  \"tmsp_last_dfh_update\": string;\n  constructor(data?: DfhProfileInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DfhProfile`.\n   */\n  public static getModelName() {\n    return \"DfhProfile\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of DfhProfile for dynamic purposes.\n  **/\n  public static factory(data: DfhProfileInterface): DfhProfile{\n    return new DfhProfile(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'DfhProfile',\n      plural: 'DfhProfiles',\n      path: 'DfhProfiles',\n      idName: 'pk_profile',\n      properties: {\n        \"pk_profile\": {\n          name: 'pk_profile',\n          type: 'number'\n        },\n        \"owned_by_project\": {\n          name: 'owned_by_project',\n          type: 'number'\n        },\n        \"is_ongoing_forced_publication\": {\n          name: 'is_ongoing_forced_publication',\n          type: 'boolean'\n        },\n        \"date_profile_published\": {\n          name: 'date_profile_published',\n          type: 'string'\n        },\n        \"date_profile_deprecated\": {\n          name: 'date_profile_deprecated',\n          type: 'string'\n        },\n        \"tmsp_last_dfh_update\": {\n          name: 'tmsp_last_dfh_update',\n          type: 'string'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface DfhLabelInterface {\n  \"type\"?: string;\n  \"label\"?: string;\n  \"language\"?: string;\n  \"fk_profile\"?: number;\n  \"fk_project\"?: number;\n  \"fk_property\"?: number;\n  \"fk_class\"?: number;\n}\n\nexport class DfhLabel implements DfhLabelInterface {\n  \"type\": string;\n  \"label\": string;\n  \"language\": string;\n  \"fk_profile\": number;\n  \"fk_project\": number;\n  \"fk_property\": number;\n  \"fk_class\": number;\n  constructor(data?: DfhLabelInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DfhLabel`.\n   */\n  public static getModelName() {\n    return \"DfhLabel\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of DfhLabel for dynamic purposes.\n  **/\n  public static factory(data: DfhLabelInterface): DfhLabel{\n    return new DfhLabel(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'DfhLabel',\n      plural: 'DfhLabels',\n      path: 'DfhLabels',\n      idName: 'type',\n      properties: {\n        \"type\": {\n          name: 'type',\n          type: 'string'\n        },\n        \"label\": {\n          name: 'label',\n          type: 'string'\n        },\n        \"language\": {\n          name: 'language',\n          type: 'string'\n        },\n        \"fk_profile\": {\n          name: 'fk_profile',\n          type: 'number'\n        },\n        \"fk_project\": {\n          name: 'fk_project',\n          type: 'number'\n        },\n        \"fk_property\": {\n          name: 'fk_property',\n          type: 'number'\n        },\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  DatDigital,\n  InfStatement,\n  DatNamespace\n} from '../index';\n\ndeclare var Object: any;\nexport interface DatChunkInterface {\n  \"quill_doc\"?: any;\n  \"string\"?: string;\n  \"fk_text\": number;\n  \"fk_entity_version\": number;\n  \"pk_entity\"?: number;\n  \"fk_namespace\"?: number;\n  digital?: DatDigital;\n  outgoing_statements?: InfStatement[];\n  namespace?: DatNamespace;\n}\n\nexport class DatChunk implements DatChunkInterface {\n  \"quill_doc\": any;\n  \"string\": string;\n  \"fk_text\": number;\n  \"fk_entity_version\": number;\n  \"pk_entity\": number;\n  \"fk_namespace\": number;\n  digital?: DatDigital;\n  outgoing_statements?: InfStatement[];\n  namespace?: DatNamespace;\n  constructor(data?: DatChunkInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatChunk`.\n   */\n  public static getModelName() {\n    return \"DatChunk\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of DatChunk for dynamic purposes.\n  **/\n  public static factory(data: DatChunkInterface): DatChunk{\n    return new DatChunk(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'DatChunk',\n      plural: 'DatChunks',\n      path: 'DatChunks',\n      idName: 'pk_entity',\n      properties: {\n        \"quill_doc\": {\n          name: 'quill_doc',\n          type: 'any'\n        },\n        \"string\": {\n          name: 'string',\n          type: 'string'\n        },\n        \"fk_text\": {\n          name: 'fk_text',\n          type: 'number'\n        },\n        \"fk_entity_version\": {\n          name: 'fk_entity_version',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_namespace\": {\n          name: 'fk_namespace',\n          type: 'number'\n        },\n      },\n      relations: {\n        digital: {\n          name: 'digital',\n          type: 'DatDigital',\n          model: 'DatDigital',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_text',\n          keyTo: 'pk_text'\n        },\n        outgoing_statements: {\n          name: 'outgoing_statements',\n          type: 'InfStatement[]',\n          model: 'InfStatement',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_subject_data'\n        },\n        namespace: {\n          name: 'namespace',\n          type: 'DatNamespace',\n          model: 'DatNamespace',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_namespace',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  DatNamespace\n} from '../index';\n\ndeclare var Object: any;\nexport interface DatColumnInterface {\n  \"fk_digital\"?: number;\n  \"fk_data_type\"?: number;\n  \"fk_column_content_type\"?: number;\n  \"fk_column_relationship_type\"?: number;\n  \"fk_original_column\"?: number;\n  \"is_imported\"?: number;\n  \"pk_entity\"?: number;\n  \"fk_namespace\"?: number;\n  namespace?: DatNamespace;\n}\n\nexport class DatColumn implements DatColumnInterface {\n  \"fk_digital\": number;\n  \"fk_data_type\": number;\n  \"fk_column_content_type\": number;\n  \"fk_column_relationship_type\": number;\n  \"fk_original_column\": number;\n  \"is_imported\": number;\n  \"pk_entity\": number;\n  \"fk_namespace\": number;\n  namespace?: DatNamespace;\n  constructor(data?: DatColumnInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatColumn`.\n   */\n  public static getModelName() {\n    return \"DatColumn\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of DatColumn for dynamic purposes.\n  **/\n  public static factory(data: DatColumnInterface): DatColumn{\n    return new DatColumn(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'DatColumn',\n      plural: 'DatColumns',\n      path: 'DatColumns',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_digital\": {\n          name: 'fk_digital',\n          type: 'number'\n        },\n        \"fk_data_type\": {\n          name: 'fk_data_type',\n          type: 'number'\n        },\n        \"fk_column_content_type\": {\n          name: 'fk_column_content_type',\n          type: 'number'\n        },\n        \"fk_column_relationship_type\": {\n          name: 'fk_column_relationship_type',\n          type: 'number'\n        },\n        \"fk_original_column\": {\n          name: 'fk_original_column',\n          type: 'number'\n        },\n        \"is_imported\": {\n          name: 'is_imported',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_namespace\": {\n          name: 'fk_namespace',\n          type: 'number'\n        },\n      },\n      relations: {\n        namespace: {\n          name: 'namespace',\n          type: 'DatNamespace',\n          model: 'DatNamespace',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_namespace',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  DatNamespace\n} from '../index';\n\ndeclare var Object: any;\nexport interface DatTextPropertyInterface {\n  \"string\"?: string;\n  \"quill_doc\"?: any;\n  \"fk_system_type\"?: number;\n  \"fk_language\"?: number;\n  \"fk_entity\"?: number;\n  \"pk_entity\"?: number;\n  \"fk_namespace\"?: number;\n  namespace?: DatNamespace;\n}\n\nexport class DatTextProperty implements DatTextPropertyInterface {\n  \"string\": string;\n  \"quill_doc\": any;\n  \"fk_system_type\": number;\n  \"fk_language\": number;\n  \"fk_entity\": number;\n  \"pk_entity\": number;\n  \"fk_namespace\": number;\n  namespace?: DatNamespace;\n  constructor(data?: DatTextPropertyInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatTextProperty`.\n   */\n  public static getModelName() {\n    return \"DatTextProperty\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of DatTextProperty for dynamic purposes.\n  **/\n  public static factory(data: DatTextPropertyInterface): DatTextProperty{\n    return new DatTextProperty(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'DatTextProperty',\n      plural: 'DatTextProperties',\n      path: 'DatTextProperties',\n      idName: 'pk_entity',\n      properties: {\n        \"string\": {\n          name: 'string',\n          type: 'string'\n        },\n        \"quill_doc\": {\n          name: 'quill_doc',\n          type: 'any'\n        },\n        \"fk_system_type\": {\n          name: 'fk_system_type',\n          type: 'number'\n        },\n        \"fk_language\": {\n          name: 'fk_language',\n          type: 'number'\n        },\n        \"fk_entity\": {\n          name: 'fk_entity',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_namespace\": {\n          name: 'fk_namespace',\n          type: 'number'\n        },\n      },\n      relations: {\n        namespace: {\n          name: 'namespace',\n          type: 'DatNamespace',\n          model: 'DatNamespace',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_namespace',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  DatNamespace\n} from '../index';\n\ndeclare var Object: any;\nexport interface DatDigitalInterface {\n  \"entity_version\"?: number;\n  \"pk_text\"?: number;\n  \"quill_doc\"?: any;\n  \"string\"?: string;\n  \"fk_system_type\"?: number;\n  \"pk_entity\"?: number;\n  \"fk_namespace\"?: number;\n  namespace?: DatNamespace;\n}\n\nexport class DatDigital implements DatDigitalInterface {\n  \"entity_version\": number;\n  \"pk_text\": number;\n  \"quill_doc\": any;\n  \"string\": string;\n  \"fk_system_type\": number;\n  \"pk_entity\": number;\n  \"fk_namespace\": number;\n  namespace?: DatNamespace;\n  constructor(data?: DatDigitalInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatDigital`.\n   */\n  public static getModelName() {\n    return \"DatDigital\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of DatDigital for dynamic purposes.\n  **/\n  public static factory(data: DatDigitalInterface): DatDigital{\n    return new DatDigital(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'DatDigital',\n      plural: 'DatDigitals',\n      path: 'DatDigitals',\n      idName: 'pk_entity',\n      properties: {\n        \"entity_version\": {\n          name: 'entity_version',\n          type: 'number'\n        },\n        \"pk_text\": {\n          name: 'pk_text',\n          type: 'number'\n        },\n        \"quill_doc\": {\n          name: 'quill_doc',\n          type: 'any'\n        },\n        \"string\": {\n          name: 'string',\n          type: 'string'\n        },\n        \"fk_system_type\": {\n          name: 'fk_system_type',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_namespace\": {\n          name: 'fk_namespace',\n          type: 'number'\n        },\n      },\n      relations: {\n        namespace: {\n          name: 'namespace',\n          type: 'DatNamespace',\n          model: 'DatNamespace',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_namespace',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface SysAppContextInterface {\n  \"pk_entity\"?: number;\n  \"description\"?: string;\n  \"label\"?: string;\n}\n\nexport class SysAppContext implements SysAppContextInterface {\n  \"pk_entity\": number;\n  \"description\": string;\n  \"label\": string;\n  constructor(data?: SysAppContextInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysAppContext`.\n   */\n  public static getModelName() {\n    return \"SysAppContext\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SysAppContext for dynamic purposes.\n  **/\n  public static factory(data: SysAppContextInterface): SysAppContext{\n    return new SysAppContext(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SysAppContext',\n      plural: 'SysAppContexts',\n      path: 'SysAppContexts',\n      idName: 'pk_entity',\n      properties: {\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"description\": {\n          name: 'description',\n          type: 'string'\n        },\n        \"label\": {\n          name: 'label',\n          type: 'string'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  // DfhProperty,\n  SysClassField,\n  ProProject\n} from '../index';\n\ndeclare var Object: any;\nexport interface ProClassFieldConfigInterface {\n  \"pk_entity\"?: number;\n  \"fk_project\"?: number;\n  \"fk_property\"?: number;\n  \"fk_class_field\"?: number;\n  \"fk_domain_class\"?: number;\n  \"fk_range_class\"?: number;\n  \"ord_num\"?: number;\n  \"fk_class_for_class_field\"?: number;\n  // property?: DfhProperty;\n  class_field?: SysClassField;\n  project?: ProProject;\n}\n\nexport class ProClassFieldConfig implements ProClassFieldConfigInterface {\n  \"pk_entity\": number;\n  \"fk_project\": number;\n  \"fk_property\": number;\n  \"fk_class_field\": number;\n  \"fk_domain_class\": number;\n  \"fk_range_class\": number;\n  \"ord_num\": number;\n  \"fk_class_for_class_field\": number;\n  // property?: DfhProperty;\n  class_field?: SysClassField;\n  project?: ProProject;\n  constructor(data?: ProClassFieldConfigInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProClassFieldConfig`.\n   */\n  public static getModelName() {\n    return \"ProClassFieldConfig\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of ProClassFieldConfig for dynamic purposes.\n  **/\n  public static factory(data: ProClassFieldConfigInterface): ProClassFieldConfig {\n    return new ProClassFieldConfig(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'ProClassFieldConfig',\n      plural: 'ProClassFieldConfigs',\n      path: 'ProClassFieldConfigs',\n      idName: 'pk_entity',\n      properties: {\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_project\": {\n          name: 'fk_project',\n          type: 'number'\n        },\n        \"fk_property\": {\n          name: 'fk_property',\n          type: 'number'\n        },\n        \"fk_class_field\": {\n          name: 'fk_class_field',\n          type: 'number'\n        },\n        \"fk_domain_class\": {\n          name: 'fk_domain_class',\n          type: 'number'\n        },\n        \"fk_range_class\": {\n          name: 'fk_range_class',\n          type: 'number'\n        },\n        \"ord_num\": {\n          name: 'ord_num',\n          type: 'number'\n        },\n        \"fk_class_for_class_field\": {\n          name: 'fk_class_for_class_field',\n          type: 'number'\n        },\n      },\n      relations: {\n        property: {\n          name: 'property',\n          type: 'DfhProperty',\n          model: 'DfhProperty',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_property',\n          keyTo: 'pk_property'\n        },\n        class_field: {\n          name: 'class_field',\n          type: 'SysClassField',\n          model: 'SysClassField',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_class_field',\n          keyTo: 'pk_entity'\n        },\n        project: {\n          name: 'project',\n          type: 'ProProject',\n          model: 'ProProject',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_project',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface ProDfhClassProjRelInterface {\n  \"pk_entity\"?: number;\n  \"fk_class\": number;\n  \"fk_project\": number;\n  \"enabled_in_entities\"?: boolean;\n}\n\nexport class ProDfhClassProjRel implements ProDfhClassProjRelInterface {\n  \"pk_entity\": number;\n  \"fk_class\": number;\n  \"fk_project\": number;\n  \"enabled_in_entities\": boolean;\n  constructor(data?: ProDfhClassProjRelInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProDfhClassProjRel`.\n   */\n  public static getModelName() {\n    return \"ProDfhClassProjRel\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of ProDfhClassProjRel for dynamic purposes.\n  **/\n  public static factory(data: ProDfhClassProjRelInterface): ProDfhClassProjRel{\n    return new ProDfhClassProjRel(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'ProDfhClassProjRel',\n      plural: 'ProDfhClassProjRels',\n      path: 'ProDfhClassProjRels',\n      idName: 'pk_entity',\n      properties: {\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"fk_project\": {\n          name: 'fk_project',\n          type: 'number'\n        },\n        \"enabled_in_entities\": {\n          name: 'enabled_in_entities',\n          type: 'boolean'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface ProDfhProfileProjRelInterface {\n  \"pk_entity\"?: number;\n  \"fk_profile\": number;\n  \"fk_project\": number;\n  \"enabled\"?: boolean;\n}\n\nexport class ProDfhProfileProjRel implements ProDfhProfileProjRelInterface {\n  \"pk_entity\": number;\n  \"fk_profile\": number;\n  \"fk_project\": number;\n  \"enabled\": boolean;\n  constructor(data?: ProDfhProfileProjRelInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProDfhProfileProjRel`.\n   */\n  public static getModelName() {\n    return \"ProDfhProfileProjRel\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of ProDfhProfileProjRel for dynamic purposes.\n  **/\n  public static factory(data: ProDfhProfileProjRelInterface): ProDfhProfileProjRel{\n    return new ProDfhProfileProjRel(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'ProDfhProfileProjRel',\n      plural: 'ProDfhProfileProjRels',\n      path: 'ProDfhProfileProjRels',\n      idName: 'pk_entity',\n      properties: {\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_profile\": {\n          name: 'fk_profile',\n          type: 'number'\n        },\n        \"fk_project\": {\n          name: 'fk_project',\n          type: 'number'\n        },\n        \"enabled\": {\n          name: 'enabled',\n          type: 'boolean'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel,\n  InfStatement\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfAppellationInterface {\n  \"quill_doc\": any;\n  \"fk_class\": number;\n  \"string\"?: string;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  incoming_statements?: InfStatement[];\n}\n\nexport class InfAppellation implements InfAppellationInterface {\n  \"quill_doc\": any;\n  \"fk_class\": number;\n  \"string\": string;\n  \"pk_entity\": number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  incoming_statements?: InfStatement[];\n  constructor(data?: InfAppellationInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfAppellation`.\n   */\n  public static getModelName() {\n    return \"InfAppellation\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfAppellation for dynamic purposes.\n  **/\n  public static factory(data: InfAppellationInterface): InfAppellation{\n    return new InfAppellation(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfAppellation',\n      plural: 'InfAppellations',\n      path: 'InfAppellations',\n      idName: 'pk_entity',\n      properties: {\n        \"quill_doc\": {\n          name: 'quill_doc',\n          type: 'any'\n        },\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"string\": {\n          name: 'string',\n          type: 'string'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n        incoming_statements: {\n          name: 'incoming_statements',\n          type: 'InfStatement[]',\n          model: 'InfStatement',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_object_info'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel,\n  InfStatement,\n  InfLanguage\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfLangStringInterface {\n  \"fk_class\": number;\n  \"fk_language\": number;\n  \"quill_doc\"?: any;\n  \"string\"?: string;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  incoming_statements?: InfStatement[];\n  language?: InfLanguage;\n}\n\nexport class InfLangString implements InfLangStringInterface {\n  \"fk_class\": number;\n  \"fk_language\": number;\n  \"quill_doc\": any;\n  \"string\": string;\n  \"pk_entity\": number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  incoming_statements?: InfStatement[];\n  language?: InfLanguage;\n  constructor(data?: InfLangStringInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfLangString`.\n   */\n  public static getModelName() {\n    return \"InfLangString\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfLangString for dynamic purposes.\n  **/\n  public static factory(data: InfLangStringInterface): InfLangString{\n    return new InfLangString(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfLangString',\n      plural: 'InfLangStrings',\n      path: 'InfLangStrings',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"fk_language\": {\n          name: 'fk_language',\n          type: 'number'\n        },\n        \"quill_doc\": {\n          name: 'quill_doc',\n          type: 'any'\n        },\n        \"string\": {\n          name: 'string',\n          type: 'string'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n        incoming_statements: {\n          name: 'incoming_statements',\n          type: 'InfStatement[]',\n          model: 'InfStatement',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_object_info'\n        },\n        language: {\n          name: 'language',\n          type: 'InfLanguage',\n          model: 'InfLanguage',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_language',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel,\n  InfStatement,\n  InfPersistentItem\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfDimensionInterface {\n  \"fk_class\": number;\n  \"fk_measurement_unit\": number;\n  \"numeric_value\"?: number;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  incoming_statements?: InfStatement[];\n  measurement_unit?: InfPersistentItem;\n}\n\nexport class InfDimension implements InfDimensionInterface {\n  \"fk_class\": number;\n  \"fk_measurement_unit\": number;\n  \"numeric_value\": number;\n  \"pk_entity\": number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  incoming_statements?: InfStatement[];\n  measurement_unit?: InfPersistentItem;\n  constructor(data?: InfDimensionInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfDimension`.\n   */\n  public static getModelName() {\n    return \"InfDimension\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfDimension for dynamic purposes.\n  **/\n  public static factory(data: InfDimensionInterface): InfDimension{\n    return new InfDimension(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfDimension',\n      plural: 'InfDimensions',\n      path: 'InfDimensions',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"fk_measurement_unit\": {\n          name: 'fk_measurement_unit',\n          type: 'number'\n        },\n        \"numeric_value\": {\n          name: 'numeric_value',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n        incoming_statements: {\n          name: 'incoming_statements',\n          type: 'InfStatement[]',\n          model: 'InfStatement',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_object_info'\n        },\n        measurement_unit: {\n          name: 'measurement_unit',\n          type: 'InfPersistentItem',\n          model: 'InfPersistentItem',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_measurement_unit',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel,\n  InfStatement,\n  InfTextProperty\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfTemporalEntityInterface {\n  \"fk_class\": number;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  outgoing_statements?: InfStatement[];\n  incoming_statements?: InfStatement[];\n  text_properties?: InfTextProperty[];\n}\n\nexport class InfTemporalEntity implements InfTemporalEntityInterface {\n  \"fk_class\": number;\n  \"pk_entity\": number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  outgoing_statements?: InfStatement[];\n  incoming_statements?: InfStatement[];\n  text_properties?: InfTextProperty[];\n  constructor(data?: InfTemporalEntityInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfTemporalEntity`.\n   */\n  public static getModelName() {\n    return \"InfTemporalEntity\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfTemporalEntity for dynamic purposes.\n  **/\n  public static factory(data: InfTemporalEntityInterface): InfTemporalEntity{\n    return new InfTemporalEntity(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfTemporalEntity',\n      plural: 'InfTemporalEntities',\n      path: 'InfTemporalEntities',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n        outgoing_statements: {\n          name: 'outgoing_statements',\n          type: 'InfStatement[]',\n          model: 'InfStatement',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_subject_info'\n        },\n        incoming_statements: {\n          name: 'incoming_statements',\n          type: 'InfStatement[]',\n          model: 'InfStatement',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_object_info'\n        },\n        text_properties: {\n          name: 'text_properties',\n          type: 'InfTextProperty[]',\n          model: 'InfTextProperty',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_concerned_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel,\n  InfTemporalEntity,\n  DatDigital,\n  DatChunk,\n  InfAppellation,\n  InfLangString,\n  InfDimension,\n  InfLanguage,\n  InfPersistentItem,\n  InfTimePrimitive,\n  InfPlace\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfStatementInterface {\n  \"fk_subject_info\"?: number;\n  \"fk_subject_data\"?: number;\n  \"fk_subject_tables_cell\"?: number;\n  \"fk_subject_tables_row\"?: number;\n  \"fk_property\"?: number;\n  \"fk_property_of_property\"?: number;\n  \"fk_object_info\"?: number;\n  \"fk_object_data\"?: number;\n  \"fk_object_tables_cell\"?: number;\n  \"fk_object_tables_row\"?: number;\n  \"is_in_project_count\"?: number;\n  \"is_standard_in_project_count\"?: number;\n  \"community_favorite_calendar\"?: string;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  subject_temporal_entity?: InfTemporalEntity;\n  subject_digital?: DatDigital;\n  subject_chunk?: DatChunk;\n  subject_statement?: InfStatement;\n  object_temporal_entity?: InfTemporalEntity;\n  object_appellation?: InfAppellation;\n  object_lang_string?: InfLangString;\n  object_chunk?: DatChunk;\n  object_dimension?: InfDimension;\n  object_language?: InfLanguage;\n  subject_persistent_item?: InfPersistentItem;\n  object_persistent_item?: InfPersistentItem;\n  object_time_primitive?: InfTimePrimitive;\n  object_place?: InfPlace;\n}\n\nexport class InfStatement implements InfStatementInterface {\n  \"fk_subject_info\"?: number;\n  \"fk_subject_data\"?: number;\n  \"fk_subject_tables_cell\"?: number;\n  \"fk_subject_tables_row\"?: number;\n  \"fk_property\"?: number;\n  \"fk_property_of_property\"?: number;\n  \"fk_object_info\"?: number;\n  \"fk_object_data\"?: number;\n  \"fk_object_tables_cell\"?: number;\n  \"fk_object_tables_row\"?: number;\n  \"is_in_project_count\"?: number;\n  \"is_standard_in_project_count\"?: number;\n  \"community_favorite_calendar\"?: string;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  subject_temporal_entity?: InfTemporalEntity;\n  subject_digital?: DatDigital;\n  subject_chunk?: DatChunk;\n  subject_statement?: InfStatement;\n  object_temporal_entity?: InfTemporalEntity;\n  object_appellation?: InfAppellation;\n  object_lang_string?: InfLangString;\n  object_chunk?: DatChunk;\n  object_dimension?: InfDimension;\n  object_language?: InfLanguage;\n  subject_persistent_item?: InfPersistentItem;\n  object_persistent_item?: InfPersistentItem;\n  object_time_primitive?: InfTimePrimitive;\n  object_place?: InfPlace;\n  constructor(data?: InfStatementInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfStatement`.\n   */\n  public static getModelName() {\n    return \"InfStatement\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfStatement for dynamic purposes.\n  **/\n  public static factory(data: InfStatementInterface): InfStatement {\n    return new InfStatement(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfStatement',\n      plural: 'InfStatements',\n      path: 'InfStatements',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_subject_info\": {\n          name: 'fk_subject_info',\n          type: 'number',\n          default: 0\n        },\n        \"fk_subject_data\": {\n          name: 'fk_subject_data',\n          type: 'number',\n          default: 0\n        },\n        \"fk_subject_tables_cell\": {\n          name: 'fk_subject_tables_cell',\n          type: 'number',\n          default: 0\n        },\n        \"fk_subject_tables_row\": {\n          name: 'fk_subject_tables_row',\n          type: 'number',\n          default: 0\n        },\n        \"fk_property\": {\n          name: 'fk_property',\n          type: 'number',\n          default: 0\n        },\n        \"fk_property_of_property\": {\n          name: 'fk_property_of_property',\n          type: 'number',\n          default: 0\n        },\n        \"fk_object_info\": {\n          name: 'fk_object_info',\n          type: 'number',\n          default: 0\n        },\n        \"fk_object_data\": {\n          name: 'fk_object_data',\n          type: 'number',\n          default: 0\n        },\n        \"fk_object_tables_cell\": {\n          name: 'fk_object_tables_cell',\n          type: 'number',\n          default: 0\n        },\n        \"fk_object_tables_row\": {\n          name: 'fk_object_tables_row',\n          type: 'number',\n          default: 0\n        },\n        \"is_in_project_count\": {\n          name: 'is_in_project_count',\n          type: 'number'\n        },\n        \"is_standard_in_project_count\": {\n          name: 'is_standard_in_project_count',\n          type: 'number'\n        },\n        \"community_favorite_calendar\": {\n          name: 'community_favorite_calendar',\n          type: 'string'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n        subject_temporal_entity: {\n          name: 'subject_temporal_entity',\n          type: 'InfTemporalEntity',\n          model: 'InfTemporalEntity',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_subject_info',\n          keyTo: 'pk_entity'\n        },\n        subject_digital: {\n          name: 'subject_digital',\n          type: 'DatDigital',\n          model: 'DatDigital',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_subject_data',\n          keyTo: 'pk_entity'\n        },\n        subject_chunk: {\n          name: 'subject_chunk',\n          type: 'DatChunk',\n          model: 'DatChunk',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_subject_data',\n          keyTo: 'pk_entity'\n        },\n        subject_statement: {\n          name: 'subject_statement',\n          type: 'InfStatement',\n          model: 'InfStatement',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_subject_info',\n          keyTo: 'pk_entity'\n        },\n        object_temporal_entity: {\n          name: 'object_temporal_entity',\n          type: 'InfTemporalEntity',\n          model: 'InfTemporalEntity',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_object_info',\n          keyTo: 'pk_entity'\n        },\n        object_appellation: {\n          name: 'object_appellation',\n          type: 'InfAppellation',\n          model: 'InfAppellation',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_object_info',\n          keyTo: 'pk_entity'\n        },\n        object_lang_string: {\n          name: 'object_lang_string',\n          type: 'InfLangString',\n          model: 'InfLangString',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_object_info',\n          keyTo: 'pk_entity'\n        },\n        object_chunk: {\n          name: 'object_chunk',\n          type: 'DatChunk',\n          model: 'DatChunk',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_object_data',\n          keyTo: 'pk_entity'\n        },\n        object_dimension: {\n          name: 'object_dimension',\n          type: 'InfDimension',\n          model: 'InfDimension',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_object_info',\n          keyTo: 'pk_entity'\n        },\n        object_language: {\n          name: 'object_language',\n          type: 'InfLanguage',\n          model: 'InfLanguage',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_object_info',\n          keyTo: 'pk_entity'\n        },\n        subject_persistent_item: {\n          name: 'subject_persistent_item',\n          type: 'InfPersistentItem',\n          model: 'InfPersistentItem',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_subject_info',\n          keyTo: 'pk_entity'\n        },\n        object_persistent_item: {\n          name: 'object_persistent_item',\n          type: 'InfPersistentItem',\n          model: 'InfPersistentItem',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_object_info',\n          keyTo: 'pk_entity'\n        },\n        object_time_primitive: {\n          name: 'object_time_primitive',\n          type: 'InfTimePrimitive',\n          model: 'InfTimePrimitive',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_object_info',\n          keyTo: 'pk_entity'\n        },\n        object_place: {\n          name: 'object_place',\n          type: 'InfPlace',\n          model: 'InfPlace',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_object_info',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfLanguageInterface {\n  \"fk_class\"?: number;\n  \"pk_language\"?: string;\n  \"lang_type\"?: string;\n  \"scope\"?: string;\n  \"iso6392b\"?: string;\n  \"iso6392t\"?: string;\n  \"iso6391\"?: string;\n  \"notes\"?: string;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n}\n\nexport class InfLanguage implements InfLanguageInterface {\n  \"fk_class\": number;\n  \"pk_language\": string;\n  \"lang_type\": string;\n  \"scope\": string;\n  \"iso6392b\": string;\n  \"iso6392t\": string;\n  \"iso6391\": string;\n  \"notes\": string;\n  \"pk_entity\": number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  constructor(data?: InfLanguageInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfLanguage`.\n   */\n  public static getModelName() {\n    return \"InfLanguage\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfLanguage for dynamic purposes.\n  **/\n  public static factory(data: InfLanguageInterface): InfLanguage{\n    return new InfLanguage(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfLanguage',\n      plural: 'InfLanguages',\n      path: 'InfLanguages',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"pk_language\": {\n          name: 'pk_language',\n          type: 'string'\n        },\n        \"lang_type\": {\n          name: 'lang_type',\n          type: 'string'\n        },\n        \"scope\": {\n          name: 'scope',\n          type: 'string'\n        },\n        \"iso6392b\": {\n          name: 'iso6392b',\n          type: 'string'\n        },\n        \"iso6392t\": {\n          name: 'iso6392t',\n          type: 'string'\n        },\n        \"iso6391\": {\n          name: 'iso6391',\n          type: 'string'\n        },\n        \"notes\": {\n          name: 'notes',\n          type: 'string'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel,\n  InfStatement,\n  InfTextProperty\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfPersistentItemInterface {\n  \"fk_class\": number;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  incoming_statements?: InfStatement[];\n  outgoing_statements?: InfStatement[];\n  text_properties?: InfTextProperty[];\n}\n\nexport class InfPersistentItem implements InfPersistentItemInterface {\n  \"fk_class\": number;\n  \"pk_entity\": number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  incoming_statements?: InfStatement[];\n  outgoing_statements?: InfStatement[];\n  text_properties?: InfTextProperty[];\n  constructor(data?: InfPersistentItemInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfPersistentItem`.\n   */\n  public static getModelName() {\n    return \"InfPersistentItem\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfPersistentItem for dynamic purposes.\n  **/\n  public static factory(data: InfPersistentItemInterface): InfPersistentItem {\n    return new InfPersistentItem(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfPersistentItem',\n      plural: 'InfPersistentItems',\n      path: 'InfPersistentItems',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n        incoming_statements: {\n          name: 'incoming_statements',\n          type: 'InfStatement[]',\n          model: 'InfStatement',\n          relationType: 'hasMany',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_object_info'\n        },\n        outgoing_statements: {\n          name: 'outgoing_statements',\n          type: 'InfStatement[]',\n          model: 'InfStatement',\n          relationType: 'hasMany',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_subject_info'\n        },\n        dfh_class: {\n          name: 'dfh_class',\n          type: 'DfhClass',\n          model: 'DfhClass',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_class',\n          keyTo: 'pk_class'\n        },\n        text_properties: {\n          name: 'text_properties',\n          type: 'InfTextProperty[]',\n          model: 'InfTextProperty',\n          relationType: 'hasMany',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_concerned_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfTimePrimitiveInterface {\n  \"fk_class\": number;\n  \"julian_day\": number;\n  \"duration\": string;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n}\n\nexport class InfTimePrimitive implements InfTimePrimitiveInterface {\n  \"fk_class\": number;\n  \"julian_day\": number;\n  \"duration\": string;\n  \"pk_entity\": number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  constructor(data?: InfTimePrimitiveInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfTimePrimitive`.\n   */\n  public static getModelName() {\n    return \"InfTimePrimitive\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfTimePrimitive for dynamic purposes.\n  **/\n  public static factory(data: InfTimePrimitiveInterface): InfTimePrimitive{\n    return new InfTimePrimitive(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfTimePrimitive',\n      plural: 'InfTimePrimitives',\n      path: 'InfTimePrimitives',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"julian_day\": {\n          name: 'julian_day',\n          type: 'number'\n        },\n        \"duration\": {\n          name: 'duration',\n          type: 'string'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfPlaceInterface {\n  \"long\": number;\n  \"lat\": number;\n  \"fk_class\": number;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n}\n\nexport class InfPlace implements InfPlaceInterface {\n  \"long\": number;\n  \"lat\": number;\n  \"fk_class\": number;\n  \"pk_entity\": number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  constructor(data?: InfPlaceInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfPlace`.\n   */\n  public static getModelName() {\n    return \"InfPlace\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfPlace for dynamic purposes.\n  **/\n  public static factory(data: InfPlaceInterface): InfPlace{\n    return new InfPlace(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfPlace',\n      plural: 'InfPlaces',\n      path: 'InfPlaces',\n      idName: 'pk_entity',\n      properties: {\n        \"long\": {\n          name: 'long',\n          type: 'number'\n        },\n        \"lat\": {\n          name: 'lat',\n          type: 'number'\n        },\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface DatNamespaceInterface {\n  \"pk_entity\"?: number;\n  \"fk_root_namespace\"?: number;\n  \"fk_project\": number;\n  \"standard_label\": string;\n}\n\nexport class DatNamespace implements DatNamespaceInterface {\n  \"pk_entity\": number;\n  \"fk_root_namespace\": number;\n  \"fk_project\": number;\n  \"standard_label\": string;\n  constructor(data?: DatNamespaceInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatNamespace`.\n   */\n  public static getModelName() {\n    return \"DatNamespace\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of DatNamespace for dynamic purposes.\n  **/\n  public static factory(data: DatNamespaceInterface): DatNamespace{\n    return new DatNamespace(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'DatNamespace',\n      plural: 'DatNamespaces',\n      path: 'DatNamespaces',\n      idName: 'pk_entity',\n      properties: {\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_root_namespace\": {\n          name: 'fk_root_namespace',\n          type: 'number'\n        },\n        \"fk_project\": {\n          name: 'fk_project',\n          type: 'number'\n        },\n        \"standard_label\": {\n          name: 'standard_label',\n          type: 'string'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel,\n  InfPersistentItem,\n  InfTemporalEntity,\n  InfLanguage,\n  SysClassField\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfTextPropertyInterface {\n  \"fk_class_field\": number;\n  \"fk_concerned_entity\": number;\n  \"fk_language\": number;\n  \"quill_doc\": any;\n  \"string\"?: string;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  persistent_item?: InfPersistentItem;\n  temporal_entity?: InfTemporalEntity;\n  language?: InfLanguage;\n  class_field?: SysClassField;\n}\n\nexport class InfTextProperty implements InfTextPropertyInterface {\n  \"fk_class_field\": number;\n  \"fk_concerned_entity\": number;\n  \"fk_language\": number;\n  \"quill_doc\": any;\n  \"string\": string;\n  \"pk_entity\": number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  persistent_item?: InfPersistentItem;\n  temporal_entity?: InfTemporalEntity;\n  language?: InfLanguage;\n  class_field?: SysClassField;\n  constructor(data?: InfTextPropertyInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfTextProperty`.\n   */\n  public static getModelName() {\n    return \"InfTextProperty\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfTextProperty for dynamic purposes.\n  **/\n  public static factory(data: InfTextPropertyInterface): InfTextProperty{\n    return new InfTextProperty(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfTextProperty',\n      plural: 'InfTextProperties',\n      path: 'InfTextProperties',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_class_field\": {\n          name: 'fk_class_field',\n          type: 'number'\n        },\n        \"fk_concerned_entity\": {\n          name: 'fk_concerned_entity',\n          type: 'number'\n        },\n        \"fk_language\": {\n          name: 'fk_language',\n          type: 'number'\n        },\n        \"quill_doc\": {\n          name: 'quill_doc',\n          type: 'any'\n        },\n        \"string\": {\n          name: 'string',\n          type: 'string'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n        persistent_item: {\n          name: 'persistent_item',\n          type: 'InfPersistentItem',\n          model: 'InfPersistentItem',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_concerned_entity',\n          keyTo: 'pk_entity'\n        },\n        temporal_entity: {\n          name: 'temporal_entity',\n          type: 'InfTemporalEntity',\n          model: 'InfTemporalEntity',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_concerned_entity',\n          keyTo: 'pk_entity'\n        },\n        language: {\n          name: 'language',\n          type: 'InfLanguage',\n          model: 'InfLanguage',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_language',\n          keyTo: 'pk_entity'\n        },\n        class_field: {\n          name: 'class_field',\n          type: 'SysClassField',\n          model: 'SysClassField',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_class_field',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface SysSystemTypeInterface {\n  \"notes\"?: string;\n  \"definition\"?: string;\n  \"st_schema_name\"?: string;\n  \"st_table_name\"?: string;\n  \"st_column_name\"?: string;\n  \"st_group\"?: string;\n  \"pk_entity\"?: number;\n}\n\nexport class SysSystemType implements SysSystemTypeInterface {\n  \"notes\": string;\n  \"definition\": string;\n  \"st_schema_name\": string;\n  \"st_table_name\": string;\n  \"st_column_name\": string;\n  \"st_group\": string;\n  \"pk_entity\": number;\n  constructor(data?: SysSystemTypeInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysSystemType`.\n   */\n  public static getModelName() {\n    return \"SysSystemType\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SysSystemType for dynamic purposes.\n  **/\n  public static factory(data: SysSystemTypeInterface): SysSystemType{\n    return new SysSystemType(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SysSystemType',\n      plural: 'SysSystemTypes',\n      path: 'SysSystemTypes',\n      idName: 'pk_entity',\n      properties: {\n        \"notes\": {\n          name: 'notes',\n          type: 'string'\n        },\n        \"definition\": {\n          name: 'definition',\n          type: 'string'\n        },\n        \"st_schema_name\": {\n          name: 'st_schema_name',\n          type: 'string'\n        },\n        \"st_table_name\": {\n          name: 'st_table_name',\n          type: 'string'\n        },\n        \"st_column_name\": {\n          name: 'st_column_name',\n          type: 'string'\n        },\n        \"st_group\": {\n          name: 'st_group',\n          type: 'string'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport { merge, Observable, Subject } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { LoopBackFilter, StatFilter } from './index';\nimport { SocketConnection } from '../sockets/socket.connections';\n/**\n * @class FireLoopRef<T>\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * This class allows to create FireLoop References which will be in sync with\n * Server. It also allows to create FireLoop Reference Childs, that allows to\n * persist data according the generic model relationships.\n **/\nexport class FireLoopRef<T> {\n  // Reference ID\n  private id: number = this.buildId();\n  // Model Instance (For child references, empty on root references)\n  private instance: any;\n  // Model Childs\n  private childs: any = {};\n  // Disposable Events\n  private disposable: { [key: string]: any } = {};\n  /**\n  * @method constructor\n  * @param {any} model The model we want to create a reference\n  * @param {SocketConnection} socket Socket connection to handle events\n  * @param {FireLoopRef<any>} parent Parent FireLoop model reference\n  * @param {string} relationship The defined model relationship\n  * @description\n  * The constructor will receive the required parameters and then will register this reference\n  * into the server, needed to allow multiple references for the same model.\n  * This ids are referenced into this specific client connection and won't have issues\n  * with other client ids.\n  **/\n  constructor(\n    private model: any,\n    private socket: SocketConnection,\n    private parent: FireLoopRef<any> = null,\n    private relationship: string = null\n  ) {\n    this.socket.emit(\n      `Subscribe.${!parent ? model.getModelName() : parent.model.getModelName()}`,\n      { id: this.id, scope: model.getModelName(), relationship: relationship }\n    );\n    return this;\n  }\n  /**\n  * @method dispose\n  * @return {void}\n  * @description\n  * This method is super important to avoid memory leaks in the server.\n  * This method requires to be called on components destroy\n  *\n  * ngOnDestroy() {\n  *  this.someRef.dispose() \n  * }\n  **/\n  public dispose(): void {\n    const subscription = this.operation('dispose', {}).subscribe(() => {\n      Object.keys(this.disposable).forEach((channel: string) => {\n        this.socket.removeListener(channel, this.disposable[channel]);\n        this.socket.removeAllListeners(channel);\n      });\n      subscription.unsubscribe();\n    });\n  }\n  /**\n  * @method upsert\n  * @param {T} data Persisted model instance\n  * @return {Observable<T>}\n  * @description\n  * Operation wrapper for upsert function.\n  **/\n  public upsert(data: T): Observable<T> {\n    return this.operation('upsert', data);\n  }\n  /**\n  * @method create\n  * @param {T} data Persisted model instance\n  * @return {Observable<T>}\n  * @description\n  * Operation wrapper for create function.\n  **/\n  public create(data: T): Observable<T> {\n    return this.operation('create', data);\n  }\n  /**\n  * @method remove\n  * @param {T} data Persisted model instance\n  * @return {Observable<T>}\n  * @description\n  * Operation wrapper for remove function.\n  **/\n  public remove(data: T): Observable<T> {\n    return this.operation('remove', data);\n  }\n  /**\n  * @method remote\n  * @param {string} method Remote method name\n  * @param {any[]=} params Parameters to be applied into the remote method\n  * @param {boolean} broadcast Flag to define if the method results should be broadcasted\n  * @return {Observable<any>}\n  * @description\n  * This method calls for any remote method. It is flexible enough to\n  * allow you call either built-in or custom remote methods.\n  *\n  * FireLoop provides this interface to enable calling remote methods\n  * but also to optionally send any defined accept params that will be\n  * applied within the server.\n  **/\n  public remote(method: string, params?: any[], broadcast: boolean = false): Observable<any> {\n    return this.operation('remote', { method, params, broadcast });\n  }\n  /**\n  * @method onRemote\n  * @param {string} method Remote method name\n  * @return {Observable<any>}\n  * @description\n  * This method listen for public broadcasted remote method results. If the remote method\n  * execution is not public only the owner will receive the result data.\n  **/\n  public onRemote(method: string): Observable<any> {\n    let event: string = 'remote';\n    if (!this.relationship) {\n      event = `${this.model.getModelName()}.${event}`;\n    } else {\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}`;\n    }\n    return this.broadcasts(event, {});\n  }\n  /**\n  * @method on\n  * @param {string} event Event name\n  * @param {LoopBackFilter} filter LoopBack query filter\n  * @return {Observable<T>}\n  * @description\n  * Listener for different type of events. Valid events are:\n  *   - change (Triggers on any model change -create, update, remove-)\n  *   - value (Triggers on new entries)\n  *   - child_added (Triggers when a child is added)\n  *   - child_updated (Triggers when a child is updated)\n  *   - child_removed (Triggers when a child is removed)\n  **/\n  public on(event: string, filter: LoopBackFilter = { limit: 100, order: 'id DESC' }): Observable<T | T[]> {\n    if (event === 'remote') {\n      throw new Error('The \"remote\" event is not allowed using \"on()\" method, use \"onRemote()\" instead');\n    }\n    let request: any;\n    if (!this.relationship) {\n      event = `${this.model.getModelName()}.${event}`;\n      request = { filter };\n    } else {\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}`;\n      request = { filter, parent: this.parent.instance };\n    }\n    if (event.match(/(value|change|stats)/)) {\n      return merge(\n        this.pull(event, request),\n        this.broadcasts(event, request)\n      );\n    } else {\n      return this.broadcasts(event, request);\n    }\n  }\n  /**\n  * @method stats\n  * @param {LoopBackFilter=} filter LoopBack query filter\n  * @return {Observable<T>}\n  * @description\n  * Listener for real-time statistics, will trigger on every\n  * statistic modification.\n  * TIP: You can improve performance by adding memcached to LoopBack models.\n  **/\n  public stats(filter?: StatFilter): Observable<T | T[]> {\n    return this.on('stats', filter);\n  }\n  /**\n  * @method make\n  * @param {any} instance Persisted model instance reference\n  * @return {Observable<T>}\n  * @description\n  * This method will set a model instance into this a new FireLoop Reference.\n  * This allows to persiste parentship when creating related instances.\n  *\n  * It also allows to have multiple different persisted instance references to same model.\n  * otherwise if using singleton will replace a previous instance for a new instance, when\n  * we actually want to have more than 1 instance of same model.\n  **/\n  public make(instance: any): FireLoopRef<T> {\n    let reference: FireLoopRef<T> = new FireLoopRef<T>(this.model, this.socket);\n    reference.instance = instance;\n    return reference;\n  }\n  /**\n  * @method child\n  * @param {string} relationship A defined model relationship\n  * @return {FireLoopRef<T>}\n  * @description\n  * This method creates child references, which will persist related model\n  * instances. e.g. Room.messages, where messages belongs to a specific Room.\n  **/\n  public child<T>(relationship: string): FireLoopRef<T> {\n    // Return singleton instance\n    if (this.childs[relationship]) { return this.childs[relationship]; }\n    // Try to get relation settings from current model\n    let settings: any = this.model.getModelDefinition().relations[relationship];\n    // Verify the relationship actually exists\n    if (!settings) {\n      throw new Error(`Invalid model relationship ${this.model.getModelName()} <-> ${relationship}, verify your model settings.`);\n    }\n    // Verify if the relationship model is public\n    if (settings.model === '') {\n      throw new Error(`Relationship model is private, cam't use ${relationship} unless you set your model as public.`);\n    }\n    // Lets get a model reference and add a reference for all of the models\n    let model: any = this.model.models.get(settings.model);\n    model.models = this.model.models;\n    // If everything goes well, we will store a child reference and return it.\n    this.childs[relationship] = new FireLoopRef<T>(model, this.socket, this, relationship);\n    return this.childs[relationship];\n  }\n  /**\n  * @method pull\n  * @param {string} event Event name\n  * @param {any} request Type of request, can be LB-only filter or FL+LB filter\n  * @return {Observable<T>}\n  * @description\n  * This method will pull initial data from server\n  **/\n  private pull(event: string, request: any): Observable<T> {\n    let sbj: Subject<T> = new Subject<T>();\n    let that: FireLoopRef<T> = this;\n    let nowEvent: any = `${event}.pull.requested.${this.id}`;\n    this.socket.emit(`${event}.pull.request.${this.id}`, request);\n    function pullNow(data: any) {\n      if (that.socket.removeListener) {\n        that.socket.removeListener(nowEvent, pullNow);\n      }\n      sbj.next(data);\n    };\n    this.socket.on(nowEvent, pullNow);\n    return sbj.asObservable();\n  }\n  /**\n  * @method broadcasts\n  * @param {string} event Event name\n  * @param {any} request Type of request, can be LB-only filter or FL+LB filter\n  * @return {Observable<T>}\n  * @description\n  * This will listen for public broadcasts announces and then request\n  * for data according a specific client request, not shared with other clients.\n  **/\n  private broadcasts(event: string, request: any): Observable<T> {\n    let sbj: Subject<T> = new Subject<T>();\n    let channels: { announce: string, broadcast: string } = {\n      announce: `${event}.broadcast.announce.${this.id}`,\n      broadcast: `${event}.broadcast.${this.id}`\n    };\n    let that = this;\n    // Announces Handler\n    this.disposable[channels.announce] = function (res: T) {\n      that.socket.emit(`${event}.broadcast.request.${that.id}`, request)\n    };\n    // Broadcasts Handler\n    this.disposable[channels.broadcast] = function (data: any) {\n      sbj.next(data);\n    };\n    this.socket.on(channels.announce, this.disposable[channels.announce]);\n    this.socket.on(channels.broadcast, this.disposable[channels.broadcast]);\n    return sbj.asObservable();\n  }\n  /**\n  * @method operation\n  * @param {string} event Event name\n  * @param {any} data Any type of data sent to the server\n  * @return {Observable<T>}\n  * @description\n  * This internal method will run operations depending on current context \n  **/\n  private operation(event: string, data: any): Observable<T> {\n    if (!this.relationship) {\n      event = `${this.model.getModelName()}.${event}.${this.id}`;\n    } else {\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}.${this.id}`;\n    }\n    let subject: Subject<T> = new Subject<T>();\n    let config: { data: any, parent: any } = {\n      data,\n      parent: this.parent && this.parent.instance ? this.parent.instance : null\n    };\n    this.socket.emit(event, config);\n    let resultEvent: string = '';\n    if (!this.relationship) {\n      resultEvent = `${this.model.getModelName()}.value.result.${this.id}`;\n    } else {\n      resultEvent = `${this.parent.model.getModelName()}.${this.relationship}.value.result.${this.id}`;\n    }\n    this.socket.on(resultEvent, (res: any) => {\n      if (res.error) {\n        subject.error(res);\n      } else {\n        subject.next(res);\n      }\n    });\n    if (event.match('dispose')) {\n      setTimeout(() => subject.next());\n    }\n    // This event listener will be wiped within socket.connections\n    this.socket.sharedObservables.sharedOnDisconnect.subscribe(() => subject.complete());\n    return subject.asObservable().pipe(catchError((error: any) => Observable.throw(error)));\n  }\n  /**\n  * @method buildId\n  * @return {number}\n  * @description\n  * This internal method build an ID for this reference, this allows to have\n  * multiple references for the same model or relationships.\n  **/\n  private buildId(): number {\n    return Date.now() + Math.floor(Math.random() * 100800) *\n      Math.floor(Math.random() * 100700) *\n      Math.floor(Math.random() * 198500);\n  }\n}\n","/* tslint:disable */\nimport { FireLoopRef } from './index';\n\nexport class FireLoop {\n\n  private references: any = {};\n\n  constructor(private socket: any, private models: { get: Function }) {}\n\n  public ref<T>(model: any): FireLoopRef<T> {\n    let name: string = model.getModelName();\n    model.models = this.models;\n    this.references[name] = new FireLoopRef<T>(model, this.socket);\n    return this.references[name];\n  }\n}\n","/* tslint:disable */\n/**\n *Â @module SocketDriver\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The SocketDriver class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n **/\nexport class SocketDriver {\n  connect(url: any, options: any) {}\n}\n","/* tslint:disable */\n/**\n* @module LoopBackConfig\n* @description\n*\n* The LoopBackConfig module help developers to externally \n* configure the base url and api version for loopback.io\n*\n* Example\n*\n* import { LoopBackConfig } from './sdk';\n* \n* @Component() // No metadata needed for this module\n*\n* export class MyApp {\n*   constructor() {\n*     LoopBackConfig.setBaseURL('http://localhost:3000');\n*     LoopBackConfig.setApiVersion('api');\n*   }\n* }\n**/\nexport class LoopBackConfig {\n  private static path: string = '//:3000';\n  private static version: string |Â number = 'lb3-api';\n  private static authPrefix: string = '';\n  private static debug: boolean = true;\n  private static filterOn: string = 'headers';\n  private static whereOn: string = 'headers';\n  private static secure: boolean = false;\n  private static withCredentials: boolean = false;\n\n  public static setApiVersion(version: string = 'api'): void {\n    LoopBackConfig.version = version;\n  }\n  \n  public static getApiVersion(): string | number {\n    return LoopBackConfig.version;\n  }\n\n  public static setBaseURL(url: string = '/'): void {\n    LoopBackConfig.path = url;\n  }\n  \n  public static getPath(): string {\n    return LoopBackConfig.path;\n  }\n\n  public static setAuthPrefix(authPrefix: string = ''): void {\n    LoopBackConfig.authPrefix = authPrefix;\n  }\n\n  public static getAuthPrefix(): string {\n    return LoopBackConfig.authPrefix;\n  }\n\n  public static setDebugMode(isEnabled: boolean): void {\n    LoopBackConfig.debug = isEnabled;\n  }\n\n  public static debuggable(): boolean {\n    return LoopBackConfig.debug;\n  }\n\n  public static filterOnUrl(): void {\n    LoopBackConfig.filterOn = 'url';\n  }\n\n  public static filterOnHeaders(): void {\n    LoopBackConfig.filterOn = 'headers';\n  }\n\n  public static whereOnUrl(): void {\n    LoopBackConfig.whereOn = 'url';\n  }\n\n  public static whereOnHeaders(): void {\n    LoopBackConfig.whereOn = 'headers';\n  }\n\n  public static isHeadersFilteringSet(): boolean {\n    return (LoopBackConfig.filterOn === 'headers');\n  }\n\n  public static isHeadersWhereSet(): boolean {\n    return (LoopBackConfig.whereOn === 'headers');\n  }\n\n  public static setSecureWebSockets(): void {\n    LoopBackConfig.secure = true;\n  }\n\n  public static unsetSecureWebSockets(): void {\n    LoopBackConfig.secure = false;\n  }\n\n  public static isSecureWebSocketsSet(): boolean {\n    return LoopBackConfig.secure;\n  }\n\n  public static setRequestOptionsCredentials(withCredentials: boolean = false): void {\n    LoopBackConfig.withCredentials = withCredentials;\n  }\n\n  public static getRequestOptionsCredentials(): boolean {\n    return LoopBackConfig.withCredentials;\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, NgZone } from '@angular/core';\nimport { SocketDriver } from './socket.driver';\nimport { AccessToken } from '../models';\nimport { Observable, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\nimport { LoopBackConfig } from '../lb.config';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketConnection\n* @license MIT\n* @description\n* This module handle socket connections and return singleton instances for each\n* connection, it will use the SDK Socket Driver Available currently supporting\n* Angular 2 for web, NativeScript 2 and Angular Universal.\n**/\n@Injectable()\nexport class SocketConnection {\n  private socket: any;\n  private subjects: {\n    onConnect: Subject<any>,\n    onDisconnect: Subject<any>,\n    onAuthenticated: Subject<any>,\n    onUnAuthorized: Subject<any>\n  } = {\n    onConnect: new Subject(),\n    onDisconnect: new Subject(),\n    onAuthenticated: new Subject(),\n    onUnAuthorized: new Subject()\n  };\n  public sharedObservables: {\n    sharedOnConnect?: Observable<any>,\n    sharedOnDisconnect?: Observable<any>,\n    sharedOnAuthenticated?: Observable<any>,\n    sharedOnUnAuthorized?: Observable<any>\n  } = {};\n  public authenticated: boolean = false;\n  /**\n   * @method constructor\n   * @param {SocketDriver} driver Socket IO Driver\n   * @param {NgZone} zone Angular 2 Zone\n   * @description\n   * The constructor will set references for the shared hot observables from\n   * the class subjects. Then it will subscribe each of these observables\n   * that will create a channel that later will be shared between subscribers.\n   **/\n  constructor(\n    @Inject(SocketDriver) private driver: SocketDriver,\n    @Inject(NgZone) private zone: NgZone\n  ) {\n    this.sharedObservables = {\n      sharedOnConnect: this.subjects.onConnect.asObservable().pipe(share()),\n      sharedOnDisconnect: this.subjects.onDisconnect.asObservable().pipe(share()),\n      sharedOnAuthenticated: this.subjects.onAuthenticated.asObservable().pipe(share()),\n      sharedOnUnAuthorized: this.subjects.onUnAuthorized.asObservable().pipe(share())\n    };\n    // This is needed to create the first channel, subsequents will share the connection\n    // We are using Hot Observables to avoid duplicating connection status events.\n    this.sharedObservables.sharedOnConnect.subscribe();\n    this.sharedObservables.sharedOnDisconnect.subscribe();\n    this.sharedObservables.sharedOnAuthenticated.subscribe();\n    this.sharedObservables.sharedOnUnAuthorized.subscribe();\n  }\n  /**\n   * @method connect\n   * @param {AccessToken} token AccesToken instance\n   * @return {void}\n   * @description\n   * This method will create a new socket connection when not previously established.\n   * If there is a broken connection it will re-connect.\n   **/\n  public connect(token: AccessToken = null): void {\n    if (!this.socket) {\n      console.info('Creating a new connection with: ', LoopBackConfig.getPath());\n      // Create new socket connection\n      this.socket = this.driver.connect(LoopBackConfig.getPath(), {\n        log: false,\n        secure: LoopBackConfig.isSecureWebSocketsSet(),\n        forceNew: true,\n        forceWebsockets: true,\n        transports: ['websocket']\n      });\n      // Listen for connection\n      this.on('connect', () => {\n        this.subjects.onConnect.next('connected');\n        // Authenticate or start heartbeat now    \n        this.emit('authentication', token);\n      });\n      // Listen for authentication\n      this.on('authenticated', () => {\n        this.authenticated = true;\n        this.subjects.onAuthenticated.next();\n        this.heartbeater();\n      })\n      // Listen for authentication\n      this.on('unauthorized', (err: any) => {\n        this.authenticated = false;\n        this.subjects.onUnAuthorized.next(err);\n      })\n      // Listen for disconnections\n      this.on('disconnect', (status: any) => this.subjects.onDisconnect.next(status));\n    } else if (this.socket && !this.socket.connected){\n      if (typeof this.socket.off === 'function') {\n        this.socket.off();\n      }\n      if (typeof this.socket.destroy === 'function') {\n        this.socket.destroy();\n      }\n      delete this.socket;\n      this.connect(token);\n    }\n  }\n  /**\n   * @method isConnected\n   * @return {boolean}\n   * @description\n   * This method will return true or false depending on established connections\n   **/\n  public isConnected(): boolean {\n    return (this.socket && this.socket.connected);\n  }\n  /**\n   * @method on\n   * @param {string} event Event name\n   * @param {Function} handler Event listener handler\n   * @return {void}\n   * @description\n   * This method listen for server events from the current WebSocket connection.\n   * This method is a facade that will wrap the original \"on\" method and run it\n   * within the Angular Zone to avoid update issues.\n   **/\n  public on(event: string, handler: Function): void {\n    this.socket.on(event, (data: any) => this.zone.run(() => handler(data)));\n  }\n  /**\n   * @method emit\n   * @param {string} event Event name\n   * @param {any=} data Any type of data\n   * @return {void}\n   * @description\n   * This method will send any type of data to the server according the event set.\n   **/\n  public emit(event: string, data?: any): void {\n    if (data) {\n      this.socket.emit(event, data);\n    } else {\n      this.socket.emit(event);\n    }\n  }\n  /**\n   * @method removeListener\n   * @param {string} event Event name\n   * @param {Function} handler Event listener handler\n   * @return {void}\n   * @description\n   * This method will wrap the original \"on\" method and run it within the Angular Zone\n   * Note: off is being used since the nativescript socket io client does not provide\n   * removeListener method, but only provides with off which is provided in any platform.\n   **/\n  public removeListener(event: string, handler: Function): void {\n    if (typeof this.socket.off === 'function') {\n      this.socket.off(event, handler);\n    }\n  }\n  /**\n   * @method removeAllListeners\n   * @param {string} event Event name\n   * @param {Function} handler Event listener handler\n   * @return {void}\n   * @description\n   * This method will wrap the original \"on\" method and run it within the Angular Zone\n   * Note: off is being used since the nativescript socket io client does not provide\n   * removeListener method, but only provides with off which is provided in any platform.\n   **/\n  public removeAllListeners(event: string): void {\n    if (typeof this.socket.removeAllListeners === 'function') {\n      this.socket.removeAllListeners(event);\n    }\n  }\n  /**\n   * @method disconnect\n   * @return {void}\n   * @description\n   * This will disconnect the client from the server\n   **/\n  public disconnect(): void {\n    this.socket.disconnect();\n  }\n  /**\n   * @method heartbeater\n   * @return {void}\n   * @description\n   * This will keep the connection as active, even when users are not sending\n   * data, this avoids disconnection because of a connection not being used.\n   **/\n  private heartbeater(): void {\n    let heartbeater: any = setInterval(() => {\n      if (this.isConnected()) {\n        this.socket.emit('lb-ping');\n      } else {\n        this.socket.removeAllListeners('lb-pong');\n        clearInterval(heartbeater);\n      }\n    }, 15000);\n    this.socket.on('lb-pong', (data: any) => console.info('Heartbeat: ', data));\n  }\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { DatChunk } from '../../models/DatChunk';\nimport { DatColumn } from '../../models/DatColumn';\nimport { DatDigital } from '../../models/DatDigital';\nimport { DatNamespace } from '../../models/DatNamespace';\nimport { DatTextProperty } from '../../models/DatTextProperty';\nimport { DfhLabel } from '../../models/DfhLabel';\nimport { DfhProfile } from '../../models/DfhProfile';\n// import { DfhProperty } from '../../models/DfhProperty';\nimport { Email } from '../../models/Email';\nimport { InfAppellation } from '../../models/InfAppellation';\nimport { InfDimension } from '../../models/InfDimension';\nimport { InfLangString } from '../../models/InfLangString';\nimport { InfLanguage } from '../../models/InfLanguage';\nimport { InfPersistentItem } from '../../models/InfPersistentItem';\nimport { InfPlace } from '../../models/InfPlace';\nimport { InfStatement } from '../../models/InfStatement';\nimport { InfTemporalEntity } from '../../models/InfTemporalEntity';\nimport { InfTextProperty } from '../../models/InfTextProperty';\nimport { InfTimePrimitive } from '../../models/InfTimePrimitive';\nimport { ProClassFieldConfig } from '../../models/ProClassFieldConfig';\nimport { ProDfhClassProjRel } from '../../models/ProDfhClassProjRel';\nimport { ProDfhProfileProjRel } from '../../models/ProDfhProfileProjRel';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { ProProject } from '../../models/ProProject';\nimport { ProTextProperty } from '../../models/ProTextProperty';\nimport { PubAccount } from '../../models/PubAccount';\nimport { PubAccountProjectRel } from '../../models/PubAccountProjectRel';\nimport { SchemaObject } from '../../models/SchemaObject';\nimport { SysAppContext } from '../../models/SysAppContext';\nimport { SysClassField } from '../../models/SysClassField';\nimport { SysClassFieldPropertyRel } from '../../models/SysClassFieldPropertyRel';\nimport { SysClassHasTypeProperty } from '../../models/SysClassHasTypeProperty';\nimport { SysSystemRelevantClass } from '../../models/SysSystemRelevantClass';\nimport { SysSystemType } from '../../models/SysSystemType';\n\nexport interface Models { [name: string]: any }\n\n@Injectable()\nexport class SDKModels {\n\n  private models: Models = {\n    SchemaObject: SchemaObject,\n    SysClassFieldPropertyRel: SysClassFieldPropertyRel,\n    SysClassField: SysClassField,\n    SysClassHasTypeProperty: SysClassHasTypeProperty,\n    SysSystemRelevantClass: SysSystemRelevantClass,\n    PubAccount: PubAccount,\n    Email: Email,\n    ProProject: ProProject,\n    PubAccountProjectRel: PubAccountProjectRel,\n    ProTextProperty: ProTextProperty,\n    ProInfoProjRel: ProInfoProjRel,\n    DfhProfile: DfhProfile,\n    DfhLabel: DfhLabel,\n    DatChunk: DatChunk,\n    DatColumn: DatColumn,\n    DatTextProperty: DatTextProperty,\n    DatDigital: DatDigital,\n    SysAppContext: SysAppContext,\n    ProClassFieldConfig: ProClassFieldConfig,\n    ProDfhClassProjRel: ProDfhClassProjRel,\n    ProDfhProfileProjRel: ProDfhProfileProjRel,\n    InfAppellation: InfAppellation,\n    InfLangString: InfLangString,\n    InfDimension: InfDimension,\n    InfTemporalEntity: InfTemporalEntity,\n    InfStatement: InfStatement,\n    InfLanguage: InfLanguage,\n    InfPersistentItem: InfPersistentItem,\n    InfTimePrimitive: InfTimePrimitive,\n    InfPlace: InfPlace,\n    DatNamespace: DatNamespace,\n    InfTextProperty: InfTextProperty,\n    SysSystemType: SysSystemType,\n\n  };\n\n  public get(modelName: string): any {\n    return this.models[modelName];\n  }\n\n  public getAll(): Models {\n    return this.models;\n  }\n\n  public getModelNames(): string[] {\n    return Object.keys(this.models);\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject } from '@angular/core';\nimport { IO } from './io.service';\nimport { LoopBackAuth } from './auth.service';\nimport { FireLoop } from '../../models/FireLoop';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { SDKModels } from '../custom/SDKModels';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { share } from 'rxjs/operators';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@johncasarrubias>\n* @module RealTime\n* @license MIT\n* @description\n* This module is a real-time interface for using socket connections, its main purpose\n* is to make sure that when there is a valid connection, it will create instances\n* of the different real-time functionalities like FireLoop, PubSub and IO.\n**/\n@Injectable()\nexport class RealTime {\n  public IO: IO;\n  public FireLoop: FireLoop;\n  private connecting: boolean = false;\n  private onReadySubject: Subject<string> = new Subject<string>();\n  private sharedOnReady: Observable<string> = this.onReadySubject.asObservable().pipe(share());\n  /**\n  * @method constructor\n  * @param {SocketConnection} connection WebSocket connection service\n  * @param {SDKModels} models Model provider service\n  * @param {LoopBackAuth} auth LoopBack authentication service\n  * @description\n  * It will intialize the shared on ready communication channel.\n  **/\n  constructor(\n    @Inject(SocketConnection) public connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth\n  ) {\n    this.sharedOnReady.subscribe();\n  }\n  /**\n  * @method onDisconnect\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is disconnected from server.\n  **/\n  onDisconnect(): Observable<any> {\n    return this.connection.sharedObservables.sharedOnDisconnect;\n  }\n  /**\n  * @method onAuthenticated\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is authenticated with the server.\n  **/\n  onAuthenticated(): Observable<any> {\n    return this.connection.sharedObservables.sharedOnAuthenticated;\n  }\n  /**\n  * @method onUnAuthorized\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is not authorized to connect with the server.\n  **/\n  onUnAuthorized(): Observable<any> {\n    return this.connection.sharedObservables.sharedOnUnAuthorized;\n  }\n  /**\n  * @method onReady\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is Ready for broadcasting.\n  * and will register connection flow events to notify subscribers.\n  **/\n  public onReady(): Observable<any> {\n    // If there is a valid connection, then we just send back to the EventLoop\n    // Or next will be executed before the actual subscription.\n    if (this.connection.isConnected()) {\n      let to = setTimeout(() => {\n        this.onReadySubject.next('shared-connection');\n        clearTimeout(to);\n      });\n    // Else if there is a current attempt of connection we wait for the prior\n    // process that started the connection flow.\n    } else if (this.connecting) {\n      let ti = setInterval(() => {\n        if (this.connection.isConnected()) {\n          this.onReadySubject.next('shared-connection');\n          clearInterval(ti);\n        }\n      }, 500);\n    // If there is not valid connection or attempt, then we start the connection flow\n    // and make sure we notify all the onReady subscribers when done.\n    // Also it will listen for desconnections so we unsubscribe and avoid both:\n    // Memory leaks and duplicated triggered events.\n    } else {\n      this.connecting = true;\n      this.connection.connect(this.auth.getToken());\n      this.IO       = new IO(this.connection);\n      this.FireLoop = new FireLoop(this.connection, this.models);\n      // Fire event for those subscribed \n      let s1: Subscription = this.connection.sharedObservables.sharedOnConnect.subscribe(() => {\n        console.log('Real-Time connection has been established');\n        this.connecting = false;\n        this.onReadySubject.next('connected');\n        let s2: Subscription = this.connection.sharedObservables.sharedOnDisconnect.subscribe(() => {\n          s1.unsubscribe();\n          s2.unsubscribe();\n        });\n      });\n    }\n    return this.sharedOnReady;\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpRequest, HttpParams, HttpResponse, HttpParameterCodec } from '@angular/common/http';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ErrorHandler } from './error.service';\nimport { LoopBackAuth } from './auth.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackFilter, AccessToken } from '../../models/BaseModels';\nimport { SDKModels } from '../custom/SDKModels';\nimport { Observable, Subject } from 'rxjs';\nimport { catchError, map, filter } from 'rxjs/operators';\nimport { SocketConnection } from '../../sockets/socket.connections';\n// Making Sure EventSource Type is available to avoid compilation issues.\ndeclare var EventSource: any;\nclass CustomQueryEncoderHelper implements HttpParameterCodec {\n  encodeKey(k: string): string {\n      return encodeURIComponent(k);\n  }\n\n  encodeValue(v: string): string {\n      return encodeURIComponent(v);\n  }\n\n  decodeKey(k: string): string {\n      return decodeURIComponent(k);\n  }\n\n  decodeValue(v: string): string {\n      return decodeURIComponent(v);\n  }\n}\n/**\n* @module BaseLoopBackApi\n* @author Jonathan Casarrubias <@johncasarrubias> <github:jonathan-casarrubias>\n* @author Nikolay Matiushenkov <https://github.com/mnvx>\n* @license MIT\n* @description\n* Abstract class that will be implemented in every custom service automatically built\n* by the sdk builder.\n* It provides the core functionallity for every API call, either by HTTP Calls or by\n* WebSockets.\n**/\n@Injectable()\nexport abstract class BaseLoopBackApi {\n\n  protected path: string;\n  protected model: any;\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    this.model = this.models.get(this.getModelName());\n  }\n  /**\n   * @method request\n   * @param {string}  method      Request method (GET, POST, PUT)\n   * @param {string}  url         Request url (my-host/my-url/:id)\n   * @param {any}     routeParams Values of url parameters\n   * @param {any}     urlParams   Parameters for building url (filter and other)\n   * @param {any}     postBody    Request postBody\n   * @return {Observable<any>}\n   * @description\n   * This is a core method, every HTTP Call will be done from here, every API Service will\n   * extend this class and use this method to get RESTful communication.\n   **/\n  public request(\n    method         : string,\n    url            : string,\n    routeParams    : any = {},\n    urlParams      : any = {},\n    postBody       : any = {},\n    pubsub         : boolean = false,\n    customHeaders? : Function\n  ): Observable<any> {\n    // Transpile route variables to the actual request Values\n    Object.keys(routeParams).forEach((key: string) => {\n      url = url.replace(new RegExp(\":\" + key + \"(\\/|$)\", \"g\"), routeParams[key] + \"$1\")\n    });\n    if (pubsub) {\n      if (url.match(/fk/)) {\n        let arr = url.split('/'); arr.pop();\n        url = arr.join('/');\n      }\n      let event: string = (`[${method}]${url}`).replace(/\\?/, '');\n      let subject: Subject<any> = new Subject<any>();\n      this.connection.on(event, (res: any) => subject.next(res));\n      return subject.asObservable();\n    } else {\n      let httpParams = new HttpParams({ encoder: new CustomQueryEncoderHelper() });\n      // Headers to be sent\n      let headers: HttpHeaders = new HttpHeaders();\n      headers = headers.append('Content-Type', 'application/json');\n      // Authenticate request\n      headers = this.authenticate(url, headers);\n      // Body fix for built in remote methods using \"data\", \"options\" or \"credentials\n      // that are the actual body, Custom remote method properties are different and need\n      // to be wrapped into a body object\n      let body: any;\n      let postBodyKeys = typeof postBody === 'object' ? Object.keys(postBody) : []\n      if (postBodyKeys.length === 1) {\n        body = postBody[postBodyKeys.shift()];\n      } else {\n        body = postBody;\n      }\n      \n      let queryString: string = '';\n\n      // Separate filter object from url params and add to search query\n      if (urlParams.filter) {\n        if (LoopBackConfig.isHeadersFilteringSet()) {\n          headers = headers.append('filter', JSON.stringify(urlParams.filter));\n        } else {\n          queryString = `?filter=${encodeURIComponent(JSON.stringify(urlParams.filter))}`;\n        }\n        delete urlParams.filter;\n      }\n\n      // Separate where object from url params and add to search query\n      if (urlParams.where) {\n        if (LoopBackConfig.isHeadersWhereSet()) {\n          /**\n          CODE BELOW WILL GENERATE THE FOLLOWING ISSUES:\n          - https://github.com/mean-expert-official/loopback-sdk-builder/issues/356\n          - https://github.com/mean-expert-official/loopback-sdk-builder/issues/328 \n          **/\n          headers = headers.append('where', JSON.stringify(urlParams.where));\n        } else {\n          queryString = `?where=${encodeURIComponent(JSON.stringify(urlParams.where))}`;\n        }\n        delete urlParams.where;\n      }\n    \n      if (typeof customHeaders === 'function') {\n        headers = customHeaders(headers);\n      }\n/* enhancement/configure-where-headers\n      this.searchParams.setJSON(urlParams);\n      let request: Request = new Request(\n        new RequestOptions({\n          headers        : headers,\n          method         : method,\n          url            : `${url}${queryString}`,\n          search         : Object.keys(urlParams).length > 0 ? this.searchParams.getURLSearchParams() : null,\n          body           : body ? JSON.stringify(body) : undefined,\n          withCredentials: LoopBackConfig.getRequestOptionsCredentials()\n        })\n      );\nTODO Fix Merge Conflict */\n      Object.keys(urlParams).forEach(paramKey => {\n        let paramValue = urlParams[paramKey];\n        paramValue = typeof paramValue === 'object' ? JSON.stringify(paramValue) : paramValue;\n        httpParams = httpParams.append(paramKey, paramValue);\n      });\n      let request = new HttpRequest(method, `${url}${queryString}`, body, {\n        headers        : headers,\n        params         : httpParams,\n        withCredentials: LoopBackConfig.getRequestOptionsCredentials()\n      });\n      return this.http.request(request).pipe(\n        filter(event => event instanceof HttpResponse),\n        map((res: HttpResponse<any>) => res.body),\n        catchError((e) => this.errorHandler.handleError(e))\n      );\n    }\n  }\n  /**\n   * @method authenticate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {string} url Server URL\n   * @param {Headers} headers HTTP Headers\n   * @return {void}\n   * @description\n   * This method will try to authenticate using either an access_token or basic http auth\n   */\n  public authenticate<T>(url: string, headers: HttpHeaders): HttpHeaders {\n    if (this.auth.getAccessTokenId()) {\n      headers = headers.append(\n        'Authorization',\n        LoopBackConfig.getAuthPrefix() + this.auth.getAccessTokenId()\n      );\n    }\n\n    return headers;\n  }\n  /**\n   * @method create\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T} data Generic data type\n   * @return {Observable<T>}\n   * @description\n   * Generic create method\n   */\n  public create<T>(data: T, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onCreate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T[]} data Generic data type array\n   * @return {Observable<T[]>}\n   * @description\n   * Generic pubsub oncreate many method\n   */\n  public onCreate<T>(data: T[]): Observable<T[]> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((datum: T[]) => datum.map((data: T) => this.model.factory(data))));\n  }\n  /**\n   * @method createMany\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T[]} data Generic data type array\n   * @return {Observable<T[]>}\n   * @description\n   * Generic create many method\n   */\n  public createMany<T>(data: T[], customHeaders?: Function): Observable<T[]> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((datum: T[]) => datum.map((data: T) => this.model.factory(data))));\n  }\n  /**\n   * @method onCreateMany\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T[]} data Generic data type array\n   * @return {Observable<T[]>}\n   * @description\n   * Generic create many method\n   */\n  public onCreateMany<T>(data: T[]): Observable<T[]> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((datum: T[]) => datum.map((data: T) => this.model.factory(data))));\n  }\n  /**\n   * @method findById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {any} data Generic data type\n   * @return {Observable<T>}\n   * @description\n   * Generic findById method\n   */\n  public findById<T>(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T> {\n    let _urlParams: any = {};\n    if (filter) _urlParams.filter = filter;\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, _urlParams, undefined, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method find\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[+>}\n   * @description\n   * Generic find method\n   */\n  public find<T>(filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T[]> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, { filter }, undefined, null, customHeaders)\n    .pipe(map((datum: T[]) => datum.map((data: T) => this.model.factory(data))));\n  }\n  /**\n   * @method exists\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic exists method\n   */\n  public exists<T>(id: any, customHeaders?: Function): Observable<T> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id/exists'\n    ].join('/'), { id }, undefined, undefined, null, customHeaders);\n  }\n  /**\n   * @method findOne\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic findOne method\n   */\n  public findOne<T>(filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'findOne'\n    ].join('/'), undefined, { filter }, undefined, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method updateAll\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic updateAll method\n   */\n  public updateAll<T>(where: any = {}, data: T, customHeaders?: Function): Observable<{ count: 'number' }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'update'\n    ].join('/'), undefined, _urlParams, { data }, null, customHeaders);\n  }\n  /**\n   * @method onUpdateAll\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic pubsub onUpdateAll method\n   */\n  public onUpdateAll<T>(where: any = {}, data: T): Observable<{ count: 'number' }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'update'\n    ].join('/'), undefined, _urlParams, { data }, true);\n  }\n  /**\n   * @method deleteById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic deleteById method\n   */\n  public deleteById<T>(id: any, customHeaders?: Function): Observable<T> {\n    return this.request('DELETE', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, undefined, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onDeleteById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onDeleteById method\n   */\n  public onDeleteById<T>(id: any): Observable<T> {\n    return this.request('DELETE', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, undefined, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method count\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<{ count: number }>}\n   * @description\n   * Generic count method\n   */\n  public count(where: any = {}, customHeaders?: Function): Observable<{ count: number }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'count'\n    ].join('/'), undefined, _urlParams, undefined, null, customHeaders);\n  }\n  /**\n   * @method updateAttributes\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic updateAttributes method\n   */\n  public updateAttributes<T>(id: any, data: T, customHeaders?: Function): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onUpdateAttributes\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic onUpdateAttributes method\n   */\n  public onUpdateAttributes<T>(id: any, data: T): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method upsert\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsert method\n   */\n  public upsert<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onUpsert\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onUpsert method\n   */\n  public onUpsert<T>(data: any = {}): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method upsertPatch\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsert method using patch http method\n   */\n  public upsertPatch<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('PATCH', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onUpsertPatch\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onUpsertPatch method using patch http method\n   */\n  public onUpsertPatch<T>(data: any = {}): Observable<T> {\n    return this.request('PATCH', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method upsertWithWhere\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsertWithWhere method\n   */\n  public upsertWithWhere<T>(where: any = {}, data: any = {}, customHeaders?: Function): Observable<T> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'upsertWithWhere'\n    ].join('/'), undefined, _urlParams, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onUpsertWithWhere\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onUpsertWithWhere method\n   */\n  public onUpsertWithWhere<T>(where: any = {}, data: any = {}): Observable<T> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'upsertWithWhere'\n    ].join('/'), undefined, _urlParams, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method replaceOrCreate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic replaceOrCreate method\n   */\n  public replaceOrCreate<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'replaceOrCreate'\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onReplaceOrCreate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic onReplaceOrCreate method\n   */\n  public onReplaceOrCreate<T>(data: any = {}): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'replaceOrCreate'\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method replaceById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic replaceById method\n   */\n  public replaceById<T>(id: any, data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id', 'replace'\n    ].join('/'), { id }, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onReplaceById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic onReplaceById method\n   */\n  public onReplaceById<T>(id: any, data: any = {}): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id', 'replace'\n    ].join('/'), { id }, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method createChangeStream\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<any>}\n   * @description\n   * Generic createChangeStream method\n   */\n  public createChangeStream(): Observable<any> {\n    let subject = new Subject();\n    if (typeof EventSource !== 'undefined') {\n      let emit   = (msg: any) => subject.next(JSON.parse(msg.data));\n      var source = new EventSource([\n        LoopBackConfig.getPath(),\n        LoopBackConfig.getApiVersion(),\n        this.model.getModelDefinition().path,\n        'change-stream'\n      ].join('/'));\n      source.addEventListener('data', emit);\n      source.onerror = emit;\n    } else {\n      console.warn('SDK Builder: EventSource is not supported'); \n    }\n    return subject.asObservable();\n  }\n  /**\n   * @method getModelName\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {string}\n   * @description\n   * Abstract getModelName method\n   */\n  abstract getModelName(): string;\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter, } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DatChunk } from '../../models/DatChunk';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { DatDigital } from '../../models/DatDigital';\nimport { InfStatement } from '../../models/InfStatement';\nimport { DatNamespace } from '../../models/DatNamespace';\n\n\n/**\n * Api services for the `DatChunk` model.\n */\n@Injectable()\nexport class DatChunkApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http, connection, models, auth, errorHandler);\n  }\n\n  /**\n   * Get the chunks related to the digital, with their statements.\n   *\n   * @param {number} pkProject Primary key of the project\n   *\n   * @param {number} pkDigital Primary key of the digital\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DatChunk` object.)\n   * </em>\n   */\n  public ofDigital(pkProject: any, pkDigital: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/DatChunks/of-digital\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkDigital !== 'undefined' && pkDigital !== null) _urlParams.pkDigital = pkDigital;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatChunk`.\n   */\n  public getModelName() {\n    return \"DatChunk\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DatColumn } from '../../models/DatColumn';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { DatNamespace } from '../../models/DatNamespace';\n\n\n/**\n * Api services for the `DatColumn` model.\n */\n@Injectable()\nexport class DatColumnApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Get the columns related to the digital (table).\n   *\n   * @param {number} pkProject Primary key of the project\n   *\n   * @param {number} pkDigital Primary key of the digital\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DatColumn` object.)\n   * </em>\n   */\n  public ofDigital(pkProject: any, pkDigital: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DatColumns/of-digital\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkDigital !== 'undefined' && pkDigital !== null) _urlParams.pkDigital = pkDigital;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatColumn`.\n   */\n  public getModelName() {\n    return \"DatColumn\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DatDigital } from '../../models/DatDigital';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { DatNamespace } from '../../models/DatNamespace';\n\n\n/**\n * Api services for the `DatDigital` model.\n */\n@Injectable()\nexport class DatDigitalApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Creates or updates instances of DatDigital.\n   *\n   * @param {number} pkNamespace Namespace\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{DatDigital}` - Array DatDigital\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DatDigital` object.)\n   * </em>\n   */\n  public bulkUpsert(pkNamespace: any, data: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DatDigitals/bulk-upsert\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pkNamespace !== 'undefined' && pkNamespace !== null) _urlParams.pkNamespace = pkNamespace;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes instances of DatDigital.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `pks` â `{number}` - Array of Primary Key of DatDigitals\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DatDigital` object.)\n   * </em>\n   */\n  public bulkDelete(pks: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DatDigitals/delete-delete\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      pks: pks\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Finds the version of given digital. If no version specified, latest is returned.\n   *\n   * @param {number} pkEntity Primary Key of the digital object (pk_entity)\n   *\n   * @param {number} entityVersion Primary Key of the digital object (entity_version)\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DatDigital` object.)\n   * </em>\n   */\n  public getVersion(pkEntity: any, entityVersion: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DatDigitals/get-version\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    if (typeof entityVersion !== 'undefined' && entityVersion !== null) _urlParams.entityVersion = entityVersion;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get page of table\n   *\n   * @param {number} pkProject Pk of the project.\n   *\n   * @param {number} pkEntity Pk of the table digital.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `options` â `{object}` - options\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DatDigital` object.)\n   * </em>\n   */\n  public getTablePage(pkProject: any, pkEntity: any, options: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DatDigitals/getTablePage\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      options: options\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatDigital`.\n   */\n  public getModelName() {\n    return \"DatDigital\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DatNamespace } from '../../models/DatNamespace';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `DatNamespace` model.\n */\n@Injectable()\nexport class DatNamespaceApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Finds namespaces of a project.\n   *\n   * @param {number} pkProject Key of the Project for which the namespaces should be found.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DatNamespace` object.)\n   * </em>\n   */\n  public byProject(pkProject: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DatNamespaces/find-by-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatNamespace`.\n   */\n  public getModelName() {\n    return \"DatNamespace\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DatTextProperty } from '../../models/DatTextProperty';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { DatNamespace } from '../../models/DatNamespace';\n\n\n/**\n * Api services for the `DatTextProperty` model.\n */\n@Injectable()\nexport class DatTextPropertyApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatTextProperty`.\n   */\n  public getModelName() {\n    return \"DatTextProperty\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DfhLabel } from '../../models/DfhLabel';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `DfhLabel` model.\n */\n@Injectable()\nexport class DfhLabelApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Get all dfh labels needed by the given project.\n   *\n   * @param {number} pkProject Project pk\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DfhLabel` object.)\n   * </em>\n   */\n  public ofProject(pkProject: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DfhLabels/of-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DfhLabel`.\n   */\n  public getModelName() {\n    return \"DfhLabel\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DfhProfile } from '../../models/DfhProfile';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `DfhProfile` model.\n */\n@Injectable()\nexport class DfhProfileApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Get all profiles that are used by the given project.\n   *\n   * @param {number} pkProject Project pk\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DfhProfile` object.)\n   * </em>\n   */\n  public ofProject(pkProject: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DfhProfiles/of-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Pulls profile data including classes and properties from OntoMe and updates profile data in geovistory.\n   *\n   * @param {number} pkProfile OntoMe profile that should be added\n   *\n   * @param {string} requestedLanguage Language ISO Code for the preferred language of labels and descriptions to be loaded. Default language is 'en'.\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DfhProfile` object.)\n   * </em>\n   */\n  public updateFromOntoMe(pkProfile: any, requestedLanguage: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DfhProfiles/update-from-ontome\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProfile !== 'undefined' && pkProfile !== null) _urlParams.pkProfile = pkProfile;\n    if (typeof requestedLanguage !== 'undefined' && requestedLanguage !== null) _urlParams.requestedLanguage = requestedLanguage;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Pulls profile data including classes and properties from OntoMe andÂ adds profile to project.\n   *\n   * @param {number} pkProject Geovistory project to which the OntoMe profile should be added\n   *\n   * @param {number} pkProfile OntoMe profile that should be added\n   *\n   * @param {string} requestedLanguage Language ISO Code for the preferred language of labels and descriptions to be loaded. Default language is 'en'.\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DfhProfile` object.)\n   * </em>\n   */\n  public updateAndAddToProject(pkProject: any, pkProfile: any, requestedLanguage: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DfhProfiles/update-from-ontome-and-add-to-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkProfile !== 'undefined' && pkProfile !== null) _urlParams.pkProfile = pkProfile;\n    if (typeof requestedLanguage !== 'undefined' && requestedLanguage !== null) _urlParams.requestedLanguage = requestedLanguage;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates an activation report for the given OntoMe profile and the given Geovistory project.\n   *\n   * @param {number} pkProject Geovistory project for which the activation report should be created\n   *\n   * @param {number} pkProfile OntoMe profile for which the activation report should be created\n   *\n   * @param {string} requestedLanguage Language ISO Code for the preferred language of labels and descriptions to be loaded. Default language is 'en'.\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DfhProfile` object.)\n   * </em>\n   */\n  public getActivationReport(pkProject: any, pkProfile: any, requestedLanguage: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DfhProfiles/get-activation-report\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkProfile !== 'undefined' && pkProfile !== null) _urlParams.pkProfile = pkProfile;\n    if (typeof requestedLanguage !== 'undefined' && requestedLanguage !== null) _urlParams.requestedLanguage = requestedLanguage;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates an deactivation report for the given OntoMe profile and the given Geovistory project.\n   *\n   * @param {number} pkProject Geovistory project for which the deactivation report should be created\n   *\n   * @param {number} pkProfile OntoMe profile for which the deactivation report should be created\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DfhProfile` object.)\n   * </em>\n   */\n  public getDeactivationReport(pkProject: any, pkProfile: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DfhProfiles/get-deactivation-report\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkProfile !== 'undefined' && pkProfile !== null) _urlParams.pkProfile = pkProfile;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deavtivates an OntoMe profile for a Geovistory project.\n   *\n   * @param {number} pkProject Geovistory project for which the profile should be deactivated\n   *\n   * @param {number} pkProfile OntoMe profile to deactivate for the given Geovistory project\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DfhProfile` object.)\n   * </em>\n   */\n  public deactivateProfileForProject(pkProject: any, pkProfile: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DfhProfiles/deactivate-ontome-profile-for-geovistory-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkProfile !== 'undefined' && pkProfile !== null) _urlParams.pkProfile = pkProfile;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DfhProfile`.\n   */\n  public getModelName() {\n    return \"DfhProfile\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Email } from '../../models/Email';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `Email` model.\n */\n@Injectable()\nexport class EmailApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Email`.\n   */\n  public getModelName() {\n    return \"Email\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfAppellation } from '../../models/InfAppellation';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { InfStatement } from '../../models/InfStatement';\n\n\n/**\n * Api services for the `InfAppellation` model.\n */\n@Injectable()\nexport class InfAppellationApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfAppellation`.\n   */\n  public getModelName() {\n    return \"InfAppellation\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfDimension } from '../../models/InfDimension';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { InfStatement } from '../../models/InfStatement';\nimport { InfPersistentItem } from '../../models/InfPersistentItem';\n\n\n/**\n * Api services for the `InfDimension` model.\n */\n@Injectable()\nexport class InfDimensionApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfDimension`.\n   */\n  public getModelName() {\n    return \"InfDimension\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfLangString } from '../../models/InfLangString';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { InfStatement } from '../../models/InfStatement';\nimport { InfLanguage } from '../../models/InfLanguage';\n\n\n/**\n * Api services for the `InfLangString` model.\n */\n@Injectable()\nexport class InfLangStringApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfLangString`.\n   */\n  public getModelName() {\n    return \"InfLangString\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfLanguage } from '../../models/InfLanguage';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\n\n\n/**\n * Api services for the `InfLanguage` model.\n */\n@Injectable()\nexport class InfLanguageApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Perform a ranked search on languages by search string.\n   *\n   * @param {string} queryString \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfLanguage` object.)\n   * </em>\n   */\n  public queryByString(queryString: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfLanguages/query-by-string\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof queryString !== 'undefined' && queryString !== null) _urlParams.queryString = queryString;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfLanguage`.\n   */\n  public getModelName() {\n    return \"InfLanguage\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter, } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfPersistentItem } from '../../models/InfPersistentItem';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { InfStatement } from '../../models/InfStatement';\nimport { InfTextProperty } from '../../models/InfTextProperty';\n\n\n/**\n * Api services for the `InfPersistentItem` model.\n */\n@Injectable()\nexport class InfPersistentItemApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http, connection, models, auth, errorHandler);\n  }\n\n  /**\n   * Find or create many information persistent items.\n   *\n   * @param {number} pk_project Pk of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{InfPersistentItem}` - data\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfPersistentItem` object.)\n   * </em>\n   */\n  public findOrCreateInfPersistentItems(pk_project: any, data: any, customHeaders?: Function): Observable<InfPersistentItem[]> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/InfPersistentItems/find-or-create-many\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pk_project !== 'undefined' && pk_project !== null) _urlParams.pk_project = pk_project;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<InfPersistentItem>) =>\n      instances.map((instance: InfPersistentItem) => new InfPersistentItem(instance))\n    ));\n  }\n\n  /**\n   * Get only miminal properties of persistent item.\n   *\n   * @param {number} pkProject Pk of the project.\n   *\n   * @param {number} pkEntity Pk of the entity.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfPersistentItem` object.)\n   * </em>\n   */\n  public ownProperties(pkProject: any, pkEntity: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/InfPersistentItems/own-properties\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get a minimal nested object of all types in the project.\n   *\n   * @param {number} pkProject Pk of the project.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfPersistentItem` object.)\n   * </em>\n   */\n  public typesOfProject(pkProject: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/InfPersistentItems/types-of-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Find types of typed class and project. E.g. get the types for the class 'histC8 Geographical Place' (pk_typed_class=363) used in project (pk_project=123)\n   *\n   * @param {number} pk_project Primary Key of Project\n   *\n   * @param {number} pk_typed_classes Primary Keyes of Typed Classes (e.g. pk of Geographical Place to get Geographical Place Types)\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfPersistentItem` object.)\n   * </em>\n   */\n  public typesOfClassesAndProject(pk_project: any, pk_typed_classes: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/InfPersistentItems/types-of-classes-and-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pk_project !== 'undefined' && pk_project !== null) _urlParams.pk_project = pk_project;\n    if (typeof pk_typed_classes !== 'undefined' && pk_typed_classes !== null) _urlParams.pk_typed_classes = pk_typed_classes;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Find one type by pk_entityÂ with appellations and text properties.\n   *\n   * @param {number} pk_project Primary Key of Project\n   *\n   * @param {number} pk_entity Primary Key of the type. Provide this if you want to query one specific type.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfPersistentItem` object.)\n   * </em>\n   */\n  public typeNested(pk_project: any, pk_entity: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/InfPersistentItems/type-nested\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pk_project !== 'undefined' && pk_project !== null) _urlParams.pk_project = pk_project;\n    if (typeof pk_entity !== 'undefined' && pk_entity !== null) _urlParams.pk_entity = pk_entity;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfPersistentItem`.\n   */\n  public getModelName() {\n    return \"InfPersistentItem\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfPlace } from '../../models/InfPlace';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\n\n\n/**\n * Api services for the `InfPlace` model.\n */\n@Injectable()\nexport class InfPlaceApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Find or create a InfPlace and update the project relation if needed.\n   *\n   * @param {number} projectId Id of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{InfPlace}` - data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfPlace` object.)\n   * </em>\n   */\n  public findOrCreatePlace(projectId: any, data: any, customHeaders?: Function): Observable<InfPlace[]> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfPlaces/findOrCreate\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof projectId !== 'undefined' && projectId !== null) _urlParams.projectId = projectId;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<InfPlace>) =>\n        instances.map((instance: InfPlace) => new InfPlace(instance))\n    ));\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfPlace`.\n   */\n  public getModelName() {\n    return \"InfPlace\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfStatement } from '../../models/InfStatement';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { InfTemporalEntity } from '../../models/InfTemporalEntity';\nimport { DatDigital } from '../../models/DatDigital';\nimport { DatChunk } from '../../models/DatChunk';\nimport { InfAppellation } from '../../models/InfAppellation';\nimport { InfLangString } from '../../models/InfLangString';\nimport { InfDimension } from '../../models/InfDimension';\nimport { InfLanguage } from '../../models/InfLanguage';\nimport { InfPersistentItem } from '../../models/InfPersistentItem';\nimport { InfTimePrimitive } from '../../models/InfTimePrimitive';\nimport { InfPlace } from '../../models/InfPlace';\n\n\n/**\n * Api services for the `InfStatement` model.\n */\n@Injectable()\nexport class InfStatementApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Get a flat object of entity previews, that are target of a list.\n   *\n   * @param {number} pkProject Pk of the project.\n   *\n   * @param {number} pkSourceEntity Pk of the source entity to which the entity previews, that are target of a list are related.\n   *\n   * @param {number} pkProperty Pk of the property leading from source entity to the entity previews, that are target of a list.\n   *\n   * @param {number} pkTargetClass Fk class of the target entity previews, that are target of a list.\n   *\n   * @param {boolean} isOutgoing If true, the source entity is domain, else range.\n   *\n   * @param {number} limit number of returned entity previews, that are target of a list.\n   *\n   * @param {number} offset offset of the segment of returned entity previews, that are target of a list.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfStatement` object.)\n   * </em>\n   */\n  public paginatedListTargetingEntityPreviews(pkProject: any, pkSourceEntity: any, pkProperty: any, pkTargetClass: any, isOutgoing: any, limit: any, offset: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfStatements/paginated-list-targeting-entity-previews\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkSourceEntity !== 'undefined' && pkSourceEntity !== null) _urlParams.pkSourceEntity = pkSourceEntity;\n    if (typeof pkProperty !== 'undefined' && pkProperty !== null) _urlParams.pkProperty = pkProperty;\n    if (typeof pkTargetClass !== 'undefined' && pkTargetClass !== null) _urlParams.pkTargetClass = pkTargetClass;\n    if (typeof isOutgoing !== 'undefined' && isOutgoing !== null) _urlParams.isOutgoing = isOutgoing;\n    if (typeof limit !== 'undefined' && limit !== null) _urlParams.limit = limit;\n    if (typeof offset !== 'undefined' && offset !== null) _urlParams.offset = offset;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Find or create information statement.\n   *\n   * @param {number} pk_project Id of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{InfStatement}` - data\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfStatement` object.)\n   * </em>\n   */\n  public findOrCreateInfStatements(pk_project: any, data: any, customHeaders?: Function): Observable<InfStatement[]> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfStatements/find-or-create-many\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pk_project !== 'undefined' && pk_project !== null) _urlParams.pk_project = pk_project;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<InfStatement>) =>\n        instances.map((instance: InfStatement) => new InfStatement(instance))\n    ));\n  }\n\n  /**\n   * Get statements (with children) of given fkProperty and fkEntity from Repo that are not in project of given projectId.\n   *\n   * @param {number} entityPk Key of the persistent item (fk_object_info)\n   *\n   * @param {number} propertyPk Key of the property (fk_property)\n   *\n   * @param {number} pkProject Id of the the current project\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfStatement` object.)\n   * </em>\n   */\n  public alternativesNotInProjectByEntityPk(entityPk: any, propertyPk: any, pkProject: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfStatements/alternatives-not-in-project-by-entity-pk\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof entityPk !== 'undefined' && entityPk !== null) _urlParams.entityPk = entityPk;\n    if (typeof propertyPk !== 'undefined' && propertyPk !== null) _urlParams.propertyPk = propertyPk;\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get statements (with children) of given propertyPk and teEntPk from Repo that are not in project of given projectId.\n   *\n   * @param {number} teEntPk Key of the temporal entity (fk_subject_info)\n   *\n   * @param {number} propertyPk Key of the property (fk_property)\n   *\n   * @param {number} pkProject Id of the the current project\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfStatement` object.)\n   * </em>\n   */\n  public alternativesNotInProjectByTeEntPk(teEntPk: any, propertyPk: any, pkProject: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfStatements/alternatives-not-in-project-by-te-ent-pk\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof teEntPk !== 'undefined' && teEntPk !== null) _urlParams.teEntPk = teEntPk;\n    if (typeof propertyPk !== 'undefined' && propertyPk !== null) _urlParams.propertyPk = propertyPk;\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get an nested object of statement with everything needed to display the links made from an entity towards sources and digitals.\n   *\n   * @param {boolean} ofProject if true, finds project version. if false, finds repo version.\n   *\n   * @param {number} pkProject Primary Key of the Project.\n   *\n   * @param {number} pkEntity Primary Key of the entity for which the sources links are needed.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfStatement` object.)\n   * </em>\n   */\n  public sourcesAndDigitalsOfEntity(ofProject: any, pkProject: any = {}, pkEntity: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfStatements/sources-and-digitals-of-entity\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof ofProject !== 'undefined' && ofProject !== null) _urlParams.ofProject = ofProject;\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Find statements by params.\n   *\n   * @param {boolean} ofProject if true, finds project version. if false, finds repo version.\n   *\n   * @param {number} pkProject Primary Key of the Project. If provided and ofProject=false, makes a left join with project\n   *\n   * @param {number} pkEntity Primary Key of the statement (pk_entity)\n   *\n   * @param {number} pkInfoRange Foreign Key of the statement pointing to the range entity (fk_object_info)\n   *\n   * @param {number} pkInfoDomain Foreign Key of the statement pointing to the domain entity (fk_subject_info)\n   *\n   * @param {number} pkProperty Foreign Key of the statement pointing to the property (fk_property)\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfStatement` object.)\n   * </em>\n   */\n  public queryByParams(ofProject: any, pkProject: any = {}, pkEntity: any = {}, pkInfoRange: any = {}, pkInfoDomain: any = {}, pkProperty: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfStatements/find-by-params\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof ofProject !== 'undefined' && ofProject !== null) _urlParams.ofProject = ofProject;\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    if (typeof pkInfoRange !== 'undefined' && pkInfoRange !== null) _urlParams.pkInfoRange = pkInfoRange;\n    if (typeof pkInfoDomain !== 'undefined' && pkInfoDomain !== null) _urlParams.pkInfoDomain = pkInfoDomain;\n    if (typeof pkProperty !== 'undefined' && pkProperty !== null) _urlParams.pkProperty = pkProperty;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfStatement`.\n   */\n  public getModelName() {\n    return \"InfStatement\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfTemporalEntity } from '../../models/InfTemporalEntity';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { InfStatement } from '../../models/InfStatement';\nimport { InfTextProperty } from '../../models/InfTextProperty';\n\n\n/**\n * Api services for the `InfTemporalEntity` model.\n */\n@Injectable()\nexport class InfTemporalEntityApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Find or create many information temporal entities.\n   *\n   * @param {number} pk_project Pk of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{InfTemporalEntity}` - data\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfTemporalEntity` object.)\n   * </em>\n   */\n  public findOrCreateInfTemporalEntities(pk_project: any, data: any, customHeaders?: Function): Observable<InfTemporalEntity[]> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfTemporalEntities/find-or-create-many\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pk_project !== 'undefined' && pk_project !== null) _urlParams.pk_project = pk_project;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<InfTemporalEntity>) =>\n        instances.map((instance: InfTemporalEntity) => new InfTemporalEntity(instance))\n    ));\n  }\n\n  /**\n   * Get a flat object of temporal entities.\n   *\n   * @param {number} pkProject Pk of the project.\n   *\n   * @param {number} pkSourceEntity Pk of the source entity to which the temporal entities are related.\n   *\n   * @param {number} pkProperty Pk of the property leading from source entity to the temporal entities.\n   *\n   * @param {number} pkTargetClass Fk class of the target temporal entities.\n   *\n   * @param {boolean} isOutgoing If true, the source entity is domain, else range.\n   *\n   * @param {number} limit number of returned temporal entities.\n   *\n   * @param {number} offset offset of the segment of returned temporal entities.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfTemporalEntity` object.)\n   * </em>\n   */\n  public alternativeTemporalEntityList(pkProject: any, pkSourceEntity: any, pkProperty: any, pkTargetClass: any, isOutgoing: any, limit: any, offset: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfTemporalEntities/paginated-list-alternatives\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkSourceEntity !== 'undefined' && pkSourceEntity !== null) _urlParams.pkSourceEntity = pkSourceEntity;\n    if (typeof pkProperty !== 'undefined' && pkProperty !== null) _urlParams.pkProperty = pkProperty;\n    if (typeof pkTargetClass !== 'undefined' && pkTargetClass !== null) _urlParams.pkTargetClass = pkTargetClass;\n    if (typeof isOutgoing !== 'undefined' && isOutgoing !== null) _urlParams.isOutgoing = isOutgoing;\n    if (typeof limit !== 'undefined' && limit !== null) _urlParams.limit = limit;\n    if (typeof offset !== 'undefined' && offset !== null) _urlParams.offset = offset;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get a flat object of temporal entities.\n   *\n   * @param {number} pkProject Pk of the project.\n   *\n   * @param {number} pkSourceEntity Pk of the source entity to which the temporal entities are related.\n   *\n   * @param {number} pkProperty Pk of the property leading from source entity to the temporal entities.\n   *\n   * @param {number} pkTargetClass Fk class of the target temporal entities.\n   *\n   * @param {boolean} isOutgoing If true, the source entity is domain, else range.\n   *\n   * @param {number} limit number of returned temporal entities.\n   *\n   * @param {number} offset offset of the segment of returned temporal entities.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfTemporalEntity` object.)\n   * </em>\n   */\n  public temporalEntityList(pkProject: any, pkSourceEntity: any, pkProperty: any, pkTargetClass: any, isOutgoing: any, limit: any, offset: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfTemporalEntities/paginated-list\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkSourceEntity !== 'undefined' && pkSourceEntity !== null) _urlParams.pkSourceEntity = pkSourceEntity;\n    if (typeof pkProperty !== 'undefined' && pkProperty !== null) _urlParams.pkProperty = pkProperty;\n    if (typeof pkTargetClass !== 'undefined' && pkTargetClass !== null) _urlParams.pkTargetClass = pkTargetClass;\n    if (typeof isOutgoing !== 'undefined' && isOutgoing !== null) _urlParams.isOutgoing = isOutgoing;\n    if (typeof limit !== 'undefined' && limit !== null) _urlParams.limit = limit;\n    if (typeof offset !== 'undefined' && offset !== null) _urlParams.offset = offset;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get e schema object of own properties of the temporal entity in project version.\n   *\n   * @param {number} pkProject Pk project\n   *\n   * @param {number} pkEntity Primary Key of the temporal entity (pk_entity)\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfTemporalEntity` object.)\n   * </em>\n   */\n  public ownProperties(pkProject: any, pkEntity: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfTemporalEntities/own-properties\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Find or create a temporal entity version.\n   *\n   * @param {number} pkProject Id of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{InfTemporalEntity}` - data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfTemporalEntity` object.)\n   * </em>\n   */\n  public findOrCreateInfTemporalEntity(pkProject: any, data: any, customHeaders?: Function): Observable<InfTemporalEntity[]> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfTemporalEntities/findOrCreate\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<InfTemporalEntity>) =>\n        instances.map((instance: InfTemporalEntity) => new InfTemporalEntity(instance))\n    ));\n  }\n\n  /**\n   * Relate a nested object of a InfTemporalEntity to the project.\n   *\n   * @param {number} pkProject Id of the project\n   *\n   * @param {boolean} isInProject Include or exclude from project.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{InfTemporalEntity}` - data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfTemporalEntity` object.)\n   * </em>\n   */\n  public changeTeEntProjectRelation(pkProject: any, isInProject: any, data: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfTemporalEntities/change-project-relation\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof isInProject !== 'undefined' && isInProject !== null) _urlParams.isInProject = isInProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfTemporalEntity`.\n   */\n  public getModelName() {\n    return \"InfTemporalEntity\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfTextProperty } from '../../models/InfTextProperty';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { InfPersistentItem } from '../../models/InfPersistentItem';\nimport { InfTemporalEntity } from '../../models/InfTemporalEntity';\nimport { InfLanguage } from '../../models/InfLanguage';\nimport { SysClassField } from '../../models/SysClassField';\n\n\n/**\n * Api services for the `InfTextProperty` model.\n */\n@Injectable()\nexport class InfTextPropertyApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Find or create information text properties.\n   *\n   * @param {number} pk_project Id of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{InfTextProperty}` - data\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfTextProperty` object.)\n   * </em>\n   */\n  public findOrCreateInfTextProperties(pk_project: any, data: any, customHeaders?: Function): Observable<InfTextProperty[]> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfTextProperties/find-or-create-many\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pk_project !== 'undefined' && pk_project !== null) _urlParams.pk_project = pk_project;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<InfTextProperty>) =>\n        instances.map((instance: InfTextProperty) => new InfTextProperty(instance))\n    ));\n  }\n\n  /**\n   * Find or create a InfTextProperty and update the project relation if needed.\n   *\n   * @param {number} pkProject Pk of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{InfTextProperty}` - data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfTextProperty` object.)\n   * </em>\n   */\n  public findOrCreateInfTextProperty(pkProject: any, data: any, customHeaders?: Function): Observable<InfTextProperty[]> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfTextProperties/findOrCreate\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<InfTextProperty>) =>\n        instances.map((instance: InfTextProperty) => new InfTextProperty(instance))\n    ));\n  }\n\n  /**\n   * Find all InfTextProperties that are not yet added to the given project.\n   *\n   * @param {number} pkProject Pk of the project\n   *\n   * @param {number} pkEntity fk of the concerned entity\n   *\n   * @param {number} pkClassField fk of the class field\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfTextProperty` object.)\n   * </em>\n   */\n  public findAlternativeTextProperties(pkProject: any, pkEntity: any, pkClassField: any, customHeaders?: Function): Observable<InfTextProperty[]> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfTextProperties/findAlternativeTextProperties\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    if (typeof pkClassField !== 'undefined' && pkClassField !== null) _urlParams.pkClassField = pkClassField;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<InfTextProperty>) =>\n        instances.map((instance: InfTextProperty) => new InfTextProperty(instance))\n    ));\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfTextProperty`.\n   */\n  public getModelName() {\n    return \"InfTextProperty\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfTimePrimitive } from '../../models/InfTimePrimitive';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\n\n\n/**\n * Api services for the `InfTimePrimitive` model.\n */\n@Injectable()\nexport class InfTimePrimitiveApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfTimePrimitive`.\n   */\n  public getModelName() {\n    return \"InfTimePrimitive\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { LoopBackConfig } from '../../lb.config';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@johncasarrubias>\n* @module LoggerService\n* @license MIT\n* @description\n* Console Log wrapper that can be disabled in production mode\n**/\n@Injectable()\nexport class LoggerService {\n\n  log(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.log.apply(console, args);\n  }\n\n  info(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.info.apply(console, args);\n  }\n\n  error(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.error.apply(console, args);\n  }\n\n  count(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  group(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  groupEnd() {\n    if (LoopBackConfig.debuggable())\n    console.groupEnd();\n  }\n\n  profile(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  profileEnd() {\n    if (LoopBackConfig.debuggable())\n    console.profileEnd();\n  }\n\n  time(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.time(arg);\n  }\n\n  timeEnd(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.timeEnd(arg);\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter, } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ProClassFieldConfig } from '../../models/ProClassFieldConfig';\nimport { SocketConnection } from '../../sockets/socket.connections';\n// import { DfhProperty } from '../../models/DfhProperty';\nimport { SysClassField } from '../../models/SysClassField';\nimport { ProProject } from '../../models/ProProject';\n\n\n/**\n * Api services for the `ProClassFieldConfig` model.\n */\n@Injectable()\nexport class ProClassFieldConfigApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http, connection, models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProClassFieldConfig` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/ProClassFieldConfigs\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Find ProClassFieldConfig of project\n   *\n   * @param {number} pkProject Pk of the project\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProClassFieldConfig` object.)\n   * </em>\n   */\n  public ofProject(pkProject: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/ProClassFieldConfigs/of-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates or updates instances of ProClassFieldConfig.\n   *\n   * @param {number} pkProject Pk of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{ProClassFieldConfig}` - Array ProClassFieldConfig\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProClassFieldConfig` object.)\n   * </em>\n   */\n  public bulkUpsert(pkProject: any, data: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/ProClassFieldConfigs/bulk-upsert\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes instances of ProClassFieldConfig.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `pks` â `{number}` - Array of Primary Key of ProClassFieldConfigs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProClassFieldConfig` object.)\n   * </em>\n   */\n  public bulkDelete(pks: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/ProClassFieldConfigs/bulk-delete\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      pks: pks\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProClassFieldConfig`.\n   */\n  public getModelName() {\n    return \"ProClassFieldConfig\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ProDfhClassProjRel } from '../../models/ProDfhClassProjRel';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `ProDfhClassProjRel` model.\n */\n@Injectable()\nexport class ProDfhClassProjRelApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Find ProDfhClassProjRel of project\n   *\n   * @param {number} pkProject Pk of the project\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProDfhClassProjRel` object.)\n   * </em>\n   */\n  public ofProject(pkProject: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProDfhClassProjRels/of-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates or updates instances of ProDfhClassProjRel.\n   *\n   * @param {number} pkProject Project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{ProDfhClassProjRel}` - Array ProDfhClassProjRel\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProDfhClassProjRel` object.)\n   * </em>\n   */\n  public bulkUpsert(pkProject: any, data: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProDfhClassProjRels/bulk-upsert\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProDfhClassProjRel`.\n   */\n  public getModelName() {\n    return \"ProDfhClassProjRel\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ProDfhProfileProjRel } from '../../models/ProDfhProfileProjRel';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `ProDfhProfileProjRel` model.\n */\n@Injectable()\nexport class ProDfhProfileProjRelApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Find ProDfhProfileProjRel of project where enabled is true\n   *\n   * @param {number} pkProject Pk of the project\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProDfhProfileProjRel` object.)\n   * </em>\n   */\n  public ofProject(pkProject: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProDfhProfileProjRels/of-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates or updates instances of ProDfhProfileProjRel.\n   *\n   * @param {number} pkProject Project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{ProDfhProfileProjRel}` - Array ProDfhProfileProjRel\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProDfhProfileProjRel` object.)\n   * </em>\n   */\n  public bulkUpsert(pkProject: any, data: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProDfhProfileProjRels/bulk-upsert\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProDfhProfileProjRel`.\n   */\n  public getModelName() {\n    return \"ProDfhProfileProjRel\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `ProInfoProjRel` model.\n */\n@Injectable()\nexport class ProInfoProjRelApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProInfoProjRel` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProInfoProjRels\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Marks the statement as favorite for the given fk_project.\n   *\n   * @param {number} pkProject fk_project\n   *\n   * @param {number} pkStatement fk_entity\n   *\n   * @param {object} data Request data.\n   *\n   *  - `isOutgoing` â `{boolean}` - True, if the statement is outgoing, else false\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProInfoProjRel` object.)\n   * </em>\n   */\n  public markStatementAsFavorite(pkProject: any, pkStatement: any, isOutgoing: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProInfoProjRels/mark-statement-as-favorite\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      isOutgoing: isOutgoing\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkStatement !== 'undefined' && pkStatement !== null) _urlParams.pkStatement = pkStatement;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Updates the ProInfoProjRel found by fk_project and fk_entity.\n   *\n   * @param {number} pkProject fk_project\n   *\n   * @param {number} pkEntity fk_entity\n   *\n   * @param {object} data Request data.\n   *\n   *  - `eprAttributes` â `{ProInfoProjRel}` - Instance of ProInfoProjRel (fk_project and fk_entity will be ignored)\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProInfoProjRel` object.)\n   * </em>\n   */\n  public updateEprAttributes(pkProject: any, pkEntity: any, eprAttributes: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProInfoProjRels/updateEprAttributes\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      eprAttributes: eprAttributes\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Updates the ProInfoProjRel of all found by fk_project and fk_entity.\n   *\n   * @param {number} pkProject fk_project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `items` â `{ProInfoProjRel}` - Array of ProInfoProjRel (fk_project must be equal to pkProject)\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProInfoProjRel` object.)\n   * </em>\n   */\n  public bulkUpdateEprAttributes(pkProject: any, items: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProInfoProjRels/bulk-update-attributes\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      items: items\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProInfoProjRel`.\n   */\n  public getModelName() {\n    return \"ProInfoProjRel\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ProProject } from '../../models/ProProject';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { PubAccountProjectRel } from '../../models/PubAccountProjectRel';\nimport { PubAccount } from '../../models/PubAccount';\nimport { ProTextProperty } from '../../models/ProTextProperty';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { InfLanguage } from '../../models/InfLanguage';\nimport { InfPersistentItem } from '../../models/InfPersistentItem';\nimport { DatNamespace } from '../../models/DatNamespace';\n\n\n/**\n * Api services for the `ProProject` model.\n */\n@Injectable()\nexport class ProProjectApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Get the projects of account.\n   *\n   * @param {number} accountId Id of the account\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProProject` object.)\n   * </em>\n   */\n  public ofAccount(accountId: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProProjects/of-account\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof accountId !== 'undefined' && accountId !== null) _urlParams.accountId = accountId;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Create a new project with a label and a description.\n   *\n   * @param {number} accountId Id of account to associate the persistent item with.\n   *\n   * @param {string} pkLanguage Default language of the project, language of the label and the text property.\n   *\n   * @param {string} label Label of the project.\n   *\n   * @param {string} textProperty Description of the project.\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProProject` object.)\n   * </em>\n   */\n  public createWithLabelAndDescription(accountId: any, pkLanguage: any, label: any, textProperty: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProProjects/create-with-label-and-description\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof accountId !== 'undefined' && accountId !== null) _urlParams.accountId = accountId;\n    if (typeof pkLanguage !== 'undefined' && pkLanguage !== null) _urlParams.pkLanguage = pkLanguage;\n    if (typeof label !== 'undefined' && label !== null) _urlParams.label = label;\n    if (typeof textProperty !== 'undefined' && textProperty !== null) _urlParams.textProperty = textProperty;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get basic information about the project (language, name)\n   *\n   * @param {number} pkProject Pk of project\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProProject` object.)\n   * </em>\n   */\n  public getBasics(pkProject: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProProjects/get-basics\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProProject`.\n   */\n  public getModelName() {\n    return \"ProProject\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ProTextProperty } from '../../models/ProTextProperty';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProProject } from '../../models/ProProject';\nimport { InfLanguage } from '../../models/InfLanguage';\nimport { SysSystemType } from '../../models/SysSystemType';\n\n\n/**\n * Api services for the `ProTextProperty` model.\n */\n@Injectable()\nexport class ProTextPropertyApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Get the text-properties of the project.\n   *\n   * @param {number} pkProject Pk of the project\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProTextProperty` object.)\n   * </em>\n   */\n  public ofProject(pkProject: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProTextProperties/of-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Inserts or updates items in the array of ProTextProperty. If pk_entity is givenÂ and existing, an update is done, else an insert\n   *\n   * @param {number} pkProject Pk of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `items` â `{ProTextProperty}` - Array of ProTextPropertys\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProTextProperty` object.)\n   * </em>\n   */\n  public bulkUpsert(pkProject: any, items: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProTextProperties/bulk-upsert\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      items: items\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Dletes items in the array of ProTextProperty. Checks for each item if fk_project matches given pkProject \n   *\n   * @param {number} pkProject Pk of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `items` â `{ProTextProperty}` - Array of ProTextPropertys\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProTextProperty` object.)\n   * </em>\n   */\n  public bulkDelete(pkProject: any, items: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProTextProperties/bulk-delete\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      items: items\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProTextProperty`.\n   */\n  public getModelName() {\n    return \"ProTextProperty\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PubAccount } from '../../models/PubAccount';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `PubAccount` model.\n */\n@Injectable()\nexport class PubAccountApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Get Roles of the Account\n   *\n   * @param {number} id \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `PubAccount` object.)\n   * </em>\n   */\n  public getRoles(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PubAccounts/:id/get-roles\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get a list of all projects associated with this account.\n   *\n   * @param {number} id \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `PubAccount` object.)\n   * </em>\n   */\n  public listProjects(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PubAccounts/:id/list-projects\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get all accounts with their project pks and their roles\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `PubAccount` object.)\n   * </em>\n   */\n  public withRolesAndProjects(customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PubAccounts/with-roles-and-projects\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Login a user with username/email and password.\n   *\n   * @param {string} include Related objects to include in the response. See the description of return value for more details.\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * The response body contains properties of the AccessToken created on login.\n   * Depending on the value of `include` parameter, the body may contain additional properties:\n   * \n   *   - `user` - `U+007BPubAccountU+007D` - Data of the currently logged in user. (`include=user`)\n   * \n   *\n   */\n  public login(credentials: any, include: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PubAccounts/login\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      credentials: credentials\n    };\n    let _urlParams: any = {};\n    if (typeof include !== 'undefined' && include !== null) _urlParams.include = include;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Logout a user with access token.\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public logout(customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PubAccounts/logout\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `PubAccount`.\n   */\n  public getModelName() {\n    return \"PubAccount\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PubAccountProjectRel } from '../../models/PubAccountProjectRel';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { PubAccount } from '../../models/PubAccount';\nimport { ProProject } from '../../models/ProProject';\n\n\n/**\n * Api services for the `PubAccountProjectRel` model.\n */\n@Injectable()\nexport class PubAccountProjectRelApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `PubAccountProjectRel`.\n   */\n  public getModelName() {\n    return \"PubAccountProjectRel\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter, } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SchemaObject } from '../../models/SchemaObject';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `SchemaObject` model.\n */\n@Injectable()\nexport class SchemaObjectApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http, connection, models, auth, errorHandler);\n  }\n\n\n  /**\n   * Remove entity with outgoing statements and namings from project.\n   *\n   * @param {number} pkProject Primary key of the project\n   *\n   * @param {number} pkEntity Primary key of the entity\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SchemaObject` object.)\n   * </em>\n   */\n  public removeEntityFromProject(pkProject: any, pkEntity: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/SchemaObjects/remove-entity-from-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Add entity with outgoing statements and namings to project.\n   *\n   * @param {number} pkProject Primary key of the project\n   *\n   * @param {number} pkEntity Primary key of the entity\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SchemaObject` object.)\n   * </em>\n   */\n  public addEntityToProject(pkProject: any, pkEntity: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/SchemaObjects/add-entity-to-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get a object containing apllations and definition of a type (project variant).\n   *\n   * @param {number} pkProject Pk of the project.\n   *\n   * @param {number} pkType Pk of the type.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SchemaObject` object.)\n   * </em>\n   */\n  public typeOfProject(pkProject: any, pkType: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/SchemaObjects/type-of-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkType !== 'undefined' && pkType !== null) _urlParams.pkType = pkType;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SchemaObject`.\n   */\n  public getModelName() {\n    return \"SchemaObject\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SysAppContext } from '../../models/SysAppContext';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `SysAppContext` model.\n */\n@Injectable()\nexport class SysAppContextApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Get the App Configuration for classes.\n   *\n   * @param {number} pk_app_context pk_entity of app_context\n   *\n   * @param {number} pk_project pk_project of project\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SysAppContext` object.)\n   * </em>\n   */\n  public appContext(pk_app_context: any = {}, pk_project: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/SysAppContexts/app-context\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pk_app_context !== 'undefined' && pk_app_context !== null) _urlParams.pk_app_context = pk_app_context;\n    if (typeof pk_project !== 'undefined' && pk_project !== null) _urlParams.pk_project = pk_project;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysAppContext`.\n   */\n  public getModelName() {\n    return \"SysAppContext\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter, } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SysClassField } from '../../models/SysClassField';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { SysClassFieldPropertyRel } from '../../models/SysClassFieldPropertyRel';\nimport { ProClassFieldConfig } from '../../models/ProClassFieldConfig';\n\n\n/**\n * Api services for the `SysClassField` model.\n */\n@Injectable()\nexport class SysClassFieldApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http, connection, models, auth, errorHandler);\n  }\n\n  /**\n   * <em>\n         * (The remote method definition does not provide any description.)\n         * </em>\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SysClassField` object.)\n   * </em>\n   */\n  public findComplex(filter: LoopBackFilter = {}, customHeaders?: Function): Observable<SysClassField[]> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/SysClassFields/findComplex\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      filter: filter\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<SysClassField>) =>\n      instances.map((instance: SysClassField) => new SysClassField(instance))\n    ));\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysClassField`.\n   */\n  public getModelName() {\n    return \"SysClassField\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter, } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SysClassFieldPropertyRel } from '../../models/SysClassFieldPropertyRel';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { SysClassField } from '../../models/SysClassField';\n// import { DfhProperty } from '../../models/DfhProperty';\n\n\n/**\n * Api services for the `SysClassFieldPropertyRel` model.\n */\n@Injectable()\nexport class SysClassFieldPropertyRelApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http, connection, models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysClassFieldPropertyRel`.\n   */\n  public getModelName() {\n    return \"SysClassFieldPropertyRel\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SysClassHasTypeProperty } from '../../models/SysClassHasTypeProperty';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `SysClassHasTypeProperty` model.\n */\n@Injectable()\nexport class SysClassHasTypePropertyApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysClassHasTypeProperty`.\n   */\n  public getModelName() {\n    return \"SysClassHasTypeProperty\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SysSystemRelevantClass } from '../../models/SysSystemRelevantClass';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `SysSystemRelevantClass` model.\n */\n@Injectable()\nexport class SysSystemRelevantClassApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Replace or create all items in the array.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{SysSystemRelevantClass}` - Array of SysSystemRelevantClass\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SysSystemRelevantClass` object.)\n   * </em>\n   */\n  public bulkReplaceOrCreate(data: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/SysSystemRelevantClasses/bulk-replace-or-create\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysSystemRelevantClass`.\n   */\n  public getModelName() {\n    return \"SysSystemRelevantClass\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SysSystemType } from '../../models/SysSystemType';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `SysSystemType` model.\n */\n@Injectable()\nexport class SysSystemTypeApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysSystemType`.\n   */\n  public getModelName() {\n    return \"SysSystemType\";\n  }\n}\n","/* tslint:disable */\n// add this to compilerOptions in tsconfig.json:\n//    \"allowSyntheticDefaultImports\": true,\n//    \"esModuleInterop\": true \nimport io from 'socket.io-client'; \n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketBrowser\n* @license MIT\n* @description\n* This module handle socket connections for web browsers, it will be DI Swapped\n* depending on the platform environment.\n* This module will be generated when the -d ng2web flag is set\n**/\nexport class SocketBrowser {\n  /**\n   * @method connect\n   * @param {string} url URL path to connect with the server.\n   * @param {any} options Any socket.io v1 =< valid options\n   * @return {any} Not currently a socket.io-client for web Typings implemented.\n   * @description\n   * This method will return a valid socket connection.  \n   **/\n  connect(url: string, options: any): any {\n    return io(url, options);\n  }\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nexport interface CookieInterface { [key: string]: any }\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module CookieBrowser\n* @license MIT\n* @description\n* This module handle cookies, it will be provided using DI Swapping according the\n* SDK Socket Driver Available currently supporting Angular 2 for web and NativeScript 2.\n**/\n@Injectable()\nexport class CookieBrowser {\n  /**\n   * @type {CookieInterface}\n   **/\n  private cookies: CookieInterface = {};\n  /**\n   * @method get\n   * @param {string} key Cookie key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in cookies.\n   **/\n  get(key: string): any {\n    if (!this.cookies[key]) {\n      let cookie = window.document\n                         .cookie.split('; ')\n                         .filter((item: any) => item.split('=')[0] === key).pop();\n      if (!cookie) {\n        return null;\n      }\n\n      this.cookies[key] = this.parse(cookie.split('=').slice(1).join('='));\n    }\n\n    return this.cookies[key];\n  }\n  /**\n   * @method set\n   * @param {string} key Cookie key name\n   * @param {any} value Any value\n   * @param {Date=} expires The date of expiration (Optional)\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in cookies.\n   **/\n  set(key: string, value: any, expires?: Date): void {\n    this.cookies[key] = value;\n    let cookie = `${key}=${encodeURI(value)}; path=/${expires ? `; expires=${ expires.toUTCString() }` : ''}`;\n    window.document.cookie = cookie;\n  }\n  /**\n   * @method remove\n   * @param {string} key Cookie key name\n   * @return {void}\n   * @description\n   * This method will remove a cookie from the client.\n   **/\n  remove(key: string) {\n    document.cookie = key + '=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n    delete this.cookies[key];\n  }\n  /**\n   * @method parse\n   * @param {any} value Input data expected to be JSON\n   * @return {void}\n   * @description\n   * This method will parse the string as JSON if possible, otherwise will\n   * return the value itself.\n   **/\n  private parse(value: any) {\n    try {\n        return JSON.parse(decodeURI(value));\n    } catch (e) {\n        return value;\n    }\n  }\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module StorageBrowser\n* @license MIT\n* @description\n* This module handle localStorage, it will be provided using DI Swapping according the\n* SDK Socket Driver Available currently supporting Angular 2 for web and NativeScript 2.\n**/\n@Injectable()\nexport class StorageBrowser {\n  /**\n   * @method get\n   * @param {string} key Storage key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in localStorage.\n   **/\n  get(key: string): any {\n    let data: string = localStorage.getItem(key);\n    return this.parse(data);\n  }\n  /**\n   * @method set\n   * @param {string} key Storage key name\n   * @param {any} value Any value\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in localStorage.\n   **/\n  set(key: string, value: any, expires?: Date): void {\n    localStorage.setItem(\n      key,\n      typeof value === 'object' ? JSON.stringify(value) : value\n    );\n  }\n  /**\n   * @method remove\n   * @param {string} key Storage key name\n   * @return {void}\n   * @description\n   * This method will remove a localStorage item from the client.\n   **/\n  remove(key: string): void {\n    if (localStorage[key]) {\n      localStorage.removeItem(key);\n    } else {\n      console.log('Trying to remove unexisting key: ', key);\n    }\n  }\n  /**\n   * @method parse\n   * @param {any} value Input data expected to be JSON\n   * @return {void}\n   * @description\n   * This method will parse the string as JSON if possible, otherwise will\n   * return the value itself.\n   **/\n  private parse(value: any) {\n    try {\n        return JSON.parse(value);\n    } catch (e) {\n        return value;\n    }\n  }\n}\n","/* tslint:disable */\n/**\n* @module SDKModule\n* @author Jonathan Casarrubias <t:@johncasarrubias> <gh:jonathan-casarrubias>\n* @license MIT 2016 Jonathan Casarrubias\n* @version 2.1.0\n* @description\n* The SDKModule is a generated Software Development Kit automatically built by\n* the LoopBack SDK Builder open source module.\n*\n* The SDKModule provides Angular 2 >= RC.5 support, which means that NgModules\n* can import this Software Development Kit as follows:\n*\n*\n* APP Route Module Context\n* ============================================================================\n* import { NgModule }       from '@angular/core';\n* import { BrowserModule }  from '@angular/platform-browser';\n* // App Root\n* import { AppComponent }   from './app.component';\n* // Feature Modules\n* import { SDK[Browser|Node|Native]Module } from './shared/sdk/sdk.module';\n* // Import Routing\n* import { routing }        from './app.routing';\n* @NgModule({\n*  imports: [\n*    BrowserModule,\n*    routing,\n*    SDK[Browser|Node|Native]Module.forRoot()\n*  ],\n*  declarations: [ AppComponent ],\n*  bootstrap:    [ AppComponent ]\n* })\n* export class AppModule { }\n*\n**/\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { LoopBackAuth } from './services/core/auth.service';\nimport { ErrorHandler } from './services/core/error.service';\nimport { RealTime } from './services/core/real.time';\nimport { DatChunkApi } from './services/custom/DatChunk';\nimport { DatColumnApi } from './services/custom/DatColumn';\nimport { DatDigitalApi } from './services/custom/DatDigital';\nimport { DatNamespaceApi } from './services/custom/DatNamespace';\nimport { DatTextPropertyApi } from './services/custom/DatTextProperty';\nimport { DfhLabelApi } from './services/custom/DfhLabel';\nimport { DfhProfileApi } from './services/custom/DfhProfile';\nimport { EmailApi } from './services/custom/Email';\nimport { InfAppellationApi } from './services/custom/InfAppellation';\nimport { InfDimensionApi } from './services/custom/InfDimension';\nimport { InfLangStringApi } from './services/custom/InfLangString';\nimport { InfLanguageApi } from './services/custom/InfLanguage';\nimport { InfPersistentItemApi } from './services/custom/InfPersistentItem';\nimport { InfPlaceApi } from './services/custom/InfPlace';\nimport { InfStatementApi } from './services/custom/InfStatement';\nimport { InfTemporalEntityApi } from './services/custom/InfTemporalEntity';\nimport { InfTextPropertyApi } from './services/custom/InfTextProperty';\nimport { InfTimePrimitiveApi } from './services/custom/InfTimePrimitive';\nimport { LoggerService } from './services/custom/logger.service';\nimport { ProClassFieldConfigApi } from './services/custom/ProClassFieldConfig';\nimport { ProDfhClassProjRelApi } from './services/custom/ProDfhClassProjRel';\nimport { ProDfhProfileProjRelApi } from './services/custom/ProDfhProfileProjRel';\nimport { ProInfoProjRelApi } from './services/custom/ProInfoProjRel';\nimport { ProProjectApi } from './services/custom/ProProject';\nimport { ProTextPropertyApi } from './services/custom/ProTextProperty';\nimport { PubAccountApi } from './services/custom/PubAccount';\nimport { PubAccountProjectRelApi } from './services/custom/PubAccountProjectRel';\nimport { SchemaObjectApi } from './services/custom/SchemaObject';\nimport { SDKModels } from './services/custom/SDKModels';\nimport { SysAppContextApi } from './services/custom/SysAppContext';\nimport { SysClassFieldApi } from './services/custom/SysClassField';\nimport { SysClassFieldPropertyRelApi } from './services/custom/SysClassFieldPropertyRel';\nimport { SysClassHasTypePropertyApi } from './services/custom/SysClassHasTypeProperty';\nimport { SysSystemRelevantClassApi } from './services/custom/SysSystemRelevantClass';\nimport { SysSystemTypeApi } from './services/custom/SysSystemType';\nimport { SocketBrowser } from './sockets/socket.browser';\nimport { SocketConnection } from './sockets/socket.connections';\nimport { SocketDriver } from './sockets/socket.driver';\nimport { CookieBrowser } from './storage/cookie.browser';\nimport { StorageBrowser } from './storage/storage.browser';\nimport { InternalStorage, SDKStorage } from './storage/storage.swaps';\n/**\n* @module SdkLb3Module\n* @description\n* This module should be imported when building a Web Application in the following scenarios:\n*\n*  1.- Regular web application\n*  2.- Angular universal application (Browser Portion)\n*  3.- Progressive applications (Angular Mobile, Ionic, WebViews, etc)\n**/\n@NgModule({\n  imports: [CommonModule, HttpClientModule],\n  declarations: [],\n  exports: [],\n  providers: [\n    ErrorHandler,\n    SocketConnection\n  ]\n})\nexport class SdkLb3Module {\n  static forRoot(internalStorageProvider: any = {\n    provide: InternalStorage,\n    useClass: CookieBrowser\n  }): ModuleWithProviders {\n    return {\n      ngModule: SdkLb3Module,\n      providers: [\n        LoopBackAuth,\n        LoggerService,\n        SDKModels,\n        RealTime,\n        SchemaObjectApi,\n        SysClassFieldPropertyRelApi,\n        SysClassFieldApi,\n        SysClassHasTypePropertyApi,\n        SysSystemRelevantClassApi,\n        PubAccountApi,\n        EmailApi,\n        ProProjectApi,\n        PubAccountProjectRelApi,\n        ProTextPropertyApi,\n        ProInfoProjRelApi,\n        DfhProfileApi,\n        DfhLabelApi,\n        DatChunkApi,\n        DatColumnApi,\n        DatTextPropertyApi,\n        DatDigitalApi,\n        SysAppContextApi,\n        ProClassFieldConfigApi,\n        ProDfhClassProjRelApi,\n        ProDfhProfileProjRelApi,\n        InfAppellationApi,\n        InfLangStringApi,\n        InfDimensionApi,\n        InfTemporalEntityApi,\n        InfStatementApi,\n        InfLanguageApi,\n        InfPersistentItemApi,\n        InfTimePrimitiveApi,\n        InfPlaceApi,\n        DatNamespaceApi,\n        InfTextPropertyApi,\n        SysSystemTypeApi,\n        internalStorageProvider,\n        { provide: SDKStorage, useClass: StorageBrowser },\n        { provide: SocketDriver, useClass: SocketBrowser }\n      ]\n    };\n  }\n}\n/**\n* Have Fun!!!\n* - Jon\n**/\nexport * from './lb.config';\nexport * from './models/index';\nexport * from './services/index';\nexport { CookieBrowser } from './storage/cookie.browser';\nexport { StorageBrowser } from './storage/storage.browser';\nexport * from './storage/storage.swaps';\n\n"]}