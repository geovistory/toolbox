{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@kleiolab/lib-sdk-lb3/services/core/error.service.ts","ng://@kleiolab/lib-sdk-lb3/storage/storage.swaps.ts","ng://@kleiolab/lib-sdk-lb3/models/BaseModels.ts","ng://@kleiolab/lib-sdk-lb3/services/core/auth.service.ts","ng://@kleiolab/lib-sdk-lb3/lb.config.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/logger.service.ts","ng://@kleiolab/lib-sdk-lb3/models/DatChunk.ts","ng://@kleiolab/lib-sdk-lb3/models/DatColumn.ts","ng://@kleiolab/lib-sdk-lb3/models/DatDigital.ts","ng://@kleiolab/lib-sdk-lb3/models/DatNamespace.ts","ng://@kleiolab/lib-sdk-lb3/models/DatTextProperty.ts","ng://@kleiolab/lib-sdk-lb3/models/DfhLabel.ts","ng://@kleiolab/lib-sdk-lb3/models/DfhProfile.ts","ng://@kleiolab/lib-sdk-lb3/models/Email.ts","ng://@kleiolab/lib-sdk-lb3/models/InfAppellation.ts","ng://@kleiolab/lib-sdk-lb3/models/InfDimension.ts","ng://@kleiolab/lib-sdk-lb3/models/InfLangString.ts","ng://@kleiolab/lib-sdk-lb3/models/InfLanguage.ts","ng://@kleiolab/lib-sdk-lb3/models/InfPersistentItem.ts","ng://@kleiolab/lib-sdk-lb3/models/InfPlace.ts","ng://@kleiolab/lib-sdk-lb3/models/InfStatement.ts","ng://@kleiolab/lib-sdk-lb3/models/InfTemporalEntity.ts","ng://@kleiolab/lib-sdk-lb3/models/InfTextProperty.ts","ng://@kleiolab/lib-sdk-lb3/models/InfTimePrimitive.ts","ng://@kleiolab/lib-sdk-lb3/models/ProClassFieldConfig.ts","ng://@kleiolab/lib-sdk-lb3/models/ProDfhClassProjRel.ts","ng://@kleiolab/lib-sdk-lb3/models/ProDfhProfileProjRel.ts","ng://@kleiolab/lib-sdk-lb3/models/ProInfoProjRel.ts","ng://@kleiolab/lib-sdk-lb3/models/ProProject.ts","ng://@kleiolab/lib-sdk-lb3/models/ProTextProperty.ts","ng://@kleiolab/lib-sdk-lb3/models/PubAccount.ts","ng://@kleiolab/lib-sdk-lb3/models/PubAccountProjectRel.ts","ng://@kleiolab/lib-sdk-lb3/models/SchemaObject.ts","ng://@kleiolab/lib-sdk-lb3/models/SysAppContext.ts","ng://@kleiolab/lib-sdk-lb3/models/SysClassField.ts","ng://@kleiolab/lib-sdk-lb3/models/SysClassFieldPropertyRel.ts","ng://@kleiolab/lib-sdk-lb3/models/SysClassHasTypeProperty.ts","ng://@kleiolab/lib-sdk-lb3/models/SysSystemRelevantClass.ts","ng://@kleiolab/lib-sdk-lb3/models/SysSystemType.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/SDKModels.ts","ng://@kleiolab/lib-sdk-lb3/storage/cookie.browser.ts","ng://@kleiolab/lib-sdk-lb3/storage/storage.browser.ts","ng://@kleiolab/lib-sdk-lb3/sockets/socket.browser.ts","ng://@kleiolab/lib-sdk-lb3/sockets/socket.driver.ts","ng://@kleiolab/lib-sdk-lb3/sockets/socket.connections.ts","ng://@kleiolab/lib-sdk-lb3/services/core/io.service.ts","ng://@kleiolab/lib-sdk-lb3/models/FireLoopRef.ts","ng://@kleiolab/lib-sdk-lb3/models/FireLoop.ts","ng://@kleiolab/lib-sdk-lb3/services/core/real.time.ts","ng://@kleiolab/lib-sdk-lb3/services/core/base.service.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/SchemaObject.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/SysClassFieldPropertyRel.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/SysClassField.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/SysClassHasTypeProperty.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/SysSystemRelevantClass.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/PubAccount.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/Email.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/ProProject.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/PubAccountProjectRel.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/ProTextProperty.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/ProInfoProjRel.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/DfhProfile.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/DfhLabel.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/DatChunk.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/DatColumn.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/DatTextProperty.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/DatDigital.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/SysAppContext.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/ProClassFieldConfig.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/ProDfhClassProjRel.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/ProDfhProfileProjRel.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfAppellation.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfLangString.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfDimension.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfTemporalEntity.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfStatement.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfLanguage.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfPersistentItem.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfTimePrimitive.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfPlace.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/DatNamespace.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfTextProperty.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/SysSystemType.ts","ng://@kleiolab/lib-sdk-lb3/index.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","ErrorHandler","handleError","errorResponse","throwError","error","Injectable","BaseStorage","get","set","value","expires","remove","InternalStorage","_super","tslib_1.__extends","SDKStorage","AccessToken","data","assign","getModelName","factory","getModelDefinition","name","plural","properties","id","type","ttl","default","scopes","created","userId","relations","user","model","rememberMe","LoopBackAuth","storage","token","SDKToken","prefix","load","setRememberMe","setUser","save","setToken","getToken","getAccessTokenId","getCurrentUserId","getCurrentUserData","JSON","parse","today","Date","getTime","persist","prop","clear","_this","keys","forEach","stringify","err","console","Inject","args","tslib_1.__param","LoopBackConfig","setApiVersion","version","getApiVersion","setBaseURL","url","path","getPath","setAuthPrefix","authPrefix","getAuthPrefix","setDebugMode","isEnabled","debug","debuggable","filterOnUrl","filterOn","filterOnHeaders","whereOnUrl","whereOn","whereOnHeaders","isHeadersFilteringSet","isHeadersWhereSet","setSecureWebSockets","secure","unsetSecureWebSockets","isSecureWebSocketsSet","setRequestOptionsCredentials","withCredentials","getRequestOptionsCredentials","LoggerService","log","_i","apply","info","count","arg","group","groupEnd","profile","profileEnd","time","timeEnd","DatChunk","idName","quill_doc","string","fk_text","fk_entity_version","pk_entity","fk_namespace","digital","relationType","keyFrom","keyTo","outgoing_statements","namespace","DatColumn","fk_digital","fk_data_type","fk_column_content_type","fk_column_relationship_type","fk_original_column","is_imported","DatDigital","entity_version","pk_text","fk_system_type","DatNamespace","fk_root_namespace","fk_project","standard_label","DatTextProperty","fk_language","fk_entity","DfhLabel","label","language","fk_profile","fk_property","fk_class","DfhProfile","pk_profile","owned_by_project","is_ongoing_forced_publication","date_profile_published","date_profile_deprecated","tmsp_last_dfh_update","Email","to","from","subject","text","html","InfAppellation","entity_version_project_rels","incoming_statements","InfDimension","fk_measurement_unit","numeric_value","measurement_unit","InfLangString","InfLanguage","pk_language","lang_type","scope","iso6392b","iso6392t","iso6391","notes","InfPersistentItem","dfh_class","text_properties","InfPlace","long","lat","InfStatement","fk_subject_info","fk_subject_data","fk_subject_tables_cell","fk_subject_tables_row","fk_property_of_property","fk_object_info","fk_object_data","fk_object_tables_cell","fk_object_tables_row","is_in_project_count","is_standard_in_project_count","community_favorite_calendar","subject_temporal_entity","subject_digital","subject_chunk","subject_statement","object_temporal_entity","object_appellation","object_lang_string","object_chunk","object_dimension","object_language","subject_persistent_item","object_persistent_item","object_time_primitive","object_place","InfTemporalEntity","InfTextProperty","fk_class_field","fk_concerned_entity","persistent_item","temporal_entity","class_field","InfTimePrimitive","julian_day","duration","ProClassFieldConfig","fk_domain_class","fk_range_class","ord_num","fk_class_for_class_field","property","project","ProDfhClassProjRel","enabled_in_entities","ProDfhProfileProjRel","enabled","ProInfoProjRel","fk_entity_version_concat","is_in_project","is_standard_in_project","calendar","ord_num_of_domain","ord_num_of_range","ord_num_of_text_property","tmsp_last_modification","fk_creator","fk_last_modifier","tmsp_creation","ProProject","accounts","modelThrough","keyThrough","default_language","persistent_items","namespaces","ProTextProperty","fk_dfh_class","fk_dfh_property","fk_dfh_property_domain","fk_dfh_property_range","fk_pro_project","systemType","PubAccount","realm","username","email","emailVerified","accessTokens","projects","PubAccountProjectRel","role","account_id","account","SchemaObject","inf","pro","dat","sys","dfh","SysAppContext","description","SysClassField","fk_system_type_ng_component","used_table","class_field_property_rel","class_field_configs","classes","SysClassFieldPropertyRel","property_is_outgoing","SysClassHasTypeProperty","pk_typed_class","typed_class_label","dfh_pk_property","property_label","pk_type_class","type_class_label","SysSystemRelevantClass","required_by_entities","required_by_sources","required_by_basics","excluded_from_entities","SysSystemType","definition","st_schema_name","st_table_name","st_column_name","st_group","SDKModels","models","modelName","getAll","getModelNames","CookieBrowser","cookies","cookie","window","document","split","filter","item","pop","slice","join","encodeURI","toUTCString","decodeURI","e","StorageBrowser","localStorage","getItem","setItem","removeItem","SocketBrowser","connect","options","io","SocketDriver","SocketConnection","driver","zone","subjects","onConnect","Subject","onDisconnect","onAuthenticated","onUnAuthorized","sharedObservables","authenticated","sharedOnConnect","asObservable","pipe","share","sharedOnDisconnect","sharedOnAuthenticated","sharedOnUnAuthorized","subscribe","socket","connected","off","destroy","forceNew","forceWebsockets","transports","on","next","emit","heartbeater","status","isConnected","event","handler","run","removeListener","removeAllListeners","disconnect","setInterval","clearInterval","NgZone","IO","observables","res","FireLoopRef","parent","relationship","buildId","childs","disposable","dispose","subscription","operation","channel","unsubscribe","upsert","remote","method","params","broadcast","onRemote","broadcasts","limit","order","Error","request","instance","match","merge","pull","stats","make","reference","child","settings","sbj","that","nowEvent","pullNow","channels","announce","config","resultEvent","setTimeout","complete","catchError","Observable","throw","now","Math","floor","random","FireLoop","references","ref","RealTime","connection","auth","connecting","onReadySubject","sharedOnReady","onReady","to_1","clearTimeout","ti_1","s1_1","s2","CustomQueryEncoderHelper","encodeKey","k","encodeURIComponent","encodeValue","v","decodeKey","decodeURIComponent","decodeValue","BaseLoopBackApi","http","errorHandler","routeParams","urlParams","postBody","pubsub","customHeaders","replace","RegExp","arr","event_1","subject_1","httpParams_1","HttpParams","encoder","headers","HttpHeaders","append","authenticate","body","postBodyKeys","shift","queryString","where","paramKey","paramValue","HttpRequest","HttpResponse","map","undefined","onCreate","datum","createMany","onCreateMany","findById","_urlParams","find","exists","findOne","updateAll","onUpdateAll","deleteById","onDeleteById","updateAttributes","onUpdateAttributes","onUpsert","upsertPatch","onUpsertPatch","upsertWithWhere","onUpsertWithWhere","replaceOrCreate","onReplaceOrCreate","replaceById","onReplaceById","createChangeStream","EventSource","msg","source","addEventListener","onerror","warn","HttpClient","Optional","SchemaObjectApi","call","removeEntityFromProject","pkProject","pkEntity","_url","addEntityToProject","typeOfProject","pkType","SysClassFieldPropertyRelApi","SysClassFieldApi","findComplex","_postBody","instances","SysClassHasTypePropertyApi","SysSystemRelevantClassApi","bulkReplaceOrCreate","PubAccountApi","getRoles","_routeParams","listProjects","withRolesAndProjects","login","credentials","include","logout","EmailApi","ProProjectApi","ofAccount","accountId","createWithLabelAndDescription","pkLanguage","textProperty","getBasics","PubAccountProjectRelApi","ProTextPropertyApi","ofProject","bulkUpsert","items","bulkDelete","ProInfoProjRelApi","patchOrCreate","markStatementAsFavorite","pkStatement","isOutgoing","updateEprAttributes","eprAttributes","bulkUpdateEprAttributes","DfhProfileApi","updateFromOntoMe","pkProfile","requestedLanguage","updateAndAddToProject","getActivationReport","getDeactivationReport","deactivateProfileForProject","DfhLabelApi","DatChunkApi","ofDigital","pkDigital","DatColumnApi","DatTextPropertyApi","DatDigitalApi","pkNamespace","pks","getVersion","entityVersion","getTablePage","SysAppContextApi","appContext","pk_app_context","pk_project","ProClassFieldConfigApi","ProDfhClassProjRelApi","ProDfhProfileProjRelApi","InfAppellationApi","InfLangStringApi","InfDimensionApi","InfTemporalEntityApi","findOrCreateInfTemporalEntities","alternativeTemporalEntityList","pkSourceEntity","pkProperty","pkTargetClass","offset","temporalEntityList","ownProperties","findOrCreateInfTemporalEntity","changeTeEntProjectRelation","isInProject","InfStatementApi","paginatedListTargetingEntityPreviews","findOrCreateInfStatements","alternativesNotInProjectByEntityPk","entityPk","propertyPk","alternativesNotInProjectByTeEntPk","teEntPk","sourcesAndDigitalsOfEntity","queryByParams","pkInfoRange","pkInfoDomain","InfLanguageApi","queryByString","InfPersistentItemApi","findOrCreateInfPersistentItems","typesOfProject","typesOfClassesAndProject","pk_typed_classes","typeNested","InfTimePrimitiveApi","InfPlaceApi","findOrCreatePlace","projectId","DatNamespaceApi","byProject","InfTextPropertyApi","findOrCreateInfTextProperties","findOrCreateInfTextProperty","findAlternativeTextProperties","pkClassField","SysSystemTypeApi","SDKBrowserModule","forRoot","internalStorageProvider","provide","useClass","ngModule","SDKBrowserModule_1","providers","NgModule","imports","CommonModule","HttpClientModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\n/**\n * Default error handler\n */\n@Injectable()\nexport class ErrorHandler {\n  public handleError(errorResponse: HttpErrorResponse): Observable<never> {\n    return throwError(errorResponse.error.error || 'Server error');\n  }\n}\n","/* tslint:disable */\n/**\n *Â @module Storage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The InternalStorage class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n **/\nexport class BaseStorage {\n  /**\n   * @method get\n   * @param {string} key Storage key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in storage.\n   **/\n  get(key: string): any {}\n  /**\n   * @method set\n   * @param {string} key Storage key name\n   * @param {any} value Any value\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in localStorage.\n   **/\n  set(key: string, value: any, expires?: Date): void {}\n  /**\n   * @method remove\n   * @param {string} key Storage key name\n   * @return {void}\n   * @description\n   * This method will remove a localStorage item from the client.\n   **/\n  remove(key: string): void {}\n}\n/**\n *Â @module InternalStorage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The InternalStorage class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n * This is mainly required because Angular Universal integration.\n * It does inject a CookieStorage instead of LocalStorage.\n **/\nexport class InternalStorage extends BaseStorage {}\n/**\n *Â @module SDKStorage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The SDKStorage class is used for dependency injection swapping.\n * It will be provided using factory method according the right environment.\n * This is created for public usage, to allow persisting custom data\n * Into the local storage API.\n **/\nexport class SDKStorage extends BaseStorage {}\n","/* tslint:disable */\n\n\n\ndeclare var Object: any;\nexport interface LoopBackFilter {\n  fields?: any;\n  include?: any;\n  limit?: any;\n  order?: any;\n  skip?: any;\n  offset?: any;\n  where?: any;\n}\n\nexport interface AccessTokenInterface {\n  \"id\"?: string;\n  \"ttl\"?: number;\n  \"scopes\"?: [\"string\"];\n  \"created\"?: Date;\n  \"userId\"?: string;\n  \"user\"?: any;\n}\n\nexport class AccessToken implements AccessTokenInterface {\n  \"id\": string;\n  \"ttl\": number;\n  \"scopes\": [\"string\"];\n  \"created\": Date;\n  \"userId\": string;\n  \"user\": any;\n  constructor(data?: AccessTokenInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `AccessToken`.\n   */\n  public static getModelName() {\n    return \"AccessToken\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of AccessToken for dynamic purposes.\n  **/\n  public static factory(data: AccessTokenInterface): AccessToken{\n    return new AccessToken(data);\n  }  \n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'AccessToken',\n      plural: 'AccessTokens',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'string'\n        },\n        \"ttl\": {\n          name: 'ttl',\n          type: 'number',\n          default: 1209600\n        },\n        \"scopes\": {\n          name: 'scopes',\n          type: '[\"string\"]'\n        },\n        \"created\": {\n          name: 'created',\n          type: 'Date'\n        },\n        \"userId\": {\n          name: 'userId',\n          type: 'string'\n        },\n      },\n      relations: {\n        user: {\n          name: 'user',\n          type: 'User',\n          model: 'User'\n        },\n      }\n    }\n  }\n}\n\nexport class SDKToken implements AccessTokenInterface {\n  id: any = null;\n  ttl: number = null;\n  scopes: any = null;\n  created: any = null;\n  userId: any = null;\n  user: any = null;\n  rememberMe: boolean = null;\n  constructor(data?: AccessTokenInterface) {\n    Object.assign(this, data);\n  }\n}\n/**\n* This GeoPoint represents both, LoopBack and MongoDB GeoPoint\n**/\nexport interface GeoPoint  {\n    lat?: number;\n    lng?: number;\n    type?: string;\n    coordinates?: number[];\n}\n\nexport interface StatFilter {\n    range: string,\n    custom?: {\n      start: string,\n      end: string\n    },\n    where?: {},\n    groupBy?: string\n}\n","/* tslint:disable */\ndeclare var Object: any;\nimport { Injectable, Inject } from '@angular/core';\nimport { InternalStorage } from '../../storage/storage.swaps';\nimport { SDKToken } from '../../models/BaseModels';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketConnection\n* @license MIT\n* @description\n* This module handle socket connections and return singleton instances for each\n* connection, it will use the SDK Socket Driver Available currently supporting\n* Angular 2 for web, NativeScript 2 and Angular Universal.\n**/\n@Injectable()\nexport class LoopBackAuth {\n  /**\n   * @type {SDKToken}\n   **/\n  private token: SDKToken = new SDKToken();\n  /**\n   * @type {string}\n   **/\n  protected prefix: string = '$LoopBackSDK$';\n  /**\n   * @method constructor\n   * @param {InternalStorage} storage Internal Storage Driver\n   * @description\n   * The constructor will initialize the token loading data from storage\n   **/\n  constructor(@Inject(InternalStorage) protected storage: InternalStorage) {\n    this.token.id = this.load('id');\n    this.token.user = this.load('user');\n    this.token.userId = this.load('userId');\n    this.token.created = this.load('created');\n    this.token.ttl = this.load('ttl');\n    this.token.rememberMe = this.load('rememberMe');\n  }\n  /**\n   * @method setRememberMe\n   * @param {boolean} value Flag to remember credentials\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials\n   **/\n  public setRememberMe(value: boolean): void {\n    this.token.rememberMe = value;\n  }\n  /**\n   * @method setUser\n   * @param {any} user Any type of user model\n   * @return {void}\n   * @description\n   * This method will update the user information and persist it if the\n   * rememberMe flag is set.\n   **/\n  public setUser(user: any) {\n    this.token.user = user;\n    this.save();\n  }\n  /**\n   * @method setToken\n   * @param {SDKToken} token SDKToken or casted AccessToken instance\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials\n   **/\n  public setToken(token: SDKToken): void {\n    this.token = Object.assign({}, this.token, token);\n    this.save();\n  }\n  /**\n   * @method getToken\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials.\n   **/\n  public getToken(): SDKToken {\n    return <SDKToken>this.token;\n  }\n  /**\n   * @method getAccessTokenId\n   * @return {string}\n   * @description\n   * This method will return the actual token string, not the object instance.\n   **/\n  public getAccessTokenId(): string {\n    return this.token.id;\n  }\n  /**\n   * @method getCurrentUserId\n   * @return {any}\n   * @description\n   * This method will return the current user id, it can be number or string.\n   **/\n  public getCurrentUserId(): any {\n    return this.token.userId;\n  }\n  /**\n   * @method getCurrentUserData\n   * @return {any}\n   * @description\n   * This method will return the current user instance.\n   **/\n  public getCurrentUserData(): any {\n    return (typeof this.token.user === 'string') ? JSON.parse(this.token.user) : this.token.user;\n  }\n  /**\n   * @method save\n   * @return {boolean} Whether or not the information was saved\n   * @description\n   * This method will save in either local storage or cookies the current credentials.\n   * But only if rememberMe is enabled.\n   **/\n  public save(): boolean {\n      let today = new Date();\n      let expires = new Date(today.getTime() + (this.token.ttl * 1000));\n      this.persist('id', this.token.id, expires);\n      this.persist('user', this.token.user, expires);\n      this.persist('userId', this.token.userId, expires);\n      this.persist('created', this.token.created, expires);\n      this.persist('ttl', this.token.ttl, expires);\n      this.persist('rememberMe', this.token.rememberMe, expires);\n      return true;\n  };\n  /**\n   * @method load\n   * @param {string} prop Property name\n   * @return {any} Any information persisted in storage\n   * @description\n   * This method will load either from local storage or cookies the provided property.\n   **/\n  protected load(prop: string): any {\n    return this.storage.get(`${this.prefix}${prop}`);\n  }\n  /**\n   * @method clear\n   * @return {void}\n   * @description\n   * This method will clear cookies or the local storage.\n   **/\n  public clear(): void {\n    Object.keys(this.token).forEach((prop: string) => this.storage.remove(`${this.prefix}${prop}`));\n    this.token = new SDKToken();\n  }\n  /**\n   * @method persist\n   * @return {void}\n   * @description\n   * This method saves values to storage\n   **/\n  protected persist(prop: string, value: any, expires?: Date): void {\n    try {\n      this.storage.set(\n        `${this.prefix}${prop}`,\n        (typeof value === 'object') ? JSON.stringify(value) : value,\n        this.token.rememberMe?expires:null\n      );\n    }\n    catch (err) {\n      console.error('Cannot access local/session storage:', err);\n    }\n  }\n}\n","/* tslint:disable */\n/**\n* @module LoopBackConfig\n* @description\n*\n* The LoopBackConfig module help developers to externally \n* configure the base url and api version for loopback.io\n*\n* Example\n*\n* import { LoopBackConfig } from './sdk';\n* \n* @Component() // No metadata needed for this module\n*\n* export class MyApp {\n*   constructor() {\n*     LoopBackConfig.setBaseURL('http://localhost:3000');\n*     LoopBackConfig.setApiVersion('api');\n*   }\n* }\n**/\nexport class LoopBackConfig {\n  private static path: string = '//:3000';\n  private static version: string |Â number = 'lb3-api';\n  private static authPrefix: string = '';\n  private static debug: boolean = true;\n  private static filterOn: string = 'headers';\n  private static whereOn: string = 'headers';\n  private static secure: boolean = false;\n  private static withCredentials: boolean = false;\n\n  public static setApiVersion(version: string = 'api'): void {\n    LoopBackConfig.version = version;\n  }\n  \n  public static getApiVersion(): string | number {\n    return LoopBackConfig.version;\n  }\n\n  public static setBaseURL(url: string = '/'): void {\n    LoopBackConfig.path = url;\n  }\n  \n  public static getPath(): string {\n    return LoopBackConfig.path;\n  }\n\n  public static setAuthPrefix(authPrefix: string = ''): void {\n    LoopBackConfig.authPrefix = authPrefix;\n  }\n\n  public static getAuthPrefix(): string {\n    return LoopBackConfig.authPrefix;\n  }\n\n  public static setDebugMode(isEnabled: boolean): void {\n    LoopBackConfig.debug = isEnabled;\n  }\n\n  public static debuggable(): boolean {\n    return LoopBackConfig.debug;\n  }\n\n  public static filterOnUrl(): void {\n    LoopBackConfig.filterOn = 'url';\n  }\n\n  public static filterOnHeaders(): void {\n    LoopBackConfig.filterOn = 'headers';\n  }\n\n  public static whereOnUrl(): void {\n    LoopBackConfig.whereOn = 'url';\n  }\n\n  public static whereOnHeaders(): void {\n    LoopBackConfig.whereOn = 'headers';\n  }\n\n  public static isHeadersFilteringSet(): boolean {\n    return (LoopBackConfig.filterOn === 'headers');\n  }\n\n  public static isHeadersWhereSet(): boolean {\n    return (LoopBackConfig.whereOn === 'headers');\n  }\n\n  public static setSecureWebSockets(): void {\n    LoopBackConfig.secure = true;\n  }\n\n  public static unsetSecureWebSockets(): void {\n    LoopBackConfig.secure = false;\n  }\n\n  public static isSecureWebSocketsSet(): boolean {\n    return LoopBackConfig.secure;\n  }\n\n  public static setRequestOptionsCredentials(withCredentials: boolean = false): void {\n    LoopBackConfig.withCredentials = withCredentials;\n  }\n\n  public static getRequestOptionsCredentials(): boolean {\n    return LoopBackConfig.withCredentials;\n  }\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { LoopBackConfig } from '../../lb.config';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@johncasarrubias>\n* @module LoggerService\n* @license MIT\n* @description\n* Console Log wrapper that can be disabled in production mode\n**/\n@Injectable()\nexport class LoggerService {\n\n  log(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.log.apply(console, args);\n  }\n\n  info(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.info.apply(console, args);\n  }\n\n  error(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.error.apply(console, args);\n  }\n\n  count(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  group(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  groupEnd() {\n    if (LoopBackConfig.debuggable())\n    console.groupEnd();\n  }\n\n  profile(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  profileEnd() {\n    if (LoopBackConfig.debuggable())\n    console.profileEnd();\n  }\n\n  time(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.time(arg);\n  }\n\n  timeEnd(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.timeEnd(arg);\n  }\n}\n","/* tslint:disable */\nimport {\n  DatDigital,\n  InfStatement,\n  DatNamespace\n} from '../index';\n\ndeclare var Object: any;\nexport interface DatChunkInterface {\n  \"quill_doc\"?: any;\n  \"string\"?: string;\n  \"fk_text\": number;\n  \"fk_entity_version\": number;\n  \"pk_entity\"?: number;\n  \"fk_namespace\"?: number;\n  digital?: DatDigital;\n  outgoing_statements?: InfStatement[];\n  namespace?: DatNamespace;\n}\n\nexport class DatChunk implements DatChunkInterface {\n  \"quill_doc\": any;\n  \"string\": string;\n  \"fk_text\": number;\n  \"fk_entity_version\": number;\n  \"pk_entity\": number;\n  \"fk_namespace\": number;\n  digital?: DatDigital;\n  outgoing_statements?: InfStatement[];\n  namespace?: DatNamespace;\n  constructor(data?: DatChunkInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatChunk`.\n   */\n  public static getModelName() {\n    return \"DatChunk\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of DatChunk for dynamic purposes.\n  **/\n  public static factory(data: DatChunkInterface): DatChunk{\n    return new DatChunk(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'DatChunk',\n      plural: 'DatChunks',\n      path: 'DatChunks',\n      idName: 'pk_entity',\n      properties: {\n        \"quill_doc\": {\n          name: 'quill_doc',\n          type: 'any'\n        },\n        \"string\": {\n          name: 'string',\n          type: 'string'\n        },\n        \"fk_text\": {\n          name: 'fk_text',\n          type: 'number'\n        },\n        \"fk_entity_version\": {\n          name: 'fk_entity_version',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_namespace\": {\n          name: 'fk_namespace',\n          type: 'number'\n        },\n      },\n      relations: {\n        digital: {\n          name: 'digital',\n          type: 'DatDigital',\n          model: 'DatDigital',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_text',\n          keyTo: 'pk_text'\n        },\n        outgoing_statements: {\n          name: 'outgoing_statements',\n          type: 'InfStatement[]',\n          model: 'InfStatement',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_subject_data'\n        },\n        namespace: {\n          name: 'namespace',\n          type: 'DatNamespace',\n          model: 'DatNamespace',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_namespace',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  DatNamespace\n} from '../index';\n\ndeclare var Object: any;\nexport interface DatColumnInterface {\n  \"fk_digital\"?: number;\n  \"fk_data_type\"?: number;\n  \"fk_column_content_type\"?: number;\n  \"fk_column_relationship_type\"?: number;\n  \"fk_original_column\"?: number;\n  \"is_imported\"?: number;\n  \"pk_entity\"?: number;\n  \"fk_namespace\"?: number;\n  namespace?: DatNamespace;\n}\n\nexport class DatColumn implements DatColumnInterface {\n  \"fk_digital\": number;\n  \"fk_data_type\": number;\n  \"fk_column_content_type\": number;\n  \"fk_column_relationship_type\": number;\n  \"fk_original_column\": number;\n  \"is_imported\": number;\n  \"pk_entity\": number;\n  \"fk_namespace\": number;\n  namespace?: DatNamespace;\n  constructor(data?: DatColumnInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatColumn`.\n   */\n  public static getModelName() {\n    return \"DatColumn\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of DatColumn for dynamic purposes.\n  **/\n  public static factory(data: DatColumnInterface): DatColumn{\n    return new DatColumn(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'DatColumn',\n      plural: 'DatColumns',\n      path: 'DatColumns',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_digital\": {\n          name: 'fk_digital',\n          type: 'number'\n        },\n        \"fk_data_type\": {\n          name: 'fk_data_type',\n          type: 'number'\n        },\n        \"fk_column_content_type\": {\n          name: 'fk_column_content_type',\n          type: 'number'\n        },\n        \"fk_column_relationship_type\": {\n          name: 'fk_column_relationship_type',\n          type: 'number'\n        },\n        \"fk_original_column\": {\n          name: 'fk_original_column',\n          type: 'number'\n        },\n        \"is_imported\": {\n          name: 'is_imported',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_namespace\": {\n          name: 'fk_namespace',\n          type: 'number'\n        },\n      },\n      relations: {\n        namespace: {\n          name: 'namespace',\n          type: 'DatNamespace',\n          model: 'DatNamespace',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_namespace',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  DatNamespace\n} from '../index';\n\ndeclare var Object: any;\nexport interface DatDigitalInterface {\n  \"entity_version\"?: number;\n  \"pk_text\"?: number;\n  \"quill_doc\"?: any;\n  \"string\"?: string;\n  \"fk_system_type\"?: number;\n  \"pk_entity\"?: number;\n  \"fk_namespace\"?: number;\n  namespace?: DatNamespace;\n}\n\nexport class DatDigital implements DatDigitalInterface {\n  \"entity_version\": number;\n  \"pk_text\": number;\n  \"quill_doc\": any;\n  \"string\": string;\n  \"fk_system_type\": number;\n  \"pk_entity\": number;\n  \"fk_namespace\": number;\n  namespace?: DatNamespace;\n  constructor(data?: DatDigitalInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatDigital`.\n   */\n  public static getModelName() {\n    return \"DatDigital\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of DatDigital for dynamic purposes.\n  **/\n  public static factory(data: DatDigitalInterface): DatDigital{\n    return new DatDigital(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'DatDigital',\n      plural: 'DatDigitals',\n      path: 'DatDigitals',\n      idName: 'pk_entity',\n      properties: {\n        \"entity_version\": {\n          name: 'entity_version',\n          type: 'number'\n        },\n        \"pk_text\": {\n          name: 'pk_text',\n          type: 'number'\n        },\n        \"quill_doc\": {\n          name: 'quill_doc',\n          type: 'any'\n        },\n        \"string\": {\n          name: 'string',\n          type: 'string'\n        },\n        \"fk_system_type\": {\n          name: 'fk_system_type',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_namespace\": {\n          name: 'fk_namespace',\n          type: 'number'\n        },\n      },\n      relations: {\n        namespace: {\n          name: 'namespace',\n          type: 'DatNamespace',\n          model: 'DatNamespace',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_namespace',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface DatNamespaceInterface {\n  \"pk_entity\"?: number;\n  \"fk_root_namespace\"?: number;\n  \"fk_project\": number;\n  \"standard_label\": string;\n}\n\nexport class DatNamespace implements DatNamespaceInterface {\n  \"pk_entity\": number;\n  \"fk_root_namespace\": number;\n  \"fk_project\": number;\n  \"standard_label\": string;\n  constructor(data?: DatNamespaceInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatNamespace`.\n   */\n  public static getModelName() {\n    return \"DatNamespace\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of DatNamespace for dynamic purposes.\n  **/\n  public static factory(data: DatNamespaceInterface): DatNamespace{\n    return new DatNamespace(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'DatNamespace',\n      plural: 'DatNamespaces',\n      path: 'DatNamespaces',\n      idName: 'pk_entity',\n      properties: {\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_root_namespace\": {\n          name: 'fk_root_namespace',\n          type: 'number'\n        },\n        \"fk_project\": {\n          name: 'fk_project',\n          type: 'number'\n        },\n        \"standard_label\": {\n          name: 'standard_label',\n          type: 'string'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  DatNamespace\n} from '../index';\n\ndeclare var Object: any;\nexport interface DatTextPropertyInterface {\n  \"string\"?: string;\n  \"quill_doc\"?: any;\n  \"fk_system_type\"?: number;\n  \"fk_language\"?: number;\n  \"fk_entity\"?: number;\n  \"pk_entity\"?: number;\n  \"fk_namespace\"?: number;\n  namespace?: DatNamespace;\n}\n\nexport class DatTextProperty implements DatTextPropertyInterface {\n  \"string\": string;\n  \"quill_doc\": any;\n  \"fk_system_type\": number;\n  \"fk_language\": number;\n  \"fk_entity\": number;\n  \"pk_entity\": number;\n  \"fk_namespace\": number;\n  namespace?: DatNamespace;\n  constructor(data?: DatTextPropertyInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatTextProperty`.\n   */\n  public static getModelName() {\n    return \"DatTextProperty\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of DatTextProperty for dynamic purposes.\n  **/\n  public static factory(data: DatTextPropertyInterface): DatTextProperty{\n    return new DatTextProperty(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'DatTextProperty',\n      plural: 'DatTextProperties',\n      path: 'DatTextProperties',\n      idName: 'pk_entity',\n      properties: {\n        \"string\": {\n          name: 'string',\n          type: 'string'\n        },\n        \"quill_doc\": {\n          name: 'quill_doc',\n          type: 'any'\n        },\n        \"fk_system_type\": {\n          name: 'fk_system_type',\n          type: 'number'\n        },\n        \"fk_language\": {\n          name: 'fk_language',\n          type: 'number'\n        },\n        \"fk_entity\": {\n          name: 'fk_entity',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_namespace\": {\n          name: 'fk_namespace',\n          type: 'number'\n        },\n      },\n      relations: {\n        namespace: {\n          name: 'namespace',\n          type: 'DatNamespace',\n          model: 'DatNamespace',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_namespace',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface DfhLabelInterface {\n  \"type\"?: string;\n  \"label\"?: string;\n  \"language\"?: string;\n  \"fk_profile\"?: number;\n  \"fk_project\"?: number;\n  \"fk_property\"?: number;\n  \"fk_class\"?: number;\n}\n\nexport class DfhLabel implements DfhLabelInterface {\n  \"type\": string;\n  \"label\": string;\n  \"language\": string;\n  \"fk_profile\": number;\n  \"fk_project\": number;\n  \"fk_property\": number;\n  \"fk_class\": number;\n  constructor(data?: DfhLabelInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DfhLabel`.\n   */\n  public static getModelName() {\n    return \"DfhLabel\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of DfhLabel for dynamic purposes.\n  **/\n  public static factory(data: DfhLabelInterface): DfhLabel{\n    return new DfhLabel(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'DfhLabel',\n      plural: 'DfhLabels',\n      path: 'DfhLabels',\n      idName: 'type',\n      properties: {\n        \"type\": {\n          name: 'type',\n          type: 'string'\n        },\n        \"label\": {\n          name: 'label',\n          type: 'string'\n        },\n        \"language\": {\n          name: 'language',\n          type: 'string'\n        },\n        \"fk_profile\": {\n          name: 'fk_profile',\n          type: 'number'\n        },\n        \"fk_project\": {\n          name: 'fk_project',\n          type: 'number'\n        },\n        \"fk_property\": {\n          name: 'fk_property',\n          type: 'number'\n        },\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface DfhProfileInterface {\n  \"pk_profile\"?: number;\n  \"owned_by_project\"?: number;\n  \"is_ongoing_forced_publication\"?: boolean;\n  \"date_profile_published\"?: string;\n  \"date_profile_deprecated\"?: string;\n  \"tmsp_last_dfh_update\"?: string;\n}\n\nexport class DfhProfile implements DfhProfileInterface {\n  \"pk_profile\": number;\n  \"owned_by_project\": number;\n  \"is_ongoing_forced_publication\": boolean;\n  \"date_profile_published\": string;\n  \"date_profile_deprecated\": string;\n  \"tmsp_last_dfh_update\": string;\n  constructor(data?: DfhProfileInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DfhProfile`.\n   */\n  public static getModelName() {\n    return \"DfhProfile\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of DfhProfile for dynamic purposes.\n  **/\n  public static factory(data: DfhProfileInterface): DfhProfile{\n    return new DfhProfile(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'DfhProfile',\n      plural: 'DfhProfiles',\n      path: 'DfhProfiles',\n      idName: 'pk_profile',\n      properties: {\n        \"pk_profile\": {\n          name: 'pk_profile',\n          type: 'number'\n        },\n        \"owned_by_project\": {\n          name: 'owned_by_project',\n          type: 'number'\n        },\n        \"is_ongoing_forced_publication\": {\n          name: 'is_ongoing_forced_publication',\n          type: 'boolean'\n        },\n        \"date_profile_published\": {\n          name: 'date_profile_published',\n          type: 'string'\n        },\n        \"date_profile_deprecated\": {\n          name: 'date_profile_deprecated',\n          type: 'string'\n        },\n        \"tmsp_last_dfh_update\": {\n          name: 'tmsp_last_dfh_update',\n          type: 'string'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface EmailInterface {\n  \"to\": string;\n  \"from\": string;\n  \"subject\": string;\n  \"text\"?: string;\n  \"html\"?: string;\n  \"id\"?: number;\n}\n\nexport class Email implements EmailInterface {\n  \"to\": string;\n  \"from\": string;\n  \"subject\": string;\n  \"text\": string;\n  \"html\": string;\n  \"id\": number;\n  constructor(data?: EmailInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Email`.\n   */\n  public static getModelName() {\n    return \"Email\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Email for dynamic purposes.\n  **/\n  public static factory(data: EmailInterface): Email{\n    return new Email(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Email',\n      plural: 'Emails',\n      path: 'Emails',\n      idName: 'id',\n      properties: {\n        \"to\": {\n          name: 'to',\n          type: 'string'\n        },\n        \"from\": {\n          name: 'from',\n          type: 'string'\n        },\n        \"subject\": {\n          name: 'subject',\n          type: 'string'\n        },\n        \"text\": {\n          name: 'text',\n          type: 'string'\n        },\n        \"html\": {\n          name: 'html',\n          type: 'string'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel,\n  InfStatement\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfAppellationInterface {\n  \"quill_doc\": any;\n  \"fk_class\": number;\n  \"string\"?: string;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  incoming_statements?: InfStatement[];\n}\n\nexport class InfAppellation implements InfAppellationInterface {\n  \"quill_doc\": any;\n  \"fk_class\": number;\n  \"string\": string;\n  \"pk_entity\": number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  incoming_statements?: InfStatement[];\n  constructor(data?: InfAppellationInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfAppellation`.\n   */\n  public static getModelName() {\n    return \"InfAppellation\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfAppellation for dynamic purposes.\n  **/\n  public static factory(data: InfAppellationInterface): InfAppellation{\n    return new InfAppellation(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfAppellation',\n      plural: 'InfAppellations',\n      path: 'InfAppellations',\n      idName: 'pk_entity',\n      properties: {\n        \"quill_doc\": {\n          name: 'quill_doc',\n          type: 'any'\n        },\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"string\": {\n          name: 'string',\n          type: 'string'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n        incoming_statements: {\n          name: 'incoming_statements',\n          type: 'InfStatement[]',\n          model: 'InfStatement',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_object_info'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel,\n  InfStatement,\n  InfPersistentItem\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfDimensionInterface {\n  \"fk_class\": number;\n  \"fk_measurement_unit\": number;\n  \"numeric_value\"?: number;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  incoming_statements?: InfStatement[];\n  measurement_unit?: InfPersistentItem;\n}\n\nexport class InfDimension implements InfDimensionInterface {\n  \"fk_class\": number;\n  \"fk_measurement_unit\": number;\n  \"numeric_value\": number;\n  \"pk_entity\": number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  incoming_statements?: InfStatement[];\n  measurement_unit?: InfPersistentItem;\n  constructor(data?: InfDimensionInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfDimension`.\n   */\n  public static getModelName() {\n    return \"InfDimension\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfDimension for dynamic purposes.\n  **/\n  public static factory(data: InfDimensionInterface): InfDimension{\n    return new InfDimension(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfDimension',\n      plural: 'InfDimensions',\n      path: 'InfDimensions',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"fk_measurement_unit\": {\n          name: 'fk_measurement_unit',\n          type: 'number'\n        },\n        \"numeric_value\": {\n          name: 'numeric_value',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n        incoming_statements: {\n          name: 'incoming_statements',\n          type: 'InfStatement[]',\n          model: 'InfStatement',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_object_info'\n        },\n        measurement_unit: {\n          name: 'measurement_unit',\n          type: 'InfPersistentItem',\n          model: 'InfPersistentItem',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_measurement_unit',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel,\n  InfStatement,\n  InfLanguage\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfLangStringInterface {\n  \"fk_class\": number;\n  \"fk_language\": number;\n  \"quill_doc\"?: any;\n  \"string\"?: string;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  incoming_statements?: InfStatement[];\n  language?: InfLanguage;\n}\n\nexport class InfLangString implements InfLangStringInterface {\n  \"fk_class\": number;\n  \"fk_language\": number;\n  \"quill_doc\": any;\n  \"string\": string;\n  \"pk_entity\": number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  incoming_statements?: InfStatement[];\n  language?: InfLanguage;\n  constructor(data?: InfLangStringInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfLangString`.\n   */\n  public static getModelName() {\n    return \"InfLangString\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfLangString for dynamic purposes.\n  **/\n  public static factory(data: InfLangStringInterface): InfLangString{\n    return new InfLangString(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfLangString',\n      plural: 'InfLangStrings',\n      path: 'InfLangStrings',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"fk_language\": {\n          name: 'fk_language',\n          type: 'number'\n        },\n        \"quill_doc\": {\n          name: 'quill_doc',\n          type: 'any'\n        },\n        \"string\": {\n          name: 'string',\n          type: 'string'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n        incoming_statements: {\n          name: 'incoming_statements',\n          type: 'InfStatement[]',\n          model: 'InfStatement',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_object_info'\n        },\n        language: {\n          name: 'language',\n          type: 'InfLanguage',\n          model: 'InfLanguage',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_language',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfLanguageInterface {\n  \"fk_class\"?: number;\n  \"pk_language\"?: string;\n  \"lang_type\"?: string;\n  \"scope\"?: string;\n  \"iso6392b\"?: string;\n  \"iso6392t\"?: string;\n  \"iso6391\"?: string;\n  \"notes\"?: string;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n}\n\nexport class InfLanguage implements InfLanguageInterface {\n  \"fk_class\": number;\n  \"pk_language\": string;\n  \"lang_type\": string;\n  \"scope\": string;\n  \"iso6392b\": string;\n  \"iso6392t\": string;\n  \"iso6391\": string;\n  \"notes\": string;\n  \"pk_entity\": number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  constructor(data?: InfLanguageInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfLanguage`.\n   */\n  public static getModelName() {\n    return \"InfLanguage\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfLanguage for dynamic purposes.\n  **/\n  public static factory(data: InfLanguageInterface): InfLanguage{\n    return new InfLanguage(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfLanguage',\n      plural: 'InfLanguages',\n      path: 'InfLanguages',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"pk_language\": {\n          name: 'pk_language',\n          type: 'string'\n        },\n        \"lang_type\": {\n          name: 'lang_type',\n          type: 'string'\n        },\n        \"scope\": {\n          name: 'scope',\n          type: 'string'\n        },\n        \"iso6392b\": {\n          name: 'iso6392b',\n          type: 'string'\n        },\n        \"iso6392t\": {\n          name: 'iso6392t',\n          type: 'string'\n        },\n        \"iso6391\": {\n          name: 'iso6391',\n          type: 'string'\n        },\n        \"notes\": {\n          name: 'notes',\n          type: 'string'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel,\n  InfStatement,\n  InfTextProperty\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfPersistentItemInterface {\n  \"fk_class\": number;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  incoming_statements?: InfStatement[];\n  outgoing_statements?: InfStatement[];\n  text_properties?: InfTextProperty[];\n}\n\nexport class InfPersistentItem implements InfPersistentItemInterface {\n  \"fk_class\": number;\n  \"pk_entity\": number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  incoming_statements?: InfStatement[];\n  outgoing_statements?: InfStatement[];\n  text_properties?: InfTextProperty[];\n  constructor(data?: InfPersistentItemInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfPersistentItem`.\n   */\n  public static getModelName() {\n    return \"InfPersistentItem\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfPersistentItem for dynamic purposes.\n  **/\n  public static factory(data: InfPersistentItemInterface): InfPersistentItem {\n    return new InfPersistentItem(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfPersistentItem',\n      plural: 'InfPersistentItems',\n      path: 'InfPersistentItems',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n        incoming_statements: {\n          name: 'incoming_statements',\n          type: 'InfStatement[]',\n          model: 'InfStatement',\n          relationType: 'hasMany',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_object_info'\n        },\n        outgoing_statements: {\n          name: 'outgoing_statements',\n          type: 'InfStatement[]',\n          model: 'InfStatement',\n          relationType: 'hasMany',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_subject_info'\n        },\n        dfh_class: {\n          name: 'dfh_class',\n          type: 'DfhClass',\n          model: 'DfhClass',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_class',\n          keyTo: 'pk_class'\n        },\n        text_properties: {\n          name: 'text_properties',\n          type: 'InfTextProperty[]',\n          model: 'InfTextProperty',\n          relationType: 'hasMany',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_concerned_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfPlaceInterface {\n  \"long\": number;\n  \"lat\": number;\n  \"fk_class\": number;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n}\n\nexport class InfPlace implements InfPlaceInterface {\n  \"long\": number;\n  \"lat\": number;\n  \"fk_class\": number;\n  \"pk_entity\": number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  constructor(data?: InfPlaceInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfPlace`.\n   */\n  public static getModelName() {\n    return \"InfPlace\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfPlace for dynamic purposes.\n  **/\n  public static factory(data: InfPlaceInterface): InfPlace{\n    return new InfPlace(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfPlace',\n      plural: 'InfPlaces',\n      path: 'InfPlaces',\n      idName: 'pk_entity',\n      properties: {\n        \"long\": {\n          name: 'long',\n          type: 'number'\n        },\n        \"lat\": {\n          name: 'lat',\n          type: 'number'\n        },\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel,\n  InfTemporalEntity,\n  DatDigital,\n  DatChunk,\n  InfAppellation,\n  InfLangString,\n  InfDimension,\n  InfLanguage,\n  InfPersistentItem,\n  InfTimePrimitive,\n  InfPlace\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfStatementInterface {\n  \"fk_subject_info\"?: number;\n  \"fk_subject_data\"?: number;\n  \"fk_subject_tables_cell\"?: number;\n  \"fk_subject_tables_row\"?: number;\n  \"fk_property\"?: number;\n  \"fk_property_of_property\"?: number;\n  \"fk_object_info\"?: number;\n  \"fk_object_data\"?: number;\n  \"fk_object_tables_cell\"?: number;\n  \"fk_object_tables_row\"?: number;\n  \"is_in_project_count\"?: number;\n  \"is_standard_in_project_count\"?: number;\n  \"community_favorite_calendar\"?: string;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  subject_temporal_entity?: InfTemporalEntity;\n  subject_digital?: DatDigital;\n  subject_chunk?: DatChunk;\n  subject_statement?: InfStatement;\n  object_temporal_entity?: InfTemporalEntity;\n  object_appellation?: InfAppellation;\n  object_lang_string?: InfLangString;\n  object_chunk?: DatChunk;\n  object_dimension?: InfDimension;\n  object_language?: InfLanguage;\n  subject_persistent_item?: InfPersistentItem;\n  object_persistent_item?: InfPersistentItem;\n  object_time_primitive?: InfTimePrimitive;\n  object_place?: InfPlace;\n}\n\nexport class InfStatement implements InfStatementInterface {\n  \"fk_subject_info\"?: number;\n  \"fk_subject_data\"?: number;\n  \"fk_subject_tables_cell\"?: number;\n  \"fk_subject_tables_row\"?: number;\n  \"fk_property\"?: number;\n  \"fk_property_of_property\"?: number;\n  \"fk_object_info\"?: number;\n  \"fk_object_data\"?: number;\n  \"fk_object_tables_cell\"?: number;\n  \"fk_object_tables_row\"?: number;\n  \"is_in_project_count\"?: number;\n  \"is_standard_in_project_count\"?: number;\n  \"community_favorite_calendar\"?: string;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  subject_temporal_entity?: InfTemporalEntity;\n  subject_digital?: DatDigital;\n  subject_chunk?: DatChunk;\n  subject_statement?: InfStatement;\n  object_temporal_entity?: InfTemporalEntity;\n  object_appellation?: InfAppellation;\n  object_lang_string?: InfLangString;\n  object_chunk?: DatChunk;\n  object_dimension?: InfDimension;\n  object_language?: InfLanguage;\n  subject_persistent_item?: InfPersistentItem;\n  object_persistent_item?: InfPersistentItem;\n  object_time_primitive?: InfTimePrimitive;\n  object_place?: InfPlace;\n  constructor(data?: InfStatementInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfStatement`.\n   */\n  public static getModelName() {\n    return \"InfStatement\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfStatement for dynamic purposes.\n  **/\n  public static factory(data: InfStatementInterface): InfStatement {\n    return new InfStatement(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfStatement',\n      plural: 'InfStatements',\n      path: 'InfStatements',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_subject_info\": {\n          name: 'fk_subject_info',\n          type: 'number',\n          default: 0\n        },\n        \"fk_subject_data\": {\n          name: 'fk_subject_data',\n          type: 'number',\n          default: 0\n        },\n        \"fk_subject_tables_cell\": {\n          name: 'fk_subject_tables_cell',\n          type: 'number',\n          default: 0\n        },\n        \"fk_subject_tables_row\": {\n          name: 'fk_subject_tables_row',\n          type: 'number',\n          default: 0\n        },\n        \"fk_property\": {\n          name: 'fk_property',\n          type: 'number',\n          default: 0\n        },\n        \"fk_property_of_property\": {\n          name: 'fk_property_of_property',\n          type: 'number',\n          default: 0\n        },\n        \"fk_object_info\": {\n          name: 'fk_object_info',\n          type: 'number',\n          default: 0\n        },\n        \"fk_object_data\": {\n          name: 'fk_object_data',\n          type: 'number',\n          default: 0\n        },\n        \"fk_object_tables_cell\": {\n          name: 'fk_object_tables_cell',\n          type: 'number',\n          default: 0\n        },\n        \"fk_object_tables_row\": {\n          name: 'fk_object_tables_row',\n          type: 'number',\n          default: 0\n        },\n        \"is_in_project_count\": {\n          name: 'is_in_project_count',\n          type: 'number'\n        },\n        \"is_standard_in_project_count\": {\n          name: 'is_standard_in_project_count',\n          type: 'number'\n        },\n        \"community_favorite_calendar\": {\n          name: 'community_favorite_calendar',\n          type: 'string'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n        subject_temporal_entity: {\n          name: 'subject_temporal_entity',\n          type: 'InfTemporalEntity',\n          model: 'InfTemporalEntity',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_subject_info',\n          keyTo: 'pk_entity'\n        },\n        subject_digital: {\n          name: 'subject_digital',\n          type: 'DatDigital',\n          model: 'DatDigital',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_subject_data',\n          keyTo: 'pk_entity'\n        },\n        subject_chunk: {\n          name: 'subject_chunk',\n          type: 'DatChunk',\n          model: 'DatChunk',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_subject_data',\n          keyTo: 'pk_entity'\n        },\n        subject_statement: {\n          name: 'subject_statement',\n          type: 'InfStatement',\n          model: 'InfStatement',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_subject_info',\n          keyTo: 'pk_entity'\n        },\n        object_temporal_entity: {\n          name: 'object_temporal_entity',\n          type: 'InfTemporalEntity',\n          model: 'InfTemporalEntity',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_object_info',\n          keyTo: 'pk_entity'\n        },\n        object_appellation: {\n          name: 'object_appellation',\n          type: 'InfAppellation',\n          model: 'InfAppellation',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_object_info',\n          keyTo: 'pk_entity'\n        },\n        object_lang_string: {\n          name: 'object_lang_string',\n          type: 'InfLangString',\n          model: 'InfLangString',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_object_info',\n          keyTo: 'pk_entity'\n        },\n        object_chunk: {\n          name: 'object_chunk',\n          type: 'DatChunk',\n          model: 'DatChunk',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_object_data',\n          keyTo: 'pk_entity'\n        },\n        object_dimension: {\n          name: 'object_dimension',\n          type: 'InfDimension',\n          model: 'InfDimension',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_object_info',\n          keyTo: 'pk_entity'\n        },\n        object_language: {\n          name: 'object_language',\n          type: 'InfLanguage',\n          model: 'InfLanguage',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_object_info',\n          keyTo: 'pk_entity'\n        },\n        subject_persistent_item: {\n          name: 'subject_persistent_item',\n          type: 'InfPersistentItem',\n          model: 'InfPersistentItem',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_subject_info',\n          keyTo: 'pk_entity'\n        },\n        object_persistent_item: {\n          name: 'object_persistent_item',\n          type: 'InfPersistentItem',\n          model: 'InfPersistentItem',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_object_info',\n          keyTo: 'pk_entity'\n        },\n        object_time_primitive: {\n          name: 'object_time_primitive',\n          type: 'InfTimePrimitive',\n          model: 'InfTimePrimitive',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_object_info',\n          keyTo: 'pk_entity'\n        },\n        object_place: {\n          name: 'object_place',\n          type: 'InfPlace',\n          model: 'InfPlace',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_object_info',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel,\n  InfStatement,\n  InfTextProperty\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfTemporalEntityInterface {\n  \"fk_class\": number;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  outgoing_statements?: InfStatement[];\n  incoming_statements?: InfStatement[];\n  text_properties?: InfTextProperty[];\n}\n\nexport class InfTemporalEntity implements InfTemporalEntityInterface {\n  \"fk_class\": number;\n  \"pk_entity\": number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  outgoing_statements?: InfStatement[];\n  incoming_statements?: InfStatement[];\n  text_properties?: InfTextProperty[];\n  constructor(data?: InfTemporalEntityInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfTemporalEntity`.\n   */\n  public static getModelName() {\n    return \"InfTemporalEntity\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfTemporalEntity for dynamic purposes.\n  **/\n  public static factory(data: InfTemporalEntityInterface): InfTemporalEntity{\n    return new InfTemporalEntity(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfTemporalEntity',\n      plural: 'InfTemporalEntities',\n      path: 'InfTemporalEntities',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n        outgoing_statements: {\n          name: 'outgoing_statements',\n          type: 'InfStatement[]',\n          model: 'InfStatement',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_subject_info'\n        },\n        incoming_statements: {\n          name: 'incoming_statements',\n          type: 'InfStatement[]',\n          model: 'InfStatement',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_object_info'\n        },\n        text_properties: {\n          name: 'text_properties',\n          type: 'InfTextProperty[]',\n          model: 'InfTextProperty',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_concerned_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel,\n  InfPersistentItem,\n  InfTemporalEntity,\n  InfLanguage,\n  SysClassField\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfTextPropertyInterface {\n  \"fk_class_field\": number;\n  \"fk_concerned_entity\": number;\n  \"fk_language\": number;\n  \"quill_doc\": any;\n  \"string\"?: string;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  persistent_item?: InfPersistentItem;\n  temporal_entity?: InfTemporalEntity;\n  language?: InfLanguage;\n  class_field?: SysClassField;\n}\n\nexport class InfTextProperty implements InfTextPropertyInterface {\n  \"fk_class_field\": number;\n  \"fk_concerned_entity\": number;\n  \"fk_language\": number;\n  \"quill_doc\": any;\n  \"string\": string;\n  \"pk_entity\": number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  persistent_item?: InfPersistentItem;\n  temporal_entity?: InfTemporalEntity;\n  language?: InfLanguage;\n  class_field?: SysClassField;\n  constructor(data?: InfTextPropertyInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfTextProperty`.\n   */\n  public static getModelName() {\n    return \"InfTextProperty\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfTextProperty for dynamic purposes.\n  **/\n  public static factory(data: InfTextPropertyInterface): InfTextProperty{\n    return new InfTextProperty(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfTextProperty',\n      plural: 'InfTextProperties',\n      path: 'InfTextProperties',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_class_field\": {\n          name: 'fk_class_field',\n          type: 'number'\n        },\n        \"fk_concerned_entity\": {\n          name: 'fk_concerned_entity',\n          type: 'number'\n        },\n        \"fk_language\": {\n          name: 'fk_language',\n          type: 'number'\n        },\n        \"quill_doc\": {\n          name: 'quill_doc',\n          type: 'any'\n        },\n        \"string\": {\n          name: 'string',\n          type: 'string'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n        persistent_item: {\n          name: 'persistent_item',\n          type: 'InfPersistentItem',\n          model: 'InfPersistentItem',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_concerned_entity',\n          keyTo: 'pk_entity'\n        },\n        temporal_entity: {\n          name: 'temporal_entity',\n          type: 'InfTemporalEntity',\n          model: 'InfTemporalEntity',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_concerned_entity',\n          keyTo: 'pk_entity'\n        },\n        language: {\n          name: 'language',\n          type: 'InfLanguage',\n          model: 'InfLanguage',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_language',\n          keyTo: 'pk_entity'\n        },\n        class_field: {\n          name: 'class_field',\n          type: 'SysClassField',\n          model: 'SysClassField',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_class_field',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfTimePrimitiveInterface {\n  \"fk_class\": number;\n  \"julian_day\": number;\n  \"duration\": string;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n}\n\nexport class InfTimePrimitive implements InfTimePrimitiveInterface {\n  \"fk_class\": number;\n  \"julian_day\": number;\n  \"duration\": string;\n  \"pk_entity\": number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  constructor(data?: InfTimePrimitiveInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfTimePrimitive`.\n   */\n  public static getModelName() {\n    return \"InfTimePrimitive\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfTimePrimitive for dynamic purposes.\n  **/\n  public static factory(data: InfTimePrimitiveInterface): InfTimePrimitive{\n    return new InfTimePrimitive(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfTimePrimitive',\n      plural: 'InfTimePrimitives',\n      path: 'InfTimePrimitives',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"julian_day\": {\n          name: 'julian_day',\n          type: 'number'\n        },\n        \"duration\": {\n          name: 'duration',\n          type: 'string'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  // DfhProperty,\n  SysClassField,\n  ProProject\n} from '../index';\n\ndeclare var Object: any;\nexport interface ProClassFieldConfigInterface {\n  \"pk_entity\"?: number;\n  \"fk_project\"?: number;\n  \"fk_property\"?: number;\n  \"fk_class_field\"?: number;\n  \"fk_domain_class\"?: number;\n  \"fk_range_class\"?: number;\n  \"ord_num\"?: number;\n  \"fk_class_for_class_field\"?: number;\n  // property?: DfhProperty;\n  class_field?: SysClassField;\n  project?: ProProject;\n}\n\nexport class ProClassFieldConfig implements ProClassFieldConfigInterface {\n  \"pk_entity\": number;\n  \"fk_project\": number;\n  \"fk_property\": number;\n  \"fk_class_field\": number;\n  \"fk_domain_class\": number;\n  \"fk_range_class\": number;\n  \"ord_num\": number;\n  \"fk_class_for_class_field\": number;\n  // property?: DfhProperty;\n  class_field?: SysClassField;\n  project?: ProProject;\n  constructor(data?: ProClassFieldConfigInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProClassFieldConfig`.\n   */\n  public static getModelName() {\n    return \"ProClassFieldConfig\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of ProClassFieldConfig for dynamic purposes.\n  **/\n  public static factory(data: ProClassFieldConfigInterface): ProClassFieldConfig {\n    return new ProClassFieldConfig(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'ProClassFieldConfig',\n      plural: 'ProClassFieldConfigs',\n      path: 'ProClassFieldConfigs',\n      idName: 'pk_entity',\n      properties: {\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_project\": {\n          name: 'fk_project',\n          type: 'number'\n        },\n        \"fk_property\": {\n          name: 'fk_property',\n          type: 'number'\n        },\n        \"fk_class_field\": {\n          name: 'fk_class_field',\n          type: 'number'\n        },\n        \"fk_domain_class\": {\n          name: 'fk_domain_class',\n          type: 'number'\n        },\n        \"fk_range_class\": {\n          name: 'fk_range_class',\n          type: 'number'\n        },\n        \"ord_num\": {\n          name: 'ord_num',\n          type: 'number'\n        },\n        \"fk_class_for_class_field\": {\n          name: 'fk_class_for_class_field',\n          type: 'number'\n        },\n      },\n      relations: {\n        property: {\n          name: 'property',\n          type: 'DfhProperty',\n          model: 'DfhProperty',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_property',\n          keyTo: 'pk_property'\n        },\n        class_field: {\n          name: 'class_field',\n          type: 'SysClassField',\n          model: 'SysClassField',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_class_field',\n          keyTo: 'pk_entity'\n        },\n        project: {\n          name: 'project',\n          type: 'ProProject',\n          model: 'ProProject',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_project',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface ProDfhClassProjRelInterface {\n  \"pk_entity\"?: number;\n  \"fk_class\": number;\n  \"fk_project\": number;\n  \"enabled_in_entities\"?: boolean;\n}\n\nexport class ProDfhClassProjRel implements ProDfhClassProjRelInterface {\n  \"pk_entity\": number;\n  \"fk_class\": number;\n  \"fk_project\": number;\n  \"enabled_in_entities\": boolean;\n  constructor(data?: ProDfhClassProjRelInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProDfhClassProjRel`.\n   */\n  public static getModelName() {\n    return \"ProDfhClassProjRel\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of ProDfhClassProjRel for dynamic purposes.\n  **/\n  public static factory(data: ProDfhClassProjRelInterface): ProDfhClassProjRel{\n    return new ProDfhClassProjRel(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'ProDfhClassProjRel',\n      plural: 'ProDfhClassProjRels',\n      path: 'ProDfhClassProjRels',\n      idName: 'pk_entity',\n      properties: {\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"fk_project\": {\n          name: 'fk_project',\n          type: 'number'\n        },\n        \"enabled_in_entities\": {\n          name: 'enabled_in_entities',\n          type: 'boolean'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface ProDfhProfileProjRelInterface {\n  \"pk_entity\"?: number;\n  \"fk_profile\": number;\n  \"fk_project\": number;\n  \"enabled\"?: boolean;\n}\n\nexport class ProDfhProfileProjRel implements ProDfhProfileProjRelInterface {\n  \"pk_entity\": number;\n  \"fk_profile\": number;\n  \"fk_project\": number;\n  \"enabled\": boolean;\n  constructor(data?: ProDfhProfileProjRelInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProDfhProfileProjRel`.\n   */\n  public static getModelName() {\n    return \"ProDfhProfileProjRel\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of ProDfhProfileProjRel for dynamic purposes.\n  **/\n  public static factory(data: ProDfhProfileProjRelInterface): ProDfhProfileProjRel{\n    return new ProDfhProfileProjRel(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'ProDfhProfileProjRel',\n      plural: 'ProDfhProfileProjRels',\n      path: 'ProDfhProfileProjRels',\n      idName: 'pk_entity',\n      properties: {\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_profile\": {\n          name: 'fk_profile',\n          type: 'number'\n        },\n        \"fk_project\": {\n          name: 'fk_project',\n          type: 'number'\n        },\n        \"enabled\": {\n          name: 'enabled',\n          type: 'boolean'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface ProInfoProjRelInterface {\n  \"fk_project\": number;\n  \"fk_entity\"?: number;\n  \"fk_entity_version\"?: string;\n  \"fk_entity_version_concat\"?: string;\n  \"is_in_project\"?: boolean;\n  \"is_standard_in_project\"?: boolean;\n  \"calendar\"?: string;\n  \"ord_num_of_domain\"?: number;\n  \"ord_num_of_range\"?: number;\n  \"ord_num_of_text_property\"?: number;\n  \"tmsp_last_modification\"?: string;\n  \"fk_creator\"?: number;\n  \"fk_last_modifier\": number;\n  \"pk_entity\"?: number;\n  \"entity_version\"?: number;\n  \"tmsp_creation\"?: string;\n}\n\nexport class ProInfoProjRel implements ProInfoProjRelInterface {\n  \"fk_project\": number;\n  \"fk_entity\"?: number;\n  \"fk_entity_version\"?: string;\n  \"fk_entity_version_concat\"?: string;\n  \"is_in_project\"?: boolean;\n  \"is_standard_in_project\"?: boolean;\n  \"calendar\"?: string;\n  \"ord_num_of_domain\"?: number;\n  \"ord_num_of_range\"?: number;\n  \"ord_num_of_text_property\"?: number;\n  \"tmsp_last_modification\"?: string;\n  \"fk_creator\"?: number;\n  \"fk_last_modifier\": number;\n  \"pk_entity\"?: number;\n  \"entity_version\"?: number;\n  \"tmsp_creation\"?: string;\n  constructor(data?: ProInfoProjRelInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProInfoProjRel`.\n   */\n  public static getModelName() {\n    return \"ProInfoProjRel\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of ProInfoProjRel for dynamic purposes.\n  **/\n  public static factory(data: ProInfoProjRelInterface): ProInfoProjRel {\n    return new ProInfoProjRel(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'ProInfoProjRel',\n      plural: 'ProInfoProjRels',\n      path: 'ProInfoProjRels',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_project\": {\n          name: 'fk_project',\n          type: 'number'\n        },\n        \"fk_entity\": {\n          name: 'fk_entity',\n          type: 'number'\n        },\n        \"fk_entity_version\": {\n          name: 'fk_entity_version',\n          type: 'string'\n        },\n        \"fk_entity_version_concat\": {\n          name: 'fk_entity_version_concat',\n          type: 'string'\n        },\n        \"is_in_project\": {\n          name: 'is_in_project',\n          type: 'boolean'\n        },\n        \"is_standard_in_project\": {\n          name: 'is_standard_in_project',\n          type: 'boolean'\n        },\n        \"calendar\": {\n          name: 'calendar',\n          type: 'string'\n        },\n        \"ord_num_of_domain\": {\n          name: 'ord_num_of_domain',\n          type: 'number'\n        },\n        \"ord_num_of_range\": {\n          name: 'ord_num_of_range',\n          type: 'number'\n        },\n        \"ord_num_of_text_property\": {\n          name: 'ord_num_of_text_property',\n          type: 'number'\n        },\n        \"tmsp_last_modification\": {\n          name: 'tmsp_last_modification',\n          type: 'string'\n        },\n        \"fk_creator\": {\n          name: 'fk_creator',\n          type: 'number'\n        },\n        \"fk_last_modifier\": {\n          name: 'fk_last_modifier',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"entity_version\": {\n          name: 'entity_version',\n          type: 'number'\n        },\n        \"tmsp_creation\": {\n          name: 'tmsp_creation',\n          type: 'string'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  PubAccount,\n  ProTextProperty,\n  ProInfoProjRel,\n  InfLanguage,\n  InfPersistentItem,\n  DatNamespace\n} from '../index';\n\ndeclare var Object: any;\nexport interface ProProjectInterface {\n  \"pk_entity\"?: number;\n  \"fk_language\"?: number;\n  accounts?: PubAccount[];\n  text_properties?: ProTextProperty[];\n  entity_version_project_rels?: ProInfoProjRel[];\n  default_language?: InfLanguage;\n  persistent_items?: InfPersistentItem[];\n  namespaces?: DatNamespace[];\n}\n\nexport class ProProject implements ProProjectInterface {\n  \"pk_entity\": number;\n  \"fk_language\": number;\n  accounts?: PubAccount[];\n  text_properties?: ProTextProperty[];\n  entity_version_project_rels?: ProInfoProjRel[];\n  default_language?: InfLanguage;\n  persistent_items?: InfPersistentItem[];\n  namespaces?: DatNamespace[];\n  constructor(data?: ProProjectInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProProject`.\n   */\n  public static getModelName() {\n    return \"ProProject\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of ProProject for dynamic purposes.\n  **/\n  public static factory(data: ProProjectInterface): ProProject{\n    return new ProProject(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'ProProject',\n      plural: 'ProProjects',\n      path: 'ProProjects',\n      idName: 'pk_entity',\n      properties: {\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_language\": {\n          name: 'fk_language',\n          type: 'number'\n        },\n      },\n      relations: {\n        accounts: {\n          name: 'accounts',\n          type: 'PubAccount[]',\n          model: 'PubAccount',\n          relationType: 'hasMany',\n          modelThrough: 'PubAccountProjectRel',\n          keyThrough: 'account_id',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_project'\n        },\n        text_properties: {\n          name: 'text_properties',\n          type: 'ProTextProperty[]',\n          model: 'ProTextProperty',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_project'\n        },\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_project'\n        },\n        default_language: {\n          name: 'default_language',\n          type: 'InfLanguage',\n          model: 'InfLanguage',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_language',\n          keyTo: 'pk_entity'\n        },\n        persistent_items: {\n          name: 'persistent_items',\n          type: 'InfPersistentItem[]',\n          model: 'InfPersistentItem',\n          relationType: 'hasMany',\n          modelThrough: 'ProInfoProjRel',\n          keyThrough: 'fk_entity',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_project'\n        },\n        namespaces: {\n          name: 'namespaces',\n          type: 'DatNamespace[]',\n          model: 'DatNamespace',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_project'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProProject,\n  InfLanguage,\n  SysSystemType\n} from '../index';\n\ndeclare var Object: any;\nexport interface ProTextPropertyInterface {\n  \"string\": string;\n  \"fk_system_type\": number;\n  \"fk_language\": number;\n  \"fk_project\": number;\n  \"fk_dfh_class\"?: number;\n  \"fk_dfh_property\"?: number;\n  \"fk_dfh_property_domain\"?: number;\n  \"fk_dfh_property_range\"?: number;\n  \"fk_pro_project\"?: number;\n  \"pk_entity\"?: number;\n  \"entity_version\"?: number;\n  \"tmsp_creation\"?: string;\n  \"tmsp_last_modification\"?: string;\n  project?: ProProject;\n  language?: InfLanguage;\n  systemType?: SysSystemType;\n}\n\nexport class ProTextProperty implements ProTextPropertyInterface {\n  \"string\": string;\n  \"fk_system_type\": number;\n  \"fk_language\": number;\n  \"fk_project\": number;\n  \"fk_dfh_class\": number;\n  \"fk_dfh_property\": number;\n  \"fk_dfh_property_domain\": number;\n  \"fk_dfh_property_range\": number;\n  \"fk_pro_project\": number;\n  \"pk_entity\": number;\n  \"entity_version\": number;\n  \"tmsp_creation\": string;\n  \"tmsp_last_modification\": string;\n  project?: ProProject;\n  language?: InfLanguage;\n  systemType?: SysSystemType;\n  constructor(data?: ProTextPropertyInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProTextProperty`.\n   */\n  public static getModelName() {\n    return \"ProTextProperty\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of ProTextProperty for dynamic purposes.\n  **/\n  public static factory(data: ProTextPropertyInterface): ProTextProperty{\n    return new ProTextProperty(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'ProTextProperty',\n      plural: 'ProTextProperties',\n      path: 'ProTextProperties',\n      idName: 'pk_entity',\n      properties: {\n        \"string\": {\n          name: 'string',\n          type: 'string'\n        },\n        \"fk_system_type\": {\n          name: 'fk_system_type',\n          type: 'number'\n        },\n        \"fk_language\": {\n          name: 'fk_language',\n          type: 'number'\n        },\n        \"fk_project\": {\n          name: 'fk_project',\n          type: 'number'\n        },\n        \"fk_dfh_class\": {\n          name: 'fk_dfh_class',\n          type: 'number'\n        },\n        \"fk_dfh_property\": {\n          name: 'fk_dfh_property',\n          type: 'number'\n        },\n        \"fk_dfh_property_domain\": {\n          name: 'fk_dfh_property_domain',\n          type: 'number'\n        },\n        \"fk_dfh_property_range\": {\n          name: 'fk_dfh_property_range',\n          type: 'number'\n        },\n        \"fk_pro_project\": {\n          name: 'fk_pro_project',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"entity_version\": {\n          name: 'entity_version',\n          type: 'number'\n        },\n        \"tmsp_creation\": {\n          name: 'tmsp_creation',\n          type: 'string'\n        },\n        \"tmsp_last_modification\": {\n          name: 'tmsp_last_modification',\n          type: 'string'\n        },\n      },\n      relations: {\n        project: {\n          name: 'project',\n          type: 'ProProject',\n          model: 'ProProject',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_project',\n          keyTo: 'pk_entity'\n        },\n        language: {\n          name: 'language',\n          type: 'InfLanguage',\n          model: 'InfLanguage',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_language',\n          keyTo: 'pk_entity'\n        },\n        systemType: {\n          name: 'systemType',\n          type: 'SysSystemType',\n          model: 'SysSystemType',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_system_type',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface PubAccountInterface {\n  \"id\"?: number;\n  \"realm\"?: string;\n  \"username\"?: string;\n  \"email\": string;\n  \"emailVerified\"?: boolean;\n  accessTokens?: any[];\n  projects?: any[];\n}\n\nexport class PubAccount implements PubAccountInterface {\n  \"id\": number;\n  \"realm\": string;\n  \"username\": string;\n  \"email\": string;\n  \"emailVerified\": boolean;\n  accessTokens?: any[];\n  projects?: any[];\n  constructor(data?: PubAccountInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `PubAccount`.\n   */\n  public static getModelName() {\n    return \"PubAccount\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of PubAccount for dynamic purposes.\n  **/\n  public static factory(data: PubAccountInterface): PubAccount{\n    return new PubAccount(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'PubAccount',\n      plural: 'PubAccounts',\n      path: 'PubAccounts',\n      idName: 'id',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n        \"realm\": {\n          name: 'realm',\n          type: 'string'\n        },\n        \"username\": {\n          name: 'username',\n          type: 'string'\n        },\n        \"email\": {\n          name: 'email',\n          type: 'string'\n        },\n        \"emailVerified\": {\n          name: 'emailVerified',\n          type: 'boolean'\n        },\n      },\n      relations: {\n        accessTokens: {\n          name: 'accessTokens',\n          type: 'any[]',\n          model: '',\n          relationType: 'hasMany',\n                  keyFrom: 'id',\n          keyTo: 'userId'\n        },\n        projects: {\n          name: 'projects',\n          type: 'any[]',\n          model: '',\n          relationType: 'hasMany',\n          modelThrough: 'PubAccountProjectRel',\n          keyThrough: 'fk_project',\n          keyFrom: 'id',\n          keyTo: 'account_id'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  PubAccount,\n  ProProject\n} from '../index';\n\ndeclare var Object: any;\nexport interface PubAccountProjectRelInterface {\n  \"role\": string;\n  \"fk_project\": number;\n  \"account_id\"?: number;\n  \"id\"?: number;\n  account?: PubAccount;\n  project?: ProProject;\n}\n\nexport class PubAccountProjectRel implements PubAccountProjectRelInterface {\n  \"role\": string;\n  \"fk_project\": number;\n  \"account_id\": number;\n  \"id\": number;\n  account?: PubAccount;\n  project?: ProProject;\n  constructor(data?: PubAccountProjectRelInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `PubAccountProjectRel`.\n   */\n  public static getModelName() {\n    return \"PubAccountProjectRel\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of PubAccountProjectRel for dynamic purposes.\n  **/\n  public static factory(data: PubAccountProjectRelInterface): PubAccountProjectRel{\n    return new PubAccountProjectRel(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'PubAccountProjectRel',\n      plural: 'PubAccountProjectRels',\n      path: 'PubAccountProjectRels',\n      idName: 'id',\n      properties: {\n        \"role\": {\n          name: 'role',\n          type: 'string',\n          default: 'admin'\n        },\n        \"fk_project\": {\n          name: 'fk_project',\n          type: 'number'\n        },\n        \"account_id\": {\n          name: 'account_id',\n          type: 'number'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n      },\n      relations: {\n        account: {\n          name: 'account',\n          type: 'PubAccount',\n          model: 'PubAccount',\n          relationType: 'belongsTo',\n                  keyFrom: 'account_id',\n          keyTo: 'id'\n        },\n        project: {\n          name: 'project',\n          type: 'ProProject',\n          model: 'ProProject',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_project',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface SchemaObjectInterface {\n  \"inf\"?: any;\n  \"pro\"?: any;\n  \"dat\"?: any;\n  \"sys\"?: any;\n  \"dfh\"?: any;\n}\n\nexport class SchemaObject implements SchemaObjectInterface {\n  \"inf\": any;\n  \"pro\": any;\n  \"dat\": any;\n  \"sys\": any;\n  \"dfh\": any;\n  constructor(data?: SchemaObjectInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SchemaObject`.\n   */\n  public static getModelName() {\n    return \"SchemaObject\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SchemaObject for dynamic purposes.\n  **/\n  public static factory(data: SchemaObjectInterface): SchemaObject{\n    return new SchemaObject(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SchemaObject',\n      plural: 'SchemaObjects',\n      path: 'SchemaObjects',\n      idName: 'inf',\n      properties: {\n        \"inf\": {\n          name: 'inf',\n          type: 'any'\n        },\n        \"pro\": {\n          name: 'pro',\n          type: 'any'\n        },\n        \"dat\": {\n          name: 'dat',\n          type: 'any'\n        },\n        \"sys\": {\n          name: 'sys',\n          type: 'any'\n        },\n        \"dfh\": {\n          name: 'dfh',\n          type: 'any'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface SysAppContextInterface {\n  \"pk_entity\"?: number;\n  \"description\"?: string;\n  \"label\"?: string;\n}\n\nexport class SysAppContext implements SysAppContextInterface {\n  \"pk_entity\": number;\n  \"description\": string;\n  \"label\": string;\n  constructor(data?: SysAppContextInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysAppContext`.\n   */\n  public static getModelName() {\n    return \"SysAppContext\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SysAppContext for dynamic purposes.\n  **/\n  public static factory(data: SysAppContextInterface): SysAppContext{\n    return new SysAppContext(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SysAppContext',\n      plural: 'SysAppContexts',\n      path: 'SysAppContexts',\n      idName: 'pk_entity',\n      properties: {\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"description\": {\n          name: 'description',\n          type: 'string'\n        },\n        \"label\": {\n          name: 'label',\n          type: 'string'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  SysClassFieldPropertyRel,\n  ProClassFieldConfig,\n} from '../index';\n\ndeclare var Object: any;\nexport interface SysClassFieldInterface {\n  \"pk_entity\"?: number;\n  \"description\"?: string;\n  \"label\"?: string;\n  \"fk_system_type_ng_component\"?: number;\n  \"used_table\"?: string;\n  class_field_property_rel?: SysClassFieldPropertyRel[];\n  class_field_configs?: ProClassFieldConfig[];\n}\n\nexport class SysClassField implements SysClassFieldInterface {\n  \"pk_entity\": number;\n  \"description\": string;\n  \"label\": string;\n  \"fk_system_type_ng_component\": number;\n  \"used_table\": string;\n  class_field_property_rel?: SysClassFieldPropertyRel[];\n  class_field_configs?: ProClassFieldConfig[];\n  constructor(data?: SysClassFieldInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysClassField`.\n   */\n  public static getModelName() {\n    return \"SysClassField\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SysClassField for dynamic purposes.\n  **/\n  public static factory(data: SysClassFieldInterface): SysClassField {\n    return new SysClassField(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SysClassField',\n      plural: 'SysClassFields',\n      path: 'SysClassFields',\n      idName: 'pk_entity',\n      properties: {\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"description\": {\n          name: 'description',\n          type: 'string'\n        },\n        \"label\": {\n          name: 'label',\n          type: 'string'\n        },\n        \"fk_system_type_ng_component\": {\n          name: 'fk_system_type_ng_component',\n          type: 'number'\n        },\n        \"used_table\": {\n          name: 'used_table',\n          type: 'string'\n        },\n      },\n      relations: {\n        class_field_property_rel: {\n          name: 'class_field_property_rel',\n          type: 'SysClassFieldPropertyRel[]',\n          model: 'SysClassFieldPropertyRel',\n          relationType: 'hasMany',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_class_field'\n        },\n        class_field_configs: {\n          name: 'class_field_configs',\n          type: 'ProClassFieldConfig[]',\n          model: 'ProClassFieldConfig',\n          relationType: 'hasMany',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_class_field'\n        },\n        classes: {\n          name: 'classes',\n          type: 'DfhClass[]',\n          model: 'DfhClass',\n          relationType: 'hasMany',\n          modelThrough: 'ProClassFieldConfig',\n          keyThrough: 'fk_class_for_class_field',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_class_field'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  SysClassField,\n  // DfhProperty\n} from '../index';\n\ndeclare var Object: any;\nexport interface SysClassFieldPropertyRelInterface {\n  \"pk_entity\"?: number;\n  \"fk_class_field\"?: number;\n  \"fk_property\"?: number;\n  \"property_is_outgoing\"?: boolean;\n  \"ord_num\"?: number;\n  class_field?: SysClassField;\n  // property?: DfhProperty;\n}\n\nexport class SysClassFieldPropertyRel implements SysClassFieldPropertyRelInterface {\n  \"pk_entity\": number;\n  \"fk_class_field\": number;\n  \"fk_property\": number;\n  \"property_is_outgoing\": boolean;\n  \"ord_num\": number;\n  class_field?: SysClassField;\n  // property?: DfhProperty;\n  constructor(data?: SysClassFieldPropertyRelInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysClassFieldPropertyRel`.\n   */\n  public static getModelName() {\n    return \"SysClassFieldPropertyRel\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SysClassFieldPropertyRel for dynamic purposes.\n  **/\n  public static factory(data: SysClassFieldPropertyRelInterface): SysClassFieldPropertyRel {\n    return new SysClassFieldPropertyRel(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SysClassFieldPropertyRel',\n      plural: 'SysClassFieldPropertyRels',\n      path: 'SysClassFieldPropertyRels',\n      idName: 'pk_entity',\n      properties: {\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_class_field\": {\n          name: 'fk_class_field',\n          type: 'number'\n        },\n        \"fk_property\": {\n          name: 'fk_property',\n          type: 'number'\n        },\n        \"property_is_outgoing\": {\n          name: 'property_is_outgoing',\n          type: 'boolean'\n        },\n        \"ord_num\": {\n          name: 'ord_num',\n          type: 'number'\n        },\n      },\n      relations: {\n        class_field: {\n          name: 'class_field',\n          type: 'SysClassField',\n          model: 'SysClassField',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_class_field',\n          keyTo: 'pk_entity'\n        },\n        property: {\n          name: 'property',\n          type: 'DfhProperty',\n          model: 'DfhProperty',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_property',\n          keyTo: 'pk_property'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface SysClassHasTypePropertyInterface {\n  \"pk_typed_class\"?: number;\n  \"typed_class_label\"?: string;\n  \"dfh_pk_property\"?: number;\n  \"property_label\"?: string;\n  \"pk_type_class\"?: number;\n  \"type_class_label\"?: string;\n  \"pk_entity\"?: number;\n}\n\nexport class SysClassHasTypeProperty implements SysClassHasTypePropertyInterface {\n  \"pk_typed_class\": number;\n  \"typed_class_label\": string;\n  \"dfh_pk_property\": number;\n  \"property_label\": string;\n  \"pk_type_class\": number;\n  \"type_class_label\": string;\n  \"pk_entity\": number;\n  constructor(data?: SysClassHasTypePropertyInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysClassHasTypeProperty`.\n   */\n  public static getModelName() {\n    return \"SysClassHasTypeProperty\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SysClassHasTypeProperty for dynamic purposes.\n  **/\n  public static factory(data: SysClassHasTypePropertyInterface): SysClassHasTypeProperty{\n    return new SysClassHasTypeProperty(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SysClassHasTypeProperty',\n      plural: 'SysClassHasTypeProperties',\n      path: 'SysClassHasTypeProperties',\n      idName: 'pk_entity',\n      properties: {\n        \"pk_typed_class\": {\n          name: 'pk_typed_class',\n          type: 'number'\n        },\n        \"typed_class_label\": {\n          name: 'typed_class_label',\n          type: 'string'\n        },\n        \"dfh_pk_property\": {\n          name: 'dfh_pk_property',\n          type: 'number'\n        },\n        \"property_label\": {\n          name: 'property_label',\n          type: 'string'\n        },\n        \"pk_type_class\": {\n          name: 'pk_type_class',\n          type: 'number'\n        },\n        \"type_class_label\": {\n          name: 'type_class_label',\n          type: 'string'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface SysSystemRelevantClassInterface {\n  \"fk_class\"?: number;\n  \"required_by_entities\"?: boolean;\n  \"required_by_sources\"?: boolean;\n  \"required_by_basics\"?: boolean;\n  \"excluded_from_entities\"?: boolean;\n  \"pk_entity\"?: number;\n}\n\nexport class SysSystemRelevantClass implements SysSystemRelevantClassInterface {\n  \"fk_class\": number;\n  \"required_by_entities\": boolean;\n  \"required_by_sources\": boolean;\n  \"required_by_basics\": boolean;\n  \"excluded_from_entities\": boolean;\n  \"pk_entity\": number;\n  constructor(data?: SysSystemRelevantClassInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysSystemRelevantClass`.\n   */\n  public static getModelName() {\n    return \"SysSystemRelevantClass\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SysSystemRelevantClass for dynamic purposes.\n  **/\n  public static factory(data: SysSystemRelevantClassInterface): SysSystemRelevantClass{\n    return new SysSystemRelevantClass(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SysSystemRelevantClass',\n      plural: 'SysSystemRelevantClasses',\n      path: 'SysSystemRelevantClasses',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"required_by_entities\": {\n          name: 'required_by_entities',\n          type: 'boolean'\n        },\n        \"required_by_sources\": {\n          name: 'required_by_sources',\n          type: 'boolean'\n        },\n        \"required_by_basics\": {\n          name: 'required_by_basics',\n          type: 'boolean'\n        },\n        \"excluded_from_entities\": {\n          name: 'excluded_from_entities',\n          type: 'boolean'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface SysSystemTypeInterface {\n  \"notes\"?: string;\n  \"definition\"?: string;\n  \"st_schema_name\"?: string;\n  \"st_table_name\"?: string;\n  \"st_column_name\"?: string;\n  \"st_group\"?: string;\n  \"pk_entity\"?: number;\n}\n\nexport class SysSystemType implements SysSystemTypeInterface {\n  \"notes\": string;\n  \"definition\": string;\n  \"st_schema_name\": string;\n  \"st_table_name\": string;\n  \"st_column_name\": string;\n  \"st_group\": string;\n  \"pk_entity\": number;\n  constructor(data?: SysSystemTypeInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysSystemType`.\n   */\n  public static getModelName() {\n    return \"SysSystemType\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SysSystemType for dynamic purposes.\n  **/\n  public static factory(data: SysSystemTypeInterface): SysSystemType{\n    return new SysSystemType(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SysSystemType',\n      plural: 'SysSystemTypes',\n      path: 'SysSystemTypes',\n      idName: 'pk_entity',\n      properties: {\n        \"notes\": {\n          name: 'notes',\n          type: 'string'\n        },\n        \"definition\": {\n          name: 'definition',\n          type: 'string'\n        },\n        \"st_schema_name\": {\n          name: 'st_schema_name',\n          type: 'string'\n        },\n        \"st_table_name\": {\n          name: 'st_table_name',\n          type: 'string'\n        },\n        \"st_column_name\": {\n          name: 'st_column_name',\n          type: 'string'\n        },\n        \"st_group\": {\n          name: 'st_group',\n          type: 'string'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { DatChunk } from '../../models/DatChunk';\nimport { DatColumn } from '../../models/DatColumn';\nimport { DatDigital } from '../../models/DatDigital';\nimport { DatNamespace } from '../../models/DatNamespace';\nimport { DatTextProperty } from '../../models/DatTextProperty';\nimport { DfhLabel } from '../../models/DfhLabel';\nimport { DfhProfile } from '../../models/DfhProfile';\n// import { DfhProperty } from '../../models/DfhProperty';\nimport { Email } from '../../models/Email';\nimport { InfAppellation } from '../../models/InfAppellation';\nimport { InfDimension } from '../../models/InfDimension';\nimport { InfLangString } from '../../models/InfLangString';\nimport { InfLanguage } from '../../models/InfLanguage';\nimport { InfPersistentItem } from '../../models/InfPersistentItem';\nimport { InfPlace } from '../../models/InfPlace';\nimport { InfStatement } from '../../models/InfStatement';\nimport { InfTemporalEntity } from '../../models/InfTemporalEntity';\nimport { InfTextProperty } from '../../models/InfTextProperty';\nimport { InfTimePrimitive } from '../../models/InfTimePrimitive';\nimport { ProClassFieldConfig } from '../../models/ProClassFieldConfig';\nimport { ProDfhClassProjRel } from '../../models/ProDfhClassProjRel';\nimport { ProDfhProfileProjRel } from '../../models/ProDfhProfileProjRel';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { ProProject } from '../../models/ProProject';\nimport { ProTextProperty } from '../../models/ProTextProperty';\nimport { PubAccount } from '../../models/PubAccount';\nimport { PubAccountProjectRel } from '../../models/PubAccountProjectRel';\nimport { SchemaObject } from '../../models/SchemaObject';\nimport { SysAppContext } from '../../models/SysAppContext';\nimport { SysClassField } from '../../models/SysClassField';\nimport { SysClassFieldPropertyRel } from '../../models/SysClassFieldPropertyRel';\nimport { SysClassHasTypeProperty } from '../../models/SysClassHasTypeProperty';\nimport { SysSystemRelevantClass } from '../../models/SysSystemRelevantClass';\nimport { SysSystemType } from '../../models/SysSystemType';\n\nexport interface Models { [name: string]: any }\n\n@Injectable()\nexport class SDKModels {\n\n  private models: Models = {\n    SchemaObject: SchemaObject,\n    SysClassFieldPropertyRel: SysClassFieldPropertyRel,\n    SysClassField: SysClassField,\n    SysClassHasTypeProperty: SysClassHasTypeProperty,\n    SysSystemRelevantClass: SysSystemRelevantClass,\n    PubAccount: PubAccount,\n    Email: Email,\n    ProProject: ProProject,\n    PubAccountProjectRel: PubAccountProjectRel,\n    ProTextProperty: ProTextProperty,\n    ProInfoProjRel: ProInfoProjRel,\n    DfhProfile: DfhProfile,\n    DfhLabel: DfhLabel,\n    DatChunk: DatChunk,\n    DatColumn: DatColumn,\n    DatTextProperty: DatTextProperty,\n    DatDigital: DatDigital,\n    SysAppContext: SysAppContext,\n    ProClassFieldConfig: ProClassFieldConfig,\n    ProDfhClassProjRel: ProDfhClassProjRel,\n    ProDfhProfileProjRel: ProDfhProfileProjRel,\n    InfAppellation: InfAppellation,\n    InfLangString: InfLangString,\n    InfDimension: InfDimension,\n    InfTemporalEntity: InfTemporalEntity,\n    InfStatement: InfStatement,\n    InfLanguage: InfLanguage,\n    InfPersistentItem: InfPersistentItem,\n    InfTimePrimitive: InfTimePrimitive,\n    InfPlace: InfPlace,\n    DatNamespace: DatNamespace,\n    InfTextProperty: InfTextProperty,\n    SysSystemType: SysSystemType,\n\n  };\n\n  public get(modelName: string): any {\n    return this.models[modelName];\n  }\n\n  public getAll(): Models {\n    return this.models;\n  }\n\n  public getModelNames(): string[] {\n    return Object.keys(this.models);\n  }\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nexport interface CookieInterface { [key: string]: any }\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module CookieBrowser\n* @license MIT\n* @description\n* This module handle cookies, it will be provided using DI Swapping according the\n* SDK Socket Driver Available currently supporting Angular 2 for web and NativeScript 2.\n**/\n@Injectable()\nexport class CookieBrowser {\n  /**\n   * @type {CookieInterface}\n   **/\n  private cookies: CookieInterface = {};\n  /**\n   * @method get\n   * @param {string} key Cookie key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in cookies.\n   **/\n  get(key: string): any {\n    if (!this.cookies[key]) {\n      let cookie = window.document\n                         .cookie.split('; ')\n                         .filter((item: any) => item.split('=')[0] === key).pop();\n      if (!cookie) {\n        return null;\n      }\n\n      this.cookies[key] = this.parse(cookie.split('=').slice(1).join('='));\n    }\n\n    return this.cookies[key];\n  }\n  /**\n   * @method set\n   * @param {string} key Cookie key name\n   * @param {any} value Any value\n   * @param {Date=} expires The date of expiration (Optional)\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in cookies.\n   **/\n  set(key: string, value: any, expires?: Date): void {\n    this.cookies[key] = value;\n    let cookie = `${key}=${encodeURI(value)}; path=/${expires ? `; expires=${ expires.toUTCString() }` : ''}`;\n    window.document.cookie = cookie;\n  }\n  /**\n   * @method remove\n   * @param {string} key Cookie key name\n   * @return {void}\n   * @description\n   * This method will remove a cookie from the client.\n   **/\n  remove(key: string) {\n    document.cookie = key + '=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n    delete this.cookies[key];\n  }\n  /**\n   * @method parse\n   * @param {any} value Input data expected to be JSON\n   * @return {void}\n   * @description\n   * This method will parse the string as JSON if possible, otherwise will\n   * return the value itself.\n   **/\n  private parse(value: any) {\n    try {\n        return JSON.parse(decodeURI(value));\n    } catch (e) {\n        return value;\n    }\n  }\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module StorageBrowser\n* @license MIT\n* @description\n* This module handle localStorage, it will be provided using DI Swapping according the\n* SDK Socket Driver Available currently supporting Angular 2 for web and NativeScript 2.\n**/\n@Injectable()\nexport class StorageBrowser {\n  /**\n   * @method get\n   * @param {string} key Storage key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in localStorage.\n   **/\n  get(key: string): any {\n    let data: string = localStorage.getItem(key);\n    return this.parse(data);\n  }\n  /**\n   * @method set\n   * @param {string} key Storage key name\n   * @param {any} value Any value\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in localStorage.\n   **/\n  set(key: string, value: any, expires?: Date): void {\n    localStorage.setItem(\n      key,\n      typeof value === 'object' ? JSON.stringify(value) : value\n    );\n  }\n  /**\n   * @method remove\n   * @param {string} key Storage key name\n   * @return {void}\n   * @description\n   * This method will remove a localStorage item from the client.\n   **/\n  remove(key: string): void {\n    if (localStorage[key]) {\n      localStorage.removeItem(key);\n    } else {\n      console.log('Trying to remove unexisting key: ', key);\n    }\n  }\n  /**\n   * @method parse\n   * @param {any} value Input data expected to be JSON\n   * @return {void}\n   * @description\n   * This method will parse the string as JSON if possible, otherwise will\n   * return the value itself.\n   **/\n  private parse(value: any) {\n    try {\n        return JSON.parse(value);\n    } catch (e) {\n        return value;\n    }\n  }\n}\n","/* tslint:disable */\n// add this to compilerOptions in tsconfig.json:\n//    \"allowSyntheticDefaultImports\": true,\n//    \"esModuleInterop\": true \nimport io from 'socket.io-client'; \n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketBrowser\n* @license MIT\n* @description\n* This module handle socket connections for web browsers, it will be DI Swapped\n* depending on the platform environment.\n* This module will be generated when the -d ng2web flag is set\n**/\nexport class SocketBrowser {\n  /**\n   * @method connect\n   * @param {string} url URL path to connect with the server.\n   * @param {any} options Any socket.io v1 =< valid options\n   * @return {any} Not currently a socket.io-client for web Typings implemented.\n   * @description\n   * This method will return a valid socket connection.  \n   **/\n  connect(url: string, options: any): any {\n    return io(url, options);\n  }\n}\n","/* tslint:disable */\n/**\n *Â @module SocketDriver\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The SocketDriver class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n **/\nexport class SocketDriver {\n  connect(url: any, options: any) {}\n}\n","/* tslint:disable */\nimport { Injectable, Inject, NgZone } from '@angular/core';\nimport { SocketDriver } from './socket.driver';\nimport { AccessToken } from '../models';\nimport { Observable, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\nimport { LoopBackConfig } from '../lb.config';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketConnection\n* @license MIT\n* @description\n* This module handle socket connections and return singleton instances for each\n* connection, it will use the SDK Socket Driver Available currently supporting\n* Angular 2 for web, NativeScript 2 and Angular Universal.\n**/\n@Injectable()\nexport class SocketConnection {\n  private socket: any;\n  private subjects: {\n    onConnect: Subject<any>,\n    onDisconnect: Subject<any>,\n    onAuthenticated: Subject<any>,\n    onUnAuthorized: Subject<any>\n  } = {\n    onConnect: new Subject(),\n    onDisconnect: new Subject(),\n    onAuthenticated: new Subject(),\n    onUnAuthorized: new Subject()\n  };\n  public sharedObservables: {\n    sharedOnConnect?: Observable<any>,\n    sharedOnDisconnect?: Observable<any>,\n    sharedOnAuthenticated?: Observable<any>,\n    sharedOnUnAuthorized?: Observable<any>\n  } = {};\n  public authenticated: boolean = false;\n  /**\n   * @method constructor\n   * @param {SocketDriver} driver Socket IO Driver\n   * @param {NgZone} zone Angular 2 Zone\n   * @description\n   * The constructor will set references for the shared hot observables from\n   * the class subjects. Then it will subscribe each of these observables\n   * that will create a channel that later will be shared between subscribers.\n   **/\n  constructor(\n    @Inject(SocketDriver) private driver: SocketDriver,\n    @Inject(NgZone) private zone: NgZone\n  ) {\n    this.sharedObservables = {\n      sharedOnConnect: this.subjects.onConnect.asObservable().pipe(share()),\n      sharedOnDisconnect: this.subjects.onDisconnect.asObservable().pipe(share()),\n      sharedOnAuthenticated: this.subjects.onAuthenticated.asObservable().pipe(share()),\n      sharedOnUnAuthorized: this.subjects.onUnAuthorized.asObservable().pipe(share())\n    };\n    // This is needed to create the first channel, subsequents will share the connection\n    // We are using Hot Observables to avoid duplicating connection status events.\n    this.sharedObservables.sharedOnConnect.subscribe();\n    this.sharedObservables.sharedOnDisconnect.subscribe();\n    this.sharedObservables.sharedOnAuthenticated.subscribe();\n    this.sharedObservables.sharedOnUnAuthorized.subscribe();\n  }\n  /**\n   * @method connect\n   * @param {AccessToken} token AccesToken instance\n   * @return {void}\n   * @description\n   * This method will create a new socket connection when not previously established.\n   * If there is a broken connection it will re-connect.\n   **/\n  public connect(token: AccessToken = null): void {\n    if (!this.socket) {\n      console.info('Creating a new connection with: ', LoopBackConfig.getPath());\n      // Create new socket connection\n      this.socket = this.driver.connect(LoopBackConfig.getPath(), {\n        log: false,\n        secure: LoopBackConfig.isSecureWebSocketsSet(),\n        forceNew: true,\n        forceWebsockets: true,\n        transports: ['websocket']\n      });\n      // Listen for connection\n      this.on('connect', () => {\n        this.subjects.onConnect.next('connected');\n        // Authenticate or start heartbeat now    \n        this.emit('authentication', token);\n      });\n      // Listen for authentication\n      this.on('authenticated', () => {\n        this.authenticated = true;\n        this.subjects.onAuthenticated.next();\n        this.heartbeater();\n      })\n      // Listen for authentication\n      this.on('unauthorized', (err: any) => {\n        this.authenticated = false;\n        this.subjects.onUnAuthorized.next(err);\n      })\n      // Listen for disconnections\n      this.on('disconnect', (status: any) => this.subjects.onDisconnect.next(status));\n    } else if (this.socket && !this.socket.connected){\n      if (typeof this.socket.off === 'function') {\n        this.socket.off();\n      }\n      if (typeof this.socket.destroy === 'function') {\n        this.socket.destroy();\n      }\n      delete this.socket;\n      this.connect(token);\n    }\n  }\n  /**\n   * @method isConnected\n   * @return {boolean}\n   * @description\n   * This method will return true or false depending on established connections\n   **/\n  public isConnected(): boolean {\n    return (this.socket && this.socket.connected);\n  }\n  /**\n   * @method on\n   * @param {string} event Event name\n   * @param {Function} handler Event listener handler\n   * @return {void}\n   * @description\n   * This method listen for server events from the current WebSocket connection.\n   * This method is a facade that will wrap the original \"on\" method and run it\n   * within the Angular Zone to avoid update issues.\n   **/\n  public on(event: string, handler: Function): void {\n    this.socket.on(event, (data: any) => this.zone.run(() => handler(data)));\n  }\n  /**\n   * @method emit\n   * @param {string} event Event name\n   * @param {any=} data Any type of data\n   * @return {void}\n   * @description\n   * This method will send any type of data to the server according the event set.\n   **/\n  public emit(event: string, data?: any): void {\n    if (data) {\n      this.socket.emit(event, data);\n    } else {\n      this.socket.emit(event);\n    }\n  }\n  /**\n   * @method removeListener\n   * @param {string} event Event name\n   * @param {Function} handler Event listener handler\n   * @return {void}\n   * @description\n   * This method will wrap the original \"on\" method and run it within the Angular Zone\n   * Note: off is being used since the nativescript socket io client does not provide\n   * removeListener method, but only provides with off which is provided in any platform.\n   **/\n  public removeListener(event: string, handler: Function): void {\n    if (typeof this.socket.off === 'function') {\n      this.socket.off(event, handler);\n    }\n  }\n  /**\n   * @method removeAllListeners\n   * @param {string} event Event name\n   * @param {Function} handler Event listener handler\n   * @return {void}\n   * @description\n   * This method will wrap the original \"on\" method and run it within the Angular Zone\n   * Note: off is being used since the nativescript socket io client does not provide\n   * removeListener method, but only provides with off which is provided in any platform.\n   **/\n  public removeAllListeners(event: string): void {\n    if (typeof this.socket.removeAllListeners === 'function') {\n      this.socket.removeAllListeners(event);\n    }\n  }\n  /**\n   * @method disconnect\n   * @return {void}\n   * @description\n   * This will disconnect the client from the server\n   **/\n  public disconnect(): void {\n    this.socket.disconnect();\n  }\n  /**\n   * @method heartbeater\n   * @return {void}\n   * @description\n   * This will keep the connection as active, even when users are not sending\n   * data, this avoids disconnection because of a connection not being used.\n   **/\n  private heartbeater(): void {\n    let heartbeater: any = setInterval(() => {\n      if (this.isConnected()) {\n        this.socket.emit('lb-ping');\n      } else {\n        this.socket.removeAllListeners('lb-pong');\n        clearInterval(heartbeater);\n      }\n    }, 15000);\n    this.socket.on('lb-pong', (data: any) => console.info('Heartbeat: ', data));\n  }\n}\n","/* tslint:disable */\nimport { Observable, Subject } from 'rxjs';\n\nexport class IO {\n\n  private socket: any;\n  private observables: any = {};\n\n  constructor(socket: any) { this.socket = socket; }\n\n  emit(event: string, data: any): void {\n    this.socket.emit('ME:RT:1://event', {\n        event : event,\n        data  : data\n    });\n  }\n\n  on(event: string): Observable<any> {\n    if (this.observables[event]) { return this.observables[event]; }\n    let subject: Subject<any> = new Subject<any>();\n    this.socket.on(event, (res: any) => subject.next(res));\n    this.observables[event] = subject.asObservable();\n    return this.observables[event];\n  }\n}\n","/* tslint:disable */\nimport { merge, Observable, Subject } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { LoopBackFilter, StatFilter } from './index';\nimport { SocketConnection } from '../sockets/socket.connections';\n/**\n * @class FireLoopRef<T>\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * This class allows to create FireLoop References which will be in sync with\n * Server. It also allows to create FireLoop Reference Childs, that allows to\n * persist data according the generic model relationships.\n **/\nexport class FireLoopRef<T> {\n  // Reference ID\n  private id: number = this.buildId();\n  // Model Instance (For child references, empty on root references)\n  private instance: any;\n  // Model Childs\n  private childs: any = {};\n  // Disposable Events\n  private disposable: { [key: string]: any } = {};\n  /**\n  * @method constructor\n  * @param {any} model The model we want to create a reference\n  * @param {SocketConnection} socket Socket connection to handle events\n  * @param {FireLoopRef<any>} parent Parent FireLoop model reference\n  * @param {string} relationship The defined model relationship\n  * @description\n  * The constructor will receive the required parameters and then will register this reference\n  * into the server, needed to allow multiple references for the same model.\n  * This ids are referenced into this specific client connection and won't have issues\n  * with other client ids.\n  **/\n  constructor(\n    private model: any,\n    private socket: SocketConnection,\n    private parent: FireLoopRef<any> = null,\n    private relationship: string = null\n  ) {\n    this.socket.emit(\n      `Subscribe.${!parent ? model.getModelName() : parent.model.getModelName()}`,\n      { id: this.id, scope: model.getModelName(), relationship: relationship }\n    );\n    return this;\n  }\n  /**\n  * @method dispose\n  * @return {void}\n  * @description\n  * This method is super important to avoid memory leaks in the server.\n  * This method requires to be called on components destroy\n  *\n  * ngOnDestroy() {\n  *  this.someRef.dispose() \n  * }\n  **/\n  public dispose(): void {\n    const subscription = this.operation('dispose', {}).subscribe(() => {\n      Object.keys(this.disposable).forEach((channel: string) => {\n        this.socket.removeListener(channel, this.disposable[channel]);\n        this.socket.removeAllListeners(channel);\n      });\n      subscription.unsubscribe();\n    });\n  }\n  /**\n  * @method upsert\n  * @param {T} data Persisted model instance\n  * @return {Observable<T>}\n  * @description\n  * Operation wrapper for upsert function.\n  **/\n  public upsert(data: T): Observable<T> {\n    return this.operation('upsert', data);\n  }\n  /**\n  * @method create\n  * @param {T} data Persisted model instance\n  * @return {Observable<T>}\n  * @description\n  * Operation wrapper for create function.\n  **/\n  public create(data: T): Observable<T> {\n    return this.operation('create', data);\n  }\n  /**\n  * @method remove\n  * @param {T} data Persisted model instance\n  * @return {Observable<T>}\n  * @description\n  * Operation wrapper for remove function.\n  **/\n  public remove(data: T): Observable<T> {\n    return this.operation('remove', data);\n  }\n  /**\n  * @method remote\n  * @param {string} method Remote method name\n  * @param {any[]=} params Parameters to be applied into the remote method\n  * @param {boolean} broadcast Flag to define if the method results should be broadcasted\n  * @return {Observable<any>}\n  * @description\n  * This method calls for any remote method. It is flexible enough to\n  * allow you call either built-in or custom remote methods.\n  *\n  * FireLoop provides this interface to enable calling remote methods\n  * but also to optionally send any defined accept params that will be\n  * applied within the server.\n  **/\n  public remote(method: string, params?: any[], broadcast: boolean = false): Observable<any> {\n    return this.operation('remote', { method, params, broadcast });\n  }\n  /**\n  * @method onRemote\n  * @param {string} method Remote method name\n  * @return {Observable<any>}\n  * @description\n  * This method listen for public broadcasted remote method results. If the remote method\n  * execution is not public only the owner will receive the result data.\n  **/\n  public onRemote(method: string): Observable<any> {\n    let event: string = 'remote';\n    if (!this.relationship) {\n      event = `${this.model.getModelName()}.${event}`;\n    } else {\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}`;\n    }\n    return this.broadcasts(event, {});\n  }\n  /**\n  * @method on\n  * @param {string} event Event name\n  * @param {LoopBackFilter} filter LoopBack query filter\n  * @return {Observable<T>}\n  * @description\n  * Listener for different type of events. Valid events are:\n  *   - change (Triggers on any model change -create, update, remove-)\n  *   - value (Triggers on new entries)\n  *   - child_added (Triggers when a child is added)\n  *   - child_updated (Triggers when a child is updated)\n  *   - child_removed (Triggers when a child is removed)\n  **/\n  public on(event: string, filter: LoopBackFilter = { limit: 100, order: 'id DESC' }): Observable<T | T[]> {\n    if (event === 'remote') {\n      throw new Error('The \"remote\" event is not allowed using \"on()\" method, use \"onRemote()\" instead');\n    }\n    let request: any;\n    if (!this.relationship) {\n      event = `${this.model.getModelName()}.${event}`;\n      request = { filter };\n    } else {\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}`;\n      request = { filter, parent: this.parent.instance };\n    }\n    if (event.match(/(value|change|stats)/)) {\n      return merge(\n        this.pull(event, request),\n        this.broadcasts(event, request)\n      );\n    } else {\n      return this.broadcasts(event, request);\n    }\n  }\n  /**\n  * @method stats\n  * @param {LoopBackFilter=} filter LoopBack query filter\n  * @return {Observable<T>}\n  * @description\n  * Listener for real-time statistics, will trigger on every\n  * statistic modification.\n  * TIP: You can improve performance by adding memcached to LoopBack models.\n  **/\n  public stats(filter?: StatFilter): Observable<T | T[]> {\n    return this.on('stats', filter);\n  }\n  /**\n  * @method make\n  * @param {any} instance Persisted model instance reference\n  * @return {Observable<T>}\n  * @description\n  * This method will set a model instance into this a new FireLoop Reference.\n  * This allows to persiste parentship when creating related instances.\n  *\n  * It also allows to have multiple different persisted instance references to same model.\n  * otherwise if using singleton will replace a previous instance for a new instance, when\n  * we actually want to have more than 1 instance of same model.\n  **/\n  public make(instance: any): FireLoopRef<T> {\n    let reference: FireLoopRef<T> = new FireLoopRef<T>(this.model, this.socket);\n    reference.instance = instance;\n    return reference;\n  }\n  /**\n  * @method child\n  * @param {string} relationship A defined model relationship\n  * @return {FireLoopRef<T>}\n  * @description\n  * This method creates child references, which will persist related model\n  * instances. e.g. Room.messages, where messages belongs to a specific Room.\n  **/\n  public child<T>(relationship: string): FireLoopRef<T> {\n    // Return singleton instance\n    if (this.childs[relationship]) { return this.childs[relationship]; }\n    // Try to get relation settings from current model\n    let settings: any = this.model.getModelDefinition().relations[relationship];\n    // Verify the relationship actually exists\n    if (!settings) {\n      throw new Error(`Invalid model relationship ${this.model.getModelName()} <-> ${relationship}, verify your model settings.`);\n    }\n    // Verify if the relationship model is public\n    if (settings.model === '') {\n      throw new Error(`Relationship model is private, cam't use ${relationship} unless you set your model as public.`);\n    }\n    // Lets get a model reference and add a reference for all of the models\n    let model: any = this.model.models.get(settings.model);\n    model.models = this.model.models;\n    // If everything goes well, we will store a child reference and return it.\n    this.childs[relationship] = new FireLoopRef<T>(model, this.socket, this, relationship);\n    return this.childs[relationship];\n  }\n  /**\n  * @method pull\n  * @param {string} event Event name\n  * @param {any} request Type of request, can be LB-only filter or FL+LB filter\n  * @return {Observable<T>}\n  * @description\n  * This method will pull initial data from server\n  **/\n  private pull(event: string, request: any): Observable<T> {\n    let sbj: Subject<T> = new Subject<T>();\n    let that: FireLoopRef<T> = this;\n    let nowEvent: any = `${event}.pull.requested.${this.id}`;\n    this.socket.emit(`${event}.pull.request.${this.id}`, request);\n    function pullNow(data: any) {\n      if (that.socket.removeListener) {\n        that.socket.removeListener(nowEvent, pullNow);\n      }\n      sbj.next(data);\n    };\n    this.socket.on(nowEvent, pullNow);\n    return sbj.asObservable();\n  }\n  /**\n  * @method broadcasts\n  * @param {string} event Event name\n  * @param {any} request Type of request, can be LB-only filter or FL+LB filter\n  * @return {Observable<T>}\n  * @description\n  * This will listen for public broadcasts announces and then request\n  * for data according a specific client request, not shared with other clients.\n  **/\n  private broadcasts(event: string, request: any): Observable<T> {\n    let sbj: Subject<T> = new Subject<T>();\n    let channels: { announce: string, broadcast: string } = {\n      announce: `${event}.broadcast.announce.${this.id}`,\n      broadcast: `${event}.broadcast.${this.id}`\n    };\n    let that = this;\n    // Announces Handler\n    this.disposable[channels.announce] = function (res: T) {\n      that.socket.emit(`${event}.broadcast.request.${that.id}`, request)\n    };\n    // Broadcasts Handler\n    this.disposable[channels.broadcast] = function (data: any) {\n      sbj.next(data);\n    };\n    this.socket.on(channels.announce, this.disposable[channels.announce]);\n    this.socket.on(channels.broadcast, this.disposable[channels.broadcast]);\n    return sbj.asObservable();\n  }\n  /**\n  * @method operation\n  * @param {string} event Event name\n  * @param {any} data Any type of data sent to the server\n  * @return {Observable<T>}\n  * @description\n  * This internal method will run operations depending on current context \n  **/\n  private operation(event: string, data: any): Observable<T> {\n    if (!this.relationship) {\n      event = `${this.model.getModelName()}.${event}.${this.id}`;\n    } else {\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}.${this.id}`;\n    }\n    let subject: Subject<T> = new Subject<T>();\n    let config: { data: any, parent: any } = {\n      data,\n      parent: this.parent && this.parent.instance ? this.parent.instance : null\n    };\n    this.socket.emit(event, config);\n    let resultEvent: string = '';\n    if (!this.relationship) {\n      resultEvent = `${this.model.getModelName()}.value.result.${this.id}`;\n    } else {\n      resultEvent = `${this.parent.model.getModelName()}.${this.relationship}.value.result.${this.id}`;\n    }\n    this.socket.on(resultEvent, (res: any) => {\n      if (res.error) {\n        subject.error(res);\n      } else {\n        subject.next(res);\n      }\n    });\n    if (event.match('dispose')) {\n      setTimeout(() => subject.next());\n    }\n    // This event listener will be wiped within socket.connections\n    this.socket.sharedObservables.sharedOnDisconnect.subscribe(() => subject.complete());\n    return subject.asObservable().pipe(catchError((error: any) => Observable.throw(error)));\n  }\n  /**\n  * @method buildId\n  * @return {number}\n  * @description\n  * This internal method build an ID for this reference, this allows to have\n  * multiple references for the same model or relationships.\n  **/\n  private buildId(): number {\n    return Date.now() + Math.floor(Math.random() * 100800) *\n      Math.floor(Math.random() * 100700) *\n      Math.floor(Math.random() * 198500);\n  }\n}\n","/* tslint:disable */\nimport { FireLoopRef } from './index';\n\nexport class FireLoop {\n\n  private references: any = {};\n\n  constructor(private socket: any, private models: { get: Function }) {}\n\n  public ref<T>(model: any): FireLoopRef<T> {\n    let name: string = model.getModelName();\n    model.models = this.models;\n    this.references[name] = new FireLoopRef<T>(model, this.socket);\n    return this.references[name];\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject } from '@angular/core';\nimport { IO } from './io.service';\nimport { LoopBackAuth } from './auth.service';\nimport { FireLoop } from '../../models/FireLoop';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { SDKModels } from '../custom/SDKModels';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { share } from 'rxjs/operators';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@johncasarrubias>\n* @module RealTime\n* @license MIT\n* @description\n* This module is a real-time interface for using socket connections, its main purpose\n* is to make sure that when there is a valid connection, it will create instances\n* of the different real-time functionalities like FireLoop, PubSub and IO.\n**/\n@Injectable()\nexport class RealTime {\n  public IO: IO;\n  public FireLoop: FireLoop;\n  private connecting: boolean = false;\n  private onReadySubject: Subject<string> = new Subject<string>();\n  private sharedOnReady: Observable<string> = this.onReadySubject.asObservable().pipe(share());\n  /**\n  * @method constructor\n  * @param {SocketConnection} connection WebSocket connection service\n  * @param {SDKModels} models Model provider service\n  * @param {LoopBackAuth} auth LoopBack authentication service\n  * @description\n  * It will intialize the shared on ready communication channel.\n  **/\n  constructor(\n    @Inject(SocketConnection) public connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth\n  ) {\n    this.sharedOnReady.subscribe();\n  }\n  /**\n  * @method onDisconnect\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is disconnected from server.\n  **/\n  onDisconnect(): Observable<any> {\n    return this.connection.sharedObservables.sharedOnDisconnect;\n  }\n  /**\n  * @method onAuthenticated\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is authenticated with the server.\n  **/\n  onAuthenticated(): Observable<any> {\n    return this.connection.sharedObservables.sharedOnAuthenticated;\n  }\n  /**\n  * @method onUnAuthorized\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is not authorized to connect with the server.\n  **/\n  onUnAuthorized(): Observable<any> {\n    return this.connection.sharedObservables.sharedOnUnAuthorized;\n  }\n  /**\n  * @method onReady\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is Ready for broadcasting.\n  * and will register connection flow events to notify subscribers.\n  **/\n  public onReady(): Observable<any> {\n    // If there is a valid connection, then we just send back to the EventLoop\n    // Or next will be executed before the actual subscription.\n    if (this.connection.isConnected()) {\n      let to = setTimeout(() => {\n        this.onReadySubject.next('shared-connection');\n        clearTimeout(to);\n      });\n    // Else if there is a current attempt of connection we wait for the prior\n    // process that started the connection flow.\n    } else if (this.connecting) {\n      let ti = setInterval(() => {\n        if (this.connection.isConnected()) {\n          this.onReadySubject.next('shared-connection');\n          clearInterval(ti);\n        }\n      }, 500);\n    // If there is not valid connection or attempt, then we start the connection flow\n    // and make sure we notify all the onReady subscribers when done.\n    // Also it will listen for desconnections so we unsubscribe and avoid both:\n    // Memory leaks and duplicated triggered events.\n    } else {\n      this.connecting = true;\n      this.connection.connect(this.auth.getToken());\n      this.IO       = new IO(this.connection);\n      this.FireLoop = new FireLoop(this.connection, this.models);\n      // Fire event for those subscribed \n      let s1: Subscription = this.connection.sharedObservables.sharedOnConnect.subscribe(() => {\n        console.log('Real-Time connection has been established');\n        this.connecting = false;\n        this.onReadySubject.next('connected');\n        let s2: Subscription = this.connection.sharedObservables.sharedOnDisconnect.subscribe(() => {\n          s1.unsubscribe();\n          s2.unsubscribe();\n        });\n      });\n    }\n    return this.sharedOnReady;\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpRequest, HttpParams, HttpResponse, HttpParameterCodec } from '@angular/common/http';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ErrorHandler } from './error.service';\nimport { LoopBackAuth } from './auth.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackFilter, AccessToken } from '../../models/BaseModels';\nimport { SDKModels } from '../custom/SDKModels';\nimport { Observable, Subject } from 'rxjs';\nimport { catchError, map, filter } from 'rxjs/operators';\nimport { SocketConnection } from '../../sockets/socket.connections';\n// Making Sure EventSource Type is available to avoid compilation issues.\ndeclare var EventSource: any;\nclass CustomQueryEncoderHelper implements HttpParameterCodec {\n  encodeKey(k: string): string {\n      return encodeURIComponent(k);\n  }\n\n  encodeValue(v: string): string {\n      return encodeURIComponent(v);\n  }\n\n  decodeKey(k: string): string {\n      return decodeURIComponent(k);\n  }\n\n  decodeValue(v: string): string {\n      return decodeURIComponent(v);\n  }\n}\n/**\n* @module BaseLoopBackApi\n* @author Jonathan Casarrubias <@johncasarrubias> <github:jonathan-casarrubias>\n* @author Nikolay Matiushenkov <https://github.com/mnvx>\n* @license MIT\n* @description\n* Abstract class that will be implemented in every custom service automatically built\n* by the sdk builder.\n* It provides the core functionallity for every API call, either by HTTP Calls or by\n* WebSockets.\n**/\n@Injectable()\nexport abstract class BaseLoopBackApi {\n\n  protected path: string;\n  protected model: any;\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    this.model = this.models.get(this.getModelName());\n  }\n  /**\n   * @method request\n   * @param {string}  method      Request method (GET, POST, PUT)\n   * @param {string}  url         Request url (my-host/my-url/:id)\n   * @param {any}     routeParams Values of url parameters\n   * @param {any}     urlParams   Parameters for building url (filter and other)\n   * @param {any}     postBody    Request postBody\n   * @return {Observable<any>}\n   * @description\n   * This is a core method, every HTTP Call will be done from here, every API Service will\n   * extend this class and use this method to get RESTful communication.\n   **/\n  public request(\n    method         : string,\n    url            : string,\n    routeParams    : any = {},\n    urlParams      : any = {},\n    postBody       : any = {},\n    pubsub         : boolean = false,\n    customHeaders? : Function\n  ): Observable<any> {\n    // Transpile route variables to the actual request Values\n    Object.keys(routeParams).forEach((key: string) => {\n      url = url.replace(new RegExp(\":\" + key + \"(\\/|$)\", \"g\"), routeParams[key] + \"$1\")\n    });\n    if (pubsub) {\n      if (url.match(/fk/)) {\n        let arr = url.split('/'); arr.pop();\n        url = arr.join('/');\n      }\n      let event: string = (`[${method}]${url}`).replace(/\\?/, '');\n      let subject: Subject<any> = new Subject<any>();\n      this.connection.on(event, (res: any) => subject.next(res));\n      return subject.asObservable();\n    } else {\n      let httpParams = new HttpParams({ encoder: new CustomQueryEncoderHelper() });\n      // Headers to be sent\n      let headers: HttpHeaders = new HttpHeaders();\n      headers = headers.append('Content-Type', 'application/json');\n      // Authenticate request\n      headers = this.authenticate(url, headers);\n      // Body fix for built in remote methods using \"data\", \"options\" or \"credentials\n      // that are the actual body, Custom remote method properties are different and need\n      // to be wrapped into a body object\n      let body: any;\n      let postBodyKeys = typeof postBody === 'object' ? Object.keys(postBody) : []\n      if (postBodyKeys.length === 1) {\n        body = postBody[postBodyKeys.shift()];\n      } else {\n        body = postBody;\n      }\n      \n      let queryString: string = '';\n\n      // Separate filter object from url params and add to search query\n      if (urlParams.filter) {\n        if (LoopBackConfig.isHeadersFilteringSet()) {\n          headers = headers.append('filter', JSON.stringify(urlParams.filter));\n        } else {\n          queryString = `?filter=${encodeURIComponent(JSON.stringify(urlParams.filter))}`;\n        }\n        delete urlParams.filter;\n      }\n\n      // Separate where object from url params and add to search query\n      if (urlParams.where) {\n        if (LoopBackConfig.isHeadersWhereSet()) {\n          /**\n          CODE BELOW WILL GENERATE THE FOLLOWING ISSUES:\n          - https://github.com/mean-expert-official/loopback-sdk-builder/issues/356\n          - https://github.com/mean-expert-official/loopback-sdk-builder/issues/328 \n          **/\n          headers = headers.append('where', JSON.stringify(urlParams.where));\n        } else {\n          queryString = `?where=${encodeURIComponent(JSON.stringify(urlParams.where))}`;\n        }\n        delete urlParams.where;\n      }\n    \n      if (typeof customHeaders === 'function') {\n        headers = customHeaders(headers);\n      }\n/* enhancement/configure-where-headers\n      this.searchParams.setJSON(urlParams);\n      let request: Request = new Request(\n        new RequestOptions({\n          headers        : headers,\n          method         : method,\n          url            : `${url}${queryString}`,\n          search         : Object.keys(urlParams).length > 0 ? this.searchParams.getURLSearchParams() : null,\n          body           : body ? JSON.stringify(body) : undefined,\n          withCredentials: LoopBackConfig.getRequestOptionsCredentials()\n        })\n      );\nTODO Fix Merge Conflict */\n      Object.keys(urlParams).forEach(paramKey => {\n        let paramValue = urlParams[paramKey];\n        paramValue = typeof paramValue === 'object' ? JSON.stringify(paramValue) : paramValue;\n        httpParams = httpParams.append(paramKey, paramValue);\n      });\n      let request = new HttpRequest(method, `${url}${queryString}`, body, {\n        headers        : headers,\n        params         : httpParams,\n        withCredentials: LoopBackConfig.getRequestOptionsCredentials()\n      });\n      return this.http.request(request).pipe(\n        filter(event => event instanceof HttpResponse),\n        map((res: HttpResponse<any>) => res.body),\n        catchError((e) => this.errorHandler.handleError(e))\n      );\n    }\n  }\n  /**\n   * @method authenticate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {string} url Server URL\n   * @param {Headers} headers HTTP Headers\n   * @return {void}\n   * @description\n   * This method will try to authenticate using either an access_token or basic http auth\n   */\n  public authenticate<T>(url: string, headers: HttpHeaders): HttpHeaders {\n    if (this.auth.getAccessTokenId()) {\n      headers = headers.append(\n        'Authorization',\n        LoopBackConfig.getAuthPrefix() + this.auth.getAccessTokenId()\n      );\n    }\n\n    return headers;\n  }\n  /**\n   * @method create\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T} data Generic data type\n   * @return {Observable<T>}\n   * @description\n   * Generic create method\n   */\n  public create<T>(data: T, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onCreate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T[]} data Generic data type array\n   * @return {Observable<T[]>}\n   * @description\n   * Generic pubsub oncreate many method\n   */\n  public onCreate<T>(data: T[]): Observable<T[]> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((datum: T[]) => datum.map((data: T) => this.model.factory(data))));\n  }\n  /**\n   * @method createMany\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T[]} data Generic data type array\n   * @return {Observable<T[]>}\n   * @description\n   * Generic create many method\n   */\n  public createMany<T>(data: T[], customHeaders?: Function): Observable<T[]> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((datum: T[]) => datum.map((data: T) => this.model.factory(data))));\n  }\n  /**\n   * @method onCreateMany\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T[]} data Generic data type array\n   * @return {Observable<T[]>}\n   * @description\n   * Generic create many method\n   */\n  public onCreateMany<T>(data: T[]): Observable<T[]> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((datum: T[]) => datum.map((data: T) => this.model.factory(data))));\n  }\n  /**\n   * @method findById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {any} data Generic data type\n   * @return {Observable<T>}\n   * @description\n   * Generic findById method\n   */\n  public findById<T>(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T> {\n    let _urlParams: any = {};\n    if (filter) _urlParams.filter = filter;\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, _urlParams, undefined, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method find\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[+>}\n   * @description\n   * Generic find method\n   */\n  public find<T>(filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T[]> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, { filter }, undefined, null, customHeaders)\n    .pipe(map((datum: T[]) => datum.map((data: T) => this.model.factory(data))));\n  }\n  /**\n   * @method exists\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic exists method\n   */\n  public exists<T>(id: any, customHeaders?: Function): Observable<T> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id/exists'\n    ].join('/'), { id }, undefined, undefined, null, customHeaders);\n  }\n  /**\n   * @method findOne\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic findOne method\n   */\n  public findOne<T>(filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'findOne'\n    ].join('/'), undefined, { filter }, undefined, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method updateAll\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic updateAll method\n   */\n  public updateAll<T>(where: any = {}, data: T, customHeaders?: Function): Observable<{ count: 'number' }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'update'\n    ].join('/'), undefined, _urlParams, { data }, null, customHeaders);\n  }\n  /**\n   * @method onUpdateAll\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic pubsub onUpdateAll method\n   */\n  public onUpdateAll<T>(where: any = {}, data: T): Observable<{ count: 'number' }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'update'\n    ].join('/'), undefined, _urlParams, { data }, true);\n  }\n  /**\n   * @method deleteById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic deleteById method\n   */\n  public deleteById<T>(id: any, customHeaders?: Function): Observable<T> {\n    return this.request('DELETE', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, undefined, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onDeleteById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onDeleteById method\n   */\n  public onDeleteById<T>(id: any): Observable<T> {\n    return this.request('DELETE', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, undefined, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method count\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<{ count: number }>}\n   * @description\n   * Generic count method\n   */\n  public count(where: any = {}, customHeaders?: Function): Observable<{ count: number }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'count'\n    ].join('/'), undefined, _urlParams, undefined, null, customHeaders);\n  }\n  /**\n   * @method updateAttributes\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic updateAttributes method\n   */\n  public updateAttributes<T>(id: any, data: T, customHeaders?: Function): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onUpdateAttributes\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic onUpdateAttributes method\n   */\n  public onUpdateAttributes<T>(id: any, data: T): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method upsert\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsert method\n   */\n  public upsert<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onUpsert\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onUpsert method\n   */\n  public onUpsert<T>(data: any = {}): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method upsertPatch\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsert method using patch http method\n   */\n  public upsertPatch<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('PATCH', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onUpsertPatch\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onUpsertPatch method using patch http method\n   */\n  public onUpsertPatch<T>(data: any = {}): Observable<T> {\n    return this.request('PATCH', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method upsertWithWhere\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsertWithWhere method\n   */\n  public upsertWithWhere<T>(where: any = {}, data: any = {}, customHeaders?: Function): Observable<T> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'upsertWithWhere'\n    ].join('/'), undefined, _urlParams, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onUpsertWithWhere\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onUpsertWithWhere method\n   */\n  public onUpsertWithWhere<T>(where: any = {}, data: any = {}): Observable<T> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'upsertWithWhere'\n    ].join('/'), undefined, _urlParams, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method replaceOrCreate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic replaceOrCreate method\n   */\n  public replaceOrCreate<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'replaceOrCreate'\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onReplaceOrCreate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic onReplaceOrCreate method\n   */\n  public onReplaceOrCreate<T>(data: any = {}): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'replaceOrCreate'\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method replaceById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic replaceById method\n   */\n  public replaceById<T>(id: any, data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id', 'replace'\n    ].join('/'), { id }, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onReplaceById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic onReplaceById method\n   */\n  public onReplaceById<T>(id: any, data: any = {}): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id', 'replace'\n    ].join('/'), { id }, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method createChangeStream\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<any>}\n   * @description\n   * Generic createChangeStream method\n   */\n  public createChangeStream(): Observable<any> {\n    let subject = new Subject();\n    if (typeof EventSource !== 'undefined') {\n      let emit   = (msg: any) => subject.next(JSON.parse(msg.data));\n      var source = new EventSource([\n        LoopBackConfig.getPath(),\n        LoopBackConfig.getApiVersion(),\n        this.model.getModelDefinition().path,\n        'change-stream'\n      ].join('/'));\n      source.addEventListener('data', emit);\n      source.onerror = emit;\n    } else {\n      console.warn('SDK Builder: EventSource is not supported'); \n    }\n    return subject.asObservable();\n  }\n  /**\n   * @method getModelName\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {string}\n   * @description\n   * Abstract getModelName method\n   */\n  abstract getModelName(): string;\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter, } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SchemaObject } from '../../models/SchemaObject';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `SchemaObject` model.\n */\n@Injectable()\nexport class SchemaObjectApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http, connection, models, auth, errorHandler);\n  }\n\n\n  /**\n   * Remove entity with outgoing statements and namings from project.\n   *\n   * @param {number} pkProject Primary key of the project\n   *\n   * @param {number} pkEntity Primary key of the entity\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SchemaObject` object.)\n   * </em>\n   */\n  public removeEntityFromProject(pkProject: any, pkEntity: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/SchemaObjects/remove-entity-from-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Add entity with outgoing statements and namings to project.\n   *\n   * @param {number} pkProject Primary key of the project\n   *\n   * @param {number} pkEntity Primary key of the entity\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SchemaObject` object.)\n   * </em>\n   */\n  public addEntityToProject(pkProject: any, pkEntity: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/SchemaObjects/add-entity-to-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get a object containing apllations and definition of a type (project variant).\n   *\n   * @param {number} pkProject Pk of the project.\n   *\n   * @param {number} pkType Pk of the type.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SchemaObject` object.)\n   * </em>\n   */\n  public typeOfProject(pkProject: any, pkType: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/SchemaObjects/type-of-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkType !== 'undefined' && pkType !== null) _urlParams.pkType = pkType;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SchemaObject`.\n   */\n  public getModelName() {\n    return \"SchemaObject\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter, } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SysClassFieldPropertyRel } from '../../models/SysClassFieldPropertyRel';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { SysClassField } from '../../models/SysClassField';\n// import { DfhProperty } from '../../models/DfhProperty';\n\n\n/**\n * Api services for the `SysClassFieldPropertyRel` model.\n */\n@Injectable()\nexport class SysClassFieldPropertyRelApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http, connection, models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysClassFieldPropertyRel`.\n   */\n  public getModelName() {\n    return \"SysClassFieldPropertyRel\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter, } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SysClassField } from '../../models/SysClassField';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { SysClassFieldPropertyRel } from '../../models/SysClassFieldPropertyRel';\nimport { ProClassFieldConfig } from '../../models/ProClassFieldConfig';\n\n\n/**\n * Api services for the `SysClassField` model.\n */\n@Injectable()\nexport class SysClassFieldApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http, connection, models, auth, errorHandler);\n  }\n\n  /**\n   * <em>\n         * (The remote method definition does not provide any description.)\n         * </em>\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SysClassField` object.)\n   * </em>\n   */\n  public findComplex(filter: LoopBackFilter = {}, customHeaders?: Function): Observable<SysClassField[]> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/SysClassFields/findComplex\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      filter: filter\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<SysClassField>) =>\n      instances.map((instance: SysClassField) => new SysClassField(instance))\n    ));\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysClassField`.\n   */\n  public getModelName() {\n    return \"SysClassField\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SysClassHasTypeProperty } from '../../models/SysClassHasTypeProperty';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `SysClassHasTypeProperty` model.\n */\n@Injectable()\nexport class SysClassHasTypePropertyApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysClassHasTypeProperty`.\n   */\n  public getModelName() {\n    return \"SysClassHasTypeProperty\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SysSystemRelevantClass } from '../../models/SysSystemRelevantClass';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `SysSystemRelevantClass` model.\n */\n@Injectable()\nexport class SysSystemRelevantClassApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Replace or create all items in the array.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{SysSystemRelevantClass}` - Array of SysSystemRelevantClass\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SysSystemRelevantClass` object.)\n   * </em>\n   */\n  public bulkReplaceOrCreate(data: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/SysSystemRelevantClasses/bulk-replace-or-create\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysSystemRelevantClass`.\n   */\n  public getModelName() {\n    return \"SysSystemRelevantClass\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PubAccount } from '../../models/PubAccount';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `PubAccount` model.\n */\n@Injectable()\nexport class PubAccountApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Get Roles of the Account\n   *\n   * @param {number} id \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `PubAccount` object.)\n   * </em>\n   */\n  public getRoles(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PubAccounts/:id/get-roles\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get a list of all projects associated with this account.\n   *\n   * @param {number} id \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `PubAccount` object.)\n   * </em>\n   */\n  public listProjects(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PubAccounts/:id/list-projects\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get all accounts with their project pks and their roles\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `PubAccount` object.)\n   * </em>\n   */\n  public withRolesAndProjects(customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PubAccounts/with-roles-and-projects\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Login a user with username/email and password.\n   *\n   * @param {string} include Related objects to include in the response. See the description of return value for more details.\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * The response body contains properties of the AccessToken created on login.\n   * Depending on the value of `include` parameter, the body may contain additional properties:\n   * \n   *   - `user` - `U+007BPubAccountU+007D` - Data of the currently logged in user. (`include=user`)\n   * \n   *\n   */\n  public login(credentials: any, include: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PubAccounts/login\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      credentials: credentials\n    };\n    let _urlParams: any = {};\n    if (typeof include !== 'undefined' && include !== null) _urlParams.include = include;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Logout a user with access token.\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public logout(customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PubAccounts/logout\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `PubAccount`.\n   */\n  public getModelName() {\n    return \"PubAccount\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Email } from '../../models/Email';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `Email` model.\n */\n@Injectable()\nexport class EmailApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Email`.\n   */\n  public getModelName() {\n    return \"Email\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ProProject } from '../../models/ProProject';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { PubAccountProjectRel } from '../../models/PubAccountProjectRel';\nimport { PubAccount } from '../../models/PubAccount';\nimport { ProTextProperty } from '../../models/ProTextProperty';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { InfLanguage } from '../../models/InfLanguage';\nimport { InfPersistentItem } from '../../models/InfPersistentItem';\nimport { DatNamespace } from '../../models/DatNamespace';\n\n\n/**\n * Api services for the `ProProject` model.\n */\n@Injectable()\nexport class ProProjectApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Get the projects of account.\n   *\n   * @param {number} accountId Id of the account\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProProject` object.)\n   * </em>\n   */\n  public ofAccount(accountId: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProProjects/of-account\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof accountId !== 'undefined' && accountId !== null) _urlParams.accountId = accountId;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Create a new project with a label and a description.\n   *\n   * @param {number} accountId Id of account to associate the persistent item with.\n   *\n   * @param {string} pkLanguage Default language of the project, language of the label and the text property.\n   *\n   * @param {string} label Label of the project.\n   *\n   * @param {string} textProperty Description of the project.\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProProject` object.)\n   * </em>\n   */\n  public createWithLabelAndDescription(accountId: any, pkLanguage: any, label: any, textProperty: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProProjects/create-with-label-and-description\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof accountId !== 'undefined' && accountId !== null) _urlParams.accountId = accountId;\n    if (typeof pkLanguage !== 'undefined' && pkLanguage !== null) _urlParams.pkLanguage = pkLanguage;\n    if (typeof label !== 'undefined' && label !== null) _urlParams.label = label;\n    if (typeof textProperty !== 'undefined' && textProperty !== null) _urlParams.textProperty = textProperty;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get basic information about the project (language, name)\n   *\n   * @param {number} pkProject Pk of project\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProProject` object.)\n   * </em>\n   */\n  public getBasics(pkProject: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProProjects/get-basics\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProProject`.\n   */\n  public getModelName() {\n    return \"ProProject\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PubAccountProjectRel } from '../../models/PubAccountProjectRel';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { PubAccount } from '../../models/PubAccount';\nimport { ProProject } from '../../models/ProProject';\n\n\n/**\n * Api services for the `PubAccountProjectRel` model.\n */\n@Injectable()\nexport class PubAccountProjectRelApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `PubAccountProjectRel`.\n   */\n  public getModelName() {\n    return \"PubAccountProjectRel\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ProTextProperty } from '../../models/ProTextProperty';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProProject } from '../../models/ProProject';\nimport { InfLanguage } from '../../models/InfLanguage';\nimport { SysSystemType } from '../../models/SysSystemType';\n\n\n/**\n * Api services for the `ProTextProperty` model.\n */\n@Injectable()\nexport class ProTextPropertyApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Get the text-properties of the project.\n   *\n   * @param {number} pkProject Pk of the project\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProTextProperty` object.)\n   * </em>\n   */\n  public ofProject(pkProject: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProTextProperties/of-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Inserts or updates items in the array of ProTextProperty. If pk_entity is givenÂ and existing, an update is done, else an insert\n   *\n   * @param {number} pkProject Pk of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `items` â `{ProTextProperty}` - Array of ProTextPropertys\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProTextProperty` object.)\n   * </em>\n   */\n  public bulkUpsert(pkProject: any, items: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProTextProperties/bulk-upsert\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      items: items\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Dletes items in the array of ProTextProperty. Checks for each item if fk_project matches given pkProject \n   *\n   * @param {number} pkProject Pk of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `items` â `{ProTextProperty}` - Array of ProTextPropertys\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProTextProperty` object.)\n   * </em>\n   */\n  public bulkDelete(pkProject: any, items: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProTextProperties/bulk-delete\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      items: items\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProTextProperty`.\n   */\n  public getModelName() {\n    return \"ProTextProperty\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `ProInfoProjRel` model.\n */\n@Injectable()\nexport class ProInfoProjRelApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProInfoProjRel` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProInfoProjRels\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Marks the statement as favorite for the given fk_project.\n   *\n   * @param {number} pkProject fk_project\n   *\n   * @param {number} pkStatement fk_entity\n   *\n   * @param {object} data Request data.\n   *\n   *  - `isOutgoing` â `{boolean}` - True, if the statement is outgoing, else false\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProInfoProjRel` object.)\n   * </em>\n   */\n  public markStatementAsFavorite(pkProject: any, pkStatement: any, isOutgoing: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProInfoProjRels/mark-statement-as-favorite\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      isOutgoing: isOutgoing\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkStatement !== 'undefined' && pkStatement !== null) _urlParams.pkStatement = pkStatement;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Updates the ProInfoProjRel found by fk_project and fk_entity.\n   *\n   * @param {number} pkProject fk_project\n   *\n   * @param {number} pkEntity fk_entity\n   *\n   * @param {object} data Request data.\n   *\n   *  - `eprAttributes` â `{ProInfoProjRel}` - Instance of ProInfoProjRel (fk_project and fk_entity will be ignored)\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProInfoProjRel` object.)\n   * </em>\n   */\n  public updateEprAttributes(pkProject: any, pkEntity: any, eprAttributes: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProInfoProjRels/updateEprAttributes\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      eprAttributes: eprAttributes\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Updates the ProInfoProjRel of all found by fk_project and fk_entity.\n   *\n   * @param {number} pkProject fk_project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `items` â `{ProInfoProjRel}` - Array of ProInfoProjRel (fk_project must be equal to pkProject)\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProInfoProjRel` object.)\n   * </em>\n   */\n  public bulkUpdateEprAttributes(pkProject: any, items: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProInfoProjRels/bulk-update-attributes\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      items: items\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProInfoProjRel`.\n   */\n  public getModelName() {\n    return \"ProInfoProjRel\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DfhProfile } from '../../models/DfhProfile';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `DfhProfile` model.\n */\n@Injectable()\nexport class DfhProfileApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Get all profiles that are used by the given project.\n   *\n   * @param {number} pkProject Project pk\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DfhProfile` object.)\n   * </em>\n   */\n  public ofProject(pkProject: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DfhProfiles/of-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Pulls profile data including classes and properties from OntoMe and updates profile data in geovistory.\n   *\n   * @param {number} pkProfile OntoMe profile that should be added\n   *\n   * @param {string} requestedLanguage Language ISO Code for the preferred language of labels and descriptions to be loaded. Default language is 'en'.\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DfhProfile` object.)\n   * </em>\n   */\n  public updateFromOntoMe(pkProfile: any, requestedLanguage: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DfhProfiles/update-from-ontome\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProfile !== 'undefined' && pkProfile !== null) _urlParams.pkProfile = pkProfile;\n    if (typeof requestedLanguage !== 'undefined' && requestedLanguage !== null) _urlParams.requestedLanguage = requestedLanguage;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Pulls profile data including classes and properties from OntoMe andÂ adds profile to project.\n   *\n   * @param {number} pkProject Geovistory project to which the OntoMe profile should be added\n   *\n   * @param {number} pkProfile OntoMe profile that should be added\n   *\n   * @param {string} requestedLanguage Language ISO Code for the preferred language of labels and descriptions to be loaded. Default language is 'en'.\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DfhProfile` object.)\n   * </em>\n   */\n  public updateAndAddToProject(pkProject: any, pkProfile: any, requestedLanguage: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DfhProfiles/update-from-ontome-and-add-to-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkProfile !== 'undefined' && pkProfile !== null) _urlParams.pkProfile = pkProfile;\n    if (typeof requestedLanguage !== 'undefined' && requestedLanguage !== null) _urlParams.requestedLanguage = requestedLanguage;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates an activation report for the given OntoMe profile and the given Geovistory project.\n   *\n   * @param {number} pkProject Geovistory project for which the activation report should be created\n   *\n   * @param {number} pkProfile OntoMe profile for which the activation report should be created\n   *\n   * @param {string} requestedLanguage Language ISO Code for the preferred language of labels and descriptions to be loaded. Default language is 'en'.\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DfhProfile` object.)\n   * </em>\n   */\n  public getActivationReport(pkProject: any, pkProfile: any, requestedLanguage: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DfhProfiles/get-activation-report\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkProfile !== 'undefined' && pkProfile !== null) _urlParams.pkProfile = pkProfile;\n    if (typeof requestedLanguage !== 'undefined' && requestedLanguage !== null) _urlParams.requestedLanguage = requestedLanguage;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates an deactivation report for the given OntoMe profile and the given Geovistory project.\n   *\n   * @param {number} pkProject Geovistory project for which the deactivation report should be created\n   *\n   * @param {number} pkProfile OntoMe profile for which the deactivation report should be created\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DfhProfile` object.)\n   * </em>\n   */\n  public getDeactivationReport(pkProject: any, pkProfile: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DfhProfiles/get-deactivation-report\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkProfile !== 'undefined' && pkProfile !== null) _urlParams.pkProfile = pkProfile;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deavtivates an OntoMe profile for a Geovistory project.\n   *\n   * @param {number} pkProject Geovistory project for which the profile should be deactivated\n   *\n   * @param {number} pkProfile OntoMe profile to deactivate for the given Geovistory project\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DfhProfile` object.)\n   * </em>\n   */\n  public deactivateProfileForProject(pkProject: any, pkProfile: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DfhProfiles/deactivate-ontome-profile-for-geovistory-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkProfile !== 'undefined' && pkProfile !== null) _urlParams.pkProfile = pkProfile;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DfhProfile`.\n   */\n  public getModelName() {\n    return \"DfhProfile\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DfhLabel } from '../../models/DfhLabel';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `DfhLabel` model.\n */\n@Injectable()\nexport class DfhLabelApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Get all dfh labels needed by the given project.\n   *\n   * @param {number} pkProject Project pk\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DfhLabel` object.)\n   * </em>\n   */\n  public ofProject(pkProject: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DfhLabels/of-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DfhLabel`.\n   */\n  public getModelName() {\n    return \"DfhLabel\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter, } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DatChunk } from '../../models/DatChunk';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { DatDigital } from '../../models/DatDigital';\nimport { InfStatement } from '../../models/InfStatement';\nimport { DatNamespace } from '../../models/DatNamespace';\n\n\n/**\n * Api services for the `DatChunk` model.\n */\n@Injectable()\nexport class DatChunkApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http, connection, models, auth, errorHandler);\n  }\n\n  /**\n   * Get the chunks related to the digital, with their statements.\n   *\n   * @param {number} pkProject Primary key of the project\n   *\n   * @param {number} pkDigital Primary key of the digital\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DatChunk` object.)\n   * </em>\n   */\n  public ofDigital(pkProject: any, pkDigital: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/DatChunks/of-digital\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkDigital !== 'undefined' && pkDigital !== null) _urlParams.pkDigital = pkDigital;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatChunk`.\n   */\n  public getModelName() {\n    return \"DatChunk\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DatColumn } from '../../models/DatColumn';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { DatNamespace } from '../../models/DatNamespace';\n\n\n/**\n * Api services for the `DatColumn` model.\n */\n@Injectable()\nexport class DatColumnApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Get the columns related to the digital (table).\n   *\n   * @param {number} pkProject Primary key of the project\n   *\n   * @param {number} pkDigital Primary key of the digital\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DatColumn` object.)\n   * </em>\n   */\n  public ofDigital(pkProject: any, pkDigital: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DatColumns/of-digital\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkDigital !== 'undefined' && pkDigital !== null) _urlParams.pkDigital = pkDigital;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatColumn`.\n   */\n  public getModelName() {\n    return \"DatColumn\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DatTextProperty } from '../../models/DatTextProperty';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { DatNamespace } from '../../models/DatNamespace';\n\n\n/**\n * Api services for the `DatTextProperty` model.\n */\n@Injectable()\nexport class DatTextPropertyApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatTextProperty`.\n   */\n  public getModelName() {\n    return \"DatTextProperty\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DatDigital } from '../../models/DatDigital';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { DatNamespace } from '../../models/DatNamespace';\n\n\n/**\n * Api services for the `DatDigital` model.\n */\n@Injectable()\nexport class DatDigitalApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Creates or updates instances of DatDigital.\n   *\n   * @param {number} pkNamespace Namespace\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{DatDigital}` - Array DatDigital\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DatDigital` object.)\n   * </em>\n   */\n  public bulkUpsert(pkNamespace: any, data: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DatDigitals/bulk-upsert\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pkNamespace !== 'undefined' && pkNamespace !== null) _urlParams.pkNamespace = pkNamespace;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes instances of DatDigital.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `pks` â `{number}` - Array of Primary Key of DatDigitals\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DatDigital` object.)\n   * </em>\n   */\n  public bulkDelete(pks: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DatDigitals/delete-delete\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      pks: pks\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Finds the version of given digital. If no version specified, latest is returned.\n   *\n   * @param {number} pkEntity Primary Key of the digital object (pk_entity)\n   *\n   * @param {number} entityVersion Primary Key of the digital object (entity_version)\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DatDigital` object.)\n   * </em>\n   */\n  public getVersion(pkEntity: any, entityVersion: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DatDigitals/get-version\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    if (typeof entityVersion !== 'undefined' && entityVersion !== null) _urlParams.entityVersion = entityVersion;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get page of table\n   *\n   * @param {number} pkProject Pk of the project.\n   *\n   * @param {number} pkEntity Pk of the table digital.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `options` â `{object}` - options\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DatDigital` object.)\n   * </em>\n   */\n  public getTablePage(pkProject: any, pkEntity: any, options: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DatDigitals/getTablePage\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      options: options\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatDigital`.\n   */\n  public getModelName() {\n    return \"DatDigital\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SysAppContext } from '../../models/SysAppContext';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `SysAppContext` model.\n */\n@Injectable()\nexport class SysAppContextApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Get the App Configuration for classes.\n   *\n   * @param {number} pk_app_context pk_entity of app_context\n   *\n   * @param {number} pk_project pk_project of project\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SysAppContext` object.)\n   * </em>\n   */\n  public appContext(pk_app_context: any = {}, pk_project: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/SysAppContexts/app-context\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pk_app_context !== 'undefined' && pk_app_context !== null) _urlParams.pk_app_context = pk_app_context;\n    if (typeof pk_project !== 'undefined' && pk_project !== null) _urlParams.pk_project = pk_project;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysAppContext`.\n   */\n  public getModelName() {\n    return \"SysAppContext\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter, } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ProClassFieldConfig } from '../../models/ProClassFieldConfig';\nimport { SocketConnection } from '../../sockets/socket.connections';\n// import { DfhProperty } from '../../models/DfhProperty';\nimport { SysClassField } from '../../models/SysClassField';\nimport { ProProject } from '../../models/ProProject';\n\n\n/**\n * Api services for the `ProClassFieldConfig` model.\n */\n@Injectable()\nexport class ProClassFieldConfigApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http, connection, models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProClassFieldConfig` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/ProClassFieldConfigs\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Find ProClassFieldConfig of project\n   *\n   * @param {number} pkProject Pk of the project\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProClassFieldConfig` object.)\n   * </em>\n   */\n  public ofProject(pkProject: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/ProClassFieldConfigs/of-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates or updates instances of ProClassFieldConfig.\n   *\n   * @param {number} pkProject Pk of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{ProClassFieldConfig}` - Array ProClassFieldConfig\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProClassFieldConfig` object.)\n   * </em>\n   */\n  public bulkUpsert(pkProject: any, data: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/ProClassFieldConfigs/bulk-upsert\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes instances of ProClassFieldConfig.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `pks` â `{number}` - Array of Primary Key of ProClassFieldConfigs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProClassFieldConfig` object.)\n   * </em>\n   */\n  public bulkDelete(pks: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/ProClassFieldConfigs/bulk-delete\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      pks: pks\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProClassFieldConfig`.\n   */\n  public getModelName() {\n    return \"ProClassFieldConfig\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ProDfhClassProjRel } from '../../models/ProDfhClassProjRel';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `ProDfhClassProjRel` model.\n */\n@Injectable()\nexport class ProDfhClassProjRelApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Find ProDfhClassProjRel of project\n   *\n   * @param {number} pkProject Pk of the project\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProDfhClassProjRel` object.)\n   * </em>\n   */\n  public ofProject(pkProject: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProDfhClassProjRels/of-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates or updates instances of ProDfhClassProjRel.\n   *\n   * @param {number} pkProject Project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{ProDfhClassProjRel}` - Array ProDfhClassProjRel\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProDfhClassProjRel` object.)\n   * </em>\n   */\n  public bulkUpsert(pkProject: any, data: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProDfhClassProjRels/bulk-upsert\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProDfhClassProjRel`.\n   */\n  public getModelName() {\n    return \"ProDfhClassProjRel\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ProDfhProfileProjRel } from '../../models/ProDfhProfileProjRel';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `ProDfhProfileProjRel` model.\n */\n@Injectable()\nexport class ProDfhProfileProjRelApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Find ProDfhProfileProjRel of project where enabled is true\n   *\n   * @param {number} pkProject Pk of the project\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProDfhProfileProjRel` object.)\n   * </em>\n   */\n  public ofProject(pkProject: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProDfhProfileProjRels/of-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates or updates instances of ProDfhProfileProjRel.\n   *\n   * @param {number} pkProject Project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{ProDfhProfileProjRel}` - Array ProDfhProfileProjRel\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProDfhProfileProjRel` object.)\n   * </em>\n   */\n  public bulkUpsert(pkProject: any, data: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProDfhProfileProjRels/bulk-upsert\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProDfhProfileProjRel`.\n   */\n  public getModelName() {\n    return \"ProDfhProfileProjRel\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfAppellation } from '../../models/InfAppellation';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { InfStatement } from '../../models/InfStatement';\n\n\n/**\n * Api services for the `InfAppellation` model.\n */\n@Injectable()\nexport class InfAppellationApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfAppellation`.\n   */\n  public getModelName() {\n    return \"InfAppellation\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfLangString } from '../../models/InfLangString';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { InfStatement } from '../../models/InfStatement';\nimport { InfLanguage } from '../../models/InfLanguage';\n\n\n/**\n * Api services for the `InfLangString` model.\n */\n@Injectable()\nexport class InfLangStringApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfLangString`.\n   */\n  public getModelName() {\n    return \"InfLangString\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfDimension } from '../../models/InfDimension';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { InfStatement } from '../../models/InfStatement';\nimport { InfPersistentItem } from '../../models/InfPersistentItem';\n\n\n/**\n * Api services for the `InfDimension` model.\n */\n@Injectable()\nexport class InfDimensionApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfDimension`.\n   */\n  public getModelName() {\n    return \"InfDimension\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfTemporalEntity } from '../../models/InfTemporalEntity';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { InfStatement } from '../../models/InfStatement';\nimport { InfTextProperty } from '../../models/InfTextProperty';\n\n\n/**\n * Api services for the `InfTemporalEntity` model.\n */\n@Injectable()\nexport class InfTemporalEntityApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Find or create many information temporal entities.\n   *\n   * @param {number} pk_project Pk of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{InfTemporalEntity}` - data\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfTemporalEntity` object.)\n   * </em>\n   */\n  public findOrCreateInfTemporalEntities(pk_project: any, data: any, customHeaders?: Function): Observable<InfTemporalEntity[]> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfTemporalEntities/find-or-create-many\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pk_project !== 'undefined' && pk_project !== null) _urlParams.pk_project = pk_project;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<InfTemporalEntity>) =>\n        instances.map((instance: InfTemporalEntity) => new InfTemporalEntity(instance))\n    ));\n  }\n\n  /**\n   * Get a flat object of temporal entities.\n   *\n   * @param {number} pkProject Pk of the project.\n   *\n   * @param {number} pkSourceEntity Pk of the source entity to which the temporal entities are related.\n   *\n   * @param {number} pkProperty Pk of the property leading from source entity to the temporal entities.\n   *\n   * @param {number} pkTargetClass Fk class of the target temporal entities.\n   *\n   * @param {boolean} isOutgoing If true, the source entity is domain, else range.\n   *\n   * @param {number} limit number of returned temporal entities.\n   *\n   * @param {number} offset offset of the segment of returned temporal entities.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfTemporalEntity` object.)\n   * </em>\n   */\n  public alternativeTemporalEntityList(pkProject: any, pkSourceEntity: any, pkProperty: any, pkTargetClass: any, isOutgoing: any, limit: any, offset: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfTemporalEntities/paginated-list-alternatives\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkSourceEntity !== 'undefined' && pkSourceEntity !== null) _urlParams.pkSourceEntity = pkSourceEntity;\n    if (typeof pkProperty !== 'undefined' && pkProperty !== null) _urlParams.pkProperty = pkProperty;\n    if (typeof pkTargetClass !== 'undefined' && pkTargetClass !== null) _urlParams.pkTargetClass = pkTargetClass;\n    if (typeof isOutgoing !== 'undefined' && isOutgoing !== null) _urlParams.isOutgoing = isOutgoing;\n    if (typeof limit !== 'undefined' && limit !== null) _urlParams.limit = limit;\n    if (typeof offset !== 'undefined' && offset !== null) _urlParams.offset = offset;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get a flat object of temporal entities.\n   *\n   * @param {number} pkProject Pk of the project.\n   *\n   * @param {number} pkSourceEntity Pk of the source entity to which the temporal entities are related.\n   *\n   * @param {number} pkProperty Pk of the property leading from source entity to the temporal entities.\n   *\n   * @param {number} pkTargetClass Fk class of the target temporal entities.\n   *\n   * @param {boolean} isOutgoing If true, the source entity is domain, else range.\n   *\n   * @param {number} limit number of returned temporal entities.\n   *\n   * @param {number} offset offset of the segment of returned temporal entities.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfTemporalEntity` object.)\n   * </em>\n   */\n  public temporalEntityList(pkProject: any, pkSourceEntity: any, pkProperty: any, pkTargetClass: any, isOutgoing: any, limit: any, offset: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfTemporalEntities/paginated-list\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkSourceEntity !== 'undefined' && pkSourceEntity !== null) _urlParams.pkSourceEntity = pkSourceEntity;\n    if (typeof pkProperty !== 'undefined' && pkProperty !== null) _urlParams.pkProperty = pkProperty;\n    if (typeof pkTargetClass !== 'undefined' && pkTargetClass !== null) _urlParams.pkTargetClass = pkTargetClass;\n    if (typeof isOutgoing !== 'undefined' && isOutgoing !== null) _urlParams.isOutgoing = isOutgoing;\n    if (typeof limit !== 'undefined' && limit !== null) _urlParams.limit = limit;\n    if (typeof offset !== 'undefined' && offset !== null) _urlParams.offset = offset;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get e schema object of own properties of the temporal entity in project version.\n   *\n   * @param {number} pkProject Pk project\n   *\n   * @param {number} pkEntity Primary Key of the temporal entity (pk_entity)\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfTemporalEntity` object.)\n   * </em>\n   */\n  public ownProperties(pkProject: any, pkEntity: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfTemporalEntities/own-properties\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Find or create a temporal entity version.\n   *\n   * @param {number} pkProject Id of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{InfTemporalEntity}` - data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfTemporalEntity` object.)\n   * </em>\n   */\n  public findOrCreateInfTemporalEntity(pkProject: any, data: any, customHeaders?: Function): Observable<InfTemporalEntity[]> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfTemporalEntities/findOrCreate\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<InfTemporalEntity>) =>\n        instances.map((instance: InfTemporalEntity) => new InfTemporalEntity(instance))\n    ));\n  }\n\n  /**\n   * Relate a nested object of a InfTemporalEntity to the project.\n   *\n   * @param {number} pkProject Id of the project\n   *\n   * @param {boolean} isInProject Include or exclude from project.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{InfTemporalEntity}` - data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfTemporalEntity` object.)\n   * </em>\n   */\n  public changeTeEntProjectRelation(pkProject: any, isInProject: any, data: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfTemporalEntities/change-project-relation\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof isInProject !== 'undefined' && isInProject !== null) _urlParams.isInProject = isInProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfTemporalEntity`.\n   */\n  public getModelName() {\n    return \"InfTemporalEntity\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfStatement } from '../../models/InfStatement';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { InfTemporalEntity } from '../../models/InfTemporalEntity';\nimport { DatDigital } from '../../models/DatDigital';\nimport { DatChunk } from '../../models/DatChunk';\nimport { InfAppellation } from '../../models/InfAppellation';\nimport { InfLangString } from '../../models/InfLangString';\nimport { InfDimension } from '../../models/InfDimension';\nimport { InfLanguage } from '../../models/InfLanguage';\nimport { InfPersistentItem } from '../../models/InfPersistentItem';\nimport { InfTimePrimitive } from '../../models/InfTimePrimitive';\nimport { InfPlace } from '../../models/InfPlace';\n\n\n/**\n * Api services for the `InfStatement` model.\n */\n@Injectable()\nexport class InfStatementApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Get a flat object of entity previews, that are target of a list.\n   *\n   * @param {number} pkProject Pk of the project.\n   *\n   * @param {number} pkSourceEntity Pk of the source entity to which the entity previews, that are target of a list are related.\n   *\n   * @param {number} pkProperty Pk of the property leading from source entity to the entity previews, that are target of a list.\n   *\n   * @param {number} pkTargetClass Fk class of the target entity previews, that are target of a list.\n   *\n   * @param {boolean} isOutgoing If true, the source entity is domain, else range.\n   *\n   * @param {number} limit number of returned entity previews, that are target of a list.\n   *\n   * @param {number} offset offset of the segment of returned entity previews, that are target of a list.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfStatement` object.)\n   * </em>\n   */\n  public paginatedListTargetingEntityPreviews(pkProject: any, pkSourceEntity: any, pkProperty: any, pkTargetClass: any, isOutgoing: any, limit: any, offset: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfStatements/paginated-list-targeting-entity-previews\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkSourceEntity !== 'undefined' && pkSourceEntity !== null) _urlParams.pkSourceEntity = pkSourceEntity;\n    if (typeof pkProperty !== 'undefined' && pkProperty !== null) _urlParams.pkProperty = pkProperty;\n    if (typeof pkTargetClass !== 'undefined' && pkTargetClass !== null) _urlParams.pkTargetClass = pkTargetClass;\n    if (typeof isOutgoing !== 'undefined' && isOutgoing !== null) _urlParams.isOutgoing = isOutgoing;\n    if (typeof limit !== 'undefined' && limit !== null) _urlParams.limit = limit;\n    if (typeof offset !== 'undefined' && offset !== null) _urlParams.offset = offset;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Find or create information statement.\n   *\n   * @param {number} pk_project Id of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{InfStatement}` - data\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfStatement` object.)\n   * </em>\n   */\n  public findOrCreateInfStatements(pk_project: any, data: any, customHeaders?: Function): Observable<InfStatement[]> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfStatements/find-or-create-many\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pk_project !== 'undefined' && pk_project !== null) _urlParams.pk_project = pk_project;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<InfStatement>) =>\n        instances.map((instance: InfStatement) => new InfStatement(instance))\n    ));\n  }\n\n  /**\n   * Get statements (with children) of given fkProperty and fkEntity from Repo that are not in project of given projectId.\n   *\n   * @param {number} entityPk Key of the persistent item (fk_object_info)\n   *\n   * @param {number} propertyPk Key of the property (fk_property)\n   *\n   * @param {number} pkProject Id of the the current project\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfStatement` object.)\n   * </em>\n   */\n  public alternativesNotInProjectByEntityPk(entityPk: any, propertyPk: any, pkProject: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfStatements/alternatives-not-in-project-by-entity-pk\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof entityPk !== 'undefined' && entityPk !== null) _urlParams.entityPk = entityPk;\n    if (typeof propertyPk !== 'undefined' && propertyPk !== null) _urlParams.propertyPk = propertyPk;\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get statements (with children) of given propertyPk and teEntPk from Repo that are not in project of given projectId.\n   *\n   * @param {number} teEntPk Key of the temporal entity (fk_subject_info)\n   *\n   * @param {number} propertyPk Key of the property (fk_property)\n   *\n   * @param {number} pkProject Id of the the current project\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfStatement` object.)\n   * </em>\n   */\n  public alternativesNotInProjectByTeEntPk(teEntPk: any, propertyPk: any, pkProject: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfStatements/alternatives-not-in-project-by-te-ent-pk\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof teEntPk !== 'undefined' && teEntPk !== null) _urlParams.teEntPk = teEntPk;\n    if (typeof propertyPk !== 'undefined' && propertyPk !== null) _urlParams.propertyPk = propertyPk;\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get an nested object of statement with everything needed to display the links made from an entity towards sources and digitals.\n   *\n   * @param {boolean} ofProject if true, finds project version. if false, finds repo version.\n   *\n   * @param {number} pkProject Primary Key of the Project.\n   *\n   * @param {number} pkEntity Primary Key of the entity for which the sources links are needed.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfStatement` object.)\n   * </em>\n   */\n  public sourcesAndDigitalsOfEntity(ofProject: any, pkProject: any = {}, pkEntity: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfStatements/sources-and-digitals-of-entity\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof ofProject !== 'undefined' && ofProject !== null) _urlParams.ofProject = ofProject;\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Find statements by params.\n   *\n   * @param {boolean} ofProject if true, finds project version. if false, finds repo version.\n   *\n   * @param {number} pkProject Primary Key of the Project. If provided and ofProject=false, makes a left join with project\n   *\n   * @param {number} pkEntity Primary Key of the statement (pk_entity)\n   *\n   * @param {number} pkInfoRange Foreign Key of the statement pointing to the range entity (fk_object_info)\n   *\n   * @param {number} pkInfoDomain Foreign Key of the statement pointing to the domain entity (fk_subject_info)\n   *\n   * @param {number} pkProperty Foreign Key of the statement pointing to the property (fk_property)\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfStatement` object.)\n   * </em>\n   */\n  public queryByParams(ofProject: any, pkProject: any = {}, pkEntity: any = {}, pkInfoRange: any = {}, pkInfoDomain: any = {}, pkProperty: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfStatements/find-by-params\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof ofProject !== 'undefined' && ofProject !== null) _urlParams.ofProject = ofProject;\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    if (typeof pkInfoRange !== 'undefined' && pkInfoRange !== null) _urlParams.pkInfoRange = pkInfoRange;\n    if (typeof pkInfoDomain !== 'undefined' && pkInfoDomain !== null) _urlParams.pkInfoDomain = pkInfoDomain;\n    if (typeof pkProperty !== 'undefined' && pkProperty !== null) _urlParams.pkProperty = pkProperty;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfStatement`.\n   */\n  public getModelName() {\n    return \"InfStatement\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfLanguage } from '../../models/InfLanguage';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\n\n\n/**\n * Api services for the `InfLanguage` model.\n */\n@Injectable()\nexport class InfLanguageApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Perform a ranked search on languages by search string.\n   *\n   * @param {string} queryString \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfLanguage` object.)\n   * </em>\n   */\n  public queryByString(queryString: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfLanguages/query-by-string\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof queryString !== 'undefined' && queryString !== null) _urlParams.queryString = queryString;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfLanguage`.\n   */\n  public getModelName() {\n    return \"InfLanguage\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter, } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfPersistentItem } from '../../models/InfPersistentItem';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { InfStatement } from '../../models/InfStatement';\nimport { InfTextProperty } from '../../models/InfTextProperty';\n\n\n/**\n * Api services for the `InfPersistentItem` model.\n */\n@Injectable()\nexport class InfPersistentItemApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http, connection, models, auth, errorHandler);\n  }\n\n  /**\n   * Find or create many information persistent items.\n   *\n   * @param {number} pk_project Pk of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{InfPersistentItem}` - data\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfPersistentItem` object.)\n   * </em>\n   */\n  public findOrCreateInfPersistentItems(pk_project: any, data: any, customHeaders?: Function): Observable<InfPersistentItem[]> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/InfPersistentItems/find-or-create-many\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pk_project !== 'undefined' && pk_project !== null) _urlParams.pk_project = pk_project;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<InfPersistentItem>) =>\n      instances.map((instance: InfPersistentItem) => new InfPersistentItem(instance))\n    ));\n  }\n\n  /**\n   * Get only miminal properties of persistent item.\n   *\n   * @param {number} pkProject Pk of the project.\n   *\n   * @param {number} pkEntity Pk of the entity.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfPersistentItem` object.)\n   * </em>\n   */\n  public ownProperties(pkProject: any, pkEntity: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/InfPersistentItems/own-properties\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get a minimal nested object of all types in the project.\n   *\n   * @param {number} pkProject Pk of the project.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfPersistentItem` object.)\n   * </em>\n   */\n  public typesOfProject(pkProject: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/InfPersistentItems/types-of-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Find types of typed class and project. E.g. get the types for the class 'histC8 Geographical Place' (pk_typed_class=363) used in project (pk_project=123)\n   *\n   * @param {number} pk_project Primary Key of Project\n   *\n   * @param {number} pk_typed_classes Primary Keyes of Typed Classes (e.g. pk of Geographical Place to get Geographical Place Types)\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfPersistentItem` object.)\n   * </em>\n   */\n  public typesOfClassesAndProject(pk_project: any, pk_typed_classes: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/InfPersistentItems/types-of-classes-and-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pk_project !== 'undefined' && pk_project !== null) _urlParams.pk_project = pk_project;\n    if (typeof pk_typed_classes !== 'undefined' && pk_typed_classes !== null) _urlParams.pk_typed_classes = pk_typed_classes;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Find one type by pk_entityÂ with appellations and text properties.\n   *\n   * @param {number} pk_project Primary Key of Project\n   *\n   * @param {number} pk_entity Primary Key of the type. Provide this if you want to query one specific type.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfPersistentItem` object.)\n   * </em>\n   */\n  public typeNested(pk_project: any, pk_entity: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/InfPersistentItems/type-nested\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pk_project !== 'undefined' && pk_project !== null) _urlParams.pk_project = pk_project;\n    if (typeof pk_entity !== 'undefined' && pk_entity !== null) _urlParams.pk_entity = pk_entity;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfPersistentItem`.\n   */\n  public getModelName() {\n    return \"InfPersistentItem\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfTimePrimitive } from '../../models/InfTimePrimitive';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\n\n\n/**\n * Api services for the `InfTimePrimitive` model.\n */\n@Injectable()\nexport class InfTimePrimitiveApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfTimePrimitive`.\n   */\n  public getModelName() {\n    return \"InfTimePrimitive\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfPlace } from '../../models/InfPlace';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\n\n\n/**\n * Api services for the `InfPlace` model.\n */\n@Injectable()\nexport class InfPlaceApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Find or create a InfPlace and update the project relation if needed.\n   *\n   * @param {number} projectId Id of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{InfPlace}` - data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfPlace` object.)\n   * </em>\n   */\n  public findOrCreatePlace(projectId: any, data: any, customHeaders?: Function): Observable<InfPlace[]> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfPlaces/findOrCreate\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof projectId !== 'undefined' && projectId !== null) _urlParams.projectId = projectId;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<InfPlace>) =>\n        instances.map((instance: InfPlace) => new InfPlace(instance))\n    ));\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfPlace`.\n   */\n  public getModelName() {\n    return \"InfPlace\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DatNamespace } from '../../models/DatNamespace';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `DatNamespace` model.\n */\n@Injectable()\nexport class DatNamespaceApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Finds namespaces of a project.\n   *\n   * @param {number} pkProject Key of the Project for which the namespaces should be found.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DatNamespace` object.)\n   * </em>\n   */\n  public byProject(pkProject: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DatNamespaces/find-by-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatNamespace`.\n   */\n  public getModelName() {\n    return \"DatNamespace\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfTextProperty } from '../../models/InfTextProperty';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { InfPersistentItem } from '../../models/InfPersistentItem';\nimport { InfTemporalEntity } from '../../models/InfTemporalEntity';\nimport { InfLanguage } from '../../models/InfLanguage';\nimport { SysClassField } from '../../models/SysClassField';\n\n\n/**\n * Api services for the `InfTextProperty` model.\n */\n@Injectable()\nexport class InfTextPropertyApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Find or create information text properties.\n   *\n   * @param {number} pk_project Id of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{InfTextProperty}` - data\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfTextProperty` object.)\n   * </em>\n   */\n  public findOrCreateInfTextProperties(pk_project: any, data: any, customHeaders?: Function): Observable<InfTextProperty[]> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfTextProperties/find-or-create-many\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pk_project !== 'undefined' && pk_project !== null) _urlParams.pk_project = pk_project;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<InfTextProperty>) =>\n        instances.map((instance: InfTextProperty) => new InfTextProperty(instance))\n    ));\n  }\n\n  /**\n   * Find or create a InfTextProperty and update the project relation if needed.\n   *\n   * @param {number} pkProject Pk of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{InfTextProperty}` - data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfTextProperty` object.)\n   * </em>\n   */\n  public findOrCreateInfTextProperty(pkProject: any, data: any, customHeaders?: Function): Observable<InfTextProperty[]> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfTextProperties/findOrCreate\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<InfTextProperty>) =>\n        instances.map((instance: InfTextProperty) => new InfTextProperty(instance))\n    ));\n  }\n\n  /**\n   * Find all InfTextProperties that are not yet added to the given project.\n   *\n   * @param {number} pkProject Pk of the project\n   *\n   * @param {number} pkEntity fk of the concerned entity\n   *\n   * @param {number} pkClassField fk of the class field\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfTextProperty` object.)\n   * </em>\n   */\n  public findAlternativeTextProperties(pkProject: any, pkEntity: any, pkClassField: any, customHeaders?: Function): Observable<InfTextProperty[]> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfTextProperties/findAlternativeTextProperties\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    if (typeof pkClassField !== 'undefined' && pkClassField !== null) _urlParams.pkClassField = pkClassField;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<InfTextProperty>) =>\n        instances.map((instance: InfTextProperty) => new InfTextProperty(instance))\n    ));\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfTextProperty`.\n   */\n  public getModelName() {\n    return \"InfTextProperty\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SysSystemType } from '../../models/SysSystemType';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `SysSystemType` model.\n */\n@Injectable()\nexport class SysSystemTypeApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysSystemType`.\n   */\n  public getModelName() {\n    return \"SysSystemType\";\n  }\n}\n","/* tslint:disable */\n/**\n* @module SDKModule\n* @author Jonathan Casarrubias <t:@johncasarrubias> <gh:jonathan-casarrubias>\n* @license MIT 2016 Jonathan Casarrubias\n* @version 2.1.0\n* @description\n* The SDKModule is a generated Software Development Kit automatically built by\n* the LoopBack SDK Builder open source module.\n*\n* The SDKModule provides Angular 2 >= RC.5 support, which means that NgModules\n* can import this Software Development Kit as follows:\n*\n*\n* APP Route Module Context\n* ============================================================================\n* import { NgModule }       from '@angular/core';\n* import { BrowserModule }  from '@angular/platform-browser';\n* // App Root\n* import { AppComponent }   from './app.component';\n* // Feature Modules\n* import { SDK[Browser|Node|Native]Module } from './shared/sdk/sdk.module';\n* // Import Routing\n* import { routing }        from './app.routing';\n* @NgModule({\n*  imports: [\n*    BrowserModule,\n*    routing,\n*    SDK[Browser|Node|Native]Module.forRoot()\n*  ],\n*  declarations: [ AppComponent ],\n*  bootstrap:    [ AppComponent ]\n* })\n* export class AppModule { }\n*\n**/\nimport { ErrorHandler } from './services/core/error.service';\nimport { LoopBackAuth } from './services/core/auth.service';\nimport { LoggerService } from './services/custom/logger.service';\nimport { SDKModels } from './services/custom/SDKModels';\nimport { InternalStorage, SDKStorage } from './storage/storage.swaps';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CookieBrowser } from './storage/cookie.browser';\nimport { StorageBrowser } from './storage/storage.browser';\nimport { SocketBrowser } from './sockets/socket.browser';\nimport { SocketDriver } from './sockets/socket.driver';\nimport { SocketConnection } from './sockets/socket.connections';\nimport { RealTime } from './services/core/real.time';\nimport { SchemaObjectApi } from './services/custom/SchemaObject';\nimport { SysClassFieldPropertyRelApi } from './services/custom/SysClassFieldPropertyRel';\nimport { SysClassFieldApi } from './services/custom/SysClassField';\nimport { SysClassHasTypePropertyApi } from './services/custom/SysClassHasTypeProperty';\nimport { SysSystemRelevantClassApi } from './services/custom/SysSystemRelevantClass';\nimport { PubAccountApi } from './services/custom/PubAccount';\nimport { EmailApi } from './services/custom/Email';\nimport { ProProjectApi } from './services/custom/ProProject';\nimport { PubAccountProjectRelApi } from './services/custom/PubAccountProjectRel';\nimport { ProTextPropertyApi } from './services/custom/ProTextProperty';\nimport { ProInfoProjRelApi } from './services/custom/ProInfoProjRel';\nimport { DfhProfileApi } from './services/custom/DfhProfile';\nimport { DfhLabelApi } from './services/custom/DfhLabel';\nimport { DatChunkApi } from './services/custom/DatChunk';\nimport { DatColumnApi } from './services/custom/DatColumn';\nimport { DatTextPropertyApi } from './services/custom/DatTextProperty';\nimport { DatDigitalApi } from './services/custom/DatDigital';\nimport { SysAppContextApi } from './services/custom/SysAppContext';\nimport { ProClassFieldConfigApi } from './services/custom/ProClassFieldConfig';\nimport { ProDfhClassProjRelApi } from './services/custom/ProDfhClassProjRel';\nimport { ProDfhProfileProjRelApi } from './services/custom/ProDfhProfileProjRel';\nimport { InfAppellationApi } from './services/custom/InfAppellation';\nimport { InfLangStringApi } from './services/custom/InfLangString';\nimport { InfDimensionApi } from './services/custom/InfDimension';\nimport { InfTemporalEntityApi } from './services/custom/InfTemporalEntity';\nimport { InfStatementApi } from './services/custom/InfStatement';\nimport { InfLanguageApi } from './services/custom/InfLanguage';\nimport { InfPersistentItemApi } from './services/custom/InfPersistentItem';\nimport { InfTimePrimitiveApi } from './services/custom/InfTimePrimitive';\nimport { InfPlaceApi } from './services/custom/InfPlace';\nimport { DatNamespaceApi } from './services/custom/DatNamespace';\nimport { InfTextPropertyApi } from './services/custom/InfTextProperty';\nimport { SysSystemTypeApi } from './services/custom/SysSystemType';\n/**\n* @module SDKBrowserModule\n* @description\n* This module should be imported when building a Web Application in the following scenarios:\n*\n*  1.- Regular web application\n*  2.- Angular universal application (Browser Portion)\n*  3.- Progressive applications (Angular Mobile, Ionic, WebViews, etc)\n**/\n@NgModule({\n  imports: [CommonModule, HttpClientModule],\n  declarations: [],\n  exports: [],\n  providers: [\n    ErrorHandler,\n    SocketConnection\n  ]\n})\nexport class SDKBrowserModule {\n  static forRoot(internalStorageProvider: any = {\n    provide: InternalStorage,\n    useClass: CookieBrowser\n  }): ModuleWithProviders {\n    return {\n      ngModule: SDKBrowserModule,\n      providers: [\n        LoopBackAuth,\n        LoggerService,\n        SDKModels,\n        RealTime,\n        SchemaObjectApi,\n        SysClassFieldPropertyRelApi,\n        SysClassFieldApi,\n        SysClassHasTypePropertyApi,\n        SysSystemRelevantClassApi,\n        PubAccountApi,\n        EmailApi,\n        ProProjectApi,\n        PubAccountProjectRelApi,\n        ProTextPropertyApi,\n        ProInfoProjRelApi,\n        DfhProfileApi,\n        DfhLabelApi,\n        DatChunkApi,\n        DatColumnApi,\n        DatTextPropertyApi,\n        DatDigitalApi,\n        SysAppContextApi,\n        ProClassFieldConfigApi,\n        ProDfhClassProjRelApi,\n        ProDfhProfileProjRelApi,\n        InfAppellationApi,\n        InfLangStringApi,\n        InfDimensionApi,\n        InfTemporalEntityApi,\n        InfStatementApi,\n        InfLanguageApi,\n        InfPersistentItemApi,\n        InfTimePrimitiveApi,\n        InfPlaceApi,\n        DatNamespaceApi,\n        InfTextPropertyApi,\n        SysSystemTypeApi,\n        internalStorageProvider,\n        { provide: SDKStorage, useClass: StorageBrowser },\n        { provide: SocketDriver, useClass: SocketBrowser }\n      ]\n    };\n  }\n}\n/**\n* Have Fun!!!\n* - Jon\n**/\nexport * from './models/index';\nexport * from './services/index';\nexport * from './lb.config';\nexport * from './storage/storage.swaps';\nexport { CookieBrowser } from './storage/cookie.browser';\nexport { StorageBrowser } from './storage/storage.browser';\n\n"]}