{"version":3,"file":"kleiolab-lib-sdk-lb3.js","sources":["ng://@kleiolab/lib-sdk-lb3/services/core/error.service.ts","ng://@kleiolab/lib-sdk-lb3/storage/storage.swaps.ts","ng://@kleiolab/lib-sdk-lb3/models/BaseModels.ts","ng://@kleiolab/lib-sdk-lb3/services/core/auth.service.ts","ng://@kleiolab/lib-sdk-lb3/lb.config.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/logger.service.ts","ng://@kleiolab/lib-sdk-lb3/models/DatChunk.ts","ng://@kleiolab/lib-sdk-lb3/models/DatColumn.ts","ng://@kleiolab/lib-sdk-lb3/models/DatDigital.ts","ng://@kleiolab/lib-sdk-lb3/models/DatNamespace.ts","ng://@kleiolab/lib-sdk-lb3/models/DatTextProperty.ts","ng://@kleiolab/lib-sdk-lb3/models/DfhLabel.ts","ng://@kleiolab/lib-sdk-lb3/models/DfhProfile.ts","ng://@kleiolab/lib-sdk-lb3/models/Email.ts","ng://@kleiolab/lib-sdk-lb3/models/InfAppellation.ts","ng://@kleiolab/lib-sdk-lb3/models/InfDimension.ts","ng://@kleiolab/lib-sdk-lb3/models/InfLangString.ts","ng://@kleiolab/lib-sdk-lb3/models/InfLanguage.ts","ng://@kleiolab/lib-sdk-lb3/models/InfPersistentItem.ts","ng://@kleiolab/lib-sdk-lb3/models/InfPlace.ts","ng://@kleiolab/lib-sdk-lb3/models/InfStatement.ts","ng://@kleiolab/lib-sdk-lb3/models/InfTemporalEntity.ts","ng://@kleiolab/lib-sdk-lb3/models/InfTextProperty.ts","ng://@kleiolab/lib-sdk-lb3/models/InfTimePrimitive.ts","ng://@kleiolab/lib-sdk-lb3/models/ProClassFieldConfig.ts","ng://@kleiolab/lib-sdk-lb3/models/ProDfhClassProjRel.ts","ng://@kleiolab/lib-sdk-lb3/models/ProDfhProfileProjRel.ts","ng://@kleiolab/lib-sdk-lb3/models/ProInfoProjRel.ts","ng://@kleiolab/lib-sdk-lb3/models/ProProject.ts","ng://@kleiolab/lib-sdk-lb3/models/ProTextProperty.ts","ng://@kleiolab/lib-sdk-lb3/models/PubAccount.ts","ng://@kleiolab/lib-sdk-lb3/models/PubAccountProjectRel.ts","ng://@kleiolab/lib-sdk-lb3/models/SchemaObject.ts","ng://@kleiolab/lib-sdk-lb3/models/SysAppContext.ts","ng://@kleiolab/lib-sdk-lb3/models/SysClassField.ts","ng://@kleiolab/lib-sdk-lb3/models/SysClassFieldPropertyRel.ts","ng://@kleiolab/lib-sdk-lb3/models/SysClassHasTypeProperty.ts","ng://@kleiolab/lib-sdk-lb3/models/SysSystemRelevantClass.ts","ng://@kleiolab/lib-sdk-lb3/models/SysSystemType.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/SDKModels.ts","ng://@kleiolab/lib-sdk-lb3/storage/cookie.browser.ts","ng://@kleiolab/lib-sdk-lb3/storage/storage.browser.ts","ng://@kleiolab/lib-sdk-lb3/sockets/socket.browser.ts","ng://@kleiolab/lib-sdk-lb3/sockets/socket.driver.ts","ng://@kleiolab/lib-sdk-lb3/sockets/socket.connections.ts","ng://@kleiolab/lib-sdk-lb3/services/core/io.service.ts","ng://@kleiolab/lib-sdk-lb3/models/FireLoopRef.ts","ng://@kleiolab/lib-sdk-lb3/models/index.ts","ng://@kleiolab/lib-sdk-lb3/models/FireLoop.ts","ng://@kleiolab/lib-sdk-lb3/services/core/real.time.ts","ng://@kleiolab/lib-sdk-lb3/services/core/base.service.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/SchemaObject.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/SysClassFieldPropertyRel.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/SysClassField.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/SysClassHasTypeProperty.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/SysSystemRelevantClass.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/PubAccount.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/Email.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/ProProject.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/PubAccountProjectRel.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/ProTextProperty.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/ProInfoProjRel.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/DfhProfile.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/DfhLabel.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/DatChunk.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/DatColumn.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/DatTextProperty.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/DatDigital.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/SysAppContext.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/ProClassFieldConfig.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/ProDfhClassProjRel.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/ProDfhProfileProjRel.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfAppellation.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfLangString.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfDimension.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfTemporalEntity.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfStatement.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfLanguage.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfPersistentItem.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfTimePrimitive.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfPlace.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/DatNamespace.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/InfTextProperty.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/SysSystemType.ts","ng://@kleiolab/lib-sdk-lb3/services/core/index.ts","ng://@kleiolab/lib-sdk-lb3/services/custom/index.ts","ng://@kleiolab/lib-sdk-lb3/services/index.ts","ng://@kleiolab/lib-sdk-lb3/index.ts","ng://@kleiolab/lib-sdk-lb3/kleiolab-lib-sdk-lb3.ts"],"sourcesContent":["/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\n/**\n * Default error handler\n */\n@Injectable()\nexport class ErrorHandler {\n  public handleError(errorResponse: HttpErrorResponse): Observable<never> {\n    return throwError(errorResponse.error.error || 'Server error');\n  }\n}\n","/* tslint:disable */\n/**\n *Â @module Storage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The InternalStorage class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n **/\nexport class BaseStorage {\n  /**\n   * @method get\n   * @param {string} key Storage key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in storage.\n   **/\n  get(key: string): any {}\n  /**\n   * @method set\n   * @param {string} key Storage key name\n   * @param {any} value Any value\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in localStorage.\n   **/\n  set(key: string, value: any, expires?: Date): void {}\n  /**\n   * @method remove\n   * @param {string} key Storage key name\n   * @return {void}\n   * @description\n   * This method will remove a localStorage item from the client.\n   **/\n  remove(key: string): void {}\n}\n/**\n *Â @module InternalStorage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The InternalStorage class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n * This is mainly required because Angular Universal integration.\n * It does inject a CookieStorage instead of LocalStorage.\n **/\nexport class InternalStorage extends BaseStorage {}\n/**\n *Â @module SDKStorage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The SDKStorage class is used for dependency injection swapping.\n * It will be provided using factory method according the right environment.\n * This is created for public usage, to allow persisting custom data\n * Into the local storage API.\n **/\nexport class SDKStorage extends BaseStorage {}\n","/* tslint:disable */\n\n\n\ndeclare var Object: any;\nexport interface LoopBackFilter {\n  fields?: any;\n  include?: any;\n  limit?: any;\n  order?: any;\n  skip?: any;\n  offset?: any;\n  where?: any;\n}\n\nexport interface AccessTokenInterface {\n  \"id\"?: string;\n  \"ttl\"?: number;\n  \"scopes\"?: [\"string\"];\n  \"created\"?: Date;\n  \"userId\"?: string;\n  \"user\"?: any;\n}\n\nexport class AccessToken implements AccessTokenInterface {\n  \"id\": string;\n  \"ttl\": number;\n  \"scopes\": [\"string\"];\n  \"created\": Date;\n  \"userId\": string;\n  \"user\": any;\n  constructor(data?: AccessTokenInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `AccessToken`.\n   */\n  public static getModelName() {\n    return \"AccessToken\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of AccessToken for dynamic purposes.\n  **/\n  public static factory(data: AccessTokenInterface): AccessToken{\n    return new AccessToken(data);\n  }  \n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'AccessToken',\n      plural: 'AccessTokens',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'string'\n        },\n        \"ttl\": {\n          name: 'ttl',\n          type: 'number',\n          default: 1209600\n        },\n        \"scopes\": {\n          name: 'scopes',\n          type: '[\"string\"]'\n        },\n        \"created\": {\n          name: 'created',\n          type: 'Date'\n        },\n        \"userId\": {\n          name: 'userId',\n          type: 'string'\n        },\n      },\n      relations: {\n        user: {\n          name: 'user',\n          type: 'User',\n          model: 'User'\n        },\n      }\n    }\n  }\n}\n\nexport class SDKToken implements AccessTokenInterface {\n  id: any = null;\n  ttl: number = null;\n  scopes: any = null;\n  created: any = null;\n  userId: any = null;\n  user: any = null;\n  rememberMe: boolean = null;\n  constructor(data?: AccessTokenInterface) {\n    Object.assign(this, data);\n  }\n}\n/**\n* This GeoPoint represents both, LoopBack and MongoDB GeoPoint\n**/\nexport interface GeoPoint  {\n    lat?: number;\n    lng?: number;\n    type?: string;\n    coordinates?: number[];\n}\n\nexport interface StatFilter {\n    range: string,\n    custom?: {\n      start: string,\n      end: string\n    },\n    where?: {},\n    groupBy?: string\n}\n","/* tslint:disable */\ndeclare var Object: any;\nimport { Injectable, Inject } from '@angular/core';\nimport { InternalStorage } from '../../storage/storage.swaps';\nimport { SDKToken } from '../../models/BaseModels';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketConnection\n* @license MIT\n* @description\n* This module handle socket connections and return singleton instances for each\n* connection, it will use the SDK Socket Driver Available currently supporting\n* Angular 2 for web, NativeScript 2 and Angular Universal.\n**/\n@Injectable()\nexport class LoopBackAuth {\n  /**\n   * @type {SDKToken}\n   **/\n  private token: SDKToken = new SDKToken();\n  /**\n   * @type {string}\n   **/\n  protected prefix: string = '$LoopBackSDK$';\n  /**\n   * @method constructor\n   * @param {InternalStorage} storage Internal Storage Driver\n   * @description\n   * The constructor will initialize the token loading data from storage\n   **/\n  constructor(@Inject(InternalStorage) protected storage: InternalStorage) {\n    this.token.id = this.load('id');\n    this.token.user = this.load('user');\n    this.token.userId = this.load('userId');\n    this.token.created = this.load('created');\n    this.token.ttl = this.load('ttl');\n    this.token.rememberMe = this.load('rememberMe');\n  }\n  /**\n   * @method setRememberMe\n   * @param {boolean} value Flag to remember credentials\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials\n   **/\n  public setRememberMe(value: boolean): void {\n    this.token.rememberMe = value;\n  }\n  /**\n   * @method setUser\n   * @param {any} user Any type of user model\n   * @return {void}\n   * @description\n   * This method will update the user information and persist it if the\n   * rememberMe flag is set.\n   **/\n  public setUser(user: any) {\n    this.token.user = user;\n    this.save();\n  }\n  /**\n   * @method setToken\n   * @param {SDKToken} token SDKToken or casted AccessToken instance\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials\n   **/\n  public setToken(token: SDKToken): void {\n    this.token = Object.assign({}, this.token, token);\n    this.save();\n  }\n  /**\n   * @method getToken\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials.\n   **/\n  public getToken(): SDKToken {\n    return <SDKToken>this.token;\n  }\n  /**\n   * @method getAccessTokenId\n   * @return {string}\n   * @description\n   * This method will return the actual token string, not the object instance.\n   **/\n  public getAccessTokenId(): string {\n    return this.token.id;\n  }\n  /**\n   * @method getCurrentUserId\n   * @return {any}\n   * @description\n   * This method will return the current user id, it can be number or string.\n   **/\n  public getCurrentUserId(): any {\n    return this.token.userId;\n  }\n  /**\n   * @method getCurrentUserData\n   * @return {any}\n   * @description\n   * This method will return the current user instance.\n   **/\n  public getCurrentUserData(): any {\n    return (typeof this.token.user === 'string') ? JSON.parse(this.token.user) : this.token.user;\n  }\n  /**\n   * @method save\n   * @return {boolean} Whether or not the information was saved\n   * @description\n   * This method will save in either local storage or cookies the current credentials.\n   * But only if rememberMe is enabled.\n   **/\n  public save(): boolean {\n      let today = new Date();\n      let expires = new Date(today.getTime() + (this.token.ttl * 1000));\n      this.persist('id', this.token.id, expires);\n      this.persist('user', this.token.user, expires);\n      this.persist('userId', this.token.userId, expires);\n      this.persist('created', this.token.created, expires);\n      this.persist('ttl', this.token.ttl, expires);\n      this.persist('rememberMe', this.token.rememberMe, expires);\n      return true;\n  };\n  /**\n   * @method load\n   * @param {string} prop Property name\n   * @return {any} Any information persisted in storage\n   * @description\n   * This method will load either from local storage or cookies the provided property.\n   **/\n  protected load(prop: string): any {\n    return this.storage.get(`${this.prefix}${prop}`);\n  }\n  /**\n   * @method clear\n   * @return {void}\n   * @description\n   * This method will clear cookies or the local storage.\n   **/\n  public clear(): void {\n    Object.keys(this.token).forEach((prop: string) => this.storage.remove(`${this.prefix}${prop}`));\n    this.token = new SDKToken();\n  }\n  /**\n   * @method persist\n   * @return {void}\n   * @description\n   * This method saves values to storage\n   **/\n  protected persist(prop: string, value: any, expires?: Date): void {\n    try {\n      this.storage.set(\n        `${this.prefix}${prop}`,\n        (typeof value === 'object') ? JSON.stringify(value) : value,\n        this.token.rememberMe?expires:null\n      );\n    }\n    catch (err) {\n      console.error('Cannot access local/session storage:', err);\n    }\n  }\n}\n","/* tslint:disable */\n/**\n* @module LoopBackConfig\n* @description\n*\n* The LoopBackConfig module help developers to externally \n* configure the base url and api version for loopback.io\n*\n* Example\n*\n* import { LoopBackConfig } from './sdk';\n* \n* @Component() // No metadata needed for this module\n*\n* export class MyApp {\n*   constructor() {\n*     LoopBackConfig.setBaseURL('http://localhost:3000');\n*     LoopBackConfig.setApiVersion('api');\n*   }\n* }\n**/\nexport class LoopBackConfig {\n  private static path: string = '//:3000';\n  private static version: string |Â number = 'lb3-api';\n  private static authPrefix: string = '';\n  private static debug: boolean = true;\n  private static filterOn: string = 'headers';\n  private static whereOn: string = 'headers';\n  private static secure: boolean = false;\n  private static withCredentials: boolean = false;\n\n  public static setApiVersion(version: string = 'api'): void {\n    LoopBackConfig.version = version;\n  }\n  \n  public static getApiVersion(): string | number {\n    return LoopBackConfig.version;\n  }\n\n  public static setBaseURL(url: string = '/'): void {\n    LoopBackConfig.path = url;\n  }\n  \n  public static getPath(): string {\n    return LoopBackConfig.path;\n  }\n\n  public static setAuthPrefix(authPrefix: string = ''): void {\n    LoopBackConfig.authPrefix = authPrefix;\n  }\n\n  public static getAuthPrefix(): string {\n    return LoopBackConfig.authPrefix;\n  }\n\n  public static setDebugMode(isEnabled: boolean): void {\n    LoopBackConfig.debug = isEnabled;\n  }\n\n  public static debuggable(): boolean {\n    return LoopBackConfig.debug;\n  }\n\n  public static filterOnUrl(): void {\n    LoopBackConfig.filterOn = 'url';\n  }\n\n  public static filterOnHeaders(): void {\n    LoopBackConfig.filterOn = 'headers';\n  }\n\n  public static whereOnUrl(): void {\n    LoopBackConfig.whereOn = 'url';\n  }\n\n  public static whereOnHeaders(): void {\n    LoopBackConfig.whereOn = 'headers';\n  }\n\n  public static isHeadersFilteringSet(): boolean {\n    return (LoopBackConfig.filterOn === 'headers');\n  }\n\n  public static isHeadersWhereSet(): boolean {\n    return (LoopBackConfig.whereOn === 'headers');\n  }\n\n  public static setSecureWebSockets(): void {\n    LoopBackConfig.secure = true;\n  }\n\n  public static unsetSecureWebSockets(): void {\n    LoopBackConfig.secure = false;\n  }\n\n  public static isSecureWebSocketsSet(): boolean {\n    return LoopBackConfig.secure;\n  }\n\n  public static setRequestOptionsCredentials(withCredentials: boolean = false): void {\n    LoopBackConfig.withCredentials = withCredentials;\n  }\n\n  public static getRequestOptionsCredentials(): boolean {\n    return LoopBackConfig.withCredentials;\n  }\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { LoopBackConfig } from '../../lb.config';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@johncasarrubias>\n* @module LoggerService\n* @license MIT\n* @description\n* Console Log wrapper that can be disabled in production mode\n**/\n@Injectable()\nexport class LoggerService {\n\n  log(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.log.apply(console, args);\n  }\n\n  info(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.info.apply(console, args);\n  }\n\n  error(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.error.apply(console, args);\n  }\n\n  count(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  group(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  groupEnd() {\n    if (LoopBackConfig.debuggable())\n    console.groupEnd();\n  }\n\n  profile(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  profileEnd() {\n    if (LoopBackConfig.debuggable())\n    console.profileEnd();\n  }\n\n  time(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.time(arg);\n  }\n\n  timeEnd(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.timeEnd(arg);\n  }\n}\n","/* tslint:disable */\nimport {\n  DatDigital,\n  InfStatement,\n  DatNamespace\n} from '../index';\n\ndeclare var Object: any;\nexport interface DatChunkInterface {\n  \"quill_doc\"?: any;\n  \"string\"?: string;\n  \"fk_text\": number;\n  \"fk_entity_version\": number;\n  \"pk_entity\"?: number;\n  \"fk_namespace\"?: number;\n  digital?: DatDigital;\n  outgoing_statements?: InfStatement[];\n  namespace?: DatNamespace;\n}\n\nexport class DatChunk implements DatChunkInterface {\n  \"quill_doc\": any;\n  \"string\": string;\n  \"fk_text\": number;\n  \"fk_entity_version\": number;\n  \"pk_entity\": number;\n  \"fk_namespace\": number;\n  digital?: DatDigital;\n  outgoing_statements?: InfStatement[];\n  namespace?: DatNamespace;\n  constructor(data?: DatChunkInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatChunk`.\n   */\n  public static getModelName() {\n    return \"DatChunk\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of DatChunk for dynamic purposes.\n  **/\n  public static factory(data: DatChunkInterface): DatChunk{\n    return new DatChunk(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'DatChunk',\n      plural: 'DatChunks',\n      path: 'DatChunks',\n      idName: 'pk_entity',\n      properties: {\n        \"quill_doc\": {\n          name: 'quill_doc',\n          type: 'any'\n        },\n        \"string\": {\n          name: 'string',\n          type: 'string'\n        },\n        \"fk_text\": {\n          name: 'fk_text',\n          type: 'number'\n        },\n        \"fk_entity_version\": {\n          name: 'fk_entity_version',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_namespace\": {\n          name: 'fk_namespace',\n          type: 'number'\n        },\n      },\n      relations: {\n        digital: {\n          name: 'digital',\n          type: 'DatDigital',\n          model: 'DatDigital',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_text',\n          keyTo: 'pk_text'\n        },\n        outgoing_statements: {\n          name: 'outgoing_statements',\n          type: 'InfStatement[]',\n          model: 'InfStatement',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_subject_data'\n        },\n        namespace: {\n          name: 'namespace',\n          type: 'DatNamespace',\n          model: 'DatNamespace',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_namespace',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  DatNamespace\n} from '../index';\n\ndeclare var Object: any;\nexport interface DatColumnInterface {\n  \"fk_digital\"?: number;\n  \"fk_data_type\"?: number;\n  \"fk_column_content_type\"?: number;\n  \"fk_column_relationship_type\"?: number;\n  \"fk_original_column\"?: number;\n  \"is_imported\"?: number;\n  \"pk_entity\"?: number;\n  \"fk_namespace\"?: number;\n  namespace?: DatNamespace;\n}\n\nexport class DatColumn implements DatColumnInterface {\n  \"fk_digital\": number;\n  \"fk_data_type\": number;\n  \"fk_column_content_type\": number;\n  \"fk_column_relationship_type\": number;\n  \"fk_original_column\": number;\n  \"is_imported\": number;\n  \"pk_entity\": number;\n  \"fk_namespace\": number;\n  namespace?: DatNamespace;\n  constructor(data?: DatColumnInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatColumn`.\n   */\n  public static getModelName() {\n    return \"DatColumn\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of DatColumn for dynamic purposes.\n  **/\n  public static factory(data: DatColumnInterface): DatColumn{\n    return new DatColumn(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'DatColumn',\n      plural: 'DatColumns',\n      path: 'DatColumns',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_digital\": {\n          name: 'fk_digital',\n          type: 'number'\n        },\n        \"fk_data_type\": {\n          name: 'fk_data_type',\n          type: 'number'\n        },\n        \"fk_column_content_type\": {\n          name: 'fk_column_content_type',\n          type: 'number'\n        },\n        \"fk_column_relationship_type\": {\n          name: 'fk_column_relationship_type',\n          type: 'number'\n        },\n        \"fk_original_column\": {\n          name: 'fk_original_column',\n          type: 'number'\n        },\n        \"is_imported\": {\n          name: 'is_imported',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_namespace\": {\n          name: 'fk_namespace',\n          type: 'number'\n        },\n      },\n      relations: {\n        namespace: {\n          name: 'namespace',\n          type: 'DatNamespace',\n          model: 'DatNamespace',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_namespace',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  DatNamespace\n} from '../index';\n\ndeclare var Object: any;\nexport interface DatDigitalInterface {\n  \"entity_version\"?: number;\n  \"pk_text\"?: number;\n  \"quill_doc\"?: any;\n  \"string\"?: string;\n  \"fk_system_type\"?: number;\n  \"pk_entity\"?: number;\n  \"fk_namespace\"?: number;\n  namespace?: DatNamespace;\n}\n\nexport class DatDigital implements DatDigitalInterface {\n  \"entity_version\": number;\n  \"pk_text\": number;\n  \"quill_doc\": any;\n  \"string\": string;\n  \"fk_system_type\": number;\n  \"pk_entity\": number;\n  \"fk_namespace\": number;\n  namespace?: DatNamespace;\n  constructor(data?: DatDigitalInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatDigital`.\n   */\n  public static getModelName() {\n    return \"DatDigital\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of DatDigital for dynamic purposes.\n  **/\n  public static factory(data: DatDigitalInterface): DatDigital{\n    return new DatDigital(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'DatDigital',\n      plural: 'DatDigitals',\n      path: 'DatDigitals',\n      idName: 'pk_entity',\n      properties: {\n        \"entity_version\": {\n          name: 'entity_version',\n          type: 'number'\n        },\n        \"pk_text\": {\n          name: 'pk_text',\n          type: 'number'\n        },\n        \"quill_doc\": {\n          name: 'quill_doc',\n          type: 'any'\n        },\n        \"string\": {\n          name: 'string',\n          type: 'string'\n        },\n        \"fk_system_type\": {\n          name: 'fk_system_type',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_namespace\": {\n          name: 'fk_namespace',\n          type: 'number'\n        },\n      },\n      relations: {\n        namespace: {\n          name: 'namespace',\n          type: 'DatNamespace',\n          model: 'DatNamespace',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_namespace',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface DatNamespaceInterface {\n  \"pk_entity\"?: number;\n  \"fk_root_namespace\"?: number;\n  \"fk_project\": number;\n  \"standard_label\": string;\n}\n\nexport class DatNamespace implements DatNamespaceInterface {\n  \"pk_entity\": number;\n  \"fk_root_namespace\": number;\n  \"fk_project\": number;\n  \"standard_label\": string;\n  constructor(data?: DatNamespaceInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatNamespace`.\n   */\n  public static getModelName() {\n    return \"DatNamespace\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of DatNamespace for dynamic purposes.\n  **/\n  public static factory(data: DatNamespaceInterface): DatNamespace{\n    return new DatNamespace(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'DatNamespace',\n      plural: 'DatNamespaces',\n      path: 'DatNamespaces',\n      idName: 'pk_entity',\n      properties: {\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_root_namespace\": {\n          name: 'fk_root_namespace',\n          type: 'number'\n        },\n        \"fk_project\": {\n          name: 'fk_project',\n          type: 'number'\n        },\n        \"standard_label\": {\n          name: 'standard_label',\n          type: 'string'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  DatNamespace\n} from '../index';\n\ndeclare var Object: any;\nexport interface DatTextPropertyInterface {\n  \"string\"?: string;\n  \"quill_doc\"?: any;\n  \"fk_system_type\"?: number;\n  \"fk_language\"?: number;\n  \"fk_entity\"?: number;\n  \"pk_entity\"?: number;\n  \"fk_namespace\"?: number;\n  namespace?: DatNamespace;\n}\n\nexport class DatTextProperty implements DatTextPropertyInterface {\n  \"string\": string;\n  \"quill_doc\": any;\n  \"fk_system_type\": number;\n  \"fk_language\": number;\n  \"fk_entity\": number;\n  \"pk_entity\": number;\n  \"fk_namespace\": number;\n  namespace?: DatNamespace;\n  constructor(data?: DatTextPropertyInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatTextProperty`.\n   */\n  public static getModelName() {\n    return \"DatTextProperty\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of DatTextProperty for dynamic purposes.\n  **/\n  public static factory(data: DatTextPropertyInterface): DatTextProperty{\n    return new DatTextProperty(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'DatTextProperty',\n      plural: 'DatTextProperties',\n      path: 'DatTextProperties',\n      idName: 'pk_entity',\n      properties: {\n        \"string\": {\n          name: 'string',\n          type: 'string'\n        },\n        \"quill_doc\": {\n          name: 'quill_doc',\n          type: 'any'\n        },\n        \"fk_system_type\": {\n          name: 'fk_system_type',\n          type: 'number'\n        },\n        \"fk_language\": {\n          name: 'fk_language',\n          type: 'number'\n        },\n        \"fk_entity\": {\n          name: 'fk_entity',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_namespace\": {\n          name: 'fk_namespace',\n          type: 'number'\n        },\n      },\n      relations: {\n        namespace: {\n          name: 'namespace',\n          type: 'DatNamespace',\n          model: 'DatNamespace',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_namespace',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface DfhLabelInterface {\n  \"type\"?: string;\n  \"label\"?: string;\n  \"language\"?: string;\n  \"fk_profile\"?: number;\n  \"fk_project\"?: number;\n  \"fk_property\"?: number;\n  \"fk_class\"?: number;\n}\n\nexport class DfhLabel implements DfhLabelInterface {\n  \"type\": string;\n  \"label\": string;\n  \"language\": string;\n  \"fk_profile\": number;\n  \"fk_project\": number;\n  \"fk_property\": number;\n  \"fk_class\": number;\n  constructor(data?: DfhLabelInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DfhLabel`.\n   */\n  public static getModelName() {\n    return \"DfhLabel\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of DfhLabel for dynamic purposes.\n  **/\n  public static factory(data: DfhLabelInterface): DfhLabel{\n    return new DfhLabel(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'DfhLabel',\n      plural: 'DfhLabels',\n      path: 'DfhLabels',\n      idName: 'type',\n      properties: {\n        \"type\": {\n          name: 'type',\n          type: 'string'\n        },\n        \"label\": {\n          name: 'label',\n          type: 'string'\n        },\n        \"language\": {\n          name: 'language',\n          type: 'string'\n        },\n        \"fk_profile\": {\n          name: 'fk_profile',\n          type: 'number'\n        },\n        \"fk_project\": {\n          name: 'fk_project',\n          type: 'number'\n        },\n        \"fk_property\": {\n          name: 'fk_property',\n          type: 'number'\n        },\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface DfhProfileInterface {\n  \"pk_profile\"?: number;\n  \"owned_by_project\"?: number;\n  \"is_ongoing_forced_publication\"?: boolean;\n  \"date_profile_published\"?: string;\n  \"date_profile_deprecated\"?: string;\n  \"tmsp_last_dfh_update\"?: string;\n}\n\nexport class DfhProfile implements DfhProfileInterface {\n  \"pk_profile\": number;\n  \"owned_by_project\": number;\n  \"is_ongoing_forced_publication\": boolean;\n  \"date_profile_published\": string;\n  \"date_profile_deprecated\": string;\n  \"tmsp_last_dfh_update\": string;\n  constructor(data?: DfhProfileInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DfhProfile`.\n   */\n  public static getModelName() {\n    return \"DfhProfile\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of DfhProfile for dynamic purposes.\n  **/\n  public static factory(data: DfhProfileInterface): DfhProfile{\n    return new DfhProfile(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'DfhProfile',\n      plural: 'DfhProfiles',\n      path: 'DfhProfiles',\n      idName: 'pk_profile',\n      properties: {\n        \"pk_profile\": {\n          name: 'pk_profile',\n          type: 'number'\n        },\n        \"owned_by_project\": {\n          name: 'owned_by_project',\n          type: 'number'\n        },\n        \"is_ongoing_forced_publication\": {\n          name: 'is_ongoing_forced_publication',\n          type: 'boolean'\n        },\n        \"date_profile_published\": {\n          name: 'date_profile_published',\n          type: 'string'\n        },\n        \"date_profile_deprecated\": {\n          name: 'date_profile_deprecated',\n          type: 'string'\n        },\n        \"tmsp_last_dfh_update\": {\n          name: 'tmsp_last_dfh_update',\n          type: 'string'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface EmailInterface {\n  \"to\": string;\n  \"from\": string;\n  \"subject\": string;\n  \"text\"?: string;\n  \"html\"?: string;\n  \"id\"?: number;\n}\n\nexport class Email implements EmailInterface {\n  \"to\": string;\n  \"from\": string;\n  \"subject\": string;\n  \"text\": string;\n  \"html\": string;\n  \"id\": number;\n  constructor(data?: EmailInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Email`.\n   */\n  public static getModelName() {\n    return \"Email\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Email for dynamic purposes.\n  **/\n  public static factory(data: EmailInterface): Email{\n    return new Email(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Email',\n      plural: 'Emails',\n      path: 'Emails',\n      idName: 'id',\n      properties: {\n        \"to\": {\n          name: 'to',\n          type: 'string'\n        },\n        \"from\": {\n          name: 'from',\n          type: 'string'\n        },\n        \"subject\": {\n          name: 'subject',\n          type: 'string'\n        },\n        \"text\": {\n          name: 'text',\n          type: 'string'\n        },\n        \"html\": {\n          name: 'html',\n          type: 'string'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel,\n  InfStatement\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfAppellationInterface {\n  \"quill_doc\": any;\n  \"fk_class\": number;\n  \"string\"?: string;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  incoming_statements?: InfStatement[];\n}\n\nexport class InfAppellation implements InfAppellationInterface {\n  \"quill_doc\": any;\n  \"fk_class\": number;\n  \"string\": string;\n  \"pk_entity\": number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  incoming_statements?: InfStatement[];\n  constructor(data?: InfAppellationInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfAppellation`.\n   */\n  public static getModelName() {\n    return \"InfAppellation\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfAppellation for dynamic purposes.\n  **/\n  public static factory(data: InfAppellationInterface): InfAppellation{\n    return new InfAppellation(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfAppellation',\n      plural: 'InfAppellations',\n      path: 'InfAppellations',\n      idName: 'pk_entity',\n      properties: {\n        \"quill_doc\": {\n          name: 'quill_doc',\n          type: 'any'\n        },\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"string\": {\n          name: 'string',\n          type: 'string'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n        incoming_statements: {\n          name: 'incoming_statements',\n          type: 'InfStatement[]',\n          model: 'InfStatement',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_object_info'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel,\n  InfStatement,\n  InfPersistentItem\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfDimensionInterface {\n  \"fk_class\": number;\n  \"fk_measurement_unit\": number;\n  \"numeric_value\"?: number;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  incoming_statements?: InfStatement[];\n  measurement_unit?: InfPersistentItem;\n}\n\nexport class InfDimension implements InfDimensionInterface {\n  \"fk_class\": number;\n  \"fk_measurement_unit\": number;\n  \"numeric_value\": number;\n  \"pk_entity\": number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  incoming_statements?: InfStatement[];\n  measurement_unit?: InfPersistentItem;\n  constructor(data?: InfDimensionInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfDimension`.\n   */\n  public static getModelName() {\n    return \"InfDimension\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfDimension for dynamic purposes.\n  **/\n  public static factory(data: InfDimensionInterface): InfDimension{\n    return new InfDimension(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfDimension',\n      plural: 'InfDimensions',\n      path: 'InfDimensions',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"fk_measurement_unit\": {\n          name: 'fk_measurement_unit',\n          type: 'number'\n        },\n        \"numeric_value\": {\n          name: 'numeric_value',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n        incoming_statements: {\n          name: 'incoming_statements',\n          type: 'InfStatement[]',\n          model: 'InfStatement',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_object_info'\n        },\n        measurement_unit: {\n          name: 'measurement_unit',\n          type: 'InfPersistentItem',\n          model: 'InfPersistentItem',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_measurement_unit',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel,\n  InfStatement,\n  InfLanguage\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfLangStringInterface {\n  \"fk_class\": number;\n  \"fk_language\": number;\n  \"quill_doc\"?: any;\n  \"string\"?: string;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  incoming_statements?: InfStatement[];\n  language?: InfLanguage;\n}\n\nexport class InfLangString implements InfLangStringInterface {\n  \"fk_class\": number;\n  \"fk_language\": number;\n  \"quill_doc\": any;\n  \"string\": string;\n  \"pk_entity\": number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  incoming_statements?: InfStatement[];\n  language?: InfLanguage;\n  constructor(data?: InfLangStringInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfLangString`.\n   */\n  public static getModelName() {\n    return \"InfLangString\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfLangString for dynamic purposes.\n  **/\n  public static factory(data: InfLangStringInterface): InfLangString{\n    return new InfLangString(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfLangString',\n      plural: 'InfLangStrings',\n      path: 'InfLangStrings',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"fk_language\": {\n          name: 'fk_language',\n          type: 'number'\n        },\n        \"quill_doc\": {\n          name: 'quill_doc',\n          type: 'any'\n        },\n        \"string\": {\n          name: 'string',\n          type: 'string'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n        incoming_statements: {\n          name: 'incoming_statements',\n          type: 'InfStatement[]',\n          model: 'InfStatement',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_object_info'\n        },\n        language: {\n          name: 'language',\n          type: 'InfLanguage',\n          model: 'InfLanguage',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_language',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfLanguageInterface {\n  \"fk_class\"?: number;\n  \"pk_language\"?: string;\n  \"lang_type\"?: string;\n  \"scope\"?: string;\n  \"iso6392b\"?: string;\n  \"iso6392t\"?: string;\n  \"iso6391\"?: string;\n  \"notes\"?: string;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n}\n\nexport class InfLanguage implements InfLanguageInterface {\n  \"fk_class\": number;\n  \"pk_language\": string;\n  \"lang_type\": string;\n  \"scope\": string;\n  \"iso6392b\": string;\n  \"iso6392t\": string;\n  \"iso6391\": string;\n  \"notes\": string;\n  \"pk_entity\": number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  constructor(data?: InfLanguageInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfLanguage`.\n   */\n  public static getModelName() {\n    return \"InfLanguage\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfLanguage for dynamic purposes.\n  **/\n  public static factory(data: InfLanguageInterface): InfLanguage{\n    return new InfLanguage(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfLanguage',\n      plural: 'InfLanguages',\n      path: 'InfLanguages',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"pk_language\": {\n          name: 'pk_language',\n          type: 'string'\n        },\n        \"lang_type\": {\n          name: 'lang_type',\n          type: 'string'\n        },\n        \"scope\": {\n          name: 'scope',\n          type: 'string'\n        },\n        \"iso6392b\": {\n          name: 'iso6392b',\n          type: 'string'\n        },\n        \"iso6392t\": {\n          name: 'iso6392t',\n          type: 'string'\n        },\n        \"iso6391\": {\n          name: 'iso6391',\n          type: 'string'\n        },\n        \"notes\": {\n          name: 'notes',\n          type: 'string'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel,\n  InfStatement,\n  InfTextProperty\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfPersistentItemInterface {\n  \"fk_class\": number;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  incoming_statements?: InfStatement[];\n  outgoing_statements?: InfStatement[];\n  text_properties?: InfTextProperty[];\n}\n\nexport class InfPersistentItem implements InfPersistentItemInterface {\n  \"fk_class\": number;\n  \"pk_entity\": number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  incoming_statements?: InfStatement[];\n  outgoing_statements?: InfStatement[];\n  text_properties?: InfTextProperty[];\n  constructor(data?: InfPersistentItemInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfPersistentItem`.\n   */\n  public static getModelName() {\n    return \"InfPersistentItem\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfPersistentItem for dynamic purposes.\n  **/\n  public static factory(data: InfPersistentItemInterface): InfPersistentItem {\n    return new InfPersistentItem(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfPersistentItem',\n      plural: 'InfPersistentItems',\n      path: 'InfPersistentItems',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n        incoming_statements: {\n          name: 'incoming_statements',\n          type: 'InfStatement[]',\n          model: 'InfStatement',\n          relationType: 'hasMany',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_object_info'\n        },\n        outgoing_statements: {\n          name: 'outgoing_statements',\n          type: 'InfStatement[]',\n          model: 'InfStatement',\n          relationType: 'hasMany',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_subject_info'\n        },\n        dfh_class: {\n          name: 'dfh_class',\n          type: 'DfhClass',\n          model: 'DfhClass',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_class',\n          keyTo: 'pk_class'\n        },\n        text_properties: {\n          name: 'text_properties',\n          type: 'InfTextProperty[]',\n          model: 'InfTextProperty',\n          relationType: 'hasMany',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_concerned_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfPlaceInterface {\n  \"long\": number;\n  \"lat\": number;\n  \"fk_class\": number;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n}\n\nexport class InfPlace implements InfPlaceInterface {\n  \"long\": number;\n  \"lat\": number;\n  \"fk_class\": number;\n  \"pk_entity\": number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  constructor(data?: InfPlaceInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfPlace`.\n   */\n  public static getModelName() {\n    return \"InfPlace\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfPlace for dynamic purposes.\n  **/\n  public static factory(data: InfPlaceInterface): InfPlace{\n    return new InfPlace(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfPlace',\n      plural: 'InfPlaces',\n      path: 'InfPlaces',\n      idName: 'pk_entity',\n      properties: {\n        \"long\": {\n          name: 'long',\n          type: 'number'\n        },\n        \"lat\": {\n          name: 'lat',\n          type: 'number'\n        },\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel,\n  InfTemporalEntity,\n  DatDigital,\n  DatChunk,\n  InfAppellation,\n  InfLangString,\n  InfDimension,\n  InfLanguage,\n  InfPersistentItem,\n  InfTimePrimitive,\n  InfPlace\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfStatementInterface {\n  \"fk_subject_info\"?: number;\n  \"fk_subject_data\"?: number;\n  \"fk_subject_tables_cell\"?: number;\n  \"fk_subject_tables_row\"?: number;\n  \"fk_property\"?: number;\n  \"fk_property_of_property\"?: number;\n  \"fk_object_info\"?: number;\n  \"fk_object_data\"?: number;\n  \"fk_object_tables_cell\"?: number;\n  \"fk_object_tables_row\"?: number;\n  \"is_in_project_count\"?: number;\n  \"is_standard_in_project_count\"?: number;\n  \"community_favorite_calendar\"?: string;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  subject_temporal_entity?: InfTemporalEntity;\n  subject_digital?: DatDigital;\n  subject_chunk?: DatChunk;\n  subject_statement?: InfStatement;\n  object_temporal_entity?: InfTemporalEntity;\n  object_appellation?: InfAppellation;\n  object_lang_string?: InfLangString;\n  object_chunk?: DatChunk;\n  object_dimension?: InfDimension;\n  object_language?: InfLanguage;\n  subject_persistent_item?: InfPersistentItem;\n  object_persistent_item?: InfPersistentItem;\n  object_time_primitive?: InfTimePrimitive;\n  object_place?: InfPlace;\n}\n\nexport class InfStatement implements InfStatementInterface {\n  \"fk_subject_info\"?: number;\n  \"fk_subject_data\"?: number;\n  \"fk_subject_tables_cell\"?: number;\n  \"fk_subject_tables_row\"?: number;\n  \"fk_property\"?: number;\n  \"fk_property_of_property\"?: number;\n  \"fk_object_info\"?: number;\n  \"fk_object_data\"?: number;\n  \"fk_object_tables_cell\"?: number;\n  \"fk_object_tables_row\"?: number;\n  \"is_in_project_count\"?: number;\n  \"is_standard_in_project_count\"?: number;\n  \"community_favorite_calendar\"?: string;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  subject_temporal_entity?: InfTemporalEntity;\n  subject_digital?: DatDigital;\n  subject_chunk?: DatChunk;\n  subject_statement?: InfStatement;\n  object_temporal_entity?: InfTemporalEntity;\n  object_appellation?: InfAppellation;\n  object_lang_string?: InfLangString;\n  object_chunk?: DatChunk;\n  object_dimension?: InfDimension;\n  object_language?: InfLanguage;\n  subject_persistent_item?: InfPersistentItem;\n  object_persistent_item?: InfPersistentItem;\n  object_time_primitive?: InfTimePrimitive;\n  object_place?: InfPlace;\n  constructor(data?: InfStatementInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfStatement`.\n   */\n  public static getModelName() {\n    return \"InfStatement\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfStatement for dynamic purposes.\n  **/\n  public static factory(data: InfStatementInterface): InfStatement {\n    return new InfStatement(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfStatement',\n      plural: 'InfStatements',\n      path: 'InfStatements',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_subject_info\": {\n          name: 'fk_subject_info',\n          type: 'number',\n          default: 0\n        },\n        \"fk_subject_data\": {\n          name: 'fk_subject_data',\n          type: 'number',\n          default: 0\n        },\n        \"fk_subject_tables_cell\": {\n          name: 'fk_subject_tables_cell',\n          type: 'number',\n          default: 0\n        },\n        \"fk_subject_tables_row\": {\n          name: 'fk_subject_tables_row',\n          type: 'number',\n          default: 0\n        },\n        \"fk_property\": {\n          name: 'fk_property',\n          type: 'number',\n          default: 0\n        },\n        \"fk_property_of_property\": {\n          name: 'fk_property_of_property',\n          type: 'number',\n          default: 0\n        },\n        \"fk_object_info\": {\n          name: 'fk_object_info',\n          type: 'number',\n          default: 0\n        },\n        \"fk_object_data\": {\n          name: 'fk_object_data',\n          type: 'number',\n          default: 0\n        },\n        \"fk_object_tables_cell\": {\n          name: 'fk_object_tables_cell',\n          type: 'number',\n          default: 0\n        },\n        \"fk_object_tables_row\": {\n          name: 'fk_object_tables_row',\n          type: 'number',\n          default: 0\n        },\n        \"is_in_project_count\": {\n          name: 'is_in_project_count',\n          type: 'number'\n        },\n        \"is_standard_in_project_count\": {\n          name: 'is_standard_in_project_count',\n          type: 'number'\n        },\n        \"community_favorite_calendar\": {\n          name: 'community_favorite_calendar',\n          type: 'string'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n        subject_temporal_entity: {\n          name: 'subject_temporal_entity',\n          type: 'InfTemporalEntity',\n          model: 'InfTemporalEntity',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_subject_info',\n          keyTo: 'pk_entity'\n        },\n        subject_digital: {\n          name: 'subject_digital',\n          type: 'DatDigital',\n          model: 'DatDigital',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_subject_data',\n          keyTo: 'pk_entity'\n        },\n        subject_chunk: {\n          name: 'subject_chunk',\n          type: 'DatChunk',\n          model: 'DatChunk',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_subject_data',\n          keyTo: 'pk_entity'\n        },\n        subject_statement: {\n          name: 'subject_statement',\n          type: 'InfStatement',\n          model: 'InfStatement',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_subject_info',\n          keyTo: 'pk_entity'\n        },\n        object_temporal_entity: {\n          name: 'object_temporal_entity',\n          type: 'InfTemporalEntity',\n          model: 'InfTemporalEntity',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_object_info',\n          keyTo: 'pk_entity'\n        },\n        object_appellation: {\n          name: 'object_appellation',\n          type: 'InfAppellation',\n          model: 'InfAppellation',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_object_info',\n          keyTo: 'pk_entity'\n        },\n        object_lang_string: {\n          name: 'object_lang_string',\n          type: 'InfLangString',\n          model: 'InfLangString',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_object_info',\n          keyTo: 'pk_entity'\n        },\n        object_chunk: {\n          name: 'object_chunk',\n          type: 'DatChunk',\n          model: 'DatChunk',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_object_data',\n          keyTo: 'pk_entity'\n        },\n        object_dimension: {\n          name: 'object_dimension',\n          type: 'InfDimension',\n          model: 'InfDimension',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_object_info',\n          keyTo: 'pk_entity'\n        },\n        object_language: {\n          name: 'object_language',\n          type: 'InfLanguage',\n          model: 'InfLanguage',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_object_info',\n          keyTo: 'pk_entity'\n        },\n        subject_persistent_item: {\n          name: 'subject_persistent_item',\n          type: 'InfPersistentItem',\n          model: 'InfPersistentItem',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_subject_info',\n          keyTo: 'pk_entity'\n        },\n        object_persistent_item: {\n          name: 'object_persistent_item',\n          type: 'InfPersistentItem',\n          model: 'InfPersistentItem',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_object_info',\n          keyTo: 'pk_entity'\n        },\n        object_time_primitive: {\n          name: 'object_time_primitive',\n          type: 'InfTimePrimitive',\n          model: 'InfTimePrimitive',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_object_info',\n          keyTo: 'pk_entity'\n        },\n        object_place: {\n          name: 'object_place',\n          type: 'InfPlace',\n          model: 'InfPlace',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_object_info',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel,\n  InfStatement,\n  InfTextProperty\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfTemporalEntityInterface {\n  \"fk_class\": number;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  outgoing_statements?: InfStatement[];\n  incoming_statements?: InfStatement[];\n  text_properties?: InfTextProperty[];\n}\n\nexport class InfTemporalEntity implements InfTemporalEntityInterface {\n  \"fk_class\": number;\n  \"pk_entity\": number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  outgoing_statements?: InfStatement[];\n  incoming_statements?: InfStatement[];\n  text_properties?: InfTextProperty[];\n  constructor(data?: InfTemporalEntityInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfTemporalEntity`.\n   */\n  public static getModelName() {\n    return \"InfTemporalEntity\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfTemporalEntity for dynamic purposes.\n  **/\n  public static factory(data: InfTemporalEntityInterface): InfTemporalEntity{\n    return new InfTemporalEntity(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfTemporalEntity',\n      plural: 'InfTemporalEntities',\n      path: 'InfTemporalEntities',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n        outgoing_statements: {\n          name: 'outgoing_statements',\n          type: 'InfStatement[]',\n          model: 'InfStatement',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_subject_info'\n        },\n        incoming_statements: {\n          name: 'incoming_statements',\n          type: 'InfStatement[]',\n          model: 'InfStatement',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_object_info'\n        },\n        text_properties: {\n          name: 'text_properties',\n          type: 'InfTextProperty[]',\n          model: 'InfTextProperty',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_concerned_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel,\n  InfPersistentItem,\n  InfTemporalEntity,\n  InfLanguage,\n  SysClassField\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfTextPropertyInterface {\n  \"fk_class_field\": number;\n  \"fk_concerned_entity\": number;\n  \"fk_language\": number;\n  \"quill_doc\": any;\n  \"string\"?: string;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  persistent_item?: InfPersistentItem;\n  temporal_entity?: InfTemporalEntity;\n  language?: InfLanguage;\n  class_field?: SysClassField;\n}\n\nexport class InfTextProperty implements InfTextPropertyInterface {\n  \"fk_class_field\": number;\n  \"fk_concerned_entity\": number;\n  \"fk_language\": number;\n  \"quill_doc\": any;\n  \"string\": string;\n  \"pk_entity\": number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  persistent_item?: InfPersistentItem;\n  temporal_entity?: InfTemporalEntity;\n  language?: InfLanguage;\n  class_field?: SysClassField;\n  constructor(data?: InfTextPropertyInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfTextProperty`.\n   */\n  public static getModelName() {\n    return \"InfTextProperty\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfTextProperty for dynamic purposes.\n  **/\n  public static factory(data: InfTextPropertyInterface): InfTextProperty{\n    return new InfTextProperty(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfTextProperty',\n      plural: 'InfTextProperties',\n      path: 'InfTextProperties',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_class_field\": {\n          name: 'fk_class_field',\n          type: 'number'\n        },\n        \"fk_concerned_entity\": {\n          name: 'fk_concerned_entity',\n          type: 'number'\n        },\n        \"fk_language\": {\n          name: 'fk_language',\n          type: 'number'\n        },\n        \"quill_doc\": {\n          name: 'quill_doc',\n          type: 'any'\n        },\n        \"string\": {\n          name: 'string',\n          type: 'string'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n        persistent_item: {\n          name: 'persistent_item',\n          type: 'InfPersistentItem',\n          model: 'InfPersistentItem',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_concerned_entity',\n          keyTo: 'pk_entity'\n        },\n        temporal_entity: {\n          name: 'temporal_entity',\n          type: 'InfTemporalEntity',\n          model: 'InfTemporalEntity',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_concerned_entity',\n          keyTo: 'pk_entity'\n        },\n        language: {\n          name: 'language',\n          type: 'InfLanguage',\n          model: 'InfLanguage',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_language',\n          keyTo: 'pk_entity'\n        },\n        class_field: {\n          name: 'class_field',\n          type: 'SysClassField',\n          model: 'SysClassField',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_class_field',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProInfoProjRel\n} from '../index';\n\ndeclare var Object: any;\nexport interface InfTimePrimitiveInterface {\n  \"fk_class\": number;\n  \"julian_day\": number;\n  \"duration\": string;\n  \"pk_entity\"?: number;\n  entity_version_project_rels?: ProInfoProjRel[];\n}\n\nexport class InfTimePrimitive implements InfTimePrimitiveInterface {\n  \"fk_class\": number;\n  \"julian_day\": number;\n  \"duration\": string;\n  \"pk_entity\": number;\n  entity_version_project_rels?: ProInfoProjRel[];\n  constructor(data?: InfTimePrimitiveInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfTimePrimitive`.\n   */\n  public static getModelName() {\n    return \"InfTimePrimitive\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of InfTimePrimitive for dynamic purposes.\n  **/\n  public static factory(data: InfTimePrimitiveInterface): InfTimePrimitive{\n    return new InfTimePrimitive(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'InfTimePrimitive',\n      plural: 'InfTimePrimitives',\n      path: 'InfTimePrimitives',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"julian_day\": {\n          name: 'julian_day',\n          type: 'number'\n        },\n        \"duration\": {\n          name: 'duration',\n          type: 'string'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  // DfhProperty,\n  SysClassField,\n  ProProject\n} from '../index';\n\ndeclare var Object: any;\nexport interface ProClassFieldConfigInterface {\n  \"pk_entity\"?: number;\n  \"fk_project\"?: number;\n  \"fk_property\"?: number;\n  \"fk_class_field\"?: number;\n  \"fk_domain_class\"?: number;\n  \"fk_range_class\"?: number;\n  \"ord_num\"?: number;\n  \"fk_class_for_class_field\"?: number;\n  // property?: DfhProperty;\n  class_field?: SysClassField;\n  project?: ProProject;\n}\n\nexport class ProClassFieldConfig implements ProClassFieldConfigInterface {\n  \"pk_entity\": number;\n  \"fk_project\": number;\n  \"fk_property\": number;\n  \"fk_class_field\": number;\n  \"fk_domain_class\": number;\n  \"fk_range_class\": number;\n  \"ord_num\": number;\n  \"fk_class_for_class_field\": number;\n  // property?: DfhProperty;\n  class_field?: SysClassField;\n  project?: ProProject;\n  constructor(data?: ProClassFieldConfigInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProClassFieldConfig`.\n   */\n  public static getModelName() {\n    return \"ProClassFieldConfig\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of ProClassFieldConfig for dynamic purposes.\n  **/\n  public static factory(data: ProClassFieldConfigInterface): ProClassFieldConfig {\n    return new ProClassFieldConfig(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'ProClassFieldConfig',\n      plural: 'ProClassFieldConfigs',\n      path: 'ProClassFieldConfigs',\n      idName: 'pk_entity',\n      properties: {\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_project\": {\n          name: 'fk_project',\n          type: 'number'\n        },\n        \"fk_property\": {\n          name: 'fk_property',\n          type: 'number'\n        },\n        \"fk_class_field\": {\n          name: 'fk_class_field',\n          type: 'number'\n        },\n        \"fk_domain_class\": {\n          name: 'fk_domain_class',\n          type: 'number'\n        },\n        \"fk_range_class\": {\n          name: 'fk_range_class',\n          type: 'number'\n        },\n        \"ord_num\": {\n          name: 'ord_num',\n          type: 'number'\n        },\n        \"fk_class_for_class_field\": {\n          name: 'fk_class_for_class_field',\n          type: 'number'\n        },\n      },\n      relations: {\n        property: {\n          name: 'property',\n          type: 'DfhProperty',\n          model: 'DfhProperty',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_property',\n          keyTo: 'pk_property'\n        },\n        class_field: {\n          name: 'class_field',\n          type: 'SysClassField',\n          model: 'SysClassField',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_class_field',\n          keyTo: 'pk_entity'\n        },\n        project: {\n          name: 'project',\n          type: 'ProProject',\n          model: 'ProProject',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_project',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface ProDfhClassProjRelInterface {\n  \"pk_entity\"?: number;\n  \"fk_class\": number;\n  \"fk_project\": number;\n  \"enabled_in_entities\"?: boolean;\n}\n\nexport class ProDfhClassProjRel implements ProDfhClassProjRelInterface {\n  \"pk_entity\": number;\n  \"fk_class\": number;\n  \"fk_project\": number;\n  \"enabled_in_entities\": boolean;\n  constructor(data?: ProDfhClassProjRelInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProDfhClassProjRel`.\n   */\n  public static getModelName() {\n    return \"ProDfhClassProjRel\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of ProDfhClassProjRel for dynamic purposes.\n  **/\n  public static factory(data: ProDfhClassProjRelInterface): ProDfhClassProjRel{\n    return new ProDfhClassProjRel(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'ProDfhClassProjRel',\n      plural: 'ProDfhClassProjRels',\n      path: 'ProDfhClassProjRels',\n      idName: 'pk_entity',\n      properties: {\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"fk_project\": {\n          name: 'fk_project',\n          type: 'number'\n        },\n        \"enabled_in_entities\": {\n          name: 'enabled_in_entities',\n          type: 'boolean'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface ProDfhProfileProjRelInterface {\n  \"pk_entity\"?: number;\n  \"fk_profile\": number;\n  \"fk_project\": number;\n  \"enabled\"?: boolean;\n}\n\nexport class ProDfhProfileProjRel implements ProDfhProfileProjRelInterface {\n  \"pk_entity\": number;\n  \"fk_profile\": number;\n  \"fk_project\": number;\n  \"enabled\": boolean;\n  constructor(data?: ProDfhProfileProjRelInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProDfhProfileProjRel`.\n   */\n  public static getModelName() {\n    return \"ProDfhProfileProjRel\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of ProDfhProfileProjRel for dynamic purposes.\n  **/\n  public static factory(data: ProDfhProfileProjRelInterface): ProDfhProfileProjRel{\n    return new ProDfhProfileProjRel(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'ProDfhProfileProjRel',\n      plural: 'ProDfhProfileProjRels',\n      path: 'ProDfhProfileProjRels',\n      idName: 'pk_entity',\n      properties: {\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_profile\": {\n          name: 'fk_profile',\n          type: 'number'\n        },\n        \"fk_project\": {\n          name: 'fk_project',\n          type: 'number'\n        },\n        \"enabled\": {\n          name: 'enabled',\n          type: 'boolean'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface ProInfoProjRelInterface {\n  \"fk_project\": number;\n  \"fk_entity\"?: number;\n  \"fk_entity_version\"?: string;\n  \"fk_entity_version_concat\"?: string;\n  \"is_in_project\"?: boolean;\n  \"is_standard_in_project\"?: boolean;\n  \"calendar\"?: string;\n  \"ord_num_of_domain\"?: number;\n  \"ord_num_of_range\"?: number;\n  \"ord_num_of_text_property\"?: number;\n  \"tmsp_last_modification\"?: string;\n  \"fk_creator\"?: number;\n  \"fk_last_modifier\": number;\n  \"pk_entity\"?: number;\n  \"entity_version\"?: number;\n  \"tmsp_creation\"?: string;\n}\n\nexport class ProInfoProjRel implements ProInfoProjRelInterface {\n  \"fk_project\": number;\n  \"fk_entity\"?: number;\n  \"fk_entity_version\"?: string;\n  \"fk_entity_version_concat\"?: string;\n  \"is_in_project\"?: boolean;\n  \"is_standard_in_project\"?: boolean;\n  \"calendar\"?: string;\n  \"ord_num_of_domain\"?: number;\n  \"ord_num_of_range\"?: number;\n  \"ord_num_of_text_property\"?: number;\n  \"tmsp_last_modification\"?: string;\n  \"fk_creator\"?: number;\n  \"fk_last_modifier\": number;\n  \"pk_entity\"?: number;\n  \"entity_version\"?: number;\n  \"tmsp_creation\"?: string;\n  constructor(data?: ProInfoProjRelInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProInfoProjRel`.\n   */\n  public static getModelName() {\n    return \"ProInfoProjRel\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of ProInfoProjRel for dynamic purposes.\n  **/\n  public static factory(data: ProInfoProjRelInterface): ProInfoProjRel {\n    return new ProInfoProjRel(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'ProInfoProjRel',\n      plural: 'ProInfoProjRels',\n      path: 'ProInfoProjRels',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_project\": {\n          name: 'fk_project',\n          type: 'number'\n        },\n        \"fk_entity\": {\n          name: 'fk_entity',\n          type: 'number'\n        },\n        \"fk_entity_version\": {\n          name: 'fk_entity_version',\n          type: 'string'\n        },\n        \"fk_entity_version_concat\": {\n          name: 'fk_entity_version_concat',\n          type: 'string'\n        },\n        \"is_in_project\": {\n          name: 'is_in_project',\n          type: 'boolean'\n        },\n        \"is_standard_in_project\": {\n          name: 'is_standard_in_project',\n          type: 'boolean'\n        },\n        \"calendar\": {\n          name: 'calendar',\n          type: 'string'\n        },\n        \"ord_num_of_domain\": {\n          name: 'ord_num_of_domain',\n          type: 'number'\n        },\n        \"ord_num_of_range\": {\n          name: 'ord_num_of_range',\n          type: 'number'\n        },\n        \"ord_num_of_text_property\": {\n          name: 'ord_num_of_text_property',\n          type: 'number'\n        },\n        \"tmsp_last_modification\": {\n          name: 'tmsp_last_modification',\n          type: 'string'\n        },\n        \"fk_creator\": {\n          name: 'fk_creator',\n          type: 'number'\n        },\n        \"fk_last_modifier\": {\n          name: 'fk_last_modifier',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"entity_version\": {\n          name: 'entity_version',\n          type: 'number'\n        },\n        \"tmsp_creation\": {\n          name: 'tmsp_creation',\n          type: 'string'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  PubAccount,\n  ProTextProperty,\n  ProInfoProjRel,\n  InfLanguage,\n  InfPersistentItem,\n  DatNamespace\n} from '../index';\n\ndeclare var Object: any;\nexport interface ProProjectInterface {\n  \"pk_entity\"?: number;\n  \"fk_language\"?: number;\n  accounts?: PubAccount[];\n  text_properties?: ProTextProperty[];\n  entity_version_project_rels?: ProInfoProjRel[];\n  default_language?: InfLanguage;\n  persistent_items?: InfPersistentItem[];\n  namespaces?: DatNamespace[];\n}\n\nexport class ProProject implements ProProjectInterface {\n  \"pk_entity\": number;\n  \"fk_language\": number;\n  accounts?: PubAccount[];\n  text_properties?: ProTextProperty[];\n  entity_version_project_rels?: ProInfoProjRel[];\n  default_language?: InfLanguage;\n  persistent_items?: InfPersistentItem[];\n  namespaces?: DatNamespace[];\n  constructor(data?: ProProjectInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProProject`.\n   */\n  public static getModelName() {\n    return \"ProProject\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of ProProject for dynamic purposes.\n  **/\n  public static factory(data: ProProjectInterface): ProProject{\n    return new ProProject(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'ProProject',\n      plural: 'ProProjects',\n      path: 'ProProjects',\n      idName: 'pk_entity',\n      properties: {\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_language\": {\n          name: 'fk_language',\n          type: 'number'\n        },\n      },\n      relations: {\n        accounts: {\n          name: 'accounts',\n          type: 'PubAccount[]',\n          model: 'PubAccount',\n          relationType: 'hasMany',\n          modelThrough: 'PubAccountProjectRel',\n          keyThrough: 'account_id',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_project'\n        },\n        text_properties: {\n          name: 'text_properties',\n          type: 'ProTextProperty[]',\n          model: 'ProTextProperty',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_project'\n        },\n        entity_version_project_rels: {\n          name: 'entity_version_project_rels',\n          type: 'ProInfoProjRel[]',\n          model: 'ProInfoProjRel',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_project'\n        },\n        default_language: {\n          name: 'default_language',\n          type: 'InfLanguage',\n          model: 'InfLanguage',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_language',\n          keyTo: 'pk_entity'\n        },\n        persistent_items: {\n          name: 'persistent_items',\n          type: 'InfPersistentItem[]',\n          model: 'InfPersistentItem',\n          relationType: 'hasMany',\n          modelThrough: 'ProInfoProjRel',\n          keyThrough: 'fk_entity',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_project'\n        },\n        namespaces: {\n          name: 'namespaces',\n          type: 'DatNamespace[]',\n          model: 'DatNamespace',\n          relationType: 'hasMany',\n                  keyFrom: 'pk_entity',\n          keyTo: 'fk_project'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  ProProject,\n  InfLanguage,\n  SysSystemType\n} from '../index';\n\ndeclare var Object: any;\nexport interface ProTextPropertyInterface {\n  \"string\": string;\n  \"fk_system_type\": number;\n  \"fk_language\": number;\n  \"fk_project\": number;\n  \"fk_dfh_class\"?: number;\n  \"fk_dfh_property\"?: number;\n  \"fk_dfh_property_domain\"?: number;\n  \"fk_dfh_property_range\"?: number;\n  \"fk_pro_project\"?: number;\n  \"pk_entity\"?: number;\n  \"entity_version\"?: number;\n  \"tmsp_creation\"?: string;\n  \"tmsp_last_modification\"?: string;\n  project?: ProProject;\n  language?: InfLanguage;\n  systemType?: SysSystemType;\n}\n\nexport class ProTextProperty implements ProTextPropertyInterface {\n  \"string\": string;\n  \"fk_system_type\": number;\n  \"fk_language\": number;\n  \"fk_project\": number;\n  \"fk_dfh_class\": number;\n  \"fk_dfh_property\": number;\n  \"fk_dfh_property_domain\": number;\n  \"fk_dfh_property_range\": number;\n  \"fk_pro_project\": number;\n  \"pk_entity\": number;\n  \"entity_version\": number;\n  \"tmsp_creation\": string;\n  \"tmsp_last_modification\": string;\n  project?: ProProject;\n  language?: InfLanguage;\n  systemType?: SysSystemType;\n  constructor(data?: ProTextPropertyInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProTextProperty`.\n   */\n  public static getModelName() {\n    return \"ProTextProperty\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of ProTextProperty for dynamic purposes.\n  **/\n  public static factory(data: ProTextPropertyInterface): ProTextProperty{\n    return new ProTextProperty(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'ProTextProperty',\n      plural: 'ProTextProperties',\n      path: 'ProTextProperties',\n      idName: 'pk_entity',\n      properties: {\n        \"string\": {\n          name: 'string',\n          type: 'string'\n        },\n        \"fk_system_type\": {\n          name: 'fk_system_type',\n          type: 'number'\n        },\n        \"fk_language\": {\n          name: 'fk_language',\n          type: 'number'\n        },\n        \"fk_project\": {\n          name: 'fk_project',\n          type: 'number'\n        },\n        \"fk_dfh_class\": {\n          name: 'fk_dfh_class',\n          type: 'number'\n        },\n        \"fk_dfh_property\": {\n          name: 'fk_dfh_property',\n          type: 'number'\n        },\n        \"fk_dfh_property_domain\": {\n          name: 'fk_dfh_property_domain',\n          type: 'number'\n        },\n        \"fk_dfh_property_range\": {\n          name: 'fk_dfh_property_range',\n          type: 'number'\n        },\n        \"fk_pro_project\": {\n          name: 'fk_pro_project',\n          type: 'number'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"entity_version\": {\n          name: 'entity_version',\n          type: 'number'\n        },\n        \"tmsp_creation\": {\n          name: 'tmsp_creation',\n          type: 'string'\n        },\n        \"tmsp_last_modification\": {\n          name: 'tmsp_last_modification',\n          type: 'string'\n        },\n      },\n      relations: {\n        project: {\n          name: 'project',\n          type: 'ProProject',\n          model: 'ProProject',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_project',\n          keyTo: 'pk_entity'\n        },\n        language: {\n          name: 'language',\n          type: 'InfLanguage',\n          model: 'InfLanguage',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_language',\n          keyTo: 'pk_entity'\n        },\n        systemType: {\n          name: 'systemType',\n          type: 'SysSystemType',\n          model: 'SysSystemType',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_system_type',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface PubAccountInterface {\n  \"id\"?: number;\n  \"realm\"?: string;\n  \"username\"?: string;\n  \"email\": string;\n  \"emailVerified\"?: boolean;\n  accessTokens?: any[];\n  projects?: any[];\n}\n\nexport class PubAccount implements PubAccountInterface {\n  \"id\": number;\n  \"realm\": string;\n  \"username\": string;\n  \"email\": string;\n  \"emailVerified\": boolean;\n  accessTokens?: any[];\n  projects?: any[];\n  constructor(data?: PubAccountInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `PubAccount`.\n   */\n  public static getModelName() {\n    return \"PubAccount\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of PubAccount for dynamic purposes.\n  **/\n  public static factory(data: PubAccountInterface): PubAccount{\n    return new PubAccount(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'PubAccount',\n      plural: 'PubAccounts',\n      path: 'PubAccounts',\n      idName: 'id',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n        \"realm\": {\n          name: 'realm',\n          type: 'string'\n        },\n        \"username\": {\n          name: 'username',\n          type: 'string'\n        },\n        \"email\": {\n          name: 'email',\n          type: 'string'\n        },\n        \"emailVerified\": {\n          name: 'emailVerified',\n          type: 'boolean'\n        },\n      },\n      relations: {\n        accessTokens: {\n          name: 'accessTokens',\n          type: 'any[]',\n          model: '',\n          relationType: 'hasMany',\n                  keyFrom: 'id',\n          keyTo: 'userId'\n        },\n        projects: {\n          name: 'projects',\n          type: 'any[]',\n          model: '',\n          relationType: 'hasMany',\n          modelThrough: 'PubAccountProjectRel',\n          keyThrough: 'fk_project',\n          keyFrom: 'id',\n          keyTo: 'account_id'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  PubAccount,\n  ProProject\n} from '../index';\n\ndeclare var Object: any;\nexport interface PubAccountProjectRelInterface {\n  \"role\": string;\n  \"fk_project\": number;\n  \"account_id\"?: number;\n  \"id\"?: number;\n  account?: PubAccount;\n  project?: ProProject;\n}\n\nexport class PubAccountProjectRel implements PubAccountProjectRelInterface {\n  \"role\": string;\n  \"fk_project\": number;\n  \"account_id\": number;\n  \"id\": number;\n  account?: PubAccount;\n  project?: ProProject;\n  constructor(data?: PubAccountProjectRelInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `PubAccountProjectRel`.\n   */\n  public static getModelName() {\n    return \"PubAccountProjectRel\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of PubAccountProjectRel for dynamic purposes.\n  **/\n  public static factory(data: PubAccountProjectRelInterface): PubAccountProjectRel{\n    return new PubAccountProjectRel(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'PubAccountProjectRel',\n      plural: 'PubAccountProjectRels',\n      path: 'PubAccountProjectRels',\n      idName: 'id',\n      properties: {\n        \"role\": {\n          name: 'role',\n          type: 'string',\n          default: 'admin'\n        },\n        \"fk_project\": {\n          name: 'fk_project',\n          type: 'number'\n        },\n        \"account_id\": {\n          name: 'account_id',\n          type: 'number'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n      },\n      relations: {\n        account: {\n          name: 'account',\n          type: 'PubAccount',\n          model: 'PubAccount',\n          relationType: 'belongsTo',\n                  keyFrom: 'account_id',\n          keyTo: 'id'\n        },\n        project: {\n          name: 'project',\n          type: 'ProProject',\n          model: 'ProProject',\n          relationType: 'belongsTo',\n                  keyFrom: 'fk_project',\n          keyTo: 'pk_entity'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface SchemaObjectInterface {\n  \"inf\"?: any;\n  \"pro\"?: any;\n  \"dat\"?: any;\n  \"sys\"?: any;\n  \"dfh\"?: any;\n}\n\nexport class SchemaObject implements SchemaObjectInterface {\n  \"inf\": any;\n  \"pro\": any;\n  \"dat\": any;\n  \"sys\": any;\n  \"dfh\": any;\n  constructor(data?: SchemaObjectInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SchemaObject`.\n   */\n  public static getModelName() {\n    return \"SchemaObject\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SchemaObject for dynamic purposes.\n  **/\n  public static factory(data: SchemaObjectInterface): SchemaObject{\n    return new SchemaObject(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SchemaObject',\n      plural: 'SchemaObjects',\n      path: 'SchemaObjects',\n      idName: 'inf',\n      properties: {\n        \"inf\": {\n          name: 'inf',\n          type: 'any'\n        },\n        \"pro\": {\n          name: 'pro',\n          type: 'any'\n        },\n        \"dat\": {\n          name: 'dat',\n          type: 'any'\n        },\n        \"sys\": {\n          name: 'sys',\n          type: 'any'\n        },\n        \"dfh\": {\n          name: 'dfh',\n          type: 'any'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface SysAppContextInterface {\n  \"pk_entity\"?: number;\n  \"description\"?: string;\n  \"label\"?: string;\n}\n\nexport class SysAppContext implements SysAppContextInterface {\n  \"pk_entity\": number;\n  \"description\": string;\n  \"label\": string;\n  constructor(data?: SysAppContextInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysAppContext`.\n   */\n  public static getModelName() {\n    return \"SysAppContext\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SysAppContext for dynamic purposes.\n  **/\n  public static factory(data: SysAppContextInterface): SysAppContext{\n    return new SysAppContext(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SysAppContext',\n      plural: 'SysAppContexts',\n      path: 'SysAppContexts',\n      idName: 'pk_entity',\n      properties: {\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"description\": {\n          name: 'description',\n          type: 'string'\n        },\n        \"label\": {\n          name: 'label',\n          type: 'string'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  SysClassFieldPropertyRel,\n  ProClassFieldConfig,\n} from '../index';\n\ndeclare var Object: any;\nexport interface SysClassFieldInterface {\n  \"pk_entity\"?: number;\n  \"description\"?: string;\n  \"label\"?: string;\n  \"fk_system_type_ng_component\"?: number;\n  \"used_table\"?: string;\n  class_field_property_rel?: SysClassFieldPropertyRel[];\n  class_field_configs?: ProClassFieldConfig[];\n}\n\nexport class SysClassField implements SysClassFieldInterface {\n  \"pk_entity\": number;\n  \"description\": string;\n  \"label\": string;\n  \"fk_system_type_ng_component\": number;\n  \"used_table\": string;\n  class_field_property_rel?: SysClassFieldPropertyRel[];\n  class_field_configs?: ProClassFieldConfig[];\n  constructor(data?: SysClassFieldInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysClassField`.\n   */\n  public static getModelName() {\n    return \"SysClassField\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SysClassField for dynamic purposes.\n  **/\n  public static factory(data: SysClassFieldInterface): SysClassField {\n    return new SysClassField(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SysClassField',\n      plural: 'SysClassFields',\n      path: 'SysClassFields',\n      idName: 'pk_entity',\n      properties: {\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"description\": {\n          name: 'description',\n          type: 'string'\n        },\n        \"label\": {\n          name: 'label',\n          type: 'string'\n        },\n        \"fk_system_type_ng_component\": {\n          name: 'fk_system_type_ng_component',\n          type: 'number'\n        },\n        \"used_table\": {\n          name: 'used_table',\n          type: 'string'\n        },\n      },\n      relations: {\n        class_field_property_rel: {\n          name: 'class_field_property_rel',\n          type: 'SysClassFieldPropertyRel[]',\n          model: 'SysClassFieldPropertyRel',\n          relationType: 'hasMany',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_class_field'\n        },\n        class_field_configs: {\n          name: 'class_field_configs',\n          type: 'ProClassFieldConfig[]',\n          model: 'ProClassFieldConfig',\n          relationType: 'hasMany',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_class_field'\n        },\n        classes: {\n          name: 'classes',\n          type: 'DfhClass[]',\n          model: 'DfhClass',\n          relationType: 'hasMany',\n          modelThrough: 'ProClassFieldConfig',\n          keyThrough: 'fk_class_for_class_field',\n          keyFrom: 'pk_entity',\n          keyTo: 'fk_class_field'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  SysClassField,\n  // DfhProperty\n} from '../index';\n\ndeclare var Object: any;\nexport interface SysClassFieldPropertyRelInterface {\n  \"pk_entity\"?: number;\n  \"fk_class_field\"?: number;\n  \"fk_property\"?: number;\n  \"property_is_outgoing\"?: boolean;\n  \"ord_num\"?: number;\n  class_field?: SysClassField;\n  // property?: DfhProperty;\n}\n\nexport class SysClassFieldPropertyRel implements SysClassFieldPropertyRelInterface {\n  \"pk_entity\": number;\n  \"fk_class_field\": number;\n  \"fk_property\": number;\n  \"property_is_outgoing\": boolean;\n  \"ord_num\": number;\n  class_field?: SysClassField;\n  // property?: DfhProperty;\n  constructor(data?: SysClassFieldPropertyRelInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysClassFieldPropertyRel`.\n   */\n  public static getModelName() {\n    return \"SysClassFieldPropertyRel\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SysClassFieldPropertyRel for dynamic purposes.\n  **/\n  public static factory(data: SysClassFieldPropertyRelInterface): SysClassFieldPropertyRel {\n    return new SysClassFieldPropertyRel(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SysClassFieldPropertyRel',\n      plural: 'SysClassFieldPropertyRels',\n      path: 'SysClassFieldPropertyRels',\n      idName: 'pk_entity',\n      properties: {\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n        \"fk_class_field\": {\n          name: 'fk_class_field',\n          type: 'number'\n        },\n        \"fk_property\": {\n          name: 'fk_property',\n          type: 'number'\n        },\n        \"property_is_outgoing\": {\n          name: 'property_is_outgoing',\n          type: 'boolean'\n        },\n        \"ord_num\": {\n          name: 'ord_num',\n          type: 'number'\n        },\n      },\n      relations: {\n        class_field: {\n          name: 'class_field',\n          type: 'SysClassField',\n          model: 'SysClassField',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_class_field',\n          keyTo: 'pk_entity'\n        },\n        property: {\n          name: 'property',\n          type: 'DfhProperty',\n          model: 'DfhProperty',\n          relationType: 'belongsTo',\n          keyFrom: 'fk_property',\n          keyTo: 'pk_property'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface SysClassHasTypePropertyInterface {\n  \"pk_typed_class\"?: number;\n  \"typed_class_label\"?: string;\n  \"dfh_pk_property\"?: number;\n  \"property_label\"?: string;\n  \"pk_type_class\"?: number;\n  \"type_class_label\"?: string;\n  \"pk_entity\"?: number;\n}\n\nexport class SysClassHasTypeProperty implements SysClassHasTypePropertyInterface {\n  \"pk_typed_class\": number;\n  \"typed_class_label\": string;\n  \"dfh_pk_property\": number;\n  \"property_label\": string;\n  \"pk_type_class\": number;\n  \"type_class_label\": string;\n  \"pk_entity\": number;\n  constructor(data?: SysClassHasTypePropertyInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysClassHasTypeProperty`.\n   */\n  public static getModelName() {\n    return \"SysClassHasTypeProperty\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SysClassHasTypeProperty for dynamic purposes.\n  **/\n  public static factory(data: SysClassHasTypePropertyInterface): SysClassHasTypeProperty{\n    return new SysClassHasTypeProperty(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SysClassHasTypeProperty',\n      plural: 'SysClassHasTypeProperties',\n      path: 'SysClassHasTypeProperties',\n      idName: 'pk_entity',\n      properties: {\n        \"pk_typed_class\": {\n          name: 'pk_typed_class',\n          type: 'number'\n        },\n        \"typed_class_label\": {\n          name: 'typed_class_label',\n          type: 'string'\n        },\n        \"dfh_pk_property\": {\n          name: 'dfh_pk_property',\n          type: 'number'\n        },\n        \"property_label\": {\n          name: 'property_label',\n          type: 'string'\n        },\n        \"pk_type_class\": {\n          name: 'pk_type_class',\n          type: 'number'\n        },\n        \"type_class_label\": {\n          name: 'type_class_label',\n          type: 'string'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface SysSystemRelevantClassInterface {\n  \"fk_class\"?: number;\n  \"required_by_entities\"?: boolean;\n  \"required_by_sources\"?: boolean;\n  \"required_by_basics\"?: boolean;\n  \"excluded_from_entities\"?: boolean;\n  \"pk_entity\"?: number;\n}\n\nexport class SysSystemRelevantClass implements SysSystemRelevantClassInterface {\n  \"fk_class\": number;\n  \"required_by_entities\": boolean;\n  \"required_by_sources\": boolean;\n  \"required_by_basics\": boolean;\n  \"excluded_from_entities\": boolean;\n  \"pk_entity\": number;\n  constructor(data?: SysSystemRelevantClassInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysSystemRelevantClass`.\n   */\n  public static getModelName() {\n    return \"SysSystemRelevantClass\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SysSystemRelevantClass for dynamic purposes.\n  **/\n  public static factory(data: SysSystemRelevantClassInterface): SysSystemRelevantClass{\n    return new SysSystemRelevantClass(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SysSystemRelevantClass',\n      plural: 'SysSystemRelevantClasses',\n      path: 'SysSystemRelevantClasses',\n      idName: 'pk_entity',\n      properties: {\n        \"fk_class\": {\n          name: 'fk_class',\n          type: 'number'\n        },\n        \"required_by_entities\": {\n          name: 'required_by_entities',\n          type: 'boolean'\n        },\n        \"required_by_sources\": {\n          name: 'required_by_sources',\n          type: 'boolean'\n        },\n        \"required_by_basics\": {\n          name: 'required_by_basics',\n          type: 'boolean'\n        },\n        \"excluded_from_entities\": {\n          name: 'excluded_from_entities',\n          type: 'boolean'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface SysSystemTypeInterface {\n  \"notes\"?: string;\n  \"definition\"?: string;\n  \"st_schema_name\"?: string;\n  \"st_table_name\"?: string;\n  \"st_column_name\"?: string;\n  \"st_group\"?: string;\n  \"pk_entity\"?: number;\n}\n\nexport class SysSystemType implements SysSystemTypeInterface {\n  \"notes\": string;\n  \"definition\": string;\n  \"st_schema_name\": string;\n  \"st_table_name\": string;\n  \"st_column_name\": string;\n  \"st_group\": string;\n  \"pk_entity\": number;\n  constructor(data?: SysSystemTypeInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysSystemType`.\n   */\n  public static getModelName() {\n    return \"SysSystemType\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SysSystemType for dynamic purposes.\n  **/\n  public static factory(data: SysSystemTypeInterface): SysSystemType{\n    return new SysSystemType(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SysSystemType',\n      plural: 'SysSystemTypes',\n      path: 'SysSystemTypes',\n      idName: 'pk_entity',\n      properties: {\n        \"notes\": {\n          name: 'notes',\n          type: 'string'\n        },\n        \"definition\": {\n          name: 'definition',\n          type: 'string'\n        },\n        \"st_schema_name\": {\n          name: 'st_schema_name',\n          type: 'string'\n        },\n        \"st_table_name\": {\n          name: 'st_table_name',\n          type: 'string'\n        },\n        \"st_column_name\": {\n          name: 'st_column_name',\n          type: 'string'\n        },\n        \"st_group\": {\n          name: 'st_group',\n          type: 'string'\n        },\n        \"pk_entity\": {\n          name: 'pk_entity',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { DatChunk } from '../../models/DatChunk';\nimport { DatColumn } from '../../models/DatColumn';\nimport { DatDigital } from '../../models/DatDigital';\nimport { DatNamespace } from '../../models/DatNamespace';\nimport { DatTextProperty } from '../../models/DatTextProperty';\nimport { DfhLabel } from '../../models/DfhLabel';\nimport { DfhProfile } from '../../models/DfhProfile';\n// import { DfhProperty } from '../../models/DfhProperty';\nimport { Email } from '../../models/Email';\nimport { InfAppellation } from '../../models/InfAppellation';\nimport { InfDimension } from '../../models/InfDimension';\nimport { InfLangString } from '../../models/InfLangString';\nimport { InfLanguage } from '../../models/InfLanguage';\nimport { InfPersistentItem } from '../../models/InfPersistentItem';\nimport { InfPlace } from '../../models/InfPlace';\nimport { InfStatement } from '../../models/InfStatement';\nimport { InfTemporalEntity } from '../../models/InfTemporalEntity';\nimport { InfTextProperty } from '../../models/InfTextProperty';\nimport { InfTimePrimitive } from '../../models/InfTimePrimitive';\nimport { ProClassFieldConfig } from '../../models/ProClassFieldConfig';\nimport { ProDfhClassProjRel } from '../../models/ProDfhClassProjRel';\nimport { ProDfhProfileProjRel } from '../../models/ProDfhProfileProjRel';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { ProProject } from '../../models/ProProject';\nimport { ProTextProperty } from '../../models/ProTextProperty';\nimport { PubAccount } from '../../models/PubAccount';\nimport { PubAccountProjectRel } from '../../models/PubAccountProjectRel';\nimport { SchemaObject } from '../../models/SchemaObject';\nimport { SysAppContext } from '../../models/SysAppContext';\nimport { SysClassField } from '../../models/SysClassField';\nimport { SysClassFieldPropertyRel } from '../../models/SysClassFieldPropertyRel';\nimport { SysClassHasTypeProperty } from '../../models/SysClassHasTypeProperty';\nimport { SysSystemRelevantClass } from '../../models/SysSystemRelevantClass';\nimport { SysSystemType } from '../../models/SysSystemType';\n\nexport interface Models { [name: string]: any }\n\n@Injectable()\nexport class SDKModels {\n\n  private models: Models = {\n    SchemaObject: SchemaObject,\n    SysClassFieldPropertyRel: SysClassFieldPropertyRel,\n    SysClassField: SysClassField,\n    SysClassHasTypeProperty: SysClassHasTypeProperty,\n    SysSystemRelevantClass: SysSystemRelevantClass,\n    PubAccount: PubAccount,\n    Email: Email,\n    ProProject: ProProject,\n    PubAccountProjectRel: PubAccountProjectRel,\n    ProTextProperty: ProTextProperty,\n    ProInfoProjRel: ProInfoProjRel,\n    DfhProfile: DfhProfile,\n    DfhLabel: DfhLabel,\n    DatChunk: DatChunk,\n    DatColumn: DatColumn,\n    DatTextProperty: DatTextProperty,\n    DatDigital: DatDigital,\n    SysAppContext: SysAppContext,\n    ProClassFieldConfig: ProClassFieldConfig,\n    ProDfhClassProjRel: ProDfhClassProjRel,\n    ProDfhProfileProjRel: ProDfhProfileProjRel,\n    InfAppellation: InfAppellation,\n    InfLangString: InfLangString,\n    InfDimension: InfDimension,\n    InfTemporalEntity: InfTemporalEntity,\n    InfStatement: InfStatement,\n    InfLanguage: InfLanguage,\n    InfPersistentItem: InfPersistentItem,\n    InfTimePrimitive: InfTimePrimitive,\n    InfPlace: InfPlace,\n    DatNamespace: DatNamespace,\n    InfTextProperty: InfTextProperty,\n    SysSystemType: SysSystemType,\n\n  };\n\n  public get(modelName: string): any {\n    return this.models[modelName];\n  }\n\n  public getAll(): Models {\n    return this.models;\n  }\n\n  public getModelNames(): string[] {\n    return Object.keys(this.models);\n  }\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nexport interface CookieInterface { [key: string]: any }\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module CookieBrowser\n* @license MIT\n* @description\n* This module handle cookies, it will be provided using DI Swapping according the\n* SDK Socket Driver Available currently supporting Angular 2 for web and NativeScript 2.\n**/\n@Injectable()\nexport class CookieBrowser {\n  /**\n   * @type {CookieInterface}\n   **/\n  private cookies: CookieInterface = {};\n  /**\n   * @method get\n   * @param {string} key Cookie key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in cookies.\n   **/\n  get(key: string): any {\n    if (!this.cookies[key]) {\n      let cookie = window.document\n                         .cookie.split('; ')\n                         .filter((item: any) => item.split('=')[0] === key).pop();\n      if (!cookie) {\n        return null;\n      }\n\n      this.cookies[key] = this.parse(cookie.split('=').slice(1).join('='));\n    }\n\n    return this.cookies[key];\n  }\n  /**\n   * @method set\n   * @param {string} key Cookie key name\n   * @param {any} value Any value\n   * @param {Date=} expires The date of expiration (Optional)\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in cookies.\n   **/\n  set(key: string, value: any, expires?: Date): void {\n    this.cookies[key] = value;\n    let cookie = `${key}=${encodeURI(value)}; path=/${expires ? `; expires=${ expires.toUTCString() }` : ''}`;\n    window.document.cookie = cookie;\n  }\n  /**\n   * @method remove\n   * @param {string} key Cookie key name\n   * @return {void}\n   * @description\n   * This method will remove a cookie from the client.\n   **/\n  remove(key: string) {\n    document.cookie = key + '=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n    delete this.cookies[key];\n  }\n  /**\n   * @method parse\n   * @param {any} value Input data expected to be JSON\n   * @return {void}\n   * @description\n   * This method will parse the string as JSON if possible, otherwise will\n   * return the value itself.\n   **/\n  private parse(value: any) {\n    try {\n        return JSON.parse(decodeURI(value));\n    } catch (e) {\n        return value;\n    }\n  }\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module StorageBrowser\n* @license MIT\n* @description\n* This module handle localStorage, it will be provided using DI Swapping according the\n* SDK Socket Driver Available currently supporting Angular 2 for web and NativeScript 2.\n**/\n@Injectable()\nexport class StorageBrowser {\n  /**\n   * @method get\n   * @param {string} key Storage key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in localStorage.\n   **/\n  get(key: string): any {\n    let data: string = localStorage.getItem(key);\n    return this.parse(data);\n  }\n  /**\n   * @method set\n   * @param {string} key Storage key name\n   * @param {any} value Any value\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in localStorage.\n   **/\n  set(key: string, value: any, expires?: Date): void {\n    localStorage.setItem(\n      key,\n      typeof value === 'object' ? JSON.stringify(value) : value\n    );\n  }\n  /**\n   * @method remove\n   * @param {string} key Storage key name\n   * @return {void}\n   * @description\n   * This method will remove a localStorage item from the client.\n   **/\n  remove(key: string): void {\n    if (localStorage[key]) {\n      localStorage.removeItem(key);\n    } else {\n      console.log('Trying to remove unexisting key: ', key);\n    }\n  }\n  /**\n   * @method parse\n   * @param {any} value Input data expected to be JSON\n   * @return {void}\n   * @description\n   * This method will parse the string as JSON if possible, otherwise will\n   * return the value itself.\n   **/\n  private parse(value: any) {\n    try {\n        return JSON.parse(value);\n    } catch (e) {\n        return value;\n    }\n  }\n}\n","/* tslint:disable */\n// add this to compilerOptions in tsconfig.json:\n//    \"allowSyntheticDefaultImports\": true,\n//    \"esModuleInterop\": true \nimport io from 'socket.io-client'; \n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketBrowser\n* @license MIT\n* @description\n* This module handle socket connections for web browsers, it will be DI Swapped\n* depending on the platform environment.\n* This module will be generated when the -d ng2web flag is set\n**/\nexport class SocketBrowser {\n  /**\n   * @method connect\n   * @param {string} url URL path to connect with the server.\n   * @param {any} options Any socket.io v1 =< valid options\n   * @return {any} Not currently a socket.io-client for web Typings implemented.\n   * @description\n   * This method will return a valid socket connection.  \n   **/\n  connect(url: string, options: any): any {\n    return io(url, options);\n  }\n}\n","/* tslint:disable */\n/**\n *Â @module SocketDriver\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The SocketDriver class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n **/\nexport class SocketDriver {\n  connect(url: any, options: any) {}\n}\n","/* tslint:disable */\nimport { Injectable, Inject, NgZone } from '@angular/core';\nimport { SocketDriver } from './socket.driver';\nimport { AccessToken } from '../models';\nimport { Observable, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\nimport { LoopBackConfig } from '../lb.config';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketConnection\n* @license MIT\n* @description\n* This module handle socket connections and return singleton instances for each\n* connection, it will use the SDK Socket Driver Available currently supporting\n* Angular 2 for web, NativeScript 2 and Angular Universal.\n**/\n@Injectable()\nexport class SocketConnection {\n  private socket: any;\n  private subjects: {\n    onConnect: Subject<any>,\n    onDisconnect: Subject<any>,\n    onAuthenticated: Subject<any>,\n    onUnAuthorized: Subject<any>\n  } = {\n    onConnect: new Subject(),\n    onDisconnect: new Subject(),\n    onAuthenticated: new Subject(),\n    onUnAuthorized: new Subject()\n  };\n  public sharedObservables: {\n    sharedOnConnect?: Observable<any>,\n    sharedOnDisconnect?: Observable<any>,\n    sharedOnAuthenticated?: Observable<any>,\n    sharedOnUnAuthorized?: Observable<any>\n  } = {};\n  public authenticated: boolean = false;\n  /**\n   * @method constructor\n   * @param {SocketDriver} driver Socket IO Driver\n   * @param {NgZone} zone Angular 2 Zone\n   * @description\n   * The constructor will set references for the shared hot observables from\n   * the class subjects. Then it will subscribe each of these observables\n   * that will create a channel that later will be shared between subscribers.\n   **/\n  constructor(\n    @Inject(SocketDriver) private driver: SocketDriver,\n    @Inject(NgZone) private zone: NgZone\n  ) {\n    this.sharedObservables = {\n      sharedOnConnect: this.subjects.onConnect.asObservable().pipe(share()),\n      sharedOnDisconnect: this.subjects.onDisconnect.asObservable().pipe(share()),\n      sharedOnAuthenticated: this.subjects.onAuthenticated.asObservable().pipe(share()),\n      sharedOnUnAuthorized: this.subjects.onUnAuthorized.asObservable().pipe(share())\n    };\n    // This is needed to create the first channel, subsequents will share the connection\n    // We are using Hot Observables to avoid duplicating connection status events.\n    this.sharedObservables.sharedOnConnect.subscribe();\n    this.sharedObservables.sharedOnDisconnect.subscribe();\n    this.sharedObservables.sharedOnAuthenticated.subscribe();\n    this.sharedObservables.sharedOnUnAuthorized.subscribe();\n  }\n  /**\n   * @method connect\n   * @param {AccessToken} token AccesToken instance\n   * @return {void}\n   * @description\n   * This method will create a new socket connection when not previously established.\n   * If there is a broken connection it will re-connect.\n   **/\n  public connect(token: AccessToken = null): void {\n    if (!this.socket) {\n      console.info('Creating a new connection with: ', LoopBackConfig.getPath());\n      // Create new socket connection\n      this.socket = this.driver.connect(LoopBackConfig.getPath(), {\n        log: false,\n        secure: LoopBackConfig.isSecureWebSocketsSet(),\n        forceNew: true,\n        forceWebsockets: true,\n        transports: ['websocket']\n      });\n      // Listen for connection\n      this.on('connect', () => {\n        this.subjects.onConnect.next('connected');\n        // Authenticate or start heartbeat now    \n        this.emit('authentication', token);\n      });\n      // Listen for authentication\n      this.on('authenticated', () => {\n        this.authenticated = true;\n        this.subjects.onAuthenticated.next();\n        this.heartbeater();\n      })\n      // Listen for authentication\n      this.on('unauthorized', (err: any) => {\n        this.authenticated = false;\n        this.subjects.onUnAuthorized.next(err);\n      })\n      // Listen for disconnections\n      this.on('disconnect', (status: any) => this.subjects.onDisconnect.next(status));\n    } else if (this.socket && !this.socket.connected){\n      if (typeof this.socket.off === 'function') {\n        this.socket.off();\n      }\n      if (typeof this.socket.destroy === 'function') {\n        this.socket.destroy();\n      }\n      delete this.socket;\n      this.connect(token);\n    }\n  }\n  /**\n   * @method isConnected\n   * @return {boolean}\n   * @description\n   * This method will return true or false depending on established connections\n   **/\n  public isConnected(): boolean {\n    return (this.socket && this.socket.connected);\n  }\n  /**\n   * @method on\n   * @param {string} event Event name\n   * @param {Function} handler Event listener handler\n   * @return {void}\n   * @description\n   * This method listen for server events from the current WebSocket connection.\n   * This method is a facade that will wrap the original \"on\" method and run it\n   * within the Angular Zone to avoid update issues.\n   **/\n  public on(event: string, handler: Function): void {\n    this.socket.on(event, (data: any) => this.zone.run(() => handler(data)));\n  }\n  /**\n   * @method emit\n   * @param {string} event Event name\n   * @param {any=} data Any type of data\n   * @return {void}\n   * @description\n   * This method will send any type of data to the server according the event set.\n   **/\n  public emit(event: string, data?: any): void {\n    if (data) {\n      this.socket.emit(event, data);\n    } else {\n      this.socket.emit(event);\n    }\n  }\n  /**\n   * @method removeListener\n   * @param {string} event Event name\n   * @param {Function} handler Event listener handler\n   * @return {void}\n   * @description\n   * This method will wrap the original \"on\" method and run it within the Angular Zone\n   * Note: off is being used since the nativescript socket io client does not provide\n   * removeListener method, but only provides with off which is provided in any platform.\n   **/\n  public removeListener(event: string, handler: Function): void {\n    if (typeof this.socket.off === 'function') {\n      this.socket.off(event, handler);\n    }\n  }\n  /**\n   * @method removeAllListeners\n   * @param {string} event Event name\n   * @param {Function} handler Event listener handler\n   * @return {void}\n   * @description\n   * This method will wrap the original \"on\" method and run it within the Angular Zone\n   * Note: off is being used since the nativescript socket io client does not provide\n   * removeListener method, but only provides with off which is provided in any platform.\n   **/\n  public removeAllListeners(event: string): void {\n    if (typeof this.socket.removeAllListeners === 'function') {\n      this.socket.removeAllListeners(event);\n    }\n  }\n  /**\n   * @method disconnect\n   * @return {void}\n   * @description\n   * This will disconnect the client from the server\n   **/\n  public disconnect(): void {\n    this.socket.disconnect();\n  }\n  /**\n   * @method heartbeater\n   * @return {void}\n   * @description\n   * This will keep the connection as active, even when users are not sending\n   * data, this avoids disconnection because of a connection not being used.\n   **/\n  private heartbeater(): void {\n    let heartbeater: any = setInterval(() => {\n      if (this.isConnected()) {\n        this.socket.emit('lb-ping');\n      } else {\n        this.socket.removeAllListeners('lb-pong');\n        clearInterval(heartbeater);\n      }\n    }, 15000);\n    this.socket.on('lb-pong', (data: any) => console.info('Heartbeat: ', data));\n  }\n}\n","/* tslint:disable */\nimport { Observable, Subject } from 'rxjs';\n\nexport class IO {\n\n  private socket: any;\n  private observables: any = {};\n\n  constructor(socket: any) { this.socket = socket; }\n\n  emit(event: string, data: any): void {\n    this.socket.emit('ME:RT:1://event', {\n        event : event,\n        data  : data\n    });\n  }\n\n  on(event: string): Observable<any> {\n    if (this.observables[event]) { return this.observables[event]; }\n    let subject: Subject<any> = new Subject<any>();\n    this.socket.on(event, (res: any) => subject.next(res));\n    this.observables[event] = subject.asObservable();\n    return this.observables[event];\n  }\n}\n","/* tslint:disable */\nimport { merge, Observable, Subject } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { LoopBackFilter, StatFilter } from './index';\nimport { SocketConnection } from '../sockets/socket.connections';\n/**\n * @class FireLoopRef<T>\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * This class allows to create FireLoop References which will be in sync with\n * Server. It also allows to create FireLoop Reference Childs, that allows to\n * persist data according the generic model relationships.\n **/\nexport class FireLoopRef<T> {\n  // Reference ID\n  private id: number = this.buildId();\n  // Model Instance (For child references, empty on root references)\n  private instance: any;\n  // Model Childs\n  private childs: any = {};\n  // Disposable Events\n  private disposable: { [key: string]: any } = {};\n  /**\n  * @method constructor\n  * @param {any} model The model we want to create a reference\n  * @param {SocketConnection} socket Socket connection to handle events\n  * @param {FireLoopRef<any>} parent Parent FireLoop model reference\n  * @param {string} relationship The defined model relationship\n  * @description\n  * The constructor will receive the required parameters and then will register this reference\n  * into the server, needed to allow multiple references for the same model.\n  * This ids are referenced into this specific client connection and won't have issues\n  * with other client ids.\n  **/\n  constructor(\n    private model: any,\n    private socket: SocketConnection,\n    private parent: FireLoopRef<any> = null,\n    private relationship: string = null\n  ) {\n    this.socket.emit(\n      `Subscribe.${!parent ? model.getModelName() : parent.model.getModelName()}`,\n      { id: this.id, scope: model.getModelName(), relationship: relationship }\n    );\n    return this;\n  }\n  /**\n  * @method dispose\n  * @return {void}\n  * @description\n  * This method is super important to avoid memory leaks in the server.\n  * This method requires to be called on components destroy\n  *\n  * ngOnDestroy() {\n  *  this.someRef.dispose() \n  * }\n  **/\n  public dispose(): void {\n    const subscription = this.operation('dispose', {}).subscribe(() => {\n      Object.keys(this.disposable).forEach((channel: string) => {\n        this.socket.removeListener(channel, this.disposable[channel]);\n        this.socket.removeAllListeners(channel);\n      });\n      subscription.unsubscribe();\n    });\n  }\n  /**\n  * @method upsert\n  * @param {T} data Persisted model instance\n  * @return {Observable<T>}\n  * @description\n  * Operation wrapper for upsert function.\n  **/\n  public upsert(data: T): Observable<T> {\n    return this.operation('upsert', data);\n  }\n  /**\n  * @method create\n  * @param {T} data Persisted model instance\n  * @return {Observable<T>}\n  * @description\n  * Operation wrapper for create function.\n  **/\n  public create(data: T): Observable<T> {\n    return this.operation('create', data);\n  }\n  /**\n  * @method remove\n  * @param {T} data Persisted model instance\n  * @return {Observable<T>}\n  * @description\n  * Operation wrapper for remove function.\n  **/\n  public remove(data: T): Observable<T> {\n    return this.operation('remove', data);\n  }\n  /**\n  * @method remote\n  * @param {string} method Remote method name\n  * @param {any[]=} params Parameters to be applied into the remote method\n  * @param {boolean} broadcast Flag to define if the method results should be broadcasted\n  * @return {Observable<any>}\n  * @description\n  * This method calls for any remote method. It is flexible enough to\n  * allow you call either built-in or custom remote methods.\n  *\n  * FireLoop provides this interface to enable calling remote methods\n  * but also to optionally send any defined accept params that will be\n  * applied within the server.\n  **/\n  public remote(method: string, params?: any[], broadcast: boolean = false): Observable<any> {\n    return this.operation('remote', { method, params, broadcast });\n  }\n  /**\n  * @method onRemote\n  * @param {string} method Remote method name\n  * @return {Observable<any>}\n  * @description\n  * This method listen for public broadcasted remote method results. If the remote method\n  * execution is not public only the owner will receive the result data.\n  **/\n  public onRemote(method: string): Observable<any> {\n    let event: string = 'remote';\n    if (!this.relationship) {\n      event = `${this.model.getModelName()}.${event}`;\n    } else {\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}`;\n    }\n    return this.broadcasts(event, {});\n  }\n  /**\n  * @method on\n  * @param {string} event Event name\n  * @param {LoopBackFilter} filter LoopBack query filter\n  * @return {Observable<T>}\n  * @description\n  * Listener for different type of events. Valid events are:\n  *   - change (Triggers on any model change -create, update, remove-)\n  *   - value (Triggers on new entries)\n  *   - child_added (Triggers when a child is added)\n  *   - child_updated (Triggers when a child is updated)\n  *   - child_removed (Triggers when a child is removed)\n  **/\n  public on(event: string, filter: LoopBackFilter = { limit: 100, order: 'id DESC' }): Observable<T | T[]> {\n    if (event === 'remote') {\n      throw new Error('The \"remote\" event is not allowed using \"on()\" method, use \"onRemote()\" instead');\n    }\n    let request: any;\n    if (!this.relationship) {\n      event = `${this.model.getModelName()}.${event}`;\n      request = { filter };\n    } else {\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}`;\n      request = { filter, parent: this.parent.instance };\n    }\n    if (event.match(/(value|change|stats)/)) {\n      return merge(\n        this.pull(event, request),\n        this.broadcasts(event, request)\n      );\n    } else {\n      return this.broadcasts(event, request);\n    }\n  }\n  /**\n  * @method stats\n  * @param {LoopBackFilter=} filter LoopBack query filter\n  * @return {Observable<T>}\n  * @description\n  * Listener for real-time statistics, will trigger on every\n  * statistic modification.\n  * TIP: You can improve performance by adding memcached to LoopBack models.\n  **/\n  public stats(filter?: StatFilter): Observable<T | T[]> {\n    return this.on('stats', filter);\n  }\n  /**\n  * @method make\n  * @param {any} instance Persisted model instance reference\n  * @return {Observable<T>}\n  * @description\n  * This method will set a model instance into this a new FireLoop Reference.\n  * This allows to persiste parentship when creating related instances.\n  *\n  * It also allows to have multiple different persisted instance references to same model.\n  * otherwise if using singleton will replace a previous instance for a new instance, when\n  * we actually want to have more than 1 instance of same model.\n  **/\n  public make(instance: any): FireLoopRef<T> {\n    let reference: FireLoopRef<T> = new FireLoopRef<T>(this.model, this.socket);\n    reference.instance = instance;\n    return reference;\n  }\n  /**\n  * @method child\n  * @param {string} relationship A defined model relationship\n  * @return {FireLoopRef<T>}\n  * @description\n  * This method creates child references, which will persist related model\n  * instances. e.g. Room.messages, where messages belongs to a specific Room.\n  **/\n  public child<T>(relationship: string): FireLoopRef<T> {\n    // Return singleton instance\n    if (this.childs[relationship]) { return this.childs[relationship]; }\n    // Try to get relation settings from current model\n    let settings: any = this.model.getModelDefinition().relations[relationship];\n    // Verify the relationship actually exists\n    if (!settings) {\n      throw new Error(`Invalid model relationship ${this.model.getModelName()} <-> ${relationship}, verify your model settings.`);\n    }\n    // Verify if the relationship model is public\n    if (settings.model === '') {\n      throw new Error(`Relationship model is private, cam't use ${relationship} unless you set your model as public.`);\n    }\n    // Lets get a model reference and add a reference for all of the models\n    let model: any = this.model.models.get(settings.model);\n    model.models = this.model.models;\n    // If everything goes well, we will store a child reference and return it.\n    this.childs[relationship] = new FireLoopRef<T>(model, this.socket, this, relationship);\n    return this.childs[relationship];\n  }\n  /**\n  * @method pull\n  * @param {string} event Event name\n  * @param {any} request Type of request, can be LB-only filter or FL+LB filter\n  * @return {Observable<T>}\n  * @description\n  * This method will pull initial data from server\n  **/\n  private pull(event: string, request: any): Observable<T> {\n    let sbj: Subject<T> = new Subject<T>();\n    let that: FireLoopRef<T> = this;\n    let nowEvent: any = `${event}.pull.requested.${this.id}`;\n    this.socket.emit(`${event}.pull.request.${this.id}`, request);\n    function pullNow(data: any) {\n      if (that.socket.removeListener) {\n        that.socket.removeListener(nowEvent, pullNow);\n      }\n      sbj.next(data);\n    };\n    this.socket.on(nowEvent, pullNow);\n    return sbj.asObservable();\n  }\n  /**\n  * @method broadcasts\n  * @param {string} event Event name\n  * @param {any} request Type of request, can be LB-only filter or FL+LB filter\n  * @return {Observable<T>}\n  * @description\n  * This will listen for public broadcasts announces and then request\n  * for data according a specific client request, not shared with other clients.\n  **/\n  private broadcasts(event: string, request: any): Observable<T> {\n    let sbj: Subject<T> = new Subject<T>();\n    let channels: { announce: string, broadcast: string } = {\n      announce: `${event}.broadcast.announce.${this.id}`,\n      broadcast: `${event}.broadcast.${this.id}`\n    };\n    let that = this;\n    // Announces Handler\n    this.disposable[channels.announce] = function (res: T) {\n      that.socket.emit(`${event}.broadcast.request.${that.id}`, request)\n    };\n    // Broadcasts Handler\n    this.disposable[channels.broadcast] = function (data: any) {\n      sbj.next(data);\n    };\n    this.socket.on(channels.announce, this.disposable[channels.announce]);\n    this.socket.on(channels.broadcast, this.disposable[channels.broadcast]);\n    return sbj.asObservable();\n  }\n  /**\n  * @method operation\n  * @param {string} event Event name\n  * @param {any} data Any type of data sent to the server\n  * @return {Observable<T>}\n  * @description\n  * This internal method will run operations depending on current context \n  **/\n  private operation(event: string, data: any): Observable<T> {\n    if (!this.relationship) {\n      event = `${this.model.getModelName()}.${event}.${this.id}`;\n    } else {\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}.${this.id}`;\n    }\n    let subject: Subject<T> = new Subject<T>();\n    let config: { data: any, parent: any } = {\n      data,\n      parent: this.parent && this.parent.instance ? this.parent.instance : null\n    };\n    this.socket.emit(event, config);\n    let resultEvent: string = '';\n    if (!this.relationship) {\n      resultEvent = `${this.model.getModelName()}.value.result.${this.id}`;\n    } else {\n      resultEvent = `${this.parent.model.getModelName()}.${this.relationship}.value.result.${this.id}`;\n    }\n    this.socket.on(resultEvent, (res: any) => {\n      if (res.error) {\n        subject.error(res);\n      } else {\n        subject.next(res);\n      }\n    });\n    if (event.match('dispose')) {\n      setTimeout(() => subject.next());\n    }\n    // This event listener will be wiped within socket.connections\n    this.socket.sharedObservables.sharedOnDisconnect.subscribe(() => subject.complete());\n    return subject.asObservable().pipe(catchError((error: any) => Observable.throw(error)));\n  }\n  /**\n  * @method buildId\n  * @return {number}\n  * @description\n  * This internal method build an ID for this reference, this allows to have\n  * multiple references for the same model or relationships.\n  **/\n  private buildId(): number {\n    return Date.now() + Math.floor(Math.random() * 100800) *\n      Math.floor(Math.random() * 100700) *\n      Math.floor(Math.random() * 198500);\n  }\n}\n","/* tslint:disable */\nexport * from './SchemaObject';\nexport * from './SysClassFieldPropertyRel';\nexport * from './SysClassField';\nexport * from './SysClassHasTypeProperty';\nexport * from './SysSystemRelevantClass';\nexport * from './PubAccount';\nexport * from './Email';\nexport * from './ProProject';\nexport * from './PubAccountProjectRel';\nexport * from './ProTextProperty';\nexport * from './ProInfoProjRel';\nexport * from './DfhProfile';\nexport * from './DfhLabel';\nexport * from './DatChunk';\nexport * from './DatColumn';\nexport * from './DatTextProperty';\nexport * from './DatDigital';\nexport * from './SysAppContext';\nexport * from './ProClassFieldConfig';\nexport * from './ProDfhClassProjRel';\nexport * from './ProDfhProfileProjRel';\nexport * from './InfAppellation';\nexport * from './InfLangString';\nexport * from './InfDimension';\nexport * from './InfTemporalEntity';\nexport * from './InfStatement';\nexport * from './InfLanguage';\nexport * from './InfPersistentItem';\nexport * from './InfTimePrimitive';\nexport * from './InfPlace';\nexport * from './DatNamespace';\nexport * from './InfTextProperty';\nexport * from './SysSystemType';\nexport * from './BaseModels';\nexport * from './FireLoopRef';\n","/* tslint:disable */\nimport { FireLoopRef } from './index';\n\nexport class FireLoop {\n\n  private references: any = {};\n\n  constructor(private socket: any, private models: { get: Function }) {}\n\n  public ref<T>(model: any): FireLoopRef<T> {\n    let name: string = model.getModelName();\n    model.models = this.models;\n    this.references[name] = new FireLoopRef<T>(model, this.socket);\n    return this.references[name];\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject } from '@angular/core';\nimport { IO } from './io.service';\nimport { LoopBackAuth } from './auth.service';\nimport { FireLoop } from '../../models/FireLoop';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { SDKModels } from '../custom/SDKModels';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { share } from 'rxjs/operators';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@johncasarrubias>\n* @module RealTime\n* @license MIT\n* @description\n* This module is a real-time interface for using socket connections, its main purpose\n* is to make sure that when there is a valid connection, it will create instances\n* of the different real-time functionalities like FireLoop, PubSub and IO.\n**/\n@Injectable()\nexport class RealTime {\n  public IO: IO;\n  public FireLoop: FireLoop;\n  private connecting: boolean = false;\n  private onReadySubject: Subject<string> = new Subject<string>();\n  private sharedOnReady: Observable<string> = this.onReadySubject.asObservable().pipe(share());\n  /**\n  * @method constructor\n  * @param {SocketConnection} connection WebSocket connection service\n  * @param {SDKModels} models Model provider service\n  * @param {LoopBackAuth} auth LoopBack authentication service\n  * @description\n  * It will intialize the shared on ready communication channel.\n  **/\n  constructor(\n    @Inject(SocketConnection) public connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth\n  ) {\n    this.sharedOnReady.subscribe();\n  }\n  /**\n  * @method onDisconnect\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is disconnected from server.\n  **/\n  onDisconnect(): Observable<any> {\n    return this.connection.sharedObservables.sharedOnDisconnect;\n  }\n  /**\n  * @method onAuthenticated\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is authenticated with the server.\n  **/\n  onAuthenticated(): Observable<any> {\n    return this.connection.sharedObservables.sharedOnAuthenticated;\n  }\n  /**\n  * @method onUnAuthorized\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is not authorized to connect with the server.\n  **/\n  onUnAuthorized(): Observable<any> {\n    return this.connection.sharedObservables.sharedOnUnAuthorized;\n  }\n  /**\n  * @method onReady\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is Ready for broadcasting.\n  * and will register connection flow events to notify subscribers.\n  **/\n  public onReady(): Observable<any> {\n    // If there is a valid connection, then we just send back to the EventLoop\n    // Or next will be executed before the actual subscription.\n    if (this.connection.isConnected()) {\n      let to = setTimeout(() => {\n        this.onReadySubject.next('shared-connection');\n        clearTimeout(to);\n      });\n    // Else if there is a current attempt of connection we wait for the prior\n    // process that started the connection flow.\n    } else if (this.connecting) {\n      let ti = setInterval(() => {\n        if (this.connection.isConnected()) {\n          this.onReadySubject.next('shared-connection');\n          clearInterval(ti);\n        }\n      }, 500);\n    // If there is not valid connection or attempt, then we start the connection flow\n    // and make sure we notify all the onReady subscribers when done.\n    // Also it will listen for desconnections so we unsubscribe and avoid both:\n    // Memory leaks and duplicated triggered events.\n    } else {\n      this.connecting = true;\n      this.connection.connect(this.auth.getToken());\n      this.IO       = new IO(this.connection);\n      this.FireLoop = new FireLoop(this.connection, this.models);\n      // Fire event for those subscribed \n      let s1: Subscription = this.connection.sharedObservables.sharedOnConnect.subscribe(() => {\n        console.log('Real-Time connection has been established');\n        this.connecting = false;\n        this.onReadySubject.next('connected');\n        let s2: Subscription = this.connection.sharedObservables.sharedOnDisconnect.subscribe(() => {\n          s1.unsubscribe();\n          s2.unsubscribe();\n        });\n      });\n    }\n    return this.sharedOnReady;\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpRequest, HttpParams, HttpResponse, HttpParameterCodec } from '@angular/common/http';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ErrorHandler } from './error.service';\nimport { LoopBackAuth } from './auth.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackFilter, AccessToken } from '../../models/BaseModels';\nimport { SDKModels } from '../custom/SDKModels';\nimport { Observable, Subject } from 'rxjs';\nimport { catchError, map, filter } from 'rxjs/operators';\nimport { SocketConnection } from '../../sockets/socket.connections';\n// Making Sure EventSource Type is available to avoid compilation issues.\ndeclare var EventSource: any;\nclass CustomQueryEncoderHelper implements HttpParameterCodec {\n  encodeKey(k: string): string {\n      return encodeURIComponent(k);\n  }\n\n  encodeValue(v: string): string {\n      return encodeURIComponent(v);\n  }\n\n  decodeKey(k: string): string {\n      return decodeURIComponent(k);\n  }\n\n  decodeValue(v: string): string {\n      return decodeURIComponent(v);\n  }\n}\n/**\n* @module BaseLoopBackApi\n* @author Jonathan Casarrubias <@johncasarrubias> <github:jonathan-casarrubias>\n* @author Nikolay Matiushenkov <https://github.com/mnvx>\n* @license MIT\n* @description\n* Abstract class that will be implemented in every custom service automatically built\n* by the sdk builder.\n* It provides the core functionallity for every API call, either by HTTP Calls or by\n* WebSockets.\n**/\n@Injectable()\nexport abstract class BaseLoopBackApi {\n\n  protected path: string;\n  protected model: any;\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    this.model = this.models.get(this.getModelName());\n  }\n  /**\n   * @method request\n   * @param {string}  method      Request method (GET, POST, PUT)\n   * @param {string}  url         Request url (my-host/my-url/:id)\n   * @param {any}     routeParams Values of url parameters\n   * @param {any}     urlParams   Parameters for building url (filter and other)\n   * @param {any}     postBody    Request postBody\n   * @return {Observable<any>}\n   * @description\n   * This is a core method, every HTTP Call will be done from here, every API Service will\n   * extend this class and use this method to get RESTful communication.\n   **/\n  public request(\n    method         : string,\n    url            : string,\n    routeParams    : any = {},\n    urlParams      : any = {},\n    postBody       : any = {},\n    pubsub         : boolean = false,\n    customHeaders? : Function\n  ): Observable<any> {\n    // Transpile route variables to the actual request Values\n    Object.keys(routeParams).forEach((key: string) => {\n      url = url.replace(new RegExp(\":\" + key + \"(\\/|$)\", \"g\"), routeParams[key] + \"$1\")\n    });\n    if (pubsub) {\n      if (url.match(/fk/)) {\n        let arr = url.split('/'); arr.pop();\n        url = arr.join('/');\n      }\n      let event: string = (`[${method}]${url}`).replace(/\\?/, '');\n      let subject: Subject<any> = new Subject<any>();\n      this.connection.on(event, (res: any) => subject.next(res));\n      return subject.asObservable();\n    } else {\n      let httpParams = new HttpParams({ encoder: new CustomQueryEncoderHelper() });\n      // Headers to be sent\n      let headers: HttpHeaders = new HttpHeaders();\n      headers = headers.append('Content-Type', 'application/json');\n      // Authenticate request\n      headers = this.authenticate(url, headers);\n      // Body fix for built in remote methods using \"data\", \"options\" or \"credentials\n      // that are the actual body, Custom remote method properties are different and need\n      // to be wrapped into a body object\n      let body: any;\n      let postBodyKeys = typeof postBody === 'object' ? Object.keys(postBody) : []\n      if (postBodyKeys.length === 1) {\n        body = postBody[postBodyKeys.shift()];\n      } else {\n        body = postBody;\n      }\n      \n      let queryString: string = '';\n\n      // Separate filter object from url params and add to search query\n      if (urlParams.filter) {\n        if (LoopBackConfig.isHeadersFilteringSet()) {\n          headers = headers.append('filter', JSON.stringify(urlParams.filter));\n        } else {\n          queryString = `?filter=${encodeURIComponent(JSON.stringify(urlParams.filter))}`;\n        }\n        delete urlParams.filter;\n      }\n\n      // Separate where object from url params and add to search query\n      if (urlParams.where) {\n        if (LoopBackConfig.isHeadersWhereSet()) {\n          /**\n          CODE BELOW WILL GENERATE THE FOLLOWING ISSUES:\n          - https://github.com/mean-expert-official/loopback-sdk-builder/issues/356\n          - https://github.com/mean-expert-official/loopback-sdk-builder/issues/328 \n          **/\n          headers = headers.append('where', JSON.stringify(urlParams.where));\n        } else {\n          queryString = `?where=${encodeURIComponent(JSON.stringify(urlParams.where))}`;\n        }\n        delete urlParams.where;\n      }\n    \n      if (typeof customHeaders === 'function') {\n        headers = customHeaders(headers);\n      }\n/* enhancement/configure-where-headers\n      this.searchParams.setJSON(urlParams);\n      let request: Request = new Request(\n        new RequestOptions({\n          headers        : headers,\n          method         : method,\n          url            : `${url}${queryString}`,\n          search         : Object.keys(urlParams).length > 0 ? this.searchParams.getURLSearchParams() : null,\n          body           : body ? JSON.stringify(body) : undefined,\n          withCredentials: LoopBackConfig.getRequestOptionsCredentials()\n        })\n      );\nTODO Fix Merge Conflict */\n      Object.keys(urlParams).forEach(paramKey => {\n        let paramValue = urlParams[paramKey];\n        paramValue = typeof paramValue === 'object' ? JSON.stringify(paramValue) : paramValue;\n        httpParams = httpParams.append(paramKey, paramValue);\n      });\n      let request = new HttpRequest(method, `${url}${queryString}`, body, {\n        headers        : headers,\n        params         : httpParams,\n        withCredentials: LoopBackConfig.getRequestOptionsCredentials()\n      });\n      return this.http.request(request).pipe(\n        filter(event => event instanceof HttpResponse),\n        map((res: HttpResponse<any>) => res.body),\n        catchError((e) => this.errorHandler.handleError(e))\n      );\n    }\n  }\n  /**\n   * @method authenticate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {string} url Server URL\n   * @param {Headers} headers HTTP Headers\n   * @return {void}\n   * @description\n   * This method will try to authenticate using either an access_token or basic http auth\n   */\n  public authenticate<T>(url: string, headers: HttpHeaders): HttpHeaders {\n    if (this.auth.getAccessTokenId()) {\n      headers = headers.append(\n        'Authorization',\n        LoopBackConfig.getAuthPrefix() + this.auth.getAccessTokenId()\n      );\n    }\n\n    return headers;\n  }\n  /**\n   * @method create\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T} data Generic data type\n   * @return {Observable<T>}\n   * @description\n   * Generic create method\n   */\n  public create<T>(data: T, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onCreate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T[]} data Generic data type array\n   * @return {Observable<T[]>}\n   * @description\n   * Generic pubsub oncreate many method\n   */\n  public onCreate<T>(data: T[]): Observable<T[]> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((datum: T[]) => datum.map((data: T) => this.model.factory(data))));\n  }\n  /**\n   * @method createMany\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T[]} data Generic data type array\n   * @return {Observable<T[]>}\n   * @description\n   * Generic create many method\n   */\n  public createMany<T>(data: T[], customHeaders?: Function): Observable<T[]> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((datum: T[]) => datum.map((data: T) => this.model.factory(data))));\n  }\n  /**\n   * @method onCreateMany\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T[]} data Generic data type array\n   * @return {Observable<T[]>}\n   * @description\n   * Generic create many method\n   */\n  public onCreateMany<T>(data: T[]): Observable<T[]> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((datum: T[]) => datum.map((data: T) => this.model.factory(data))));\n  }\n  /**\n   * @method findById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {any} data Generic data type\n   * @return {Observable<T>}\n   * @description\n   * Generic findById method\n   */\n  public findById<T>(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T> {\n    let _urlParams: any = {};\n    if (filter) _urlParams.filter = filter;\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, _urlParams, undefined, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method find\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[+>}\n   * @description\n   * Generic find method\n   */\n  public find<T>(filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T[]> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, { filter }, undefined, null, customHeaders)\n    .pipe(map((datum: T[]) => datum.map((data: T) => this.model.factory(data))));\n  }\n  /**\n   * @method exists\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic exists method\n   */\n  public exists<T>(id: any, customHeaders?: Function): Observable<T> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id/exists'\n    ].join('/'), { id }, undefined, undefined, null, customHeaders);\n  }\n  /**\n   * @method findOne\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic findOne method\n   */\n  public findOne<T>(filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'findOne'\n    ].join('/'), undefined, { filter }, undefined, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method updateAll\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic updateAll method\n   */\n  public updateAll<T>(where: any = {}, data: T, customHeaders?: Function): Observable<{ count: 'number' }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'update'\n    ].join('/'), undefined, _urlParams, { data }, null, customHeaders);\n  }\n  /**\n   * @method onUpdateAll\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic pubsub onUpdateAll method\n   */\n  public onUpdateAll<T>(where: any = {}, data: T): Observable<{ count: 'number' }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'update'\n    ].join('/'), undefined, _urlParams, { data }, true);\n  }\n  /**\n   * @method deleteById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic deleteById method\n   */\n  public deleteById<T>(id: any, customHeaders?: Function): Observable<T> {\n    return this.request('DELETE', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, undefined, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onDeleteById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onDeleteById method\n   */\n  public onDeleteById<T>(id: any): Observable<T> {\n    return this.request('DELETE', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, undefined, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method count\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<{ count: number }>}\n   * @description\n   * Generic count method\n   */\n  public count(where: any = {}, customHeaders?: Function): Observable<{ count: number }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'count'\n    ].join('/'), undefined, _urlParams, undefined, null, customHeaders);\n  }\n  /**\n   * @method updateAttributes\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic updateAttributes method\n   */\n  public updateAttributes<T>(id: any, data: T, customHeaders?: Function): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onUpdateAttributes\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic onUpdateAttributes method\n   */\n  public onUpdateAttributes<T>(id: any, data: T): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method upsert\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsert method\n   */\n  public upsert<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onUpsert\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onUpsert method\n   */\n  public onUpsert<T>(data: any = {}): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method upsertPatch\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsert method using patch http method\n   */\n  public upsertPatch<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('PATCH', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onUpsertPatch\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onUpsertPatch method using patch http method\n   */\n  public onUpsertPatch<T>(data: any = {}): Observable<T> {\n    return this.request('PATCH', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method upsertWithWhere\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsertWithWhere method\n   */\n  public upsertWithWhere<T>(where: any = {}, data: any = {}, customHeaders?: Function): Observable<T> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'upsertWithWhere'\n    ].join('/'), undefined, _urlParams, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onUpsertWithWhere\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onUpsertWithWhere method\n   */\n  public onUpsertWithWhere<T>(where: any = {}, data: any = {}): Observable<T> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'upsertWithWhere'\n    ].join('/'), undefined, _urlParams, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method replaceOrCreate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic replaceOrCreate method\n   */\n  public replaceOrCreate<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'replaceOrCreate'\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onReplaceOrCreate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic onReplaceOrCreate method\n   */\n  public onReplaceOrCreate<T>(data: any = {}): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'replaceOrCreate'\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method replaceById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic replaceById method\n   */\n  public replaceById<T>(id: any, data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id', 'replace'\n    ].join('/'), { id }, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onReplaceById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic onReplaceById method\n   */\n  public onReplaceById<T>(id: any, data: any = {}): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id', 'replace'\n    ].join('/'), { id }, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method createChangeStream\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<any>}\n   * @description\n   * Generic createChangeStream method\n   */\n  public createChangeStream(): Observable<any> {\n    let subject = new Subject();\n    if (typeof EventSource !== 'undefined') {\n      let emit   = (msg: any) => subject.next(JSON.parse(msg.data));\n      var source = new EventSource([\n        LoopBackConfig.getPath(),\n        LoopBackConfig.getApiVersion(),\n        this.model.getModelDefinition().path,\n        'change-stream'\n      ].join('/'));\n      source.addEventListener('data', emit);\n      source.onerror = emit;\n    } else {\n      console.warn('SDK Builder: EventSource is not supported'); \n    }\n    return subject.asObservable();\n  }\n  /**\n   * @method getModelName\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {string}\n   * @description\n   * Abstract getModelName method\n   */\n  abstract getModelName(): string;\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter, } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SchemaObject } from '../../models/SchemaObject';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `SchemaObject` model.\n */\n@Injectable()\nexport class SchemaObjectApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http, connection, models, auth, errorHandler);\n  }\n\n\n  /**\n   * Remove entity with outgoing statements and namings from project.\n   *\n   * @param {number} pkProject Primary key of the project\n   *\n   * @param {number} pkEntity Primary key of the entity\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SchemaObject` object.)\n   * </em>\n   */\n  public removeEntityFromProject(pkProject: any, pkEntity: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/SchemaObjects/remove-entity-from-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Add entity with outgoing statements and namings to project.\n   *\n   * @param {number} pkProject Primary key of the project\n   *\n   * @param {number} pkEntity Primary key of the entity\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SchemaObject` object.)\n   * </em>\n   */\n  public addEntityToProject(pkProject: any, pkEntity: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/SchemaObjects/add-entity-to-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get a object containing apllations and definition of a type (project variant).\n   *\n   * @param {number} pkProject Pk of the project.\n   *\n   * @param {number} pkType Pk of the type.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SchemaObject` object.)\n   * </em>\n   */\n  public typeOfProject(pkProject: any, pkType: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/SchemaObjects/type-of-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkType !== 'undefined' && pkType !== null) _urlParams.pkType = pkType;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SchemaObject`.\n   */\n  public getModelName() {\n    return \"SchemaObject\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter, } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SysClassFieldPropertyRel } from '../../models/SysClassFieldPropertyRel';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { SysClassField } from '../../models/SysClassField';\n// import { DfhProperty } from '../../models/DfhProperty';\n\n\n/**\n * Api services for the `SysClassFieldPropertyRel` model.\n */\n@Injectable()\nexport class SysClassFieldPropertyRelApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http, connection, models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysClassFieldPropertyRel`.\n   */\n  public getModelName() {\n    return \"SysClassFieldPropertyRel\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter, } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SysClassField } from '../../models/SysClassField';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { SysClassFieldPropertyRel } from '../../models/SysClassFieldPropertyRel';\nimport { ProClassFieldConfig } from '../../models/ProClassFieldConfig';\n\n\n/**\n * Api services for the `SysClassField` model.\n */\n@Injectable()\nexport class SysClassFieldApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http, connection, models, auth, errorHandler);\n  }\n\n  /**\n   * <em>\n         * (The remote method definition does not provide any description.)\n         * </em>\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SysClassField` object.)\n   * </em>\n   */\n  public findComplex(filter: LoopBackFilter = {}, customHeaders?: Function): Observable<SysClassField[]> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/SysClassFields/findComplex\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      filter: filter\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<SysClassField>) =>\n      instances.map((instance: SysClassField) => new SysClassField(instance))\n    ));\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysClassField`.\n   */\n  public getModelName() {\n    return \"SysClassField\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SysClassHasTypeProperty } from '../../models/SysClassHasTypeProperty';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `SysClassHasTypeProperty` model.\n */\n@Injectable()\nexport class SysClassHasTypePropertyApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysClassHasTypeProperty`.\n   */\n  public getModelName() {\n    return \"SysClassHasTypeProperty\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SysSystemRelevantClass } from '../../models/SysSystemRelevantClass';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `SysSystemRelevantClass` model.\n */\n@Injectable()\nexport class SysSystemRelevantClassApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Replace or create all items in the array.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{SysSystemRelevantClass}` - Array of SysSystemRelevantClass\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SysSystemRelevantClass` object.)\n   * </em>\n   */\n  public bulkReplaceOrCreate(data: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/SysSystemRelevantClasses/bulk-replace-or-create\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysSystemRelevantClass`.\n   */\n  public getModelName() {\n    return \"SysSystemRelevantClass\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PubAccount } from '../../models/PubAccount';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `PubAccount` model.\n */\n@Injectable()\nexport class PubAccountApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Get Roles of the Account\n   *\n   * @param {number} id \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `PubAccount` object.)\n   * </em>\n   */\n  public getRoles(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PubAccounts/:id/get-roles\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get a list of all projects associated with this account.\n   *\n   * @param {number} id \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `PubAccount` object.)\n   * </em>\n   */\n  public listProjects(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PubAccounts/:id/list-projects\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get all accounts with their project pks and their roles\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `PubAccount` object.)\n   * </em>\n   */\n  public withRolesAndProjects(customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PubAccounts/with-roles-and-projects\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Login a user with username/email and password.\n   *\n   * @param {string} include Related objects to include in the response. See the description of return value for more details.\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * The response body contains properties of the AccessToken created on login.\n   * Depending on the value of `include` parameter, the body may contain additional properties:\n   * \n   *   - `user` - `U+007BPubAccountU+007D` - Data of the currently logged in user. (`include=user`)\n   * \n   *\n   */\n  public login(credentials: any, include: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PubAccounts/login\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      credentials: credentials\n    };\n    let _urlParams: any = {};\n    if (typeof include !== 'undefined' && include !== null) _urlParams.include = include;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Logout a user with access token.\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public logout(customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/PubAccounts/logout\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `PubAccount`.\n   */\n  public getModelName() {\n    return \"PubAccount\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Email } from '../../models/Email';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `Email` model.\n */\n@Injectable()\nexport class EmailApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Email`.\n   */\n  public getModelName() {\n    return \"Email\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ProProject } from '../../models/ProProject';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { PubAccountProjectRel } from '../../models/PubAccountProjectRel';\nimport { PubAccount } from '../../models/PubAccount';\nimport { ProTextProperty } from '../../models/ProTextProperty';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { InfLanguage } from '../../models/InfLanguage';\nimport { InfPersistentItem } from '../../models/InfPersistentItem';\nimport { DatNamespace } from '../../models/DatNamespace';\n\n\n/**\n * Api services for the `ProProject` model.\n */\n@Injectable()\nexport class ProProjectApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Get the projects of account.\n   *\n   * @param {number} accountId Id of the account\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProProject` object.)\n   * </em>\n   */\n  public ofAccount(accountId: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProProjects/of-account\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof accountId !== 'undefined' && accountId !== null) _urlParams.accountId = accountId;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Create a new project with a label and a description.\n   *\n   * @param {number} accountId Id of account to associate the persistent item with.\n   *\n   * @param {string} pkLanguage Default language of the project, language of the label and the text property.\n   *\n   * @param {string} label Label of the project.\n   *\n   * @param {string} textProperty Description of the project.\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProProject` object.)\n   * </em>\n   */\n  public createWithLabelAndDescription(accountId: any, pkLanguage: any, label: any, textProperty: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProProjects/create-with-label-and-description\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof accountId !== 'undefined' && accountId !== null) _urlParams.accountId = accountId;\n    if (typeof pkLanguage !== 'undefined' && pkLanguage !== null) _urlParams.pkLanguage = pkLanguage;\n    if (typeof label !== 'undefined' && label !== null) _urlParams.label = label;\n    if (typeof textProperty !== 'undefined' && textProperty !== null) _urlParams.textProperty = textProperty;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get basic information about the project (language, name)\n   *\n   * @param {number} pkProject Pk of project\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProProject` object.)\n   * </em>\n   */\n  public getBasics(pkProject: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProProjects/get-basics\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProProject`.\n   */\n  public getModelName() {\n    return \"ProProject\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PubAccountProjectRel } from '../../models/PubAccountProjectRel';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { PubAccount } from '../../models/PubAccount';\nimport { ProProject } from '../../models/ProProject';\n\n\n/**\n * Api services for the `PubAccountProjectRel` model.\n */\n@Injectable()\nexport class PubAccountProjectRelApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `PubAccountProjectRel`.\n   */\n  public getModelName() {\n    return \"PubAccountProjectRel\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ProTextProperty } from '../../models/ProTextProperty';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProProject } from '../../models/ProProject';\nimport { InfLanguage } from '../../models/InfLanguage';\nimport { SysSystemType } from '../../models/SysSystemType';\n\n\n/**\n * Api services for the `ProTextProperty` model.\n */\n@Injectable()\nexport class ProTextPropertyApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Get the text-properties of the project.\n   *\n   * @param {number} pkProject Pk of the project\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProTextProperty` object.)\n   * </em>\n   */\n  public ofProject(pkProject: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProTextProperties/of-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Inserts or updates items in the array of ProTextProperty. If pk_entity is givenÂ and existing, an update is done, else an insert\n   *\n   * @param {number} pkProject Pk of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `items` â `{ProTextProperty}` - Array of ProTextPropertys\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProTextProperty` object.)\n   * </em>\n   */\n  public bulkUpsert(pkProject: any, items: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProTextProperties/bulk-upsert\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      items: items\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Dletes items in the array of ProTextProperty. Checks for each item if fk_project matches given pkProject \n   *\n   * @param {number} pkProject Pk of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `items` â `{ProTextProperty}` - Array of ProTextPropertys\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProTextProperty` object.)\n   * </em>\n   */\n  public bulkDelete(pkProject: any, items: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProTextProperties/bulk-delete\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      items: items\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProTextProperty`.\n   */\n  public getModelName() {\n    return \"ProTextProperty\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `ProInfoProjRel` model.\n */\n@Injectable()\nexport class ProInfoProjRelApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProInfoProjRel` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProInfoProjRels\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Marks the statement as favorite for the given fk_project.\n   *\n   * @param {number} pkProject fk_project\n   *\n   * @param {number} pkStatement fk_entity\n   *\n   * @param {object} data Request data.\n   *\n   *  - `isOutgoing` â `{boolean}` - True, if the statement is outgoing, else false\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProInfoProjRel` object.)\n   * </em>\n   */\n  public markStatementAsFavorite(pkProject: any, pkStatement: any, isOutgoing: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProInfoProjRels/mark-statement-as-favorite\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      isOutgoing: isOutgoing\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkStatement !== 'undefined' && pkStatement !== null) _urlParams.pkStatement = pkStatement;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Updates the ProInfoProjRel found by fk_project and fk_entity.\n   *\n   * @param {number} pkProject fk_project\n   *\n   * @param {number} pkEntity fk_entity\n   *\n   * @param {object} data Request data.\n   *\n   *  - `eprAttributes` â `{ProInfoProjRel}` - Instance of ProInfoProjRel (fk_project and fk_entity will be ignored)\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProInfoProjRel` object.)\n   * </em>\n   */\n  public updateEprAttributes(pkProject: any, pkEntity: any, eprAttributes: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProInfoProjRels/updateEprAttributes\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      eprAttributes: eprAttributes\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Updates the ProInfoProjRel of all found by fk_project and fk_entity.\n   *\n   * @param {number} pkProject fk_project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `items` â `{ProInfoProjRel}` - Array of ProInfoProjRel (fk_project must be equal to pkProject)\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProInfoProjRel` object.)\n   * </em>\n   */\n  public bulkUpdateEprAttributes(pkProject: any, items: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProInfoProjRels/bulk-update-attributes\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      items: items\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProInfoProjRel`.\n   */\n  public getModelName() {\n    return \"ProInfoProjRel\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DfhProfile } from '../../models/DfhProfile';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `DfhProfile` model.\n */\n@Injectable()\nexport class DfhProfileApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Get all profiles that are used by the given project.\n   *\n   * @param {number} pkProject Project pk\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DfhProfile` object.)\n   * </em>\n   */\n  public ofProject(pkProject: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DfhProfiles/of-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Pulls profile data including classes and properties from OntoMe and updates profile data in geovistory.\n   *\n   * @param {number} pkProfile OntoMe profile that should be added\n   *\n   * @param {string} requestedLanguage Language ISO Code for the preferred language of labels and descriptions to be loaded. Default language is 'en'.\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DfhProfile` object.)\n   * </em>\n   */\n  public updateFromOntoMe(pkProfile: any, requestedLanguage: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DfhProfiles/update-from-ontome\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProfile !== 'undefined' && pkProfile !== null) _urlParams.pkProfile = pkProfile;\n    if (typeof requestedLanguage !== 'undefined' && requestedLanguage !== null) _urlParams.requestedLanguage = requestedLanguage;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Pulls profile data including classes and properties from OntoMe andÂ adds profile to project.\n   *\n   * @param {number} pkProject Geovistory project to which the OntoMe profile should be added\n   *\n   * @param {number} pkProfile OntoMe profile that should be added\n   *\n   * @param {string} requestedLanguage Language ISO Code for the preferred language of labels and descriptions to be loaded. Default language is 'en'.\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DfhProfile` object.)\n   * </em>\n   */\n  public updateAndAddToProject(pkProject: any, pkProfile: any, requestedLanguage: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DfhProfiles/update-from-ontome-and-add-to-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkProfile !== 'undefined' && pkProfile !== null) _urlParams.pkProfile = pkProfile;\n    if (typeof requestedLanguage !== 'undefined' && requestedLanguage !== null) _urlParams.requestedLanguage = requestedLanguage;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates an activation report for the given OntoMe profile and the given Geovistory project.\n   *\n   * @param {number} pkProject Geovistory project for which the activation report should be created\n   *\n   * @param {number} pkProfile OntoMe profile for which the activation report should be created\n   *\n   * @param {string} requestedLanguage Language ISO Code for the preferred language of labels and descriptions to be loaded. Default language is 'en'.\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DfhProfile` object.)\n   * </em>\n   */\n  public getActivationReport(pkProject: any, pkProfile: any, requestedLanguage: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DfhProfiles/get-activation-report\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkProfile !== 'undefined' && pkProfile !== null) _urlParams.pkProfile = pkProfile;\n    if (typeof requestedLanguage !== 'undefined' && requestedLanguage !== null) _urlParams.requestedLanguage = requestedLanguage;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates an deactivation report for the given OntoMe profile and the given Geovistory project.\n   *\n   * @param {number} pkProject Geovistory project for which the deactivation report should be created\n   *\n   * @param {number} pkProfile OntoMe profile for which the deactivation report should be created\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DfhProfile` object.)\n   * </em>\n   */\n  public getDeactivationReport(pkProject: any, pkProfile: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DfhProfiles/get-deactivation-report\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkProfile !== 'undefined' && pkProfile !== null) _urlParams.pkProfile = pkProfile;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deavtivates an OntoMe profile for a Geovistory project.\n   *\n   * @param {number} pkProject Geovistory project for which the profile should be deactivated\n   *\n   * @param {number} pkProfile OntoMe profile to deactivate for the given Geovistory project\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DfhProfile` object.)\n   * </em>\n   */\n  public deactivateProfileForProject(pkProject: any, pkProfile: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DfhProfiles/deactivate-ontome-profile-for-geovistory-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkProfile !== 'undefined' && pkProfile !== null) _urlParams.pkProfile = pkProfile;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DfhProfile`.\n   */\n  public getModelName() {\n    return \"DfhProfile\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DfhLabel } from '../../models/DfhLabel';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `DfhLabel` model.\n */\n@Injectable()\nexport class DfhLabelApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Get all dfh labels needed by the given project.\n   *\n   * @param {number} pkProject Project pk\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DfhLabel` object.)\n   * </em>\n   */\n  public ofProject(pkProject: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DfhLabels/of-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DfhLabel`.\n   */\n  public getModelName() {\n    return \"DfhLabel\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter, } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DatChunk } from '../../models/DatChunk';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { DatDigital } from '../../models/DatDigital';\nimport { InfStatement } from '../../models/InfStatement';\nimport { DatNamespace } from '../../models/DatNamespace';\n\n\n/**\n * Api services for the `DatChunk` model.\n */\n@Injectable()\nexport class DatChunkApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http, connection, models, auth, errorHandler);\n  }\n\n  /**\n   * Get the chunks related to the digital, with their statements.\n   *\n   * @param {number} pkProject Primary key of the project\n   *\n   * @param {number} pkDigital Primary key of the digital\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DatChunk` object.)\n   * </em>\n   */\n  public ofDigital(pkProject: any, pkDigital: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/DatChunks/of-digital\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkDigital !== 'undefined' && pkDigital !== null) _urlParams.pkDigital = pkDigital;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatChunk`.\n   */\n  public getModelName() {\n    return \"DatChunk\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DatColumn } from '../../models/DatColumn';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { DatNamespace } from '../../models/DatNamespace';\n\n\n/**\n * Api services for the `DatColumn` model.\n */\n@Injectable()\nexport class DatColumnApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Get the columns related to the digital (table).\n   *\n   * @param {number} pkProject Primary key of the project\n   *\n   * @param {number} pkDigital Primary key of the digital\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DatColumn` object.)\n   * </em>\n   */\n  public ofDigital(pkProject: any, pkDigital: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DatColumns/of-digital\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkDigital !== 'undefined' && pkDigital !== null) _urlParams.pkDigital = pkDigital;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatColumn`.\n   */\n  public getModelName() {\n    return \"DatColumn\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DatTextProperty } from '../../models/DatTextProperty';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { DatNamespace } from '../../models/DatNamespace';\n\n\n/**\n * Api services for the `DatTextProperty` model.\n */\n@Injectable()\nexport class DatTextPropertyApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatTextProperty`.\n   */\n  public getModelName() {\n    return \"DatTextProperty\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DatDigital } from '../../models/DatDigital';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { DatNamespace } from '../../models/DatNamespace';\n\n\n/**\n * Api services for the `DatDigital` model.\n */\n@Injectable()\nexport class DatDigitalApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Creates or updates instances of DatDigital.\n   *\n   * @param {number} pkNamespace Namespace\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{DatDigital}` - Array DatDigital\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DatDigital` object.)\n   * </em>\n   */\n  public bulkUpsert(pkNamespace: any, data: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DatDigitals/bulk-upsert\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pkNamespace !== 'undefined' && pkNamespace !== null) _urlParams.pkNamespace = pkNamespace;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes instances of DatDigital.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `pks` â `{number}` - Array of Primary Key of DatDigitals\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DatDigital` object.)\n   * </em>\n   */\n  public bulkDelete(pks: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DatDigitals/delete-delete\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      pks: pks\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Finds the version of given digital. If no version specified, latest is returned.\n   *\n   * @param {number} pkEntity Primary Key of the digital object (pk_entity)\n   *\n   * @param {number} entityVersion Primary Key of the digital object (entity_version)\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DatDigital` object.)\n   * </em>\n   */\n  public getVersion(pkEntity: any, entityVersion: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DatDigitals/get-version\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    if (typeof entityVersion !== 'undefined' && entityVersion !== null) _urlParams.entityVersion = entityVersion;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get page of table\n   *\n   * @param {number} pkProject Pk of the project.\n   *\n   * @param {number} pkEntity Pk of the table digital.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `options` â `{object}` - options\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DatDigital` object.)\n   * </em>\n   */\n  public getTablePage(pkProject: any, pkEntity: any, options: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DatDigitals/getTablePage\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      options: options\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatDigital`.\n   */\n  public getModelName() {\n    return \"DatDigital\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SysAppContext } from '../../models/SysAppContext';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `SysAppContext` model.\n */\n@Injectable()\nexport class SysAppContextApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Get the App Configuration for classes.\n   *\n   * @param {number} pk_app_context pk_entity of app_context\n   *\n   * @param {number} pk_project pk_project of project\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SysAppContext` object.)\n   * </em>\n   */\n  public appContext(pk_app_context: any = {}, pk_project: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/SysAppContexts/app-context\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pk_app_context !== 'undefined' && pk_app_context !== null) _urlParams.pk_app_context = pk_app_context;\n    if (typeof pk_project !== 'undefined' && pk_project !== null) _urlParams.pk_project = pk_project;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysAppContext`.\n   */\n  public getModelName() {\n    return \"SysAppContext\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter, } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ProClassFieldConfig } from '../../models/ProClassFieldConfig';\nimport { SocketConnection } from '../../sockets/socket.connections';\n// import { DfhProperty } from '../../models/DfhProperty';\nimport { SysClassField } from '../../models/SysClassField';\nimport { ProProject } from '../../models/ProProject';\n\n\n/**\n * Api services for the `ProClassFieldConfig` model.\n */\n@Injectable()\nexport class ProClassFieldConfigApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http, connection, models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProClassFieldConfig` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/ProClassFieldConfigs\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Find ProClassFieldConfig of project\n   *\n   * @param {number} pkProject Pk of the project\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProClassFieldConfig` object.)\n   * </em>\n   */\n  public ofProject(pkProject: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/ProClassFieldConfigs/of-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates or updates instances of ProClassFieldConfig.\n   *\n   * @param {number} pkProject Pk of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{ProClassFieldConfig}` - Array ProClassFieldConfig\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProClassFieldConfig` object.)\n   * </em>\n   */\n  public bulkUpsert(pkProject: any, data: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/ProClassFieldConfigs/bulk-upsert\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes instances of ProClassFieldConfig.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `pks` â `{number}` - Array of Primary Key of ProClassFieldConfigs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProClassFieldConfig` object.)\n   * </em>\n   */\n  public bulkDelete(pks: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/ProClassFieldConfigs/bulk-delete\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      pks: pks\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProClassFieldConfig`.\n   */\n  public getModelName() {\n    return \"ProClassFieldConfig\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ProDfhClassProjRel } from '../../models/ProDfhClassProjRel';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `ProDfhClassProjRel` model.\n */\n@Injectable()\nexport class ProDfhClassProjRelApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Find ProDfhClassProjRel of project\n   *\n   * @param {number} pkProject Pk of the project\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProDfhClassProjRel` object.)\n   * </em>\n   */\n  public ofProject(pkProject: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProDfhClassProjRels/of-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates or updates instances of ProDfhClassProjRel.\n   *\n   * @param {number} pkProject Project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{ProDfhClassProjRel}` - Array ProDfhClassProjRel\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProDfhClassProjRel` object.)\n   * </em>\n   */\n  public bulkUpsert(pkProject: any, data: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProDfhClassProjRels/bulk-upsert\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProDfhClassProjRel`.\n   */\n  public getModelName() {\n    return \"ProDfhClassProjRel\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ProDfhProfileProjRel } from '../../models/ProDfhProfileProjRel';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `ProDfhProfileProjRel` model.\n */\n@Injectable()\nexport class ProDfhProfileProjRelApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Find ProDfhProfileProjRel of project where enabled is true\n   *\n   * @param {number} pkProject Pk of the project\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProDfhProfileProjRel` object.)\n   * </em>\n   */\n  public ofProject(pkProject: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProDfhProfileProjRels/of-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates or updates instances of ProDfhProfileProjRel.\n   *\n   * @param {number} pkProject Project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{ProDfhProfileProjRel}` - Array ProDfhProfileProjRel\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ProDfhProfileProjRel` object.)\n   * </em>\n   */\n  public bulkUpsert(pkProject: any, data: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/ProDfhProfileProjRels/bulk-upsert\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ProDfhProfileProjRel`.\n   */\n  public getModelName() {\n    return \"ProDfhProfileProjRel\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfAppellation } from '../../models/InfAppellation';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { InfStatement } from '../../models/InfStatement';\n\n\n/**\n * Api services for the `InfAppellation` model.\n */\n@Injectable()\nexport class InfAppellationApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfAppellation`.\n   */\n  public getModelName() {\n    return \"InfAppellation\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfLangString } from '../../models/InfLangString';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { InfStatement } from '../../models/InfStatement';\nimport { InfLanguage } from '../../models/InfLanguage';\n\n\n/**\n * Api services for the `InfLangString` model.\n */\n@Injectable()\nexport class InfLangStringApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfLangString`.\n   */\n  public getModelName() {\n    return \"InfLangString\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfDimension } from '../../models/InfDimension';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { InfStatement } from '../../models/InfStatement';\nimport { InfPersistentItem } from '../../models/InfPersistentItem';\n\n\n/**\n * Api services for the `InfDimension` model.\n */\n@Injectable()\nexport class InfDimensionApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfDimension`.\n   */\n  public getModelName() {\n    return \"InfDimension\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfTemporalEntity } from '../../models/InfTemporalEntity';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { InfStatement } from '../../models/InfStatement';\nimport { InfTextProperty } from '../../models/InfTextProperty';\n\n\n/**\n * Api services for the `InfTemporalEntity` model.\n */\n@Injectable()\nexport class InfTemporalEntityApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Find or create many information temporal entities.\n   *\n   * @param {number} pk_project Pk of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{InfTemporalEntity}` - data\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfTemporalEntity` object.)\n   * </em>\n   */\n  public findOrCreateInfTemporalEntities(pk_project: any, data: any, customHeaders?: Function): Observable<InfTemporalEntity[]> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfTemporalEntities/find-or-create-many\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pk_project !== 'undefined' && pk_project !== null) _urlParams.pk_project = pk_project;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<InfTemporalEntity>) =>\n        instances.map((instance: InfTemporalEntity) => new InfTemporalEntity(instance))\n    ));\n  }\n\n  /**\n   * Get a flat object of temporal entities.\n   *\n   * @param {number} pkProject Pk of the project.\n   *\n   * @param {number} pkSourceEntity Pk of the source entity to which the temporal entities are related.\n   *\n   * @param {number} pkProperty Pk of the property leading from source entity to the temporal entities.\n   *\n   * @param {number} pkTargetClass Fk class of the target temporal entities.\n   *\n   * @param {boolean} isOutgoing If true, the source entity is domain, else range.\n   *\n   * @param {number} limit number of returned temporal entities.\n   *\n   * @param {number} offset offset of the segment of returned temporal entities.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfTemporalEntity` object.)\n   * </em>\n   */\n  public alternativeTemporalEntityList(pkProject: any, pkSourceEntity: any, pkProperty: any, pkTargetClass: any, isOutgoing: any, limit: any, offset: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfTemporalEntities/paginated-list-alternatives\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkSourceEntity !== 'undefined' && pkSourceEntity !== null) _urlParams.pkSourceEntity = pkSourceEntity;\n    if (typeof pkProperty !== 'undefined' && pkProperty !== null) _urlParams.pkProperty = pkProperty;\n    if (typeof pkTargetClass !== 'undefined' && pkTargetClass !== null) _urlParams.pkTargetClass = pkTargetClass;\n    if (typeof isOutgoing !== 'undefined' && isOutgoing !== null) _urlParams.isOutgoing = isOutgoing;\n    if (typeof limit !== 'undefined' && limit !== null) _urlParams.limit = limit;\n    if (typeof offset !== 'undefined' && offset !== null) _urlParams.offset = offset;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get a flat object of temporal entities.\n   *\n   * @param {number} pkProject Pk of the project.\n   *\n   * @param {number} pkSourceEntity Pk of the source entity to which the temporal entities are related.\n   *\n   * @param {number} pkProperty Pk of the property leading from source entity to the temporal entities.\n   *\n   * @param {number} pkTargetClass Fk class of the target temporal entities.\n   *\n   * @param {boolean} isOutgoing If true, the source entity is domain, else range.\n   *\n   * @param {number} limit number of returned temporal entities.\n   *\n   * @param {number} offset offset of the segment of returned temporal entities.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfTemporalEntity` object.)\n   * </em>\n   */\n  public temporalEntityList(pkProject: any, pkSourceEntity: any, pkProperty: any, pkTargetClass: any, isOutgoing: any, limit: any, offset: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfTemporalEntities/paginated-list\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkSourceEntity !== 'undefined' && pkSourceEntity !== null) _urlParams.pkSourceEntity = pkSourceEntity;\n    if (typeof pkProperty !== 'undefined' && pkProperty !== null) _urlParams.pkProperty = pkProperty;\n    if (typeof pkTargetClass !== 'undefined' && pkTargetClass !== null) _urlParams.pkTargetClass = pkTargetClass;\n    if (typeof isOutgoing !== 'undefined' && isOutgoing !== null) _urlParams.isOutgoing = isOutgoing;\n    if (typeof limit !== 'undefined' && limit !== null) _urlParams.limit = limit;\n    if (typeof offset !== 'undefined' && offset !== null) _urlParams.offset = offset;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get e schema object of own properties of the temporal entity in project version.\n   *\n   * @param {number} pkProject Pk project\n   *\n   * @param {number} pkEntity Primary Key of the temporal entity (pk_entity)\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfTemporalEntity` object.)\n   * </em>\n   */\n  public ownProperties(pkProject: any, pkEntity: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfTemporalEntities/own-properties\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Find or create a temporal entity version.\n   *\n   * @param {number} pkProject Id of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{InfTemporalEntity}` - data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfTemporalEntity` object.)\n   * </em>\n   */\n  public findOrCreateInfTemporalEntity(pkProject: any, data: any, customHeaders?: Function): Observable<InfTemporalEntity[]> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfTemporalEntities/findOrCreate\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<InfTemporalEntity>) =>\n        instances.map((instance: InfTemporalEntity) => new InfTemporalEntity(instance))\n    ));\n  }\n\n  /**\n   * Relate a nested object of a InfTemporalEntity to the project.\n   *\n   * @param {number} pkProject Id of the project\n   *\n   * @param {boolean} isInProject Include or exclude from project.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{InfTemporalEntity}` - data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfTemporalEntity` object.)\n   * </em>\n   */\n  public changeTeEntProjectRelation(pkProject: any, isInProject: any, data: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfTemporalEntities/change-project-relation\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof isInProject !== 'undefined' && isInProject !== null) _urlParams.isInProject = isInProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfTemporalEntity`.\n   */\n  public getModelName() {\n    return \"InfTemporalEntity\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfStatement } from '../../models/InfStatement';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { InfTemporalEntity } from '../../models/InfTemporalEntity';\nimport { DatDigital } from '../../models/DatDigital';\nimport { DatChunk } from '../../models/DatChunk';\nimport { InfAppellation } from '../../models/InfAppellation';\nimport { InfLangString } from '../../models/InfLangString';\nimport { InfDimension } from '../../models/InfDimension';\nimport { InfLanguage } from '../../models/InfLanguage';\nimport { InfPersistentItem } from '../../models/InfPersistentItem';\nimport { InfTimePrimitive } from '../../models/InfTimePrimitive';\nimport { InfPlace } from '../../models/InfPlace';\n\n\n/**\n * Api services for the `InfStatement` model.\n */\n@Injectable()\nexport class InfStatementApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Get a flat object of entity previews, that are target of a list.\n   *\n   * @param {number} pkProject Pk of the project.\n   *\n   * @param {number} pkSourceEntity Pk of the source entity to which the entity previews, that are target of a list are related.\n   *\n   * @param {number} pkProperty Pk of the property leading from source entity to the entity previews, that are target of a list.\n   *\n   * @param {number} pkTargetClass Fk class of the target entity previews, that are target of a list.\n   *\n   * @param {boolean} isOutgoing If true, the source entity is domain, else range.\n   *\n   * @param {number} limit number of returned entity previews, that are target of a list.\n   *\n   * @param {number} offset offset of the segment of returned entity previews, that are target of a list.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfStatement` object.)\n   * </em>\n   */\n  public paginatedListTargetingEntityPreviews(pkProject: any, pkSourceEntity: any, pkProperty: any, pkTargetClass: any, isOutgoing: any, limit: any, offset: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfStatements/paginated-list-targeting-entity-previews\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkSourceEntity !== 'undefined' && pkSourceEntity !== null) _urlParams.pkSourceEntity = pkSourceEntity;\n    if (typeof pkProperty !== 'undefined' && pkProperty !== null) _urlParams.pkProperty = pkProperty;\n    if (typeof pkTargetClass !== 'undefined' && pkTargetClass !== null) _urlParams.pkTargetClass = pkTargetClass;\n    if (typeof isOutgoing !== 'undefined' && isOutgoing !== null) _urlParams.isOutgoing = isOutgoing;\n    if (typeof limit !== 'undefined' && limit !== null) _urlParams.limit = limit;\n    if (typeof offset !== 'undefined' && offset !== null) _urlParams.offset = offset;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Find or create information statement.\n   *\n   * @param {number} pk_project Id of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{InfStatement}` - data\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfStatement` object.)\n   * </em>\n   */\n  public findOrCreateInfStatements(pk_project: any, data: any, customHeaders?: Function): Observable<InfStatement[]> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfStatements/find-or-create-many\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pk_project !== 'undefined' && pk_project !== null) _urlParams.pk_project = pk_project;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<InfStatement>) =>\n        instances.map((instance: InfStatement) => new InfStatement(instance))\n    ));\n  }\n\n  /**\n   * Get statements (with children) of given fkProperty and fkEntity from Repo that are not in project of given projectId.\n   *\n   * @param {number} entityPk Key of the persistent item (fk_object_info)\n   *\n   * @param {number} propertyPk Key of the property (fk_property)\n   *\n   * @param {number} pkProject Id of the the current project\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfStatement` object.)\n   * </em>\n   */\n  public alternativesNotInProjectByEntityPk(entityPk: any, propertyPk: any, pkProject: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfStatements/alternatives-not-in-project-by-entity-pk\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof entityPk !== 'undefined' && entityPk !== null) _urlParams.entityPk = entityPk;\n    if (typeof propertyPk !== 'undefined' && propertyPk !== null) _urlParams.propertyPk = propertyPk;\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get statements (with children) of given propertyPk and teEntPk from Repo that are not in project of given projectId.\n   *\n   * @param {number} teEntPk Key of the temporal entity (fk_subject_info)\n   *\n   * @param {number} propertyPk Key of the property (fk_property)\n   *\n   * @param {number} pkProject Id of the the current project\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfStatement` object.)\n   * </em>\n   */\n  public alternativesNotInProjectByTeEntPk(teEntPk: any, propertyPk: any, pkProject: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfStatements/alternatives-not-in-project-by-te-ent-pk\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof teEntPk !== 'undefined' && teEntPk !== null) _urlParams.teEntPk = teEntPk;\n    if (typeof propertyPk !== 'undefined' && propertyPk !== null) _urlParams.propertyPk = propertyPk;\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get an nested object of statement with everything needed to display the links made from an entity towards sources and digitals.\n   *\n   * @param {boolean} ofProject if true, finds project version. if false, finds repo version.\n   *\n   * @param {number} pkProject Primary Key of the Project.\n   *\n   * @param {number} pkEntity Primary Key of the entity for which the sources links are needed.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfStatement` object.)\n   * </em>\n   */\n  public sourcesAndDigitalsOfEntity(ofProject: any, pkProject: any = {}, pkEntity: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfStatements/sources-and-digitals-of-entity\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof ofProject !== 'undefined' && ofProject !== null) _urlParams.ofProject = ofProject;\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Find statements by params.\n   *\n   * @param {boolean} ofProject if true, finds project version. if false, finds repo version.\n   *\n   * @param {number} pkProject Primary Key of the Project. If provided and ofProject=false, makes a left join with project\n   *\n   * @param {number} pkEntity Primary Key of the statement (pk_entity)\n   *\n   * @param {number} pkInfoRange Foreign Key of the statement pointing to the range entity (fk_object_info)\n   *\n   * @param {number} pkInfoDomain Foreign Key of the statement pointing to the domain entity (fk_subject_info)\n   *\n   * @param {number} pkProperty Foreign Key of the statement pointing to the property (fk_property)\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfStatement` object.)\n   * </em>\n   */\n  public queryByParams(ofProject: any, pkProject: any = {}, pkEntity: any = {}, pkInfoRange: any = {}, pkInfoDomain: any = {}, pkProperty: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfStatements/find-by-params\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof ofProject !== 'undefined' && ofProject !== null) _urlParams.ofProject = ofProject;\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    if (typeof pkInfoRange !== 'undefined' && pkInfoRange !== null) _urlParams.pkInfoRange = pkInfoRange;\n    if (typeof pkInfoDomain !== 'undefined' && pkInfoDomain !== null) _urlParams.pkInfoDomain = pkInfoDomain;\n    if (typeof pkProperty !== 'undefined' && pkProperty !== null) _urlParams.pkProperty = pkProperty;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfStatement`.\n   */\n  public getModelName() {\n    return \"InfStatement\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfLanguage } from '../../models/InfLanguage';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\n\n\n/**\n * Api services for the `InfLanguage` model.\n */\n@Injectable()\nexport class InfLanguageApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Perform a ranked search on languages by search string.\n   *\n   * @param {string} queryString \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfLanguage` object.)\n   * </em>\n   */\n  public queryByString(queryString: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfLanguages/query-by-string\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof queryString !== 'undefined' && queryString !== null) _urlParams.queryString = queryString;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfLanguage`.\n   */\n  public getModelName() {\n    return \"InfLanguage\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter, } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfPersistentItem } from '../../models/InfPersistentItem';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { InfStatement } from '../../models/InfStatement';\nimport { InfTextProperty } from '../../models/InfTextProperty';\n\n\n/**\n * Api services for the `InfPersistentItem` model.\n */\n@Injectable()\nexport class InfPersistentItemApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http, connection, models, auth, errorHandler);\n  }\n\n  /**\n   * Find or create many information persistent items.\n   *\n   * @param {number} pk_project Pk of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{InfPersistentItem}` - data\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfPersistentItem` object.)\n   * </em>\n   */\n  public findOrCreateInfPersistentItems(pk_project: any, data: any, customHeaders?: Function): Observable<InfPersistentItem[]> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/InfPersistentItems/find-or-create-many\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pk_project !== 'undefined' && pk_project !== null) _urlParams.pk_project = pk_project;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<InfPersistentItem>) =>\n      instances.map((instance: InfPersistentItem) => new InfPersistentItem(instance))\n    ));\n  }\n\n  /**\n   * Get only miminal properties of persistent item.\n   *\n   * @param {number} pkProject Pk of the project.\n   *\n   * @param {number} pkEntity Pk of the entity.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfPersistentItem` object.)\n   * </em>\n   */\n  public ownProperties(pkProject: any, pkEntity: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/InfPersistentItems/own-properties\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get a minimal nested object of all types in the project.\n   *\n   * @param {number} pkProject Pk of the project.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfPersistentItem` object.)\n   * </em>\n   */\n  public typesOfProject(pkProject: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/InfPersistentItems/types-of-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Find types of typed class and project. E.g. get the types for the class 'histC8 Geographical Place' (pk_typed_class=363) used in project (pk_project=123)\n   *\n   * @param {number} pk_project Primary Key of Project\n   *\n   * @param {number} pk_typed_classes Primary Keyes of Typed Classes (e.g. pk of Geographical Place to get Geographical Place Types)\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfPersistentItem` object.)\n   * </em>\n   */\n  public typesOfClassesAndProject(pk_project: any, pk_typed_classes: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/InfPersistentItems/types-of-classes-and-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pk_project !== 'undefined' && pk_project !== null) _urlParams.pk_project = pk_project;\n    if (typeof pk_typed_classes !== 'undefined' && pk_typed_classes !== null) _urlParams.pk_typed_classes = pk_typed_classes;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Find one type by pk_entityÂ with appellations and text properties.\n   *\n   * @param {number} pk_project Primary Key of Project\n   *\n   * @param {number} pk_entity Primary Key of the type. Provide this if you want to query one specific type.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfPersistentItem` object.)\n   * </em>\n   */\n  public typeNested(pk_project: any, pk_entity: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n      \"/InfPersistentItems/type-nested\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pk_project !== 'undefined' && pk_project !== null) _urlParams.pk_project = pk_project;\n    if (typeof pk_entity !== 'undefined' && pk_entity !== null) _urlParams.pk_entity = pk_entity;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfPersistentItem`.\n   */\n  public getModelName() {\n    return \"InfPersistentItem\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfTimePrimitive } from '../../models/InfTimePrimitive';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\n\n\n/**\n * Api services for the `InfTimePrimitive` model.\n */\n@Injectable()\nexport class InfTimePrimitiveApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfTimePrimitive`.\n   */\n  public getModelName() {\n    return \"InfTimePrimitive\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfPlace } from '../../models/InfPlace';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\n\n\n/**\n * Api services for the `InfPlace` model.\n */\n@Injectable()\nexport class InfPlaceApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Find or create a InfPlace and update the project relation if needed.\n   *\n   * @param {number} projectId Id of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{InfPlace}` - data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfPlace` object.)\n   * </em>\n   */\n  public findOrCreatePlace(projectId: any, data: any, customHeaders?: Function): Observable<InfPlace[]> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfPlaces/findOrCreate\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof projectId !== 'undefined' && projectId !== null) _urlParams.projectId = projectId;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<InfPlace>) =>\n        instances.map((instance: InfPlace) => new InfPlace(instance))\n    ));\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfPlace`.\n   */\n  public getModelName() {\n    return \"InfPlace\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DatNamespace } from '../../models/DatNamespace';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `DatNamespace` model.\n */\n@Injectable()\nexport class DatNamespaceApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Finds namespaces of a project.\n   *\n   * @param {number} pkProject Key of the Project for which the namespaces should be found.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DatNamespace` object.)\n   * </em>\n   */\n  public byProject(pkProject: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DatNamespaces/find-by-project\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DatNamespace`.\n   */\n  public getModelName() {\n    return \"DatNamespace\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { InfTextProperty } from '../../models/InfTextProperty';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { ProInfoProjRel } from '../../models/ProInfoProjRel';\nimport { InfPersistentItem } from '../../models/InfPersistentItem';\nimport { InfTemporalEntity } from '../../models/InfTemporalEntity';\nimport { InfLanguage } from '../../models/InfLanguage';\nimport { SysClassField } from '../../models/SysClassField';\n\n\n/**\n * Api services for the `InfTextProperty` model.\n */\n@Injectable()\nexport class InfTextPropertyApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Find or create information text properties.\n   *\n   * @param {number} pk_project Id of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{InfTextProperty}` - data\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfTextProperty` object.)\n   * </em>\n   */\n  public findOrCreateInfTextProperties(pk_project: any, data: any, customHeaders?: Function): Observable<InfTextProperty[]> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfTextProperties/find-or-create-many\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pk_project !== 'undefined' && pk_project !== null) _urlParams.pk_project = pk_project;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<InfTextProperty>) =>\n        instances.map((instance: InfTextProperty) => new InfTextProperty(instance))\n    ));\n  }\n\n  /**\n   * Find or create a InfTextProperty and update the project relation if needed.\n   *\n   * @param {number} pkProject Pk of the project\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` â `{InfTextProperty}` - data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfTextProperty` object.)\n   * </em>\n   */\n  public findOrCreateInfTextProperty(pkProject: any, data: any, customHeaders?: Function): Observable<InfTextProperty[]> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfTextProperties/findOrCreate\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<InfTextProperty>) =>\n        instances.map((instance: InfTextProperty) => new InfTextProperty(instance))\n    ));\n  }\n\n  /**\n   * Find all InfTextProperties that are not yet added to the given project.\n   *\n   * @param {number} pkProject Pk of the project\n   *\n   * @param {number} pkEntity fk of the concerned entity\n   *\n   * @param {number} pkClassField fk of the class field\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `InfTextProperty` object.)\n   * </em>\n   */\n  public findAlternativeTextProperties(pkProject: any, pkEntity: any, pkClassField: any, customHeaders?: Function): Observable<InfTextProperty[]> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/InfTextProperties/findAlternativeTextProperties\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof pkProject !== 'undefined' && pkProject !== null) _urlParams.pkProject = pkProject;\n    if (typeof pkEntity !== 'undefined' && pkEntity !== null) _urlParams.pkEntity = pkEntity;\n    if (typeof pkClassField !== 'undefined' && pkClassField !== null) _urlParams.pkClassField = pkClassField;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<InfTextProperty>) =>\n        instances.map((instance: InfTextProperty) => new InfTextProperty(instance))\n    ));\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `InfTextProperty`.\n   */\n  public getModelName() {\n    return \"InfTextProperty\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SysSystemType } from '../../models/SysSystemType';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `SysSystemType` model.\n */\n@Injectable()\nexport class SysSystemTypeApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SysSystemType`.\n   */\n  public getModelName() {\n    return \"SysSystemType\";\n  }\n}\n","/* tslint:disable */\nexport * from './auth.service';\nexport * from './error.service';\nexport * from './base.service';\nexport * from './real.time';\n","/* tslint:disable */\nexport * from './SchemaObject';\nexport * from './SysClassFieldPropertyRel';\nexport * from './SysClassField';\nexport * from './SysClassHasTypeProperty';\nexport * from './SysSystemRelevantClass';\nexport * from './PubAccount';\nexport * from './Email';\nexport * from './ProProject';\nexport * from './PubAccountProjectRel';\nexport * from './ProTextProperty';\nexport * from './ProInfoProjRel';\nexport * from './DfhProfile';\nexport * from './DfhLabel';\nexport * from './DatChunk';\nexport * from './DatColumn';\nexport * from './DatTextProperty';\nexport * from './DatDigital';\nexport * from './SysAppContext';\nexport * from './ProClassFieldConfig';\nexport * from './ProDfhClassProjRel';\nexport * from './ProDfhProfileProjRel';\nexport * from './InfAppellation';\nexport * from './InfLangString';\nexport * from './InfDimension';\nexport * from './InfTemporalEntity';\nexport * from './InfStatement';\nexport * from './InfLanguage';\nexport * from './InfPersistentItem';\nexport * from './InfTimePrimitive';\nexport * from './InfPlace';\nexport * from './DatNamespace';\nexport * from './InfTextProperty';\nexport * from './SysSystemType';\nexport * from './SDKModels';\nexport * from './logger.service';\n","/* tslint:disable */\nexport * from './core/index';\nexport * from './custom/index';\n","/* tslint:disable */\n/**\n* @module SDKModule\n* @author Jonathan Casarrubias <t:@johncasarrubias> <gh:jonathan-casarrubias>\n* @license MIT 2016 Jonathan Casarrubias\n* @version 2.1.0\n* @description\n* The SDKModule is a generated Software Development Kit automatically built by\n* the LoopBack SDK Builder open source module.\n*\n* The SDKModule provides Angular 2 >= RC.5 support, which means that NgModules\n* can import this Software Development Kit as follows:\n*\n*\n* APP Route Module Context\n* ============================================================================\n* import { NgModule }       from '@angular/core';\n* import { BrowserModule }  from '@angular/platform-browser';\n* // App Root\n* import { AppComponent }   from './app.component';\n* // Feature Modules\n* import { SDK[Browser|Node|Native]Module } from './shared/sdk/sdk.module';\n* // Import Routing\n* import { routing }        from './app.routing';\n* @NgModule({\n*  imports: [\n*    BrowserModule,\n*    routing,\n*    SDK[Browser|Node|Native]Module.forRoot()\n*  ],\n*  declarations: [ AppComponent ],\n*  bootstrap:    [ AppComponent ]\n* })\n* export class AppModule { }\n*\n**/\nimport { ErrorHandler } from './services/core/error.service';\nimport { LoopBackAuth } from './services/core/auth.service';\nimport { LoggerService } from './services/custom/logger.service';\nimport { SDKModels } from './services/custom/SDKModels';\nimport { InternalStorage, SDKStorage } from './storage/storage.swaps';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CookieBrowser } from './storage/cookie.browser';\nimport { StorageBrowser } from './storage/storage.browser';\nimport { SocketBrowser } from './sockets/socket.browser';\nimport { SocketDriver } from './sockets/socket.driver';\nimport { SocketConnection } from './sockets/socket.connections';\nimport { RealTime } from './services/core/real.time';\nimport { SchemaObjectApi } from './services/custom/SchemaObject';\nimport { SysClassFieldPropertyRelApi } from './services/custom/SysClassFieldPropertyRel';\nimport { SysClassFieldApi } from './services/custom/SysClassField';\nimport { SysClassHasTypePropertyApi } from './services/custom/SysClassHasTypeProperty';\nimport { SysSystemRelevantClassApi } from './services/custom/SysSystemRelevantClass';\nimport { PubAccountApi } from './services/custom/PubAccount';\nimport { EmailApi } from './services/custom/Email';\nimport { ProProjectApi } from './services/custom/ProProject';\nimport { PubAccountProjectRelApi } from './services/custom/PubAccountProjectRel';\nimport { ProTextPropertyApi } from './services/custom/ProTextProperty';\nimport { ProInfoProjRelApi } from './services/custom/ProInfoProjRel';\nimport { DfhProfileApi } from './services/custom/DfhProfile';\nimport { DfhLabelApi } from './services/custom/DfhLabel';\nimport { DatChunkApi } from './services/custom/DatChunk';\nimport { DatColumnApi } from './services/custom/DatColumn';\nimport { DatTextPropertyApi } from './services/custom/DatTextProperty';\nimport { DatDigitalApi } from './services/custom/DatDigital';\nimport { SysAppContextApi } from './services/custom/SysAppContext';\nimport { ProClassFieldConfigApi } from './services/custom/ProClassFieldConfig';\nimport { ProDfhClassProjRelApi } from './services/custom/ProDfhClassProjRel';\nimport { ProDfhProfileProjRelApi } from './services/custom/ProDfhProfileProjRel';\nimport { InfAppellationApi } from './services/custom/InfAppellation';\nimport { InfLangStringApi } from './services/custom/InfLangString';\nimport { InfDimensionApi } from './services/custom/InfDimension';\nimport { InfTemporalEntityApi } from './services/custom/InfTemporalEntity';\nimport { InfStatementApi } from './services/custom/InfStatement';\nimport { InfLanguageApi } from './services/custom/InfLanguage';\nimport { InfPersistentItemApi } from './services/custom/InfPersistentItem';\nimport { InfTimePrimitiveApi } from './services/custom/InfTimePrimitive';\nimport { InfPlaceApi } from './services/custom/InfPlace';\nimport { DatNamespaceApi } from './services/custom/DatNamespace';\nimport { InfTextPropertyApi } from './services/custom/InfTextProperty';\nimport { SysSystemTypeApi } from './services/custom/SysSystemType';\n/**\n* @module SDKBrowserModule\n* @description\n* This module should be imported when building a Web Application in the following scenarios:\n*\n*  1.- Regular web application\n*  2.- Angular universal application (Browser Portion)\n*  3.- Progressive applications (Angular Mobile, Ionic, WebViews, etc)\n**/\n@NgModule({\n  imports: [CommonModule, HttpClientModule],\n  declarations: [],\n  exports: [],\n  providers: [\n    ErrorHandler,\n    SocketConnection\n  ]\n})\nexport class SDKBrowserModule {\n  static forRoot(internalStorageProvider: any = {\n    provide: InternalStorage,\n    useClass: CookieBrowser\n  }): ModuleWithProviders {\n    return {\n      ngModule: SDKBrowserModule,\n      providers: [\n        LoopBackAuth,\n        LoggerService,\n        SDKModels,\n        RealTime,\n        SchemaObjectApi,\n        SysClassFieldPropertyRelApi,\n        SysClassFieldApi,\n        SysClassHasTypePropertyApi,\n        SysSystemRelevantClassApi,\n        PubAccountApi,\n        EmailApi,\n        ProProjectApi,\n        PubAccountProjectRelApi,\n        ProTextPropertyApi,\n        ProInfoProjRelApi,\n        DfhProfileApi,\n        DfhLabelApi,\n        DatChunkApi,\n        DatColumnApi,\n        DatTextPropertyApi,\n        DatDigitalApi,\n        SysAppContextApi,\n        ProClassFieldConfigApi,\n        ProDfhClassProjRelApi,\n        ProDfhProfileProjRelApi,\n        InfAppellationApi,\n        InfLangStringApi,\n        InfDimensionApi,\n        InfTemporalEntityApi,\n        InfStatementApi,\n        InfLanguageApi,\n        InfPersistentItemApi,\n        InfTimePrimitiveApi,\n        InfPlaceApi,\n        DatNamespaceApi,\n        InfTextPropertyApi,\n        SysSystemTypeApi,\n        internalStorageProvider,\n        { provide: SDKStorage, useClass: StorageBrowser },\n        { provide: SocketDriver, useClass: SocketBrowser }\n      ]\n    };\n  }\n}\n/**\n* Have Fun!!!\n* - Jon\n**/\nexport * from './models/index';\nexport * from './services/index';\nexport * from './lb.config';\nexport * from './storage/storage.swaps';\nexport { CookieBrowser } from './storage/cookie.browser';\nexport { StorageBrowser } from './storage/storage.browser';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {SocketBrowser as Éµc} from './sockets/socket.browser';\nexport {SocketConnection as Éµa} from './sockets/socket.connections';\nexport {SocketDriver as Éµb} from './sockets/socket.driver';"],"names":["tslib_1.__param"],"mappings":"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"}