/* You can add global styles to this file, and also import other style files */

/* You can add global styles to this file, and also import other style files */

/**
* Bootstrap
* Bootstrap variables are customized in src/assets/scss/bootstrap-variables.scss
*/

@import "src/assets/scss/bootstrap";
$font-size-xs: .68rem;

/**
* Components
* Styles for one angular component or multiple angular components with
* the same visual design (e.g. naming and additional info).
*/

// Project List
@import "src/assets/scss/components/_project_list";
// Project Dashboard
@import "src/assets/scss/components/_project_dashboard";
// List of Names or Additional Infos
@import "src/assets/scss/components/_name_info_list";
// Name / Additional Info
@import "src/assets/scss/components/_name_info";
// Name Part / Property Alternative
@import "src/assets/scss/components/_namepart_infoproperty";
// Name Parts View
@import "src/assets/scss/components/_name_parts_view";
// Name Version
@import "src/assets/scss/components/_name_version";
// Editor
@import "src/assets/scss/components/_edit";
// Project Entities
@import "src/assets/scss/components/_project_entities";
// Search hit
@import "src/assets/scss/components/_search_hit";
// Entity Add Modal
@import "src/assets/scss/components/_entity_add_modal";
// Entity Add Modal
@import "src/assets/scss/components/_version_modal";
// Entity Add Modal
@import "src/assets/scss/components/_appellation_label_editor";
/**
* Generic stuff
*/

body {
    background-color: $gray-100;
}

.container {
    min-width: 63rem;
    margin-top: 2rem;
}

button {
    cursor: pointer;
}

// generate .bg-gray-* classes
@each $color,
$value in $grays {
    @include bg-variant(".bg-gray-#{$color}", $value);
}

// generate btn-gray-* classes
@each $color,
$value in $grays {
    .btn-gray-#{$color} {
        @include button-variant($value, $value);
    }
}

// generate btn-outline-gray-* classes
@each $color,
$value in $grays {
    .btn-outline-gray-#{$color} {
        @include button-outline-variant($value);
    }
}

// generate border-gray-* classes
@each $color,
$value in $grays {
    .border-gray-#{$color} {
        border-color: $value !important;
    }
}

// Custom Variables
$gv-color-highlighted: #ffce00;
$gv-color-selected: #00ffff;
// Custom Stuff
.font-sm {
    font-size: $font-size-sm;
}

.font-normal {
    font-size: $font-size-base;
}

.gv-highlight {
    color: theme-color("success");
    font-weight: 600;
}

.gv-scroll-y-auto {
    overflow-y: auto;
}

.dropdown-toggle::after {
    display: none;
}

.rounded-bottom-0 {
    border-bottom-right-radius: 0 !important;
    border-bottom-left-radius: 0 !important;
}

.rounded-top-0 {
    border-top-right-radius: 0 !important;
    border-top-left-radius: 0 !important;
}

.gv-dropdown-secondary {
    .dropdown-menu {
        margin: 0;
        border-top-right-radius: 0;
        background-color: theme-color("secondary");
        .dropdown-item {
            color: $white;
        }
        .dropdown-item:focus,
        .dropdown-item:hover {
            color: $white;
            text-decoration: none;
            background-color: darken(theme-color("secondary"), 10%);
        }
    }
}

.gv-pointer {
    cursor: pointer;
}

.gv-flex-grow-1 {
    flex-grow: 1;
}

.gv-flex-grow-2 {
    flex-grow: 2;
}

.gv-flex-grow-5 {
    flex-grow: 5;
}

.gv-flex-shrink-0 {
    flex-shrink: 0;
}

// full height
.gv-fh {
    @extend .flex-column;
    @extend .gv-flex-grow-1;
    flex-basis: 0;
}

// full height and display flex
.gv-flex-fh {
    @extend .gv-fh;
    @extend .d-flex;
}

.gv-search-hits-count {
    font-size: $font-size-sm;
    color: $text-muted;
    display: inline-block;
}

.gv-ul-sm {
    color: theme-color("secondary");
    font-size: $font-size-sm;
    margin: 0;
    padding: 0;
}

.gv-li-inline {
    display: inline-block;
    margin-right: .4rem;
}

.gv-li-inline::before {
    content: "•";
    margin-right: .4rem;
}

.gv-li-inline:first-of-type::before {
    content: none;
}

.gv-li-inline:last-of-type {
    margin-right: 0;
}

.fa-caret-right {
    margin-right: .2rem;
}

gv-property {
    display: block;
}

.gv-card-spacer-y {
    padding-top: $card-spacer-y;
    padding-bottom: $card-spacer-y;
}

;
.gv-card-spacer-x {
    padding-left: $card-spacer-x;
    padding-right: $card-spacer-x;
}

.gv-btn-spacer {
    display: inline-block;
    font-weight: $btn-font-weight;
    white-space: nowrap;
    vertical-align: middle;
    user-select: none;
    border: $btn-border-width solid transparent;
    @include button-size($btn-padding-y, $btn-padding-x, $font-size-base, $btn-line-height, $btn-border-radius);
}

.gv-btn-spacer-sm {
    display: inline-block;
    font-weight: $btn-font-weight;
    white-space: nowrap;
    vertical-align: middle;
    user-select: none;
    border: $btn-border-width solid transparent;
    @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $font-size-sm, $btn-line-height-sm, $btn-border-radius-sm);
}

.gv-btn-spacer-lg {
    display: inline-block;
    font-weight: $btn-font-weight;
    white-space: nowrap;
    vertical-align: middle;
    user-select: none;
    border: $btn-border-width solid transparent;
    @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $font-size-lg, $btn-line-height-lg, $btn-border-radius-lg);
}

.gv-border-selected {
    @extend .border;
    border-color: $gv-color-selected !important;
}

.gv-border-highlighted {
    @extend .border;
    border-color: $gv-color-highlighted !important;
}

// Navbar (main)
#nav {
    .breadcrumb {
        padding: 0.25rem .75rem;
        margin-bottom: 0;
    }
    #userDropdown {
        i {
            font-size: 1.3rem;
        }
    }
    #userDropdown::after {
        display: none
    }
    #userIconBig {
        font-size: 3rem;
        color: $gray-300;
        margin-top: 1rem;
    }
}

// Loading Bar
.slim-loading-bar-progress {
    margin: 0;
    padding: 0;
    z-index: 99998;
    background-color: theme-color("info") !important;
    color: theme-color("info") !important;
    box-shadow: 0 0 10px 0;
    height: 2px;
    opacity: 0;
    -webkit-transition: all .5s ease-in-out;
    transition: all .5s ease-in-out;
    position: absolute;
}

#userDashboard {
    #userImage {
        font-size: 6rem;
        color: $gray-200;
    }
}

// Forms
.ng-touched.ng-invalid {
    @extend .is-invalid;
}

.ng-touched.ng-valid {
    @extend .is-valid;
}

// Pagination
ngb-pagination {
    .pagination {
        margin: 0
    }
}

/***************************
 * Timeline
 ***************************/

gv-timeline {
    $bg-timeline: $gray-600;
    $font-color: $white;
    .timeline-container {
        background-color: $bg-timeline;
    }
    path.domain {
        stroke: none // no outer line around xAxis
    }
    .header {
        .tick>line {
            stroke: none;
        }
        .tick>text {
            font-size: $font-size-xs;
            fill: $font-color
        }
    }
    .rows {
        border-top: 1px solid theme-color(dark);
        .tick>text {
            fill: none;
        }
        .x-axis-julian {
            .tick>line {
                stroke: $gray-400; // stroke-dasharray: 7;
            }
        }
        .x-axis-gregorian {
            .tick>line {
                stroke: $gray-400; // stroke-dasharray: 7;
            }
        }
    }
    .row {
        font-size: $font-size-xs;
    }
    .row:nth-child(odd) .row-bg {
        fill: $gray-200;
        opacity: 0.2;
    }
    .row:nth-child(even) .row-bg {
        fill: $white;
        opacity: 0.2;
    }
    .row .row-bg.selected {
        fill: #ffffff;
        opacity: 0.6;
    }
    .row .row-bg.highlighted {
        fill: #ffffff;
        opacity: 0.4;
    }
    .row-label-bg {
        fill: $bg-timeline
    }
    text.row-label {
        fill: $font-color;
    }
    .gv-open-path {
        stroke: darken(theme-color("info"), 20%);
        fill: none;
    }
    .gv-closed-path {
        stroke: none;
        fill-opacity: .8;
    }
    .gv-closed-path.gv-inner,
    .gv-rectangle.gv-inner {
        fill: lighten(theme-color("info"), 20%);
    }
    .gv-closed-path.gv-outer,
    .gv-rectangle.gv-outer {
        fill: lighten(theme-color("info"), 50%);
    }
    .separator-line {
        stroke: theme-color("dark");
    }
    .cover-rect {
        fill: $bg-timeline;
    }
    .no-data-text {
        fill: theme-color("secondary");
        font-size: $font-size-sm;
    }
    .cursor-handle {
        fill: theme-color("primary");
        stroke: $white; // fill-opacity: .8;
    }
    .cursor-line {
        stroke: theme-color("primary");
        stroke-width: 2;
    }
}

/***************************
 * Quill
 ***************************/

gv-quill-view {
    .ql-container.ql-snow {
        height: auto;
        border: none;
    }
    .ql-editor {
        padding: 0;
    }
}

gv-quill-edit {
    .ql-container.ql-snow {
        @extend .d-flex;
        @extend .flex-column;
        @extend .gv-flex-grow-1;
    }
    .ql-editor {
        @extend .gv-flex-grow-1;
    }
}

gv-source-list {
    @extend .d-flex;
    @extend .gv-flex-grow-1;
    @extend .flex-column;
}

gv-pe-it-role-set-editable,
    {
    min-width: 360px;
    display: block;
}

gv-add-info-pe-it {
    .dropdown-item.active {
        color: inherit;
        background-color: $gray-300; // border: 1px solid theme-color("primary");
    }
}

.gv-show-token-ids {
    span[quillnode] {
        background: lightpink;
        margin: 0 1px;
    }
    span[quillnode]::after {
        content: attr(quillnode);
        vertical-align: super;
        font-size: smaller;
    }
}

/***************************
 * Cesium / Map
 ***************************/

gv-map {
    ac-map {
        .map-container {
            flex: 1 1 100px;
            height: 100px;
            background-color: lightcyan;
            position: relative;
            border: 1px solid #00ffff;
            display: flex;
            flex-direction: column;
            flex-flow: column;
            @extend .border;
            .cesium-viewer {
                flex: 1 1 auto;
            }
        }
    }
}