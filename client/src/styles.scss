/* You can add global styles to this file, and also import other style files */


/* You can add global styles to this file, and also import other style files */


/**
* Bootstrap
* Bootstrap variables are customized in src/assets/scss/bootstrap-variables.scss
*/

@import "src/assets/scss/bootstrap";
$font-size-xs: .68rem;

/**
* Custom Fonts / Glyphs
* Font-awesome is imported in angular-cli.json
*/

@import "src/assets/scss/glyphter-font/css/geovistory-font";

/**
* Components
* Styles for one angular component or multiple angular components with
* the same visual design (e.g. naming and additional info).
*/

// Project List
@import "src/assets/scss/components/_project_list";
// Project Dashboard
@import "src/assets/scss/components/_project_dashboard";
// List of Names or Additional Infos
@import "src/assets/scss/components/_name_info_list";
// Name / Additional Info
@import "src/assets/scss/components/_name_info";
// Name Part / Property Alternative
@import "src/assets/scss/components/_namepart_infoproperty";
// Name Parts View
@import "src/assets/scss/components/_name_parts_view";
// Name Version
@import "src/assets/scss/components/_name_version";
// Editor
@import "src/assets/scss/components/_edit";
// Project Entities
@import "src/assets/scss/components/_project_entities";
// Search hit
@import "src/assets/scss/components/_search_hit";
// Entity Add Modal
@import "src/assets/scss/components/_entity_add_modal";
// Entity Add Modal
@import "src/assets/scss/components/_version_modal";
// Entity Add Modal
@import "src/assets/scss/components/_appellation_label_editor";

/**
* Generic stuff
*/

body {
    background-color: $gray-100;
}

.container {
    min-width: 63rem;
    margin-top: 2rem;
}

button {
    cursor: pointer;
}

// generate .bg-gray-* classes
@each $color,
$value in $grays {
    @include bg-variant(".bg-gray-#{$color}", $value);
}

// generate btn-gray-* classes
@each $color,
$value in $grays {
    .btn-gray-#{$color} {
        @include button-variant($value, $value);
    }
}

// generate btn-outline-gray-* classes
@each $color,
$value in $grays {
    .btn-outline-gray-#{$color} {
        @include button-outline-variant($value);
    }
}

// generate border-gray-* classes
@each $color,
$value in $grays {
    .border-gray-#{$color} {
        border-color: $value !important;
    }
}

.font-sm {
    font-size: $font-size-sm;
}

.dropdown-toggle::after {
    display: none;
}

.rounded-bottom-0 {
    border-bottom-right-radius: 0 !important;
    border-bottom-left-radius: 0 !important;
}

.rounded-top-0 {
    border-top-right-radius: 0 !important;
    border-top-left-radius: 0 !important;
}

.gv-dropdown-secondary {
    .dropdown-menu {
        margin: 0;
        border-top-right-radius: 0;
        background-color: theme-color("secondary");
        .dropdown-item {
            color: $white;
        }
        .dropdown-item:focus,
        .dropdown-item:hover {
            color: $white;
            text-decoration: none;
            background-color: darken(theme-color("secondary"), 10%);
        }
    }
}

.gv-pointer {
    cursor: pointer;
}

.gv-flex-grow-1 {
    flex-grow: 1;
}

.gv-flex-grow-2 {
    flex-grow: 2;
}

.gv-flex-grow-5 {
    flex-grow: 5;
}

.gv-flex-shrink-0 {
    flex-shrink: 0;
}

.gv-search-hits-count {
    font-size: $font-size-sm;
    color: $text-muted;
    display: inline-block;
}

.gv-ul-sm {
    color: theme-color("secondary");
    font-size: $font-size-sm;
    margin: 0;
    padding: 0;
}

.gv-li-inline {
    display: inline-block;
    margin-right: .4rem;
}

.gv-li-inline::before {
    content: "•";
    margin-right: .4rem;
}

.gv-li-inline:first-of-type::before {
    content: none;
}

.gv-li-inline:last-of-type {
    margin-right: 0;
}

.fa-caret-right {
    margin-right: .2rem;
}

gv-property {
    display: block;
}

.gv-card-spacer-y {
    padding-top: $card-spacer-y;
    padding-bottom: $card-spacer-y;
}

;
.gv-card-spacer-x {
    padding-left: $card-spacer-x;
    padding-right: $card-spacer-x;
}

;
// Navbar (main)
#nav {
    .breadcrumb {
        padding: 0.25rem .75rem;
        margin-bottom: 0;
    }
    #userDropdown {
        i {
            font-size: 1.3rem;
        }
    }
    #userDropdown::after {
        display: none
    }
    #userIconBig {
        font-size: 3rem;
        color: $gray-300;
        margin-top: 1rem;
    }
}

// Loading Bar
.slim-loading-bar-progress {
    margin: 0;
    padding: 0;
    z-index: 99998;
    background-color: theme-color("info") !important;
    color: theme-color("info") !important;
    box-shadow: 0 0 10px 0;
    height: 2px;
    opacity: 0;
    -webkit-transition: all .5s ease-in-out;
    transition: all .5s ease-in-out;
    position: absolute;
}

#userDashboard {
    #userImage {
        font-size: 6rem;
        color: $gray-200;
    }
}

// Forms
.ng-touched.ng-invalid {
    @extend .is-invalid;
}

.ng-touched.ng-valid {
    @extend .is-valid;
}

// Timeline
.gv-open-path {
    stroke: darken(theme-color("info"), 20%);
    fill: none;
}

.gv-closed-path {
    stroke: none;
    fill-opacity: .8;
}

.gv-closed-path.gv-inner,
.gv-rectangle.gv-inner {
    fill: lighten(theme-color("info"), 20%);
}

.gv-closed-path.gv-outer,
.gv-rectangle.gv-outer {
    fill: lighten(theme-color("info"), 50%);
}