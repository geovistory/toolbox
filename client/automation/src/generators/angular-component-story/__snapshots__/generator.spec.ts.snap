// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`angular-component-story generator should generate the right stories file 1`] = `
"import {
  applicationConfig,
  type Meta,
  type StoryObj,
} from '@storybook/angular';
import { TestButtonComponent } from './test-button.component';
import { importProvidersFrom } from '@angular/core';
import { MatDialogModule } from '@angular/material/dialog';
import { provideAnimations } from '@angular/platform-browser/animations';
import { StateModule } from '@kleiolab/lib-redux';
import { INITIAL_STATE } from '@ngrx/store';

import { within } from '@storybook/testing-library';
import { expect } from '@storybook/jest';

import { MockStateFactory } from './../../.storybook/MockStateFactory';
import { ActiveProjectService } from './services/active-project.service';

const meta: Meta<TestButtonComponent> = {
  component: TestButtonComponent,
  title: 'TestButtonComponent',
  decorators: [
    applicationConfig({
      providers: [
        provideAnimations(),
        importProvidersFrom(StateModule, MatDialogModule),
        ActiveProjectService,
      ],
    }),
  ],
};
export default meta;
type Story = StoryObj<TestButtonComponent>;

// Setup the initial state of the story Basic
const stateBasic = new MockStateFactory();

export const Basic: Story = {
  args: {
    buttonType: 'button',
    style: 'default',
    age: 0,
    isOn: false,
  },
  decorators: [
    applicationConfig({
      providers: [{ provide: INITIAL_STATE, useValue: stateBasic.state }],
    }),
  ],
  play: async ({ canvasElement }) => {
    const canvas = within(canvasElement);
    expect(canvas.getByText(/test-button works!/gi)).toBeTruthy();
  },
};
"
`;
